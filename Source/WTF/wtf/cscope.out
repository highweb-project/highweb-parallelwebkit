cscope 15 $HOME/WebKit_Parse_ARM/WebKit_r174059/Source/WTF/wtf               0001959500
	@ASCIICType.h

29 #i‚de‡
WTF_ASCIICTy≥_h


30 
	#WTF_ASCIICTy≥_h


	)

32 
	~<wtf/As£πi⁄s.h
>

44 
«me•a˚
 
	gWTF
 {

46 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
boﬁ
 
isASCII
(
Ch¨Ty≥
 
c
)

48  !(
	gc
 & ~0x7F);

51 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
boﬁ
 
isASCIIAÕha
(
Ch¨Ty≥
 
c
)

53  (
	gc
 | 0x20Ë>'a' && (
c
 | 0x20) <= 'z';

56 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
boﬁ
 
isASCIIDigô
(
Ch¨Ty≥
 
c
)

58  
	gc
 >'0' && 
c
 <= '9';

61 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
boﬁ
 
isASCIIAÕh™umîic
(
Ch¨Ty≥
 
c
)

63  
isASCIIDigô
(
c
Ë|| 
isASCIIAÕha
(c);

66 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
boﬁ
 
isASCIIHexDigô
(
Ch¨Ty≥
 
c
)

68  
isASCIIDigô
(
c
Ë|| ((
	gc
 | 0x20) >= 'a' && (c | 0x20) <= 'f');

71 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
boﬁ
 
isASCIILowî
(
Ch¨Ty≥
 
c
)

73  
	gc
 >'a' && 
c
 <= 'z';

76 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
boﬁ
 
isASCIIO˘ÆDigô
(
Ch¨Ty≥
 
c
)

78  (
	gc
 >'0'Ë& (
c
 <= '7');

81 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
boﬁ
 
isASCIIPröèbÀ
(
Ch¨Ty≥
 
c
)

83  
	gc
 >' ' && 
c
 <= '~';

99 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
boﬁ
 
isASCIIS∑˚
(
Ch¨Ty≥
 
c
)

101  
	gc
 <' ' && (
c
 == ' ' || (c <= 0xD && c >= 0x9));

104 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
boﬁ
 
isASCIIUµî
(
Ch¨Ty≥
 
c
)

106  
	gc
 >'A' && 
c
 <= 'Z';

109 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
Ch¨Ty≥
 
toASCIILowî
(Ch¨Ty≥ 
c
)

111  
	gc
 | ((¯>'A' && 
c
 <= 'Z') << 5);

114 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
Ch¨Ty≥
 
toASCIILowîUnchecked
(Ch¨Ty≥ 
ch¨a˘î
)

121  
	gch¨a˘î
 | 0x20;

124 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
Ch¨Ty≥
 
toASCIIUµî
(Ch¨Ty≥ 
c
)

126  
	gc
 & ~((¯>'a' && 
c
 <= 'z') << 5);

129 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
toASCIIHexVÆue
(
Ch¨Ty≥
 
c
)

131 
ASSERT
(
isASCIIHexDigô
(
c
));

132  
	gc
 < 'A' ? c - '0' : (
c
 - 'A' + 10) & 0xF;

135 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
toASCIIHexVÆue
(
Ch¨Ty≥
 
uµîVÆue
, Ch¨Ty≥ 
lowîVÆue
)

137 
ASSERT
(
isASCIIHexDigô
(
uµîVÆue
Ë&& isASCIIHexDigô(
lowîVÆue
));

138  ((
toASCIIHexVÆue
(
uµîVÆue
Ë<< 4Ë& 0xF0Ë|ÅoASCIIHexVÆue(
lowîVÆue
);

141 
ölöe
 
lowîNibbÀToASCIIHexDigô
(
c
)

143 
	gnibbÀ
 = 
c
 & 0xF;

144  
	gnibbÀ
 < 10 ? '0' +ÇibbÀ : 'A' + 
nibbÀ
 - 10;

147 
ölöe
 
uµîNibbÀToASCIIHexDigô
(
c
)

149 
	gnibbÀ
 = (
c
 >> 4) & 0xF;

150  
	gnibbÀ
 < 10 ? '0' +ÇibbÀ : 'A' + 
nibbÀ
 - 10;

153 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
> 
ölöe
 
boﬁ
 
isASCIIAÕhaCa£ÀssEquÆ
(
Ch¨Ty≥
 
cssCh¨a˘î
, 
ch¨a˘î
)

157 
ASSERT
(
ch¨a˘î
 >= 'a' && character <= 'z');

158  
LIKELY
(
toASCIILowîUnchecked
(
cssCh¨a˘î
Ë=
ch¨a˘î
);

163 
usög
 
	gWTF
::
isASCII
;

164 
usög
 
	gWTF
::
isASCIIAÕha
;

165 
usög
 
	gWTF
::
isASCIIAÕh™umîic
;

166 
usög
 
	gWTF
::
isASCIIDigô
;

167 
usög
 
	gWTF
::
isASCIIHexDigô
;

168 
usög
 
	gWTF
::
isASCIILowî
;

169 
usög
 
	gWTF
::
isASCIIO˘ÆDigô
;

170 
usög
 
	gWTF
::
isASCIIPröèbÀ
;

171 
usög
 
	gWTF
::
isASCIIS∑˚
;

172 
usög
 
	gWTF
::
isASCIIUµî
;

173 
usög
 
	gWTF
::
toASCIIHexVÆue
;

174 
usög
 
	gWTF
::
toASCIILowî
;

175 
usög
 
	gWTF
::
toASCIILowîUnchecked
;

176 
usög
 
	gWTF
::
toASCIIUµî
;

177 
usög
 
	gWTF
::
lowîNibbÀToASCIIHexDigô
;

178 
usög
 
	gWTF
::
uµîNibbÀToASCIIHexDigô
;

179 
usög
 
	gWTF
::
isASCIIAÕhaCa£ÀssEquÆ
;

	@AVLTree.h

32 #i‚de‡
AVL_TREE_H_


33 
	#AVL_TREE_H_


	)

35 
	~<¨øy
>

36 
	~<wtf/As£πi⁄s.h
>

38 
«me•a˚
 
	gWTF
 {

66 
	gãm∂©e
<
	gmaxDïth
>

67 ˛as†
	cAVLTªeDeÁu…BSë
 {

68 
	gpublic
:

69 
boﬁ
& 
›î©‹
[](
i
Ë{ 
ASSERT_WITH_SECURITY_IMPLICATION
(ò< 
maxDïth
);  
	gm_d©a
[i]; }

70 
£t
(Ë{ 
	gi
 = 0; i < 
	gmaxDïth
; ++iË
	gm_d©a
[
i
] = 
åue
; }

71 
ª£t
(Ë{ 
	gi
 = 0; i < 
	gmaxDïth
; ++iË
	gm_d©a
[
i
] = 
Ál£
; }

73 
	g¥iv©e
:

74 
°d
::
¨øy
<
boﬁ
, 
	gmaxDïth
> 
	gm_d©a
;

127 
	gãm∂©e
 <
˛ass
 
	gAb°ø˘‹
, 
	gmaxDïth
 = 32, cœs†
	gBSë
 = 
AVLTªeDeÁu…BSë
<
maxDïth
>>

128 ˛as†
	cAVLTªe
 {

129 
public
:

131 
ty≥«me
 
	tAb°ø˘‹
::
	tkey
 key;

132 
ty≥«me
 
	tAb°ø˘‹
::
	th™dÀ
 handle;

133 
ty≥«me
 
	tAb°ø˘‹
::
	tsize
 size;

135 
	eSórchTy≥
 {

136 
	gEQUAL
 = 1,

137 
	gLESS
 = 2,

138 
	gGREATER
 = 4,

139 
	gLESS_EQUAL
 = 
EQUAL
 | 
LESS
,

140 
	gGREATER_EQUAL
 = 
EQUAL
 | 
GREATER


144 
	gAb°ø˘‹
& 
ab°ø˘‹
(Ë{  
	gabs
; }

146 
ölöe
 
h™dÀ
 
ö£π
(h™dÀ 
h
);

148 
ölöe
 
h™dÀ
 
£¨ch
(
key
 
k
, 
SórchTy≥
 
°
 = 
EQUAL
);

149 
ölöe
 
h™dÀ
 
£¨ch_Àa°
();

150 
ölöe
 
h™dÀ
 
£¨ch_gª©e°
();

152 
ölöe
 
h™dÀ
 
ªmove
(
key
 
k
);

154 
ölöe
 
h™dÀ
 
sub°
(h™dÀ 
√w_node
);

156 
purge
(Ë{ 
	gabs
.
	groŸ
 = 
nuŒ
(); }

158 
boﬁ
 
is_em±y
(Ë{  
	gabs
.
	groŸ
 =
nuŒ
(); }

160 
AVLTªe
(Ë{ 
	gabs
.
	groŸ
 = 
nuŒ
(); }

162 ˛as†
	cIãøt‹
 {

163 
	gpublic
:

167 
Iãøt‹
(Ë{ 
dïth
 = ~0U; }

169 
°¨t_ôî
(
AVLTªe
 &
åì
, 
key
 
k
, 
SórchTy≥
 
°
 = 
EQUAL
)

172 c⁄° 
MASK_HIGH_BIT
 = () ~ ((~ () 0) >> 1);

176 
	gåì_
 = &
åì
;

178 
	gcmp
, 
	gèrgë_cmp
;

179 
h™dÀ
 
	gh
 = 
åì_
->
abs
.
roŸ
;

180 
	gd
 = 0;

182 
	gdïth
 = ~0U;

184 i‡(
	gh
 =
nuŒ
())

188 i‡(
	g°
 & 
	gLESS
)

190 
	gèrgë_cmp
 = 1;

191 i‡(
	g°
 & 
	gGREATER
)

193 
	gèrgë_cmp
 = -1;

196 
	gèrgë_cmp
 = 0;

199 
	gcmp
 = 
cmp_k_n
(
k
, 
h
);

200 i‡(
	gcmp
 == 0) {

201 i‡(
°
 & 
EQUAL
) {

203 
dïth
 = 
d
;

206 
	gcmp
 = -
èrgë_cmp
;

207 } i‡(
	gèrgë_cmp
 != 0) {

208 i‡(!((
cmp
 ^ 
èrgë_cmp
Ë& 
MASK_HIGH_BIT
)) {

210 
dïth
 = 
d
;

213 
	gh
 = 
cmp
 < 0 ? 
gë_…
(
h
Ë: 
gë_gt
(h);

214 i‡(
	gh
 =
nuŒ
())

216 
	gbønch
[
d
] = 
cmp
 > 0;

217 
	g∑th_h
[
d
++] = 
h
;

221 
°¨t_ôî_Àa°
(
AVLTªe
 &
åì
)

223 
	gåì_
 = &
åì
;

225 
h™dÀ
 
	gh
 = 
åì_
->
abs
.
roŸ
;

227 
	gdïth
 = ~0U;

229 
	gbønch
.
ª£t
();

231 
	gh
 !
nuŒ
()) {

232 i‡(
dïth
 != ~0U)

233 
∑th_h
[
dïth
] = 
h
;

234 
	gdïth
++;

235 
	gh
 = 
gë_…
(
h
);

239 
°¨t_ôî_gª©e°
(
AVLTªe
 &
åì
)

241 
	gåì_
 = &
åì
;

243 
h™dÀ
 
	gh
 = 
åì_
->
abs
.
roŸ
;

245 
	gdïth
 = ~0U;

247 
	gbønch
.
£t
();

249 
	gh
 !
nuŒ
()) {

250 i‡(
dïth
 != ~0U)

251 
∑th_h
[
dïth
] = 
h
;

252 
	gdïth
++;

253 
	gh
 = 
gë_gt
(
h
);

257 
h™dÀ
 
	g›î©‹
*()

259 i‡(
	gdïth
 == ~0U)

260  
nuŒ
();

262  
	gdïth
 =0 ? 
åì_
->
abs
.
roŸ
 : 
∑th_h
[
dïth
 - 1];

265 
	g›î©‹
++()

267 i‡(
	gdïth
 != ~0U) {

268 
h™dÀ
 
h
 = 
gë_gt
(**
this
);

269 i‡(
	gh
 =
nuŒ
()) {

271 i‡(
dïth
 == 0) {

272 
dïth
 = ~0U;

275 
	gdïth
--;

276 } 
	gbønch
[
dïth
]);

278 
	gbønch
[
dïth
] = 
åue
;

279 
	g∑th_h
[
dïth
++] = 
h
;

281 
	gh
 = 
gë_…
(
h
);

282 i‡(
	gh
 =
nuŒ
())

284 
	gbønch
[
dïth
] = 
Ál£
;

285 
	g∑th_h
[
dïth
++] = 
h
;

291 
	g›î©‹
--()

293 i‡(
	gdïth
 != ~0U) {

294 
h™dÀ
 
h
 = 
gë_…
(**
this
);

295 i‡(
	gh
 =
nuŒ
())

297 i‡(
dïth
 == 0) {

298 
dïth
 = ~0U;

301 
	gdïth
--;

302 } !
	gbønch
[
dïth
]);

304 
	gbønch
[
dïth
] = 
Ál£
;

305 
	g∑th_h
[
dïth
++] = 
h
;

307 
	gh
 = 
gë_gt
(
h
);

308 i‡(
	gh
 =
nuŒ
())

310 
	gbønch
[
dïth
] = 
åue
;

311 
	g∑th_h
[
dïth
++] = 
h
;

317 
	g›î©‹
++(Ë{ ++(*
	gthis
); }

318 
	g›î©‹
--(Ë{ --(*
	gthis
); }

320 
	g¥Ÿe˘ed
:

323 
AVLTªe
 *
åì_
;

329 
BSë
 
	gbønch
;

332 
	gdïth
;

335 
h™dÀ
 
	g∑th_h
[
maxDïth
 - 1];

337 
cmp_k_n
(
key
 
k
, 
h™dÀ
 
h
Ë{  
	gåì_
->
	gabs
.
com∑ª_key_node
(k, h); }

338 
cmp_n_n
(
h™dÀ
 
h1
, h™dÀ 
h2
Ë{  
	gåì_
->
	gabs
.
com∑ª_node_node
(h1, h2); }

339 
h™dÀ
 
gë_…
(h™dÀ 
h
Ë{  
	gåì_
->
	gabs
.
gë_Àss
(h); }

340 
h™dÀ
 
gë_gt
(h™dÀ 
h
Ë{  
	gåì_
->
	gabs
.
gë_gª©î
(h); }

341 
h™dÀ
 
nuŒ
(Ë{  
	gåì_
->
	gabs
.null(); }

344 
	gãm∂©e
<
ty≥«me
 
	gfwd_ôî
>

345 
boﬁ
 
buûd
(
fwd_ôî
 
p
, 
size
 
num_nodes
)

347 i‡(
	gnum_nodes
 == 0) {

348 
abs
.
roŸ
 = 
nuŒ
();

349  
	gåue
;

354 
BSë
 
	gbønch
;

358 
BSë
 
	gªm
;

361 
	gdïth
 = 0;

364 
size
 
	gnum_sub
 = 
num_nodes
;

372 
h™dÀ
 
	gÀss_∑ª¡
 = 
nuŒ
();

375 
h™dÀ
 
	gh
, 
	gchûd
;

378 
	gnum_sub
 > 2) {

380 
	gnum_sub
--;

381 
	gªm
[
dïth
] = !!(
num_sub
 & 1);

382 
	gbønch
[
dïth
++] = 
Ál£
;

383 
	gnum_sub
 >>= 1;

386 i‡(
	gnum_sub
 == 2) {

392 
h
 = *
p
;

393 
	gp
++;

394 
	gchûd
 = *
p
;

395 
	gp
++;

396 
£t_…
(
chûd
, 
nuŒ
());

397 
£t_gt
(
chûd
, 
nuŒ
());

398 
£t_bf
(
chûd
, 0);

399 
£t_gt
(
h
, 
chûd
);

400 
£t_…
(
h
, 
nuŒ
());

401 
£t_bf
(
h
, 1);

405 
	gh
 = *
p
;

406 
	gp
++;

407 
£t_…
(
h
, 
nuŒ
());

408 
£t_gt
(
h
, 
nuŒ
());

409 
£t_bf
(
h
, 0);

412 
	gdïth
) {

413 
	gdïth
--;

414 i‡(!
	gbønch
[
dïth
])

421 
	gchûd
 = 
h
;

422 
	gh
 = 
Àss_∑ª¡
;

423 
	gÀss_∑ª¡
 = 
gë_gt
(
h
);

424 
£t_gt
(
h
, 
chûd
);

426 
	gnum_sub
 <<= 1;

427 
	gnum_sub
 +1 - 
ªm
[
dïth
];

428 i‡(
	gnum_sub
 & (num_sub - 1))

430 
£t_bf
(
h
, 0);

433 
£t_bf
(
h
, 1);

436 i‡(
	gnum_sub
 =
num_nodes
)

443 
	gchûd
 = 
h
;

444 
	gh
 = *
p
;

445 
	gp
++;

446 
£t_…
(
h
, 
chûd
);

449 
£t_gt
(
h
, 
Àss_∑ª¡
);

450 
	gÀss_∑ª¡
 = 
h
;

453 
	gbønch
[
dïth
] = 
åue
;

454 
	gnum_sub
 +
ªm
[
dïth
++];

458 
	gabs
.
	groŸ
 = 
h
;

460  
	gåue
;

463 
	g¥Ÿe˘ed
:

465 
‰õnd
 
˛ass
 
Iãøt‹
;

469 
	gabs_∂us_roŸ
 : 
public
 
Ab°ø˘‹
 {

471 
h™dÀ
 
roŸ
;

474 
abs_∂us_roŸ
 
	gabs
;

477 
h™dÀ
 
gë_…
(h™dÀ 
h
Ë{  
	gabs
.
gë_Àss
(h); }

478 
£t_…
(
h™dÀ
 
h
, h™dÀ 
lh
Ë{ 
	gabs
.
£t_Àss
(h,Üh); }

480 
h™dÀ
 
gë_gt
(h™dÀ 
h
Ë{  
	gabs
.
gë_gª©î
(h); }

481 
£t_gt
(
h™dÀ
 
h
, h™dÀ 
gh
Ë{ 
	gabs
.
£t_gª©î
(h, gh); }

483 
gë_bf
(
h™dÀ
 
h
Ë{  
	gabs
.
gë_bÆ™˚_Á˘‹
(h); }

484 
£t_bf
(
h™dÀ
 
h
, 
bf
Ë{ 
	gabs
.
£t_bÆ™˚_Á˘‹
(h, bf); }

486 
cmp_k_n
(
key
 
k
, 
h™dÀ
 
h
Ë{  
	gabs
.
com∑ª_key_node
(k, h); }

487 
cmp_n_n
(
h™dÀ
 
h1
, h™dÀ 
h2
Ë{  
	gabs
.
com∑ª_node_node
(h1, h2); }

489 
h™dÀ
 
nuŒ
(Ë{  
	gabs
.null(); }

491 
	g¥iv©e
:

495 
h™dÀ
 
bÆ™˚
(h™dÀ 
bÆ_h
)

497 
h™dÀ
 
dìp_h
;

503 i‡(
gë_bf
(
bÆ_h
) > 0) {

506 
	gdìp_h
 = 
gë_gt
(
bÆ_h
);

508 i‡(
gë_bf
(
dìp_h
) < 0) {

509 
h™dÀ
 
	gﬁd_h
 = 
bÆ_h
;

510 
	gbÆ_h
 = 
gë_…
(
dìp_h
);

512 
£t_gt
(
ﬁd_h
, 
gë_…
(
bÆ_h
));

513 
£t_…
(
dìp_h
, 
gë_gt
(
bÆ_h
));

514 
£t_…
(
bÆ_h
, 
ﬁd_h
);

515 
£t_gt
(
bÆ_h
, 
dìp_h
);

517 
	gbf
 = 
gë_bf
(
bÆ_h
);

518 i‡(
	gbf
 != 0) {

519 i‡(
bf
 > 0) {

520 
£t_bf
(
ﬁd_h
, -1);

521 
£t_bf
(
dìp_h
, 0);

523 
£t_bf
(
dìp_h
, 1);

524 
£t_bf
(
ﬁd_h
, 0);

526 
£t_bf
(
bÆ_h
, 0);

528 
£t_bf
(
ﬁd_h
, 0);

529 
£t_bf
(
dìp_h
, 0);

532 
£t_gt
(
bÆ_h
, 
gë_…
(
dìp_h
));

533 
£t_…
(
dìp_h
, 
bÆ_h
);

534 i‡(
gë_bf
(
dìp_h
) == 0) {

535 
£t_bf
(
dìp_h
, -1);

536 
£t_bf
(
bÆ_h
, 1);

538 
£t_bf
(
dìp_h
, 0);

539 
£t_bf
(
bÆ_h
, 0);

541 
	gbÆ_h
 = 
dìp_h
;

546 
	gdìp_h
 = 
gë_…
(
bÆ_h
);

548 i‡(
gë_bf
(
dìp_h
) > 0) {

549 
h™dÀ
 
	gﬁd_h
 = 
bÆ_h
;

550 
	gbÆ_h
 = 
gë_gt
(
dìp_h
);

551 
£t_…
(
ﬁd_h
, 
gë_gt
(
bÆ_h
));

552 
£t_gt
(
dìp_h
, 
gë_…
(
bÆ_h
));

553 
£t_gt
(
bÆ_h
, 
ﬁd_h
);

554 
£t_…
(
bÆ_h
, 
dìp_h
);

556 
	gbf
 = 
gë_bf
(
bÆ_h
);

557 i‡(
	gbf
 != 0) {

558 i‡(
bf
 < 0) {

559 
£t_bf
(
ﬁd_h
, 1);

560 
£t_bf
(
dìp_h
, 0);

562 
£t_bf
(
dìp_h
, -1);

563 
£t_bf
(
ﬁd_h
, 0);

565 
£t_bf
(
bÆ_h
, 0);

567 
£t_bf
(
ﬁd_h
, 0);

568 
£t_bf
(
dìp_h
, 0);

571 
£t_…
(
bÆ_h
, 
gë_gt
(
dìp_h
));

572 
£t_gt
(
dìp_h
, 
bÆ_h
);

573 i‡(
gë_bf
(
dìp_h
) == 0) {

574 
£t_bf
(
dìp_h
, 1);

575 
£t_bf
(
bÆ_h
, -1);

577 
£t_bf
(
dìp_h
, 0);

578 
£t_bf
(
bÆ_h
, 0);

580 
	gbÆ_h
 = 
dìp_h
;

584  
	gbÆ_h
;

589 
	gãm∂©e
 <
˛ass
 
	gAb°ø˘‹
, 
	gmaxDïth
, cœs†
	gBSë
>

590 
ölöe
 
ty≥«me
 
	gAVLTªe
<
	gAb°ø˘‹
, 
	gmaxDïth
, 
	gBSë
>::
h™dÀ


591 
AVLTªe
<
Ab°ø˘‹
, 
	gmaxDïth
, 
	gBSë
>::
	$ö£π
(
h™dÀ
 
h
)

593 
	`£t_…
(
h
, 
	`nuŒ
());

594 
	`£t_gt
(
h
, 
	`nuŒ
());

595 
	`£t_bf
(
h
, 0);

597 i‡(
abs
.
roŸ
 =
	`nuŒ
())

598 
abs
.
roŸ
 = 
h
;

601 
h™dÀ
 
unbÆ
 = 
	`nuŒ
();

603 
h™dÀ
 
∑ª¡_unbÆ
 = 
	`nuŒ
();

605 
unbÆ_bf
;

608 
dïth
 = 0, 
unbÆ_dïth
 = 0;

614 
BSë
 
bønch
;

616 
h™dÀ
 
hh
 = 
abs
.
roŸ
;

617 
h™dÀ
 
∑ª¡
 = 
	`nuŒ
();

618 
cmp
;

621 i‡(
	`gë_bf
(
hh
) != 0) {

622 
unbÆ
 = 
hh
;

623 
∑ª¡_unbÆ
 = 
∑ª¡
;

624 
unbÆ_dïth
 = 
dïth
;

626 
cmp
 = 
	`cmp_n_n
(
h
, 
hh
);

627 i‡(
cmp
 == 0)

629  
hh
;

630 
∑ª¡
 = 
hh
;

631 
hh
 = 
cmp
 < 0 ? 
	`gë_…
(hhË: 
	`gë_gt
(hh);

632 
bønch
[
dïth
++] = 
cmp
 > 0;

633 } 
hh
 !
	`nuŒ
());

636 i‡(
cmp
 < 0)

637 
	`£t_…
(
∑ª¡
, 
h
);

639 
	`£t_gt
(
∑ª¡
, 
h
);

641 
dïth
 = 
unbÆ_dïth
;

643 i‡(
unbÆ
 =
	`nuŒ
())

644 
hh
 = 
abs
.
roŸ
;

646 
cmp
 = 
bønch
[
dïth
++] ? 1 : -1;

647 
unbÆ_bf
 = 
	`gë_bf
(
unbÆ
);

648 i‡(
cmp
 < 0)

649 
unbÆ_bf
--;

651 
unbÆ_bf
++;

652 
hh
 = 
cmp
 < 0 ? 
	`gë_…
(
unbÆ
Ë: 
	`gë_gt
(unbal);

653 i‡((
unbÆ_bf
 != -2) && (unbal_bf != 2)) {

655 
	`£t_bf
(
unbÆ
, 
unbÆ_bf
);

656 
unbÆ
 = 
	`nuŒ
();

660 i‡(
hh
 !
	`nuŒ
())

661 
h
 !
hh
) {

662 
cmp
 = 
bønch
[
dïth
++] ? 1 : -1;

663 i‡(
cmp
 < 0) {

664 
	`£t_bf
(
hh
, -1);

665 
hh
 = 
	`gë_…
(hh);

667 
	`£t_bf
(
hh
, 1);

668 
hh
 = 
	`gë_gt
(hh);

672 i‡(
unbÆ
 !
	`nuŒ
()) {

673 
unbÆ
 = 
	`bÆ™˚
(unbal);

674 i‡(
∑ª¡_unbÆ
 =
	`nuŒ
())

675 
abs
.
roŸ
 = 
unbÆ
;

677 
dïth
 = 
unbÆ_dïth
 - 1;

678 
cmp
 = 
bønch
[
dïth
] ? 1 : -1;

679 i‡(
cmp
 < 0)

680 
	`£t_…
(
∑ª¡_unbÆ
, 
unbÆ
);

682 
	`£t_gt
(
∑ª¡_unbÆ
, 
unbÆ
);

687  
h
;

688 
	}
}

690 
	gãm∂©e
 <
˛ass
 
	gAb°ø˘‹
, 
	gmaxDïth
, cœs†
	gBSë
>

691 
ölöe
 
ty≥«me
 
	gAVLTªe
<
	gAb°ø˘‹
, 
	gmaxDïth
, 
	gBSë
>::
h™dÀ


692 
AVLTªe
<
Ab°ø˘‹
, 
	gmaxDïth
, 
	gBSë
>::
£¨ch
(
key
 
k
, 
ty≥«me
 AVLTªe<Ab°ø˘‹, 
maxDïth
, 
BSë
>::
SórchTy≥
 
°
)

694 c⁄° 
MASK_HIGH_BIT
 = () ~ ((~ () 0) >> 1);

696 
	gcmp
, 
	gèrgë_cmp
;

697 
h™dÀ
 
	gm©ch_h
 = 
nuŒ
();

698 
h™dÀ
 
	gh
 = 
abs
.
roŸ
;

700 i‡(
	g°
 & 
	gLESS
)

701 
	gèrgë_cmp
 = 1;

702 i‡(
	g°
 & 
	gGREATER
)

703 
	gèrgë_cmp
 = -1;

705 
	gèrgë_cmp
 = 0;

707 
	gh
 !
nuŒ
()) {

708 
cmp
 = 
cmp_k_n
(
k
, 
h
);

709 i‡(
	gcmp
 == 0) {

710 i‡(
°
 & 
EQUAL
) {

711 
m©ch_h
 = 
h
;

714 
	gcmp
 = -
èrgë_cmp
;

715 } i‡(
	gèrgë_cmp
 != 0)

716 i‡(!((
cmp
 ^ 
èrgë_cmp
Ë& 
MASK_HIGH_BIT
))

718 
m©ch_h
 = 
h
;

719 
	gh
 = 
cmp
 < 0 ? 
gë_…
(
h
Ë: 
gë_gt
(h);

722  
	gm©ch_h
;

725 
	gãm∂©e
 <
˛ass
 
	gAb°ø˘‹
, 
	gmaxDïth
, cœs†
	gBSë
>

726 
ölöe
 
ty≥«me
 
	gAVLTªe
<
	gAb°ø˘‹
, 
	gmaxDïth
, 
	gBSë
>::
h™dÀ


727 
AVLTªe
<
Ab°ø˘‹
, 
	gmaxDïth
, 
	gBSë
>::
	$£¨ch_Àa°
()

729 
h™dÀ
 
h
 = 
abs
.
roŸ
, 
∑ª¡
 = 
	`nuŒ
();

731 
h
 !
	`nuŒ
()) {

732 
∑ª¡
 = 
h
;

733 
h
 = 
	`gë_…
(h);

736  
∑ª¡
;

737 
	}
}

739 
	gãm∂©e
 <
˛ass
 
	gAb°ø˘‹
, 
	gmaxDïth
, cœs†
	gBSë
>

740 
ölöe
 
ty≥«me
 
	gAVLTªe
<
	gAb°ø˘‹
, 
	gmaxDïth
, 
	gBSë
>::
h™dÀ


741 
AVLTªe
<
Ab°ø˘‹
, 
	gmaxDïth
, 
	gBSë
>::
	$£¨ch_gª©e°
()

743 
h™dÀ
 
h
 = 
abs
.
roŸ
, 
∑ª¡
 = 
	`nuŒ
();

745 
h
 !
	`nuŒ
()) {

746 
∑ª¡
 = 
h
;

747 
h
 = 
	`gë_gt
(h);

750  
∑ª¡
;

751 
	}
}

753 
	gãm∂©e
 <
˛ass
 
	gAb°ø˘‹
, 
	gmaxDïth
, cœs†
	gBSë
>

754 
ölöe
 
ty≥«me
 
	gAVLTªe
<
	gAb°ø˘‹
, 
	gmaxDïth
, 
	gBSë
>::
h™dÀ


755 
AVLTªe
<
Ab°ø˘‹
, 
	gmaxDïth
, 
	gBSë
>::
	$ªmove
(
key
 
k
)

758 
dïth
 = 0, 
rm_dïth
;

764 
BSë
 
bønch
;

766 
h™dÀ
 
h
 = 
abs
.
roŸ
;

767 
h™dÀ
 
∑ª¡
 = 
	`nuŒ
(), 
chûd
;

768 
cmp
, 
cmp_sh‹ã√d_sub_wôh_∑th
 = 0;

771 i‡(
h
 =
	`nuŒ
())

773  
	`nuŒ
();

774 
cmp
 = 
	`cmp_k_n
(
k
, 
h
);

775 i‡(
cmp
 == 0)

778 
∑ª¡
 = 
h
;

779 
h
 = 
cmp
 < 0 ? 
	`gë_…
(hË: 
	`gë_gt
(h);

780 
bønch
[
dïth
++] = 
cmp
 > 0;

781 
cmp_sh‹ã√d_sub_wôh_∑th
 = 
cmp
;

783 
h™dÀ
 
rm
 = 
h
;

784 
h™dÀ
 
∑ª¡_rm
 = 
∑ª¡
;

785 
rm_dïth
 = 
dïth
;

794 i‡(
	`gë_bf
(
h
) < 0) {

795 
chûd
 = 
	`gë_…
(
h
);

796 
bønch
[
dïth
] = 
Ál£
;

797 
cmp
 = -1;

799 
chûd
 = 
	`gë_gt
(
h
);

800 
bønch
[
dïth
] = 
åue
;

801 
cmp
 = 1;

803 
dïth
++;

805 i‡(
chûd
 !
	`nuŒ
()) {

806 
cmp
 = -cmp;

808 
∑ª¡
 = 
h
;

809 
h
 = 
chûd
;

810 i‡(
cmp
 < 0) {

811 
chûd
 = 
	`gë_…
(
h
);

812 
bønch
[
dïth
] = 
Ál£
;

814 
chûd
 = 
	`gë_gt
(
h
);

815 
bønch
[
dïth
] = 
åue
;

817 
dïth
++;

818 } 
chûd
 !
	`nuŒ
());

820 i‡(
∑ª¡
 =
rm
)

823 
cmp_sh‹ã√d_sub_wôh_∑th
 = -
cmp
;

825 
cmp_sh‹ã√d_sub_wôh_∑th
 = 
cmp
;

828 
chûd
 = 
cmp
 > 0 ? 
	`gë_…
(
h
Ë: 
	`gë_gt
(h);

831 i‡(
∑ª¡
 =
	`nuŒ
())

833 
abs
.
roŸ
 = 
chûd
;

834 i‡(
cmp_sh‹ã√d_sub_wôh_∑th
 < 0)

835 
	`£t_…
(
∑ª¡
, 
chûd
);

837 
	`£t_gt
(
∑ª¡
, 
chûd
);

843 
h™dÀ
 
∑th
 = 
∑ª¡
 =
rm
 ? 
h
 :Öarent;

845 i‡(
h
 !
rm
) {

847 
	`£t_…
(
h
, 
	`gë_…
(
rm
));

848 
	`£t_gt
(
h
, 
	`gë_gt
(
rm
));

849 
	`£t_bf
(
h
, 
	`gë_bf
(
rm
));

850 i‡(
∑ª¡_rm
 =
	`nuŒ
())

851 
abs
.
roŸ
 = 
h
;

853 
dïth
 = 
rm_dïth
 - 1;

854 i‡(
bønch
[
dïth
])

855 
	`£t_gt
(
∑ª¡_rm
, 
h
);

857 
	`£t_…
(
∑ª¡_rm
, 
h
);

861 i‡(
∑th
 !
	`nuŒ
()) {

864 
h
 = 
abs
.
roŸ
;

865 
∑ª¡
 = 
	`nuŒ
();

866 
dïth
 = 0;

867 
h
 !
∑th
) {

868 i‡(
bønch
[
dïth
++]) {

869 
chûd
 = 
	`gë_gt
(
h
);

870 
	`£t_gt
(
h
, 
∑ª¡
);

872 
chûd
 = 
	`gë_…
(
h
);

873 
	`£t_…
(
h
, 
∑ª¡
);

875 
∑ª¡
 = 
h
;

876 
h
 = 
chûd
;

881 
boﬁ
 
ªdu˚d_dïth
 = 
åue
;

882 
bf
;

883 
cmp
 = 
cmp_sh‹ã√d_sub_wôh_∑th
;

885 i‡(
ªdu˚d_dïth
) {

886 
bf
 = 
	`gë_bf
(
h
);

887 i‡(
cmp
 < 0)

888 
bf
++;

890 
bf
--;

891 i‡((
bf
 == -2) || (bf == 2)) {

892 
h
 = 
	`bÆ™˚
(h);

893 
bf
 = 
	`gë_bf
(
h
);

895 
	`£t_bf
(
h
, 
bf
);

896 
ªdu˚d_dïth
 = (
bf
 == 0);

898 i‡(
∑ª¡
 =
	`nuŒ
())

900 
chûd
 = 
h
;

901 
h
 = 
∑ª¡
;

902 
cmp
 = 
bønch
[--
dïth
] ? 1 : -1;

903 i‡(
cmp
 < 0) {

904 
∑ª¡
 = 
	`gë_…
(
h
);

905 
	`£t_…
(
h
, 
chûd
);

907 
∑ª¡
 = 
	`gë_gt
(
h
);

908 
	`£t_gt
(
h
, 
chûd
);

911 
abs
.
roŸ
 = 
h
;

914  
rm
;

915 
	}
}

917 
	gãm∂©e
 <
˛ass
 
	gAb°ø˘‹
, 
	gmaxDïth
, cœs†
	gBSë
>

918 
ölöe
 
ty≥«me
 
	gAVLTªe
<
	gAb°ø˘‹
, 
	gmaxDïth
, 
	gBSë
>::
h™dÀ


919 
AVLTªe
<
Ab°ø˘‹
, 
	gmaxDïth
, 
	gBSë
>::
	$sub°
(
h™dÀ
 
√w_node
)

921 
h™dÀ
 
h
 = 
abs
.
roŸ
;

922 
h™dÀ
 
∑ª¡
 = 
	`nuŒ
();

923 
cmp
, 
œ°_cmp
;

927 i‡(
h
 =
	`nuŒ
())

929  
	`nuŒ
();

930 
cmp
 = 
	`cmp_n_n
(
√w_node
, 
h
);

931 i‡(
cmp
 == 0)

934 
œ°_cmp
 = 
cmp
;

935 
∑ª¡
 = 
h
;

936 
h
 = 
cmp
 < 0 ? 
	`gë_…
(hË: 
	`gë_gt
(h);

940 
	`£t_…
(
√w_node
, 
	`gë_…
(
h
));

941 
	`£t_gt
(
√w_node
, 
	`gë_gt
(
h
));

942 
	`£t_bf
(
√w_node
, 
	`gë_bf
(
h
));

944 i‡(
∑ª¡
 =
	`nuŒ
())

946 
abs
.
roŸ
 = 
√w_node
;

949 i‡(
œ°_cmp
 < 0)

950 
	`£t_…
(
∑ª¡
, 
√w_node
);

952 
	`£t_gt
(
∑ª¡
, 
√w_node
);

955  
h
;

956 
	}
}

	@Assertions.cpp

32 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wmissing-format-attribute"

34 
	~"c⁄fig.h
"

35 
	~"As£πi⁄s.h
"

37 
	~"Compûî.h
"

38 
	~<wtf/StdLibExåas.h
>

39 
	~<wtf/SåögExåas.h
>

40 
	~<wtf/ãxt/CSåög.h
>

41 
	~<wtf/ãxt/WTFSåög.h
>

43 
	~<°dio.h
>

44 
	~<°rög.h
>

46 #i‡
HAVE
(
SIGNAL_H
)

47 
	~<sig«l.h
>

50 #i‡
USE
(
CF
)

51 
	~<C‹eFound©i⁄/CFSåög.h
>

52 #i‡
PLATFORM
(
IOS
Ë|| 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1080

53 
	#WTF_USE_APPLE_SYSTEM_LOG
 1

	)

54 
	~<a¶.h
>

58 #i‡
COMPILER
(
MSVC
)

59 
	~<¸tdbg.h
>

62 #i‡
OS
(
WINDOWS
)

63 
	~<wödows.h
>

66 #i‡
OS
(
DARWIN
)

67 
	~<sys/sys˘l.h
>

68 
	~<uni°d.h
>

71 #i‡
OS
(
DARWIN
Ë|| (OS(
LINUX
Ë&& !
deföed
(
__UCLIBC__
))

72 
	~<cxxabi.h
>

73 
	~<dlf˙.h
>

74 
	~<execöfo.h
>

79 
WTF_ATTRIBUTE_PRINTF
(1, 0)

80 
v¥ötf_°dîr_comm⁄
(c⁄° * 
f‹m©
, 
va_li°
 
¨gs
)

82 #i‡
USE
(
CF
Ë&& !
OS
(
WINDOWS
)

83 i‡(
°r°r
(
f‹m©
, "%@")) {

84 
CFSåögRef
 
cfF‹m©
 = 
CFSåögCª©eWôhCSåög
(
NULL
, 
f‹m©
, 
kCFSåögEncodögUTF8
);

86 #i‡
COMPILER
(
CLANG
)

87 #¥agm®
˛™g
 
dügno°ic
 
push


88 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wformat-nonliteral"

90 
CFSåögRef
 
°r
 = 
CFSåögCª©eWôhF‹m©AndArgumíts
(
NULL
, NULL, 
cfF‹m©
, 
¨gs
);

91 #i‡
COMPILER
(
CLANG
)

92 #¥agm®
˛™g
 
dügno°ic
 
p›


94 
CFIndex
 
Àngth
 = 
CFSåögGëMaximumSizeF‹Encodög
(
CFSåögGëLígth
(
°r
), 
kCFSåögEncodögUTF8
);

95 * 
buf„r
 = (*)
mÆloc
(
Àngth
 + 1);

97 
CFSåögGëCSåög
(
°r
, 
buf„r
, 
Àngth
, 
kCFSåögEncodögUTF8
);

99 #i‡
USE
(
APPLE_SYSTEM_LOG
)

100 
a¶_log
(0, 0, 
ASL_LEVEL_NOTICE
, "%s", 
buf„r
);

102 
Âuts
(
buf„r
, 
°dîr
);

104 
‰ì
(
buf„r
);

105 
CFRñó£
(
°r
);

106 
CFRñó£
(
cfF‹m©
);

110 #i‡
USE
(
APPLE_SYSTEM_LOG
)

111 
va_li°
 
c›yOfArgs
;

112 
va_c›y
(
c›yOfArgs
, 
¨gs
);

113 
a¶_vlog
(0, 0, 
ASL_LEVEL_NOTICE
, 
f‹m©
, 
c›yOfArgs
);

114 
va_íd
(
c›yOfArgs
);

119 #ñi‡
HAVE
(
ISDEBUGGERPRESENT
)

120 i‡(
IsDebuggîPª£¡
()) {

121 
size_t
 
size
 = 1024;

124 * 
buf„r
 = (*)
mÆloc
(
size
);

126 i‡(
buf„r
 =
NULL
)

129 i‡(
_v¢¥ötf
(
buf„r
, 
size
, 
f‹m©
, 
¨gs
) != -1) {

130 
OuçutDebugSåögA
(
buf„r
);

131 
‰ì
(
buf„r
);

135 
‰ì
(
buf„r
);

136 
size
 *= 2;

137 } 
size
 > 1024);

140 
vÂrötf
(
°dîr
, 
f‹m©
, 
¨gs
);

143 #i‡
COMPILER
(
CLANG
Ë|| COMPILER(
GCC
)

144 #¥agm®
GCC
 
dügno°ic
 
push


145 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wformat-nonliteral"

148 
v¥ötf_°dîr_wôh_¥efix
(c⁄° * 
¥efix
, c⁄° * 
f‹m©
, 
va_li°
 
¨gs
)

150 
size_t
 
¥efixLígth
 = 
°æí
(
¥efix
);

151 
size_t
 
f‹m©Lígth
 = 
°æí
(
f‹m©
);

152 autÿ
f‹m©WôhPªfix
 = 
°d
::
make_unique
<[]>(
¥efixLígth
 + 
f‹m©Lígth
 + 1);

153 
mem˝y
(
f‹m©WôhPªfix
.
gë
(), 
¥efix
, 
¥efixLígth
);

154 
mem˝y
(
f‹m©WôhPªfix
.
gë
(Ë+ 
¥efixLígth
, 
f‹m©
, 
f‹m©Lígth
);

155 
f‹m©WôhPªfix
[
¥efixLígth
 + 
f‹m©Lígth
] = 0;

157 
v¥ötf_°dîr_comm⁄
(
f‹m©WôhPªfix
.
gë
(), 
¨gs
);

160 
v¥ötf_°dîr_wôh_åaûög_√wlöe
(c⁄° * 
f‹m©
, 
va_li°
 
¨gs
)

162 
size_t
 
f‹m©Lígth
 = 
°æí
(
f‹m©
);

163 i‡(
f‹m©Lígth
 && 
f‹m©
[formatLength - 1] == '\n') {

164 
v¥ötf_°dîr_comm⁄
(
f‹m©
, 
¨gs
);

168 autÿ
f‹m©WôhNewlöe
 = 
°d
::
make_unique
<[]>(
f‹m©Lígth
 + 2);

169 
mem˝y
(
f‹m©WôhNewlöe
.
gë
(), 
f‹m©
, 
f‹m©Lígth
);

170 
f‹m©WôhNewlöe
[
f‹m©Lígth
] = '\n';

171 
f‹m©WôhNewlöe
[
f‹m©Lígth
 + 1] = 0;

173 
v¥ötf_°dîr_comm⁄
(
f‹m©WôhNewlöe
.
gë
(), 
¨gs
);

176 #i‡
COMPILER
(
CLANG
Ë|| COMPILER(
GCC
)

177 #¥agm®
GCC
 
dügno°ic
 
p›


180 
WTF_ATTRIBUTE_PRINTF
(1, 2)

181 
¥ötf_°dîr_comm⁄
(c⁄° * 
f‹m©
, ...)

183 
va_li°
 
¨gs
;

184 
va_°¨t
(
¨gs
, 
f‹m©
);

185 
v¥ötf_°dîr_comm⁄
(
f‹m©
, 
¨gs
);

186 
va_íd
(
¨gs
);

189 
¥ötCÆlSôe
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
)

191 #i‡
OS
(
WINDOWS
Ë&& 
deföed
(
_DEBUG
)

192 
_CπDbgRï‹t
(
_CRT_WARN
, 
fûe
, 
löe
, 
NULL
, "%s\n", 
fun˘i⁄
);

197 
¥ötf_°dîr_comm⁄
("%s(%dË: %s\n", 
fûe
, 
löe
, 
fun˘i⁄
);

201 
WTFRï‹tAs£πi⁄Faûuª
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
, c⁄° * 
as£πi⁄
)

203 i‡(
as£πi⁄
)

204 
¥ötf_°dîr_comm⁄
("ASSERTION FAILED: %s\n", 
as£πi⁄
);

206 
¥ötf_°dîr_comm⁄
("SHOULD NEVER BE REACHED\n");

207 
¥ötCÆlSôe
(
fûe
, 
löe
, 
fun˘i⁄
);

210 
WTFRï‹tAs£πi⁄FaûuªWôhMesßge
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
, c⁄° * 
as£πi⁄
, c⁄° * 
f‹m©
, ...)

212 
va_li°
 
¨gs
;

213 
va_°¨t
(
¨gs
, 
f‹m©
);

214 
v¥ötf_°dîr_wôh_¥efix
("ASSERTION FAILED: ", 
f‹m©
, 
¨gs
);

215 
va_íd
(
¨gs
);

216 
¥ötf_°dîr_comm⁄
("\n%s\n", 
as£πi⁄
);

217 
¥ötCÆlSôe
(
fûe
, 
löe
, 
fun˘i⁄
);

220 
WTFRï‹tArgumítAs£πi⁄Faûuª
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
, c⁄° * 
¨gName
, c⁄° * 
as£πi⁄
)

222 
¥ötf_°dîr_comm⁄
("ARGUMENT BAD: %s, %s\n", 
¨gName
, 
as£πi⁄
);

223 
¥ötCÆlSôe
(
fûe
, 
löe
, 
fun˘i⁄
);

226 
WTFGëBackåa˚
(** 
°ack
, * 
size
)

228 #i‡
OS
(
DARWIN
Ë|| (OS(
LINUX
Ë&& !
deföed
(
__UCLIBC__
))

229 *
size
 = 
backåa˚
(
°ack
, *size);

230 #ñi‡
OS
(
WINDOWS
)

234 
WORD
 (
	tNTAPI
* 
	tRéC≠tuªSèckBackTø˚Func
)(
	tDWORD
, DWORD, 
	tPVOID
*, 
	tPDWORD
);

235 
HMODULE
 
kî√l32
 = ::
GëModuÀH™dÀW
(
L
"Kernel32.dll");

236 i‡(!
kî√l32
) {

237 *
size
 = 0;

240 
RéC≠tuªSèckBackTø˚Func
 
ˇ±uªSèckBackTø˚Func
 = 
ªöãΩªt_ˇ°
<RtlCaptureStackBackTraceFunc>(

241 ::
GëProcAddªss
(
kî√l32
, "RtlCaptureStackBackTrace"));

242 i‡(
ˇ±uªSèckBackTø˚Func
)

243 *
size
 = 
ˇ±uªSèckBackTø˚Func
(0, *size, 
°ack
, 0);

245 *
size
 = 0;

247 *
size
 = 0;

251 
WTFRï‹tBackåa˚
()

253 c⁄° 
‰amesToShow
 = 31;

254 c⁄° 
‰amesToSkù
 = 2;

255 * 
ßm∂es
[
‰amesToShow
 + 
‰amesToSkù
];

256 
‰ames
 = 
‰amesToShow
 + 
‰amesToSkù
;

258 
WTFGëBackåa˚
(
ßm∂es
, &
‰ames
);

259 
WTFPrötBackåa˚
(
ßm∂es
 + 
‰amesToSkù
, 
‰ames
 - framesToSkip);

262 #i‡
OS
(
DARWIN
Ë|| OS(
LINUX
)

263 #i‡
PLATFORM
(
GTK
)

264 #i‡
deföed
(
__GLIBC__
Ë&& !deföed(
__UCLIBC__
)

265 
	#WTF_USE_BACKTRACE_SYMBOLS
 1

	)

268 
	#WTF_USE_DLADDR
 1

	)

272 
WTFPrötBackåa˚
(** 
°ack
, 
size
)

274 #i‡
USE
(
BACKTRACE_SYMBOLS
)

275 ** 
symbﬁs
 = 
backåa˚_symbﬁs
(
°ack
, 
size
);

276 i‡(!
symbﬁs
)

280 
i
 = 0; i < 
size
; ++i) {

281 c⁄° * 
m™gÀdName
 = 0;

282 * 
cxaDem™gÀd
 = 0;

283 #i‡
USE
(
BACKTRACE_SYMBOLS
)

284 
m™gÀdName
 = 
symbﬁs
[
i
];

285 #ñi‡
USE
(
DLADDR
)

286 
Dl_öfo
 
öfo
;

287 i‡(
dœddr
(
°ack
[
i
], &
öfo
Ë&& info.
dli_¢ame
)

288 
m™gÀdName
 = 
öfo
.
dli_¢ame
;

289 i‡(
m™gÀdName
)

290 
cxaDem™gÀd
 = 
abi
::
__cxa_dem™gÀ
(
m™gÀdName
, 0, 0, 0);

292 c⁄° 
‰ameNumbî
 = 
i
 + 1;

293 i‡(
m™gÀdName
 || 
cxaDem™gÀd
)

294 
¥ötf_°dîr_comm⁄
("%-3d %∞%s\n", 
‰ameNumbî
, 
°ack
[
i
], 
cxaDem™gÀd
 ? cxaDem™gÀd : 
m™gÀdName
);

296 
¥ötf_°dîr_comm⁄
("%-3d %p\n", 
‰ameNumbî
, 
°ack
[
i
]);

297 
‰ì
(
cxaDem™gÀd
);

300 #i‡
USE
(
BACKTRACE_SYMBOLS
)

301 
‰ì
(
symbﬁs
);

305 #unde‡
WTF_USE_BACKTRACE_SYMBOLS


306 #unde‡
WTF_USE_DLADDR


308 
WTFCøshHookFun˘i⁄
 
globÆHook
 = 0;

310 
WTFSëCøshHook
(
WTFCøshHookFun˘i⁄
 
fun˘i⁄
)

312 
globÆHook
 = 
fun˘i⁄
;

315 
WTFCøsh
()

317 i‡(
globÆHook
)

318 
globÆHook
();

320 
WTFRï‹tBackåa˚
();

321 *(*)(
uöçå_t
)0xbbadbeef = 0;

323 #i‡
COMPILER
(
CLANG
)

324 
__buûtö_å≠
();

330 
WTFCøshWôhSecurôyIm∂iˇti⁄
()

332 i‡(
globÆHook
)

333 
globÆHook
();

334 
WTFRï‹tBackåa˚
();

335 *(*)(
uöçå_t
)0xfbadbeef = 0;

337 #i‡
COMPILER
(
CLANG
)

338 
__buûtö_å≠
();

344 #i‡
HAVE
(
SIGNAL_H
)

345 
NO_RETURN
 
dumpBackåa˚Sig«lH™dÀr
(
sig
)

347 
WTFRï‹tBackåa˚
();

348 
exô
(128 + 
sig
);

351 
ö°ÆlSig«lH™dÀrsF‹F©ÆEº‹s
((*
h™dÀr
)())

353 
sig«l
(
SIGILL
, 
h™dÀr
);

354 
sig«l
(
SIGTRAP
, 
h™dÀr
);

355 
sig«l
(
SIGFPE
, 
h™dÀr
);

356 
sig«l
(
SIGBUS
, 
h™dÀr
);

357 
sig«l
(
SIGSEGV
, 
h™dÀr
);

358 
sig«l
(
SIGSYS
, 
h™dÀr
);

359 
sig«l
(
SIGPIPE
, 
h™dÀr
);

360 
sig«l
(
SIGXCPU
, 
h™dÀr
);

361 
sig«l
(
SIGXFSZ
, 
h™dÀr
);

364 
ª£tSig«lH™dÀrsF‹F©ÆEº‹s
()

366 
ö°ÆlSig«lH™dÀrsF‹F©ÆEº‹s
(
SIG_DFL
);

370 
WTFIn°ÆlRï‹tBackåa˚OnCøshHook
()

372 #i‡
HAVE
(
SIGNAL_H
)

375 
WTFSëCøshHook
(&
ª£tSig«lH™dÀrsF‹F©ÆEº‹s
);

376 
ö°ÆlSig«lH™dÀrsF‹F©ÆEº‹s
(&
dumpBackåa˚Sig«lH™dÀr
);

380 
boﬁ
 
WTFIsDebuggîAâached
()

382 #i‡
OS
(
DARWIN
)

383 
köfo_¥oc
 
öfo
;

384 
mib
[] = { 
CTL_KERN
, 
KERN_PROC
, 
KERN_PROC_PID
, 
gëpid
() };

385 
size_t
 
size
 = (
öfo
);

386 i‡(
sys˘l
(
mib
, (mibË/ (mib[0]), &
öfo
, &
size
, 
nuŒ±r
, 0) == -1)

387  
Ál£
;

388  
öfo
.
kp_¥oc
.
p_Êag
 & 
P_TRACED
;

390  
Ál£
;

394 
WTFRï‹tF©ÆEº‹
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
, c⁄° * 
f‹m©
, ...)

396 
va_li°
 
¨gs
;

397 
va_°¨t
(
¨gs
, 
f‹m©
);

398 
v¥ötf_°dîr_wôh_¥efix
("FATAL ERROR: ", 
f‹m©
, 
¨gs
);

399 
va_íd
(
¨gs
);

400 
¥ötf_°dîr_comm⁄
("\n");

401 
¥ötCÆlSôe
(
fûe
, 
löe
, 
fun˘i⁄
);

404 
WTFRï‹tEº‹
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
, c⁄° * 
f‹m©
, ...)

406 
va_li°
 
¨gs
;

407 
va_°¨t
(
¨gs
, 
f‹m©
);

408 
v¥ötf_°dîr_wôh_¥efix
("ERROR: ", 
f‹m©
, 
¨gs
);

409 
va_íd
(
¨gs
);

410 
¥ötf_°dîr_comm⁄
("\n");

411 
¥ötCÆlSôe
(
fûe
, 
löe
, 
fun˘i⁄
);

414 
WTFLog
(
WTFLogCh™√l
* 
ch™√l
, c⁄° * 
f‹m©
, ...)

416 i‡(
ch™√l
->
°©e
 !
WTFLogCh™√lOn
)

419 
va_li°
 
¨gs
;

420 
va_°¨t
(
¨gs
, 
f‹m©
);

421 
v¥ötf_°dîr_wôh_åaûög_√wlöe
(
f‹m©
, 
¨gs
);

422 
va_íd
(
¨gs
);

425 
WTFLogVîbo£
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
, 
WTFLogCh™√l
* 
ch™√l
, c⁄° * 
f‹m©
, ...)

427 i‡(
ch™√l
->
°©e
 !
WTFLogCh™√lOn
)

430 
va_li°
 
¨gs
;

431 
va_°¨t
(
¨gs
, 
f‹m©
);

432 
v¥ötf_°dîr_wôh_åaûög_√wlöe
(
f‹m©
, 
¨gs
);

433 
va_íd
(
¨gs
);

435 
¥ötCÆlSôe
(
fûe
, 
löe
, 
fun˘i⁄
);

438 
WTFLogAlwaysV
(c⁄° * 
f‹m©
, 
va_li°
 
¨gs
)

440 
v¥ötf_°dîr_wôh_åaûög_√wlöe
(
f‹m©
, 
¨gs
);

443 
WTFLogAlways
(c⁄° * 
f‹m©
, ...)

445 
va_li°
 
¨gs
;

446 
va_°¨t
(
¨gs
, 
f‹m©
);

447 
WTFLogAlwaysV
(
f‹m©
, 
¨gs
);

448 
va_íd
(
¨gs
);

451 
WTFLogAlwaysAndCøsh
(c⁄° * 
f‹m©
, ...)

453 
va_li°
 
¨gs
;

454 
va_°¨t
(
¨gs
, 
f‹m©
);

455 
WTFLogAlwaysV
(
f‹m©
, 
¨gs
);

456 
va_íd
(
¨gs
);

457 
WTFCøsh
();

460 
WTFLogCh™√l
* 
WTFLogCh™√lByName
(WTFLogCh™√l* 
ch™√ls
[], 
size_t
 
cou¡
, c⁄° * 
«me
)

462 
size_t
 
i
 = 0; i < 
cou¡
; ++i) {

463 
WTFLogCh™√l
* 
ch™√l
 = 
ch™√ls
[
i
];

464 i‡(!
°rˇ£cmp
(
«me
, 
ch™√l
->name))

465  
ch™√l
;

471 
£tSèãOfAŒCh™√ls
(
WTFLogCh™√l
* 
ch™√ls
[], 
size_t
 
ch™√lCou¡
, 
WTFLogCh™√lSèã
 
°©e
)

473 
size_t
 
i
 = 0; i < 
ch™√lCou¡
; ++i)

474 
ch™√ls
[
i
]->
°©e
 = state;

477 
WTFInôülizeLogCh™√lSèãsFromSåög
(
WTFLogCh™√l
* 
ch™√ls
[], 
size_t
 
cou¡
, c⁄° * 
logLevñ
)

479 
Såög
 
logLevñSåög
 = 
logLevñ
;

480 
Ve˘‹
<
Såög
> 
comp⁄íts
;

481 
logLevñSåög
.
•lô
(',', 
comp⁄íts
);

483 
size_t
 
i
 = 0; i < 
comp⁄íts
.
size
(); ++i) {

484 
Såög
 
comp⁄ít
 = 
comp⁄íts
[
i
];

486 
WTFLogCh™√lSèã
 
logCh™√lSèã
 = 
WTFLogCh™√lOn
;

487 i‡(
comp⁄ít
.
°¨tsWôh
('-')) {

488 
logCh™√lSèã
 = 
WTFLogCh™√lOff
;

489 
comp⁄ít
 = comp⁄ít.
sub°rög
(1);

492 i‡(
equÆIgn‹ögCa£
(
comp⁄ít
, "all")) {

493 
£tSèãOfAŒCh™√ls
(
ch™√ls
, 
cou¡
, 
logCh™√lSèã
);

497 i‡(
WTFLogCh™√l
* 
ch™√l
 = 
WTFLogCh™√lByName
(
ch™√ls
, 
cou¡
, 
comp⁄ít
.
utf8
().
d©a
()))

498 
ch™√l
->
°©e
 = 
logCh™√lSèã
;

500 
WTFLogAlways
("Unknow¿loggög ch™√l: %s", 
comp⁄ít
.
utf8
().
d©a
());

	@Assertions.h

26 #i‚de‡
WTF_As£πi⁄s_h


27 
	#WTF_As£πi⁄s_h


	)

39 
	~<öây≥s.h
>

40 
	~<°d¨g.h
>

41 
	~<°dboﬁ.h
>

42 
	~<°ddef.h
>

44 #ifde‡
NDEBUG


46 
	#ASSERTIONS_DISABLED_DEFAULT
 1

	)

48 
	#ASSERTIONS_DISABLED_DEFAULT
 0

	)

51 #i‚de‡
BACKTRACE_DISABLED


52 
	#BACKTRACE_DISABLED
 
ASSERTIONS_DISABLED_DEFAULT


	)

55 #i‚de‡
ASSERT_DISABLED


56 
	#ASSERT_DISABLED
 
ASSERTIONS_DISABLED_DEFAULT


	)

59 #i‚de‡
ASSERT_MSG_DISABLED


60 
	#ASSERT_MSG_DISABLED
 
ASSERTIONS_DISABLED_DEFAULT


	)

63 #i‚de‡
ASSERT_ARG_DISABLED


64 
	#ASSERT_ARG_DISABLED
 
ASSERTIONS_DISABLED_DEFAULT


	)

67 #i‚de‡
FATAL_DISABLED


68 
	#FATAL_DISABLED
 
ASSERTIONS_DISABLED_DEFAULT


	)

71 #i‚de‡
ERROR_DISABLED


72 
	#ERROR_DISABLED
 
ASSERTIONS_DISABLED_DEFAULT


	)

75 #i‚de‡
LOG_DISABLED


76 
	#LOG_DISABLED
 
ASSERTIONS_DISABLED_DEFAULT


	)

79 #i‡
COMPILER
(
GCC
)

80 
	#WTF_PRETTY_FUNCTION
 
__PRETTY_FUNCTION__


	)

82 
	#WTF_PRETTY_FUNCTION
 
__FUNCTION__


	)

88 #i‡
COMPILER
(
GCC
Ë&& !
deföed
(
__OBJC__
)

89 
	#WTF_ATTRIBUTE_PRINTF
(
f‹m©SåögArgumít
, 
exåaArgumíts
Ë
	`__©åibuã__
((
	`__f‹m©__
(
¥ötf
, f‹m©SåögArgumít,ÉxåaArgumíts)))

	)

91 
	#WTF_ATTRIBUTE_PRINTF
(
f‹m©SåögArgumít
, 
exåaArgumíts
)

	)

94 #i‡
PLATFORM
(
IOS
)

96 #i‚de‡
WTF_EXPORT_PRIVATE


97 
	#WTF_EXPORT_PRIVATE


	)

103 #ifde‡
__˝lu•lus


115 #i‡
COMPILER
(
CLANG
Ë|| COMPILER(
MSVC
)

116 
	#NO_RETURN_DUE_TO_CRASH
 
NO_RETURN


	)

118 
	#NO_RETURN_DUE_TO_CRASH


	)

121 íum { 
WTFLogCh™√lOff
, 
WTFLogCh™√lOn
 } 
	tWTFLogCh™√lSèã
;

124 
WTFLogCh™√lSèã
 
°©e
;

125 c⁄° * 
«me
;

126 } 
	tWTFLogCh™√l
;

128 
WTF_EXPORT_PRIVATE
 
WTFRï‹tAs£πi⁄Faûuª
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
, c⁄° * 
as£πi⁄
);

129 
WTF_EXPORT_PRIVATE
 
WTFRï‹tAs£πi⁄FaûuªWôhMesßge
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
, c⁄° * 
as£πi⁄
, c⁄° * 
f‹m©
, ...Ë
WTF_ATTRIBUTE_PRINTF
(5, 6);

130 
WTF_EXPORT_PRIVATE
 
WTFRï‹tArgumítAs£πi⁄Faûuª
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
, c⁄° * 
¨gName
, c⁄° * 
as£πi⁄
);

131 
WTF_EXPORT_PRIVATE
 
WTFRï‹tF©ÆEº‹
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
, c⁄° * 
f‹m©
, ...Ë
WTF_ATTRIBUTE_PRINTF
(4, 5);

132 
WTF_EXPORT_PRIVATE
 
WTFRï‹tEº‹
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
, c⁄° * 
f‹m©
, ...Ë
WTF_ATTRIBUTE_PRINTF
(4, 5);

133 
WTF_EXPORT_PRIVATE
 
WTFLog
(
WTFLogCh™√l
*, c⁄° * 
f‹m©
, ...Ë
WTF_ATTRIBUTE_PRINTF
(2, 3);

134 
WTF_EXPORT_PRIVATE
 
WTFLogVîbo£
(c⁄° * 
fûe
, 
löe
, c⁄° * 
fun˘i⁄
, 
WTFLogCh™√l
*, c⁄° * 
f‹m©
, ...Ë
WTF_ATTRIBUTE_PRINTF
(5, 6);

135 
WTF_EXPORT_PRIVATE
 
WTFLogAlwaysV
(c⁄° * 
f‹m©
, 
va_li°
);

136 
WTF_EXPORT_PRIVATE
 
WTFLogAlways
(c⁄° * 
f‹m©
, ...Ë
WTF_ATTRIBUTE_PRINTF
(1, 2);

137 
WTF_EXPORT_PRIVATE
 
NO_RETURN_DUE_TO_CRASH
 
WTFLogAlwaysAndCøsh
(c⁄° * 
f‹m©
, ...Ë
WTF_ATTRIBUTE_PRINTF
(1, 2);

138 
WTF_EXPORT_PRIVATE
 
WTFLogCh™√l
* 
WTFLogCh™√lByName
(WTFLogCh™√l*[], 
size_t
 
cou¡
, const *);

139 
WTF_EXPORT_PRIVATE
 
WTFInôülizeLogCh™√lSèãsFromSåög
(
WTFLogCh™√l
*[], 
size_t
 
cou¡
, const *);

141 
WTF_EXPORT_PRIVATE
 
WTFGëBackåa˚
(** 
°ack
, * 
size
);

142 
WTF_EXPORT_PRIVATE
 
WTFRï‹tBackåa˚
();

143 
WTF_EXPORT_PRIVATE
 
WTFPrötBackåa˚
(** 
°ack
, 
size
);

145 (*
WTFCøshHookFun˘i⁄
)();

146 
WTF_EXPORT_PRIVATE
 
WTFSëCøshHook
(
WTFCøshHookFun˘i⁄
);

147 
WTF_EXPORT_PRIVATE
 
WTFIn°ÆlRï‹tBackåa˚OnCøshHook
();

149 
WTF_EXPORT_PRIVATE
 
boﬁ
 
WTFIsDebuggîAâached
();

151 #ifde‡
__˝lu•lus


155 #i‚de‡
CRASH


156 
	#CRASH
(Ë
	`WTFCøsh
()

	)

159 #ifde‡
__˝lu•lus


162 
WTF_EXPORT_PRIVATE
 
NO_RETURN_DUE_TO_CRASH
 
WTFCøsh
();

163 #ifde‡
__˝lu•lus


167 #i‚de‡
CRASH_WITH_SECURITY_IMPLICATION


168 
	#CRASH_WITH_SECURITY_IMPLICATION
(Ë
	`WTFCøshWôhSecurôyIm∂iˇti⁄
()

	)

171 #ifde‡
__˝lu•lus


174 
WTF_EXPORT_PRIVATE
 
NO_RETURN_DUE_TO_CRASH
 
WTFCøshWôhSecurôyIm∂iˇti⁄
();

175 #ifde‡
__˝lu•lus


184 #i‡
BACKTRACE_DISABLED


186 
	#BACKTRACE
(Ë(()0)

	)

190 
	#BACKTRACE
() do { \

191 
	`WTFRï‹tBackåa˚
(); \

192 } 
Ál£
)

	)

202 #i‡
OS
(
WINDOWS
)

204 #unde‡
ASSERT


207 #i‡
ASSERT_DISABLED


209 
	#ASSERT
(
as£πi⁄
Ë(()0)

	)

210 
	#ASSERT_AT
(
as£πi⁄
, 
fûe
, 
löe
, 
fun˘i⁄
Ë(()0)

	)

211 
	#ASSERT_NOT_REACHED
(Ë(()0)

	)

212 
	#NO_RETURN_DUE_TO_ASSERT


	)

214 
	#ASSERT_UNUSED
(
v¨übÀ
, 
as£πi⁄
Ë(()v¨übÀ)

	)

216 #ifde‡
ADDRESS_SANITIZER


217 
	#ASSERT_WITH_SECURITY_IMPLICATION
(
as£πi⁄
) \

218 (!(
as£πi⁄
) ? \

219 (
	`WTFRï‹tAs£πi⁄Faûuª
(
__FILE__
, 
__LINE__
, 
WTF_PRETTY_FUNCTION
, #assertion), \

220 
	`CRASH_WITH_SECURITY_IMPLICATION
()) : \

221 ()0)

	)

223 
	#ASSERT_WITH_SECURITY_IMPLICATION_DISABLED
 0

	)

225 
	#ASSERT_WITH_SECURITY_IMPLICATION
(
as£πi⁄
Ë(()0)

	)

226 
	#ASSERT_WITH_SECURITY_IMPLICATION_DISABLED
 1

	)

231 
	#ASSERT
(
as£πi⁄
) \

232 (!(
as£πi⁄
) ? \

233 (
	`WTFRï‹tAs£πi⁄Faûuª
(
__FILE__
, 
__LINE__
, 
WTF_PRETTY_FUNCTION
, #assertion), \

234 
	`CRASH
()) : \

235 ()0)

	)

237 
	#ASSERT_AT
(
as£πi⁄
, 
fûe
, 
löe
, 
fun˘i⁄
) \

238 (!(
as£πi⁄
) ? \

239 (
	`WTFRï‹tAs£πi⁄Faûuª
(
fûe
, 
löe
, 
fun˘i⁄
, #assertion), \

240 
	`CRASH
()) : \

241 ()0)

	)

243 
	#ASSERT_NOT_REACHED
() do { \

244 
	`WTFRï‹tAs£πi⁄Faûuª
(
__FILE__
, 
__LINE__
, 
WTF_PRETTY_FUNCTION
, 0); \

245 
	`CRASH
(); \

246 } 0)

	)

248 
	#ASSERT_UNUSED
(
v¨übÀ
, 
as£πi⁄
Ë
	`ASSERT
◊s£πi⁄)

	)

250 
	#NO_RETURN_DUE_TO_ASSERT
 
NO_RETURN_DUE_TO_CRASH


	)

260 
	#ASSERT_WITH_SECURITY_IMPLICATION
(
as£πi⁄
) \

261 (!(
as£πi⁄
) ? \

262 (
	`WTFRï‹tAs£πi⁄Faûuª
(
__FILE__
, 
__LINE__
, 
WTF_PRETTY_FUNCTION
, #assertion), \

263 
	`CRASH_WITH_SECURITY_IMPLICATION
()) : \

264 ()0)

	)

265 
	#ASSERT_WITH_SECURITY_IMPLICATION_DISABLED
 0

	)

270 #i‡
ASSERT_MSG_DISABLED


271 
	#ASSERT_WITH_MESSAGE
(
as£πi⁄
, ...Ë(()0)

	)

273 
	#ASSERT_WITH_MESSAGE
(
as£πi⁄
, ...) do \

274 i‡(!(
as£πi⁄
)) { \

275 
	`WTFRï‹tAs£πi⁄FaûuªWôhMesßge
(
__FILE__
, 
__LINE__
, 
WTF_PRETTY_FUNCTION
, #as£πi⁄, 
__VA_ARGS__
); \

276 
	`CRASH
(); \

278 0)

	)

283 #i‡
ASSERT_MSG_DISABLED


284 
	#ASSERT_WITH_MESSAGE_UNUSED
(
v¨übÀ
, 
as£πi⁄
, ...Ë(()v¨übÀ)

	)

286 
	#ASSERT_WITH_MESSAGE_UNUSED
(
v¨übÀ
, 
as£πi⁄
, ...) do \

287 i‡(!(
as£πi⁄
)) { \

288 
	`WTFRï‹tAs£πi⁄FaûuªWôhMesßge
(
__FILE__
, 
__LINE__
, 
WTF_PRETTY_FUNCTION
, #as£πi⁄, 
__VA_ARGS__
); \

289 
	`CRASH
(); \

291 0)

	)

297 #i‡
ASSERT_ARG_DISABLED


299 
	#ASSERT_ARG
(
¨gName
, 
as£πi⁄
Ë(()0)

	)

303 
	#ASSERT_ARG
(
¨gName
, 
as£πi⁄
) do \

304 i‡(!(
as£πi⁄
)) { \

305 
	`WTFRï‹tArgumítAs£πi⁄Faûuª
(
__FILE__
, 
__LINE__
, 
WTF_PRETTY_FUNCTION
, #argName, #assertion); \

306 
	`CRASH
(); \

308 0)

	)

313 #i‚de‡
COMPILE_ASSERT


314 #i‡
COMPILER_SUPPORTS
(
C_STATIC_ASSERT
)

316 
	#COMPILE_ASSERT
(
exp
, 
«me
Ë
	`_Sètic_as£π
(”xp), #«me)

	)

318 
	#COMPILE_ASSERT
(
exp
, 
«me
Ë
	`°©ic_as£π
(”xp), #«me)

	)

324 #i‡
FATAL_DISABLED


325 
	#FATAL
(...Ë(()0)

	)

327 
	#FATAL
(...) do { \

328 
	`WTFRï‹tF©ÆEº‹
(
__FILE__
, 
__LINE__
, 
WTF_PRETTY_FUNCTION
, 
__VA_ARGS__
); \

329 
	`CRASH
(); \

330 } 0)

	)

335 #i‡
ERROR_DISABLED


336 
	#LOG_ERROR
(...Ë(()0)

	)

338 
	#LOG_ERROR
(...Ë
	`WTFRï‹tEº‹
(
__FILE__
, 
__LINE__
, 
WTF_PRETTY_FUNCTION
, 
__VA_ARGS__
)

	)

343 #i‡
LOG_DISABLED


344 
	#LOG
(
ch™√l
, ...Ë(()0)

	)

346 
	#LOG
(
ch™√l
, ...Ë
	`WTFLog
(&
	`JOIN_LOG_CHANNEL_WITH_PREFIX
(
LOG_CHANNEL_PREFIX
, ch™√l), 
__VA_ARGS__
)

	)

347 
	#JOIN_LOG_CHANNEL_WITH_PREFIX
(
¥efix
, 
ch™√l
Ë
	`JOIN_LOG_CHANNEL_WITH_PREFIX_LEVEL_2
’ªfix, ch™√l)

	)

348 
	#JOIN_LOG_CHANNEL_WITH_PREFIX_LEVEL_2
(
¥efix
, 
ch™√l
Ë¥efix ## 
	)
channel

353 #i‡
LOG_DISABLED


354 
	#LOG_VERBOSE
(
ch™√l
, ...Ë(()0)

	)

356 
	#LOG_VERBOSE
(
ch™√l
, ...Ë
	`WTFLogVîbo£
(
__FILE__
, 
__LINE__
, 
WTF_PRETTY_FUNCTION
, &
	`JOIN_LOG_CHANNEL_WITH_PREFIX
(
LOG_CHANNEL_PREFIX
, ch™√l), 
__VA_ARGS__
)

	)

361 #i‡
COMPILER
(
CLANG
)

364 #¥agm®
˛™g
 
dügno°ic
 
push


365 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wmissing-noreturn"

366 
ölöe
 
UNREACHABLE_FOR_PLATFORM
()

368 
CRASH
();

370 #¥agm®
˛™g
 
dügno°ic
 
p›


372 
	#UNREACHABLE_FOR_PLATFORM
(Ë
	`ASSERT_NOT_REACHED
()

	)

375 #i‡
ASSERT_DISABLED


376 
	#RELEASE_ASSERT
(
as£πi⁄
Ë(
	`UNLIKELY
(!◊s£πi⁄)Ë? (
	`CRASH
()Ë: ()0)

	)

377 
	#RELEASE_ASSERT_WITH_MESSAGE
(
as£πi⁄
, ...Ë
	`RELEASE_ASSERT
◊s£πi⁄)

	)

378 
	#RELEASE_ASSERT_NOT_REACHED
(Ë
	`CRASH
()

	)

380 
	#RELEASE_ASSERT
(
as£πi⁄
Ë
	`ASSERT
◊s£πi⁄)

	)

381 
	#RELEASE_ASSERT_WITH_MESSAGE
(
as£πi⁄
, ...Ë
	`ASSERT_WITH_MESSAGE
◊s£πi⁄, 
__VA_ARGS__
)

	)

382 
	#RELEASE_ASSERT_NOT_REACHED
(Ë
	`ASSERT_NOT_REACHED
()

	)

387 
	#TYPE_CASTS_BASE
(
ToCœssName
, 
¨gumítTy≥
, 
¨gumítName
, 
poöãrPªdiˇã
, 
ª„ªn˚Pªdiˇã
) \

388 
ölöe
 
ToCœssName
* 
to
##
	`ToCœssName
(
¨gumítTy≥
* 
¨gumítName
) \

390 
	`ASSERT_WITH_SECURITY_IMPLICATION
(!
¨gumítName
 || (
poöãrPªdiˇã
)); \

391  
°©ic_ˇ°
<
ToCœssName
*>(
¨gumítName
); \

393 
ölöe
 c⁄° 
ToCœssName
* 
to
##
	`ToCœssName
(c⁄° 
¨gumítTy≥
* 
¨gumítName
) \

395 
	`ASSERT_WITH_SECURITY_IMPLICATION
(!
¨gumítName
 || (
poöãrPªdiˇã
)); \

396  
°©ic_ˇ°
<c⁄° 
ToCœssName
*>(
¨gumítName
); \

398 
ölöe
 
ToCœssName
& 
to
##
	`ToCœssName
(
¨gumítTy≥
& 
¨gumítName
) \

400 
	`ASSERT_WITH_SECURITY_IMPLICATION
(
ª„ªn˚Pªdiˇã
); \

401  
°©ic_ˇ°
<
ToCœssName
&>(
¨gumítName
); \

403 
ölöe
 c⁄° 
ToCœssName
& 
to
##
	`ToCœssName
(c⁄° 
¨gumítTy≥
& 
¨gumítName
) \

405 
	`ASSERT_WITH_SECURITY_IMPLICATION
(
ª„ªn˚Pªdiˇã
); \

406  
°©ic_ˇ°
<c⁄° 
ToCœssName
&>(
¨gumítName
); \

408 
to
##
	`ToCœssName
(c⁄° 
ToCœssName
*); \

409 
to
##
	`ToCœssName
(c⁄° 
ToCœssName
&);

	)

	@Atomics.cpp

59 
	~"c⁄fig.h
"

60 
	~"Atomics.h
"

68 #i‡
COMPILER
(
GCC
Ë&& !
deföed
(
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8
Ë&& 
USE
(
PTHREADS
)

70 
	~"ThªadögPrimôives.h
"

72 
«me•a˚
 
	gWTF
 {

74 c⁄° 
size_t
 
	gkSw≠LockCou¡
 = 32;

75 
Muãx
 
	gs_sw≠Locks
[
kSw≠LockCou¡
];

77 
ölöe
 
	gMuãx
& 
gëSw≠Lock
(c⁄° vﬁ©ûê
öt64_t
* 
addr
)

79  
	gs_sw≠Locks
[(
ªöãΩªt_ˇ°
<
öçå_t
>(
addr
Ë>> 3UË% 
kSw≠LockCou¡
];

82 
öt64_t
 
©omicSãp
(öt64_àvﬁ©ûe* 
addíd
, i¡64_à
°ï
)

84 
	gMuãx
& 
	gmuãx
 = 
gëSw≠Lock
(
addíd
);

86 
	gmuãx
.
lock
();

87 
öt64_t
 
	gvÆue
 = *
addíd
 + 
°ï
;

88 *
	gaddíd
 = 
vÆue
;

89 
	gmuãx
.
u∆ock
();

91  
	gvÆue
;

96 
öt64_t
 
__sync_add_™d_„tch_8
(öt64_àvﬁ©ûe* 
addíd
, i¡64_à
vÆue
)

98  
©omicSãp
(
addíd
, 
vÆue
);

101 
öt64_t
 
__sync_sub_™d_„tch_8
(öt64_àvﬁ©ûe* 
addíd
, i¡64_à
vÆue
)

103  
©omicSãp
(
addíd
, -
vÆue
);

	@Atomics.h

59 #i‚de‡
Atomics_h


60 
	#Atomics_h


	)

62 
	~<wtf/StdLibExåas.h
>

64 #i‡
OS
(
WINDOWS
)

65 #i‡!
COMPILER
(
GCC
)

66 "C" 
_RódWrôeB¨rõr
();

67 #¥agm®
öåösic
(
_RódWrôeB¨rõr
)

69 
	~<wödows.h
>

72 
«me•a˚
 
	gWTF
 {

74 #i‡
OS
(
WINDOWS
)

75 
ölöe
 
boﬁ
 
wókCom∑ªAndSw≠
(vﬁ©ûê* 
loˇti⁄
, 
ex≥˘ed
, 
√wVÆue
)

77  
I¡îlockedCom∑ªExch™ge
(
ªöãΩªt_ˇ°
<
LONG
 vﬁ©ûe*>(
loˇti⁄
), 
°©ic_ˇ°
<LONG>(
√wVÆue
), sètic_ˇ°<LONG>(
ex≥˘ed
)) == static_cast<LONG>(expected);

80 
ölöe
 
boﬁ
 
wókCom∑ªAndSw≠
(*vﬁ©ûe* 
loˇti⁄
, * 
ex≥˘ed
, * 
√wVÆue
)

82  
I¡îlockedCom∑ªExch™gePoöãr
(
loˇti⁄
, 
√wVÆue
, 
ex≥˘ed
) ==Éxpected;

85 
ölöe
 
boﬁ
 
wókCom∑ªAndSw≠
(vﬁ©ûê* 
loˇti⁄
, 
ex≥˘ed
, 
√wVÆue
)

87 #i‡
ENABLE
(
COMPARE_AND_SWAP
)

88 #i‡
CPU
(
X86
Ë|| CPU(
X86_64
)

89 
	gªsu…
;

90 
asm
 volatile(

93 : "+a"(
ex≥˘ed
), "=q"(
	gªsu…
), "+m"(*
	gloˇti⁄
)

94 : "r"(
√wVÆue
)

97 #ñi‡
CPU
(
ARM_THUMB2
)

98 
	gtmp
;

99 
	gªsu…
;

100 
asm
 volatile(

107 : "+Q"(*
loˇti⁄
), "=&r"(
	gªsu…
), "=&r"(
	gtmp
)

108 : "r"(
ex≥˘ed
), "r"(
	g√wVÆue
)

110 
	gªsu…
 = !
ªsu…
;

111 #ñi‡
CPU
(
ARM64
Ë&& 
COMPILER
(
GCC
)

112 
	gtmp
;

113 
	gªsu…
;

114 
asm
 volatile(

121 : "+r"(
loˇti⁄
), "=&r"(
	gªsu…
), "=&r"(
	gtmp
)

122 : "r"(
ex≥˘ed
), "r"(
	g√wVÆue
)

124 
	gªsu…
 = !
ªsu…
;

125 #ñi‡
CPU
(
ARM64
)

126 
	gtmp
;

127 
	gªsu…
;

128 
asm
 volatile(

135 : "+m"(*
loˇti⁄
), "=&r"(
	gªsu…
), "=&r"(
	gtmp
)

136 : "r"(
ex≥˘ed
), "r"(
	g√wVÆue
)

138 
	gªsu…
 = !
ªsu…
;

142  
	gªsu…
;

144 
UNUSED_PARAM
(
loˇti⁄
);

145 
UNUSED_PARAM
(
ex≥˘ed
);

146 
UNUSED_PARAM
(
√wVÆue
);

147 
CRASH
();

148  
	gÁl£
;

152 
ölöe
 
boﬁ
 
wókCom∑ªAndSw≠
(*vﬁ©ûe* 
loˇti⁄
, * 
ex≥˘ed
, * 
√wVÆue
)

154 #i‡
ENABLE
(
COMPARE_AND_SWAP
)

155 #i‡
CPU
(
X86_64
)

156 
boﬁ
 
	gªsu…
;

157 
asm
 volatile(

160 : "+a"(
ex≥˘ed
), "=q"(
	gªsu…
), "+m"(*
	gloˇti⁄
)

161 : "r"(
√wVÆue
)

164  
	gªsu…
;

165 #ñi‡
CPU
(
ARM64
Ë&& 
COMPILER
(
GCC
)

166 
boﬁ
 
	gªsu…
;

167 * 
	gtmp
;

168 
asm
 volatile(

175 : "+r"(
loˇti⁄
), "=&r"(
	gªsu…
), "=&r"(
	gtmp
)

176 : "r"(
ex≥˘ed
), "r"(
	g√wVÆue
)

178  !
	gªsu…
;

179 #ñi‡
CPU
(
ARM64
)

180 
boﬁ
 
	gªsu…
;

181 * 
	gtmp
;

182 
asm
 volatile(

189 : "+m"(*
loˇti⁄
), "=&r"(
	gªsu…
), "=&r"(
	gtmp
)

190 : "r"(
ex≥˘ed
), "r"(
	g√wVÆue
)

192  !
	gªsu…
;

194  
wókCom∑ªAndSw≠
(
bôwi£_ˇ°
<*>(
loˇti⁄
), bôwi£_ˇ°<>(
ex≥˘ed
), bôwi£_ˇ°<>(
√wVÆue
));

197 
UNUSED_PARAM
(
loˇti⁄
);

198 
UNUSED_PARAM
(
ex≥˘ed
);

199 
UNUSED_PARAM
(
√wVÆue
);

200 
CRASH
();

206 
ölöe
 
boﬁ
 
wókCom∑ªAndSw≠UI¡På
(vﬁ©ûê
uöçå_t
* 
loˇti⁄
, uöçå_à
ex≥˘ed
, uöçå_à
√wVÆue
)

208  
wókCom∑ªAndSw≠
(
ªöãΩªt_ˇ°
<*vﬁ©ûe*>(
loˇti⁄
),ÑeöãΩªt_ˇ°<*>(
ex≥˘ed
),ÑeöãΩªt_ˇ°<*>(
√wVÆue
));

211 
ölöe
 
boﬁ
 
wókCom∑ªAndSw≠Size
(vﬁ©ûê
size_t
* 
loˇti⁄
, size_à
ex≥˘ed
, size_à
√wVÆue
)

213  
wókCom∑ªAndSw≠
(
ªöãΩªt_ˇ°
<*vﬁ©ûe*>(
loˇti⁄
),ÑeöãΩªt_ˇ°<*>(
ex≥˘ed
),ÑeöãΩªt_ˇ°<*>(
√wVÆue
));

219 
ölöe
 
compûîFí˚
()

221 #i‡
OS
(
WINDOWS
Ë&& !
COMPILER
(
GCC
)

222 
_RódWrôeB¨rõr
();

224 
asm
 volatile("" ::: "memory");

228 #i‡
CPU
(
ARM_THUMB2
Ë|| CPU(
ARM64
)

232 
ölöe
 
¨mV7_dmb
()

234 
asm
 volatile("dmb sy" ::: "memory");

238 
ölöe
 
¨mV7_dmb_°
()

240 
asm
 volatile("dmb st" ::: "memory");

243 
ölöe
 
lﬂdLﬂdFí˚
(Ë{ 
¨mV7_dmb
(); }

244 
ölöe
 
lﬂdSt‹eFí˚
(Ë{ 
¨mV7_dmb
(); }

245 
ölöe
 
°‹eLﬂdFí˚
(Ë{ 
¨mV7_dmb
(); }

246 
ölöe
 
°‹eSt‹eFí˚
(Ë{ 
¨mV7_dmb_°
(); }

247 
ölöe
 
mem‹yB¨rõrA·îLock
(Ë{ 
¨mV7_dmb
(); }

248 
ölöe
 
mem‹yB¨rõrBef‹eU∆ock
(Ë{ 
¨mV7_dmb
(); }

250 #ñi‡
CPU
(
X86
Ë|| CPU(
X86_64
)

252 
ölöe
 
x86_m„n˚
()

254 #i‡
OS
(
WINDOWS
)

259 
Mem‹yB¨rõr
();

261 
asm
 volatile("mfence" ::: "memory");

265 
ölöe
 
lﬂdLﬂdFí˚
(Ë{ 
compûîFí˚
(); }

266 
ölöe
 
lﬂdSt‹eFí˚
(Ë{ 
compûîFí˚
(); }

267 
ölöe
 
°‹eLﬂdFí˚
(Ë{ 
x86_m„n˚
(); }

268 
ölöe
 
°‹eSt‹eFí˚
(Ë{ 
compûîFí˚
(); }

269 
ölöe
 
mem‹yB¨rõrA·îLock
(Ë{ 
compûîFí˚
(); }

270 
ölöe
 
mem‹yB¨rõrBef‹eU∆ock
(Ë{ 
compûîFí˚
(); }

274 
ölöe
 
lﬂdLﬂdFí˚
(Ë{ 
compûîFí˚
(); }

275 
ölöe
 
lﬂdSt‹eFí˚
(Ë{ 
compûîFí˚
(); }

276 
ölöe
 
°‹eLﬂdFí˚
(Ë{ 
compûîFí˚
(); }

277 
ölöe
 
°‹eSt‹eFí˚
(Ë{ 
compûîFí˚
(); }

278 
ölöe
 
mem‹yB¨rõrA·îLock
(Ë{ 
compûîFí˚
(); }

279 
ölöe
 
mem‹yB¨rõrBef‹eU∆ock
(Ë{ 
compûîFí˚
(); }

283 
ölöe
 
boﬁ
 
wókCom∑ªAndSw≠
(
uöt8_t
* 
loˇti⁄
, uöt8_à
ex≥˘ed
, uöt8_à
√wVÆue
)

285 #i‡
ENABLE
(
COMPARE_AND_SWAP
)

286 #i‡!
OS
(
WINDOWS
Ë&& (
CPU
(
X86
Ë|| CPU(
X86_64
))

287 
	gªsu…
;

288 
asm
 volatile(

291 : "+a"(
ex≥˘ed
), "=q"(
	gªsu…
), "+m"(*
	gloˇti⁄
)

292 : "q"(
√wVÆue
)

295  
	gªsu…
;

296 #ñi‡
OS
(
WINDOWS
Ë&& 
CPU
(
X86
)

299 
boﬁ
 
	gªsu…
 = 
Ál£
;

301 
	g__asm
 {

302 
mov
 
	gÆ
, 
ex≥˘ed


303 
mov
 
	gedx
, 
loˇti⁄


304 
mov
 
	g˛
, 
√wVÆue


305 
lock
 
cmpxchg
 
byã
 
	g±r
[
edx
], 
˛


306 
£tz
 
	gªsu…


309  
	gªsu…
;

311 
uöçå_t
 
	gloˇti⁄VÆue
 = 
bôwi£_ˇ°
<uöçå_t>(
loˇti⁄
);

312 
uöçå_t
 
	gÆig√dLoˇti⁄VÆue
 = 
loˇti⁄VÆue
 & ~(() - 1);

313 
uöçå_t
 
	gloˇti⁄Off£t
 = 
loˇti⁄VÆue
 - 
Æig√dLoˇti⁄VÆue
;

314 
ASSERT
(
loˇti⁄Off£t
 < ());

315 * 
	gÆig√dLoˇti⁄
 = 
bôwi£_ˇ°
<*>(
Æig√dLoˇti⁄VÆue
);

317 
	gﬁdAlig√dVÆue
 = *
c⁄°_ˇ°
<vﬁ©ûê*>(
Æig√dLoˇti⁄
);

319 
uöt8_t
 
	gbyãs
[()];

320 
	gw‹d
;

321 } 
	gu
;

322 
	gu
.
	gw‹d
 = 
ﬁdAlig√dVÆue
;

323 i‡(
	gu
.
	gbyãs
[
loˇti⁄Off£t
] !
ex≥˘ed
)

324  
Ál£
;

325 
	gu
.
	gbyãs
[
loˇti⁄Off£t
] = 
√wVÆue
;

326 
	g√wAlig√dVÆue
 = 
u
.
w‹d
;

327  
wókCom∑ªAndSw≠
(
Æig√dLoˇti⁄
, 
ﬁdAlig√dVÆue
, 
√wAlig√dVÆue
);

330 
UNUSED_PARAM
(
loˇti⁄
);

331 
UNUSED_PARAM
(
ex≥˘ed
);

332 
UNUSED_PARAM
(
√wVÆue
);

333 
CRASH
();

334  
	gÁl£
;

	@AutodrainedPool.h

29 #i‚de‡
AutodøöedPoﬁ_h


30 
	#AutodøöedPoﬁ_h


	)

32 
	~<wtf/N⁄c›yabÀ.h
>

34 #i‡
USE
(
FOUNDATION
Ë&& !
deföed
(
__OBJC__
)

35 
objc_obje˘
 *
	tid
;

38 
«me•a˚
 
	gWTF
 {

40 ˛as†
	cAutodøöedPoﬁ
 {

41 
WTF_MAKE_NONCOPYABLE
(
AutodøöedPoﬁ
);

42 
	gpublic
:

43 #i‡
USE
(
FOUNDATION
)

44 
WTF_EXPORT_PRIVATE
 
AutodøöedPoﬁ
();

45 
	gWTF_EXPORT_PRIVATE
 ~
AutodøöedPoﬁ
();

47 
ex∂icô
 
AutodøöedPoﬁ
() { }

48 ~
AutodøöedPoﬁ
() { }

51 
	g¥iv©e
:

52 #i‡
USE
(
FOUNDATION
)

53 
id
 
m_poﬁ
;

59 
usög
 
	gWTF
::
AutodøöedPoﬁ
;

	@Bag.h

26 #i‚de‡
Bag_h


27 
	#Bag_h


	)

29 
«me•a˚
 
	gWTF
 {

31 
	gãm∂©e
<
ty≥«me
 
	gT
>

32 ˛as†
	cBag
 {

33 
	g¥iv©e
:

34 ˛as†
	cNode
 {

35 
WTF_MAKE_FAST_ALLOCATED
;

36 
	gpublic
:

37 
ãm∂©e
<
ty≥«me
... 
Args
>

38 
Node
(
Args
... 
¨gs
)

39 : 
m_ôem
(
¨gs
...)

43 
T
 
m_ôem
;

44 
Node
* 
	gm_√xt
;

47 
	gpublic
:

48 
Bag
()

49 : 
m_hód
(
nuŒ±r
)

53 ~
Bag
()

55 
˛ór
();

58 
˛ór
()

60 
	gm_hód
) {

61 
Node
* 
	gcuºít
 = 
m_hód
;

62 
	gm_hód
 = 
cuºít
->
m_√xt
;

63 
dñëe
 
	gcuºít
;

65 
	gm_hód
 = 
nuŒ±r
;

68 
	gãm∂©e
<
	gty≥«me
... 
	gArgs
>

69 
T
* 
add
(
Args
... 
¨gs
)

71 
Node
* 
	g√wNode
 = 
√w
 Node(
¨gs
...);

72 
	g√wNode
->
	gm_√xt
 = 
m_hód
;

73 
	gm_hód
 = 
√wNode
;

74  &
	g√wNode
->
	gm_ôem
;

77 ˛as†
	côî©‹
 {

78 
	gpublic
:

79 
ôî©‹
()

80 : 
m_node
(0)

85 
boﬁ
 
›î©‹
!(Ëc⁄° {  !
m_node
; }

87 
T
* 
	g›î©‹
*(Ëc⁄° {  &
	gm_node
->
	gm_ôem
; }

89 
	gôî©‹
& 
	g›î©‹
++()

91 
	gm_node
 = 
m_node
->
m_√xt
;

92  *
	gthis
;

95 
boﬁ
 
	g›î©‹
==(c⁄° 
ôî©‹
& 
Ÿhî
) const

97  
m_node
 =
Ÿhî
.m_node;

100 
boﬁ
 
	g›î©‹
!=(c⁄° 
ôî©‹
& 
Ÿhî
) const

102  !(*
this
 =
Ÿhî
);

105 
	g¥iv©e
:

106 
ãm∂©e
<
ty≥«me
 
U
> 
‰õnd
 
˛ass
 
WTF
::
Bag
;

107 
Node
* 
	gm_node
;

110 
ôî©‹
 
begö
()

112 
ôî©‹
 
	gªsu…
;

113 
	gªsu…
.
	gm_node
 = 
m_hód
;

114  
	gªsu…
;

117 
ôî©‹
 
íd
() {  iterator(); }

119 
boﬁ
 
isEm±y
(Ëc⁄° {  !
	gm_hód
; }

121 
	g¥iv©e
:

122 
Node
* 
m_hód
;

127 
usög
 
	gWTF
::
Bag
;

	@BagToHashMap.h

26 #i‚de‡
BagToHashM≠_h


27 
	#BagToHashM≠_h


	)

29 
	~<wtf/Bag.h
>

30 
	~<wtf/D©aLog.h
>

31 
	~<wtf/HashM≠.h
>

33 
«me•a˚
 
	gWTF
 {

35 
	gãm∂©e
<
ty≥«me
 
	gEÀmítTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyGëãrFun˘‹
>

36 
toHashM≠
(
Bag
<
EÀmítTy≥
>& 
bag
, 
KeyGëãrFun˘‹
& 
gëKey
, 
HashM≠
<
KeyTy≥
, EÀmítTy≥*, 
HashArg
>& 
ªsu…
)

38 
ty≥«me
 
	gBag
<
	gEÀmítTy≥
>::
ôî©‹
 
ôî
 = 
bag
.
begö
(); !!
	gôî
; ++iter) {

39 
EÀmítTy≥
* 
	gñemít
 = *
ôî
;

40 
KeyTy≥
 
	gkey
 = 
gëKey
(*
ñemít
);

41 
	gªsu…
.
add
(
key
, 
ñemít
);

47 
usög
 
	gWTF
::
toHashM≠
;

	@BitVector.cpp

26 
	~"c⁄fig.h
"

27 
	~"BôVe˘‹.h
"

29 
	~<Æg‹ôhm
>

30 
	~<°rög.h
>

31 
	~<wtf/As£πi⁄s.h
>

32 
	~<wtf/Fa°MÆloc.h
>

33 
	~<wtf/StdLibExåas.h
>

35 
«me•a˚
 
	gWTF
 {

37 
	gBôVe˘‹
::
£tSlow
(c⁄° 
BôVe˘‹
& 
Ÿhî
)

39 
uöçå_t
 
√wBôsOrPoöãr
;

40 i‡(
	gŸhî
.
isI∆öe
(Ë|| othî.
isEm±yOrDñëedVÆue
())

41 
	g√wBôsOrPoöãr
 = 
Ÿhî
.
m_bôsOrPoöãr
;

43 
OutOfLöeBôs
* 
	g√wOutOfLöeBôs
 = OutOfLöeBôs::
¸óã
(
Ÿhî
.
size
());

44 
mem˝y
(
√wOutOfLöeBôs
->
bôs
(), 
Ÿhî
.bôs(), 
byãCou¡
(Ÿhî.
size
()));

45 
	g√wBôsOrPoöãr
 = 
bôwi£_ˇ°
<
uöçå_t
>(
√wOutOfLöeBôs
) >> 1;

47 i‡(!
isI∆öe
(Ë&& !
isEm±yOrDñëedVÆue
())

48 
	gOutOfLöeBôs
::
de°roy
(
outOfLöeBôs
());

49 
	gm_bôsOrPoöãr
 = 
√wBôsOrPoöãr
;

52 
	gBôVe˘‹
::
ªsize
(
size_t
 
numBôs
)

54 i‡(
numBôs
 <
maxI∆öeBôs
()) {

55 i‡(
isI∆öe
())

58 
OutOfLöeBôs
* 
	gmyOutOfLöeBôs
 = 
outOfLöeBôs
();

59 
	gm_bôsOrPoöãr
 = 
makeI∆öeBôs
(*
myOutOfLöeBôs
->
bôs
());

60 
	gOutOfLöeBôs
::
de°roy
(
myOutOfLöeBôs
);

64 
ªsizeOutOfLöe
(
numBôs
);

67 
	gBôVe˘‹
::
˛órAŒ
()

69 i‡(
isI∆öe
())

70 
m_bôsOrPoöãr
 = 
makeI∆öeBôs
(0);

72 
mem£t
(
outOfLöeBôs
()->
bôs
(), 0, 
byãCou¡
(
size
()));

75 
	gBôVe˘‹
::
OutOfLöeBôs
* 
BôVe˘‹
::OutOfLöeBôs::
¸óã
(
size_t
 
numBôs
)

77 
numBôs
 = (numBô†+ 
bôsInPoöãr
() - 1) & ~(bitsInPointer() - 1);

78 
size_t
 
	gsize
 = (
OutOfLöeBôs
Ë+ (
uöçå_t
Ë* (
numBôs
 / 
bôsInPoöãr
());

79 
OutOfLöeBôs
* 
	gªsu…
 = 
√w
 (
NŸNuŒ
, 
Á°MÆloc
(
size
)ËOutOfLöeBôs(
numBôs
);

80  
	gªsu…
;

83 
	gBôVe˘‹
::
OutOfLöeBôs
::
de°roy
(OutOfLöeBôs* 
outOfLöeBôs
)

85 
Á°Fªe
(
outOfLöeBôs
);

88 
	gBôVe˘‹
::
ªsizeOutOfLöe
(
size_t
 
numBôs
)

90 
ASSERT
(
numBôs
 > 
maxI∆öeBôs
());

91 
OutOfLöeBôs
* 
	g√wOutOfLöeBôs
 = OutOfLöeBôs::
¸óã
(
numBôs
);

92 
size_t
 
	g√wNumW‹ds
 = 
√wOutOfLöeBôs
->
numW‹ds
();

93 i‡(
isI∆öe
()) {

95 *
	g√wOutOfLöeBôs
->
bôs
(Ë
m_bôsOrPoöãr
 & ~(
°©ic_ˇ°
<
uöçå_t
>(1Ë<< 
maxI∆öeBôs
());

96 
mem£t
(
√wOutOfLöeBôs
->
bôs
(Ë+ 1, 0, (
√wNumW‹ds
 - 1) * (*));

98 i‡(
	gnumBôs
 > 
size
()) {

99 
size_t
 
	gﬁdNumW‹ds
 = 
outOfLöeBôs
()->
numW‹ds
();

100 
mem˝y
(
√wOutOfLöeBôs
->
bôs
(), 
outOfLöeBôs
()->bôs(), 
ﬁdNumW‹ds
 * (*));

101 
mem£t
(
√wOutOfLöeBôs
->
bôs
(Ë+ 
ﬁdNumW‹ds
, 0, (
√wNumW‹ds
 - oldNumWords) * (*));

103 
mem˝y
(
√wOutOfLöeBôs
->
bôs
(), 
outOfLöeBôs
()->bôs(),ÇewOutOfLöeBôs->
numW‹ds
() * (*));

104 
	gOutOfLöeBôs
::
de°roy
(
outOfLöeBôs
());

106 
	gm_bôsOrPoöãr
 = 
bôwi£_ˇ°
<
uöçå_t
>(
√wOutOfLöeBôs
) >> 1;

109 
	gBôVe˘‹
::
mîgeSlow
(c⁄° 
BôVe˘‹
& 
Ÿhî
)

111 i‡(
Ÿhî
.
isI∆öe
()) {

112 
ASSERT
(!
isI∆öe
());

113 *
bôs
(Ë|
˛ón£I∆öeBôs
(
Ÿhî
.
m_bôsOrPoöãr
);

117 
ísuªSize
(
Ÿhî
.
size
());

118 
ASSERT
(!
isI∆öe
());

119 
ASSERT
(!
Ÿhî
.
isI∆öe
());

121 
OutOfLöeBôs
* 
	ga
 = 
outOfLöeBôs
();

122 c⁄° 
OutOfLöeBôs
* 
	gb
 = 
Ÿhî
.
outOfLöeBôs
();

123 
	gi
 = 
a
->
numW‹ds
(); i--;)

124 
	ga
->
bôs
()[
i
] |
b
->bits()[i];

127 
	gBôVe˘‹
::
fûãrSlow
(c⁄° 
BôVe˘‹
& 
Ÿhî
)

129 i‡(
Ÿhî
.
isI∆öe
()) {

130 
ASSERT
(!
isI∆öe
());

131 *
bôs
(Ë&
˛ón£I∆öeBôs
(
Ÿhî
.
m_bôsOrPoöãr
);

135 i‡(
isI∆öe
()) {

136 
ASSERT
(!
Ÿhî
.
isI∆öe
());

137 
	gm_bôsOrPoöãr
 &*
Ÿhî
.
outOfLöeBôs
()->
bôs
();

138 
	gm_bôsOrPoöãr
 |(
°©ic_ˇ°
<
uöçå_t
>(1Ë<< 
maxI∆öeBôs
());

139 
ASSERT
(
isI∆öe
());

143 
OutOfLöeBôs
* 
	ga
 = 
outOfLöeBôs
();

144 c⁄° 
OutOfLöeBôs
* 
	gb
 = 
Ÿhî
.
outOfLöeBôs
();

145 
	gi
 = 
°d
::
mö
(
a
->
numW‹ds
(), 
b
->numWords()); i--;)

146 
	ga
->
bôs
()[
i
] &
b
->bits()[i];

148 
	gi
 = 
b
->
numW‹ds
(); i < 
	ga
->numWords(); ++i)

149 
	ga
->
bôs
()[
i
] = 0;

152 
	gBôVe˘‹
::
ex˛udeSlow
(c⁄° 
BôVe˘‹
& 
Ÿhî
)

154 i‡(
Ÿhî
.
isI∆öe
()) {

155 
ASSERT
(!
isI∆öe
());

156 *
bôs
(Ë&~
˛ón£I∆öeBôs
(
Ÿhî
.
m_bôsOrPoöãr
);

160 i‡(
isI∆öe
()) {

161 
ASSERT
(!
Ÿhî
.
isI∆öe
());

162 
	gm_bôsOrPoöãr
 &~*
Ÿhî
.
outOfLöeBôs
()->
bôs
();

163 
	gm_bôsOrPoöãr
 |(
°©ic_ˇ°
<
uöçå_t
>(1Ë<< 
maxI∆öeBôs
());

164 
ASSERT
(
isI∆öe
());

168 
OutOfLöeBôs
* 
	ga
 = 
outOfLöeBôs
();

169 c⁄° 
OutOfLöeBôs
* 
	gb
 = 
Ÿhî
.
outOfLöeBôs
();

170 
	gi
 = 
°d
::
mö
(
a
->
numW‹ds
(), 
b
->numWords()); i--;)

171 
	ga
->
bôs
()[
i
] &~
b
->bits()[i];

174 
size_t
 
	gBôVe˘‹
::
bôCou¡Slow
() const

176 
ASSERT
(!
isI∆öe
());

177 c⁄° 
OutOfLöeBôs
* 
	gbôs
 = 
outOfLöeBôs
();

178 
size_t
 
	gªsu…
 = 0;

179 
	gi
 = 
bôs
->
numW‹ds
(); i--;)

180 
	gªsu…
 +
bôCou¡
(
bôs
->bôs()[
i
]);

181  
	gªsu…
;

184 
boﬁ
 
	gBôVe˘‹
::
equÆsSlowCa£
(c⁄° 
BôVe˘‹
& 
Ÿhî
) const

186 
boﬁ
 
ªsu…
 = 
equÆsSlowCa£Fa°
(
Ÿhî
);

187 
ASSERT
(
ªsu…
 =
equÆsSlowCa£Sim∂e
(
Ÿhî
));

188  
	gªsu…
;

191 
boﬁ
 
	gBôVe˘‹
::
equÆsSlowCa£Fa°
(c⁄° 
BôVe˘‹
& 
Ÿhî
) const

193 i‡(
isI∆öe
(Ë!
Ÿhî
.isInline())

194  
equÆsSlowCa£Sim∂e
(
Ÿhî
);

196 c⁄° 
OutOfLöeBôs
* 
	gmyBôs
 = 
outOfLöeBôs
();

197 c⁄° 
OutOfLöeBôs
* 
	gŸhîBôs
 = 
Ÿhî
.
outOfLöeBôs
();

199 
size_t
 
	gmyNumW‹ds
 = 
myBôs
->
numW‹ds
();

200 
size_t
 
	gŸhîNumW‹ds
 = 
ŸhîBôs
->
numW‹ds
();

201 
size_t
 
	gmöNumW‹ds
;

202 
size_t
 
	gmaxNumW‹ds
;

204 c⁄° 
OutOfLöeBôs
* 
	gl⁄gîBôs
;

205 i‡(
	gmyNumW‹ds
 < 
	gŸhîNumW‹ds
) {

206 
	gmöNumW‹ds
 = 
myNumW‹ds
;

207 
	gmaxNumW‹ds
 = 
ŸhîNumW‹ds
;

208 
	gl⁄gîBôs
 = 
ŸhîBôs
;

210 
	gmöNumW‹ds
 = 
ŸhîNumW‹ds
;

211 
	gmaxNumW‹ds
 = 
myNumW‹ds
;

212 
	gl⁄gîBôs
 = 
myBôs
;

215 
size_t
 
	gi
 = 
möNumW‹ds
; i < 
	gmaxNumW‹ds
; ++i) {

216 i‡(
	gl⁄gîBôs
->
bôs
()[
i
])

217  
	gÁl£
;

220 
size_t
 
	gi
 = 
möNumW‹ds
; i--;) {

221 i‡(
	gmyBôs
->
bôs
()[
i
] !
ŸhîBôs
->bits()[i])

222  
Ál£
;

225  
	gåue
;

228 
boﬁ
 
	gBôVe˘‹
::
equÆsSlowCa£Sim∂e
(c⁄° 
BôVe˘‹
& 
Ÿhî
) const

231 
i
 = 
°d
::
max
(
size
(), 
Ÿhî
.size()); 
	gi
--;) {

232 i‡(
gë
(
i
Ë!
Ÿhî
.get(i))

233  
Ál£
;

235  
	gåue
;

238 
uöçå_t
 
	gBôVe˘‹
::
hashSlowCa£
() const

240 
ASSERT
(!
isI∆öe
());

241 c⁄° 
OutOfLöeBôs
* 
	gbôs
 = 
outOfLöeBôs
();

242 
uöçå_t
 
	gªsu…
 = 0;

243 
	gi
 = 
bôs
->
numW‹ds
(); i--;)

244 
	gªsu…
 ^
bôs
->bôs()[
i
];

245  
	gªsu…
;

248 
	gBôVe˘‹
::
dump
(
PrötSåóm
& 
out
) const

250 
size_t
 
i
 = 0; 
	gi
 < 
size
(); ++i) {

251 i‡(
gë
(
i
))

252 
	gout
.
¥ötf
("1");

254 
	gout
.
¥ötf
("-");

	@BitVector.h

26 #i‚de‡
BôVe˘‹_h


27 
	#BôVe˘‹_h


	)

29 
	~<°dio.h
>

30 
	~<wtf/As£πi⁄s.h
>

31 
	~<wtf/D©aLog.h
>

32 
	~<wtf/HashFun˘i⁄s.h
>

33 
	~<wtf/HashTøôs.h
>

34 
	~<wtf/PrötSåóm.h
>

35 
	~<wtf/StdLibExåas.h
>

37 
«me•a˚
 
	gWTF
 {

60 ˛as†
	cBôVe˘‹
 {

61 
	gpublic
:

62 
BôVe˘‹
()

63 : 
m_bôsOrPoöãr
(
makeI∆öeBôs
(0))

67 
ex∂icô
 
BôVe˘‹
(
size_t
 
numBôs
)

68 : 
m_bôsOrPoöãr
(
makeI∆öeBôs
(0))

70 
ísuªSize
(
numBôs
);

73 
BôVe˘‹
(c⁄° BôVe˘‹& 
Ÿhî
)

74 : 
m_bôsOrPoöãr
(
makeI∆öeBôs
(0))

76 (*
this
Ë
Ÿhî
;

80 ~
BôVe˘‹
()

82 i‡(
isI∆öe
())

84 
	gOutOfLöeBôs
::
de°roy
(
outOfLöeBôs
());

87 
	gBôVe˘‹
& 
	g›î©‹
=(c⁄° 
BôVe˘‹
& 
Ÿhî
)

89 i‡(
isI∆öe
(Ë&& 
Ÿhî
.isInline())

90 
m_bôsOrPoöãr
 = 
Ÿhî
.m_bitsOrPointer;

92 
£tSlow
(
Ÿhî
);

93  *
	gthis
;

96 
size_t
 
size
() const

98 i‡(
isI∆öe
())

99  
maxI∆öeBôs
();

100  
outOfLöeBôs
()->
numBôs
();

103 
ísuªSize
(
size_t
 
numBôs
)

105 i‡(
	gnumBôs
 <
size
())

107 
ªsizeOutOfLöe
(
numBôs
);

111 
WTF_EXPORT_PRIVATE
 
ªsize
(
size_t
 
numBôs
);

113 
WTF_EXPORT_PRIVATE
 
˛órAŒ
();

115 
boﬁ
 
quickGë
(
size_t
 
bô
) const

117 
ASSERT_WITH_SECURITY_IMPLICATION
(
bô
 < 
size
());

118  !!(
bôs
()[
bô
 / 
bôsInPoöãr
()] & (
	g°©ic_ˇ°
<
	guöçå_t
>(1Ë<< (
	gbô
 & (bitsInPointer() - 1))));

121 
boﬁ
 
quickSë
(
size_t
 
bô
)

123 
ASSERT_WITH_SECURITY_IMPLICATION
(
bô
 < 
size
());

124 
	guöçå_t
& 
	gw‹d
 = 
bôs
()[
bô
 / 
bôsInPoöãr
()];

125 
uöçå_t
 
	gmask
 = 
°©ic_ˇ°
<uöçå_t>(1Ë<< (
bô
 & (
bôsInPoöãr
() - 1));

126 
boﬁ
 
	gªsu…
 = !!(
w‹d
 & 
mask
);

127 
	gw‹d
 |
mask
;

128  
	gªsu…
;

131 
boﬁ
 
quickCÀ¨
(
size_t
 
bô
)

133 
ASSERT_WITH_SECURITY_IMPLICATION
(
bô
 < 
size
());

134 
	guöçå_t
& 
	gw‹d
 = 
bôs
()[
bô
 / 
bôsInPoöãr
()];

135 
uöçå_t
 
	gmask
 = 
°©ic_ˇ°
<uöçå_t>(1Ë<< (
bô
 & (
bôsInPoöãr
() - 1));

136 
boﬁ
 
	gªsu…
 = !!(
w‹d
 & 
mask
);

137 
	gw‹d
 &~
mask
;

138  
	gªsu…
;

141 
boﬁ
 
quickSë
(
size_t
 
bô
, boﬁ 
vÆue
)

143 i‡(
	gvÆue
)

144  
quickSë
(
bô
);

145  
quickCÀ¨
(
bô
);

148 
boﬁ
 
gë
(
size_t
 
bô
) const

150 i‡(
	gbô
 >
size
())

151  
Ál£
;

152  
quickGë
(
bô
);

155 
boﬁ
 
£t
(
size_t
 
bô
)

157 
ísuªSize
(
bô
 + 1);

158  
quickSë
(
bô
);

161 
boﬁ
 
ísuªSizeAndSë
(
size_t
 
bô
, size_à
size
)

163 
ísuªSize
(
size
);

164  
quickSë
(
bô
);

167 
boﬁ
 
˛ór
(
size_t
 
bô
)

169 i‡(
	gbô
 >
size
())

170  
Ál£
;

171  
quickCÀ¨
(
bô
);

174 
boﬁ
 
£t
(
size_t
 
bô
, boﬁ 
vÆue
)

176 i‡(
	gvÆue
)

177  
£t
(
bô
);

178  
˛ór
(
bô
);

181 
mîge
(c⁄° 
BôVe˘‹
& 
Ÿhî
)

183 i‡(!
isI∆öe
(Ë|| !
	gŸhî
.isInline()) {

184 
mîgeSlow
(
Ÿhî
);

187 
	gm_bôsOrPoöãr
 |
Ÿhî
.
m_bôsOrPoöãr
;

188 
ASSERT
(
isI∆öe
());

191 
fûãr
(c⁄° 
BôVe˘‹
& 
Ÿhî
)

193 i‡(!
isI∆öe
(Ë|| !
	gŸhî
.isInline()) {

194 
fûãrSlow
(
Ÿhî
);

197 
	gm_bôsOrPoöãr
 &
Ÿhî
.
m_bôsOrPoöãr
;

198 
ASSERT
(
isI∆öe
());

201 
ex˛ude
(c⁄° 
BôVe˘‹
& 
Ÿhî
)

203 i‡(!
isI∆öe
(Ë|| !
	gŸhî
.isInline()) {

204 
ex˛udeSlow
(
Ÿhî
);

207 
	gm_bôsOrPoöãr
 &~
Ÿhî
.
m_bôsOrPoöãr
;

208 
	gm_bôsOrPoöãr
 |(
°©ic_ˇ°
<
uöçå_t
>(1Ë<< 
maxI∆öeBôs
());

209 
ASSERT
(
isI∆öe
());

212 
size_t
 
bôCou¡
() const

214 i‡(
isI∆öe
())

215  
bôCou¡
(
˛ón£I∆öeBôs
(
m_bôsOrPoöãr
));

216  
bôCou¡Slow
();

219 
size_t
 
födBô
(size_à
ödex
, 
boﬁ
 
vÆue
) const

221 
size_t
 
	gªsu…
 = 
födBôFa°
(
ödex
, 
vÆue
);

222 i‡(!
	gASSERT_DISABLED
) {

223 
size_t
 
	gex≥˘edResu…
 = 
födBôSim∂e
(
ödex
, 
vÆue
);

224 i‡(
	gªsu…
 !
ex≥˘edResu…
) {

225 
d©aLog
("födBô(", 
ödex
, ", ", 
vÆue
, "Ë⁄ ", *
this
, " should havêgŸã¿", 
ex≥˘edResu…
, " buàgŸ ", 
ªsu…
, "\n");

226 
ASSERT_NOT_REACHED
();

229  
	gªsu…
;

232 
WTF_EXPORT_PRIVATE
 
dump
(
PrötSåóm
& 
out
) const;

234 
	eEm±yVÆueTag
 { 
	gEm±yVÆue
 };

235 
	eDñëedVÆueTag
 { 
	gDñëedVÆue
 };

237 
BôVe˘‹
(
Em±yVÆueTag
)

238 : 
m_bôsOrPoöãr
(0)

242 
BôVe˘‹
(
DñëedVÆueTag
)

243 : 
m_bôsOrPoöãr
(1)

247 
boﬁ
 
isEm±yVÆue
(Ëc⁄° {  !
m_bôsOrPoöãr
; }

248 
boﬁ
 
isDñëedVÆue
(Ëc⁄° {  
	gm_bôsOrPoöãr
 == 1; }

250 
boﬁ
 
isEm±yOrDñëedVÆue
(Ëc⁄° {  
	gm_bôsOrPoöãr
 <= 1; }

252 
boﬁ
 
	g›î©‹
==(c⁄° 
BôVe˘‹
& 
Ÿhî
) const

254 i‡(
isI∆öe
(Ë&& 
Ÿhî
.isInline())

255  
m_bôsOrPoöãr
 =
Ÿhî
.m_bitsOrPointer;

256  
equÆsSlowCa£
(
Ÿhî
);

259 
hash
() const

264 
uöçå_t
 
	gvÆue
;

265 i‡(
isI∆öe
())

266 
	gvÆue
 = 
˛ón£I∆öeBôs
(
m_bôsOrPoöãr
);

268 
	gvÆue
 = 
hashSlowCa£
();

269  
	gI¡Hash
<
	guöçå_t
>::
hash
(
vÆue
);

272 
	g¥iv©e
:

273 
bôsInPoöãr
()

278 
maxI∆öeBôs
()

280  
bôsInPoöãr
() - 1;

283 
size_t
 
byãCou¡
(size_à
bôCou¡
)

285  (
	gbôCou¡
 + 7) >> 3;

288 
uöçå_t
 
makeI∆öeBôs
(uöçå_à
bôs
)

290 
ASSERT
(!(
bôs
 & (
°©ic_ˇ°
<
uöçå_t
>(1Ë<< 
maxI∆öeBôs
())));

291  
	gbôs
 | (
	g°©ic_ˇ°
<
	guöçå_t
>(1Ë<< 
maxI∆öeBôs
());

294 
uöçå_t
 
˛ón£I∆öeBôs
(uöçå_à
bôs
)

296  
	gbôs
 & ~(
	g°©ic_ˇ°
<
	guöçå_t
>(1Ë<< 
maxI∆öeBôs
());

299 
size_t
 
bôCou¡
(
uöçå_t
 
bôs
)

301 i‡((
	guöçå_t
) == 4)

302  
WTF
::
bôCou¡
(
°©ic_ˇ°
<>(
bôs
));

303  
	gWTF
::
bôCou¡
(
°©ic_ˇ°
<
uöt64_t
>(
bôs
));

306 
size_t
 
födBôFa°
(size_à
°¨tIndex
, 
boﬁ
 
vÆue
) const

308 i‡(
isI∆öe
()) {

309 
size_t
 
	gödex
 = 
°¨tIndex
;

310 
födBôInW‹d
(
m_bôsOrPoöãr
, 
ödex
, 
maxI∆öeBôs
(), 
vÆue
);

311  
	gödex
;

314 c⁄° 
OutOfLöeBôs
* 
	gbôs
 = 
outOfLöeBôs
();

318 
uöçå_t
 
	gskùVÆue
 = -(
°©ic_ˇ°
<uöçå_t>(
vÆue
) ^ 1);

319 
size_t
 
	gnumW‹ds
 = 
bôs
->
numW‹ds
();

321 
size_t
 
	gw‹dIndex
 = 
°¨tIndex
 / 
bôsInPoöãr
();

322 
size_t
 
	g°¨tIndexInW‹d
 = 
°¨tIndex
 - 
w‹dIndex
 * 
bôsInPoöãr
();

324 
	gw‹dIndex
 < 
	gnumW‹ds
) {

325 
uöçå_t
 
	gw‹d
 = 
bôs
->bôs()[
w‹dIndex
];

326 i‡(
	gw‹d
 !
skùVÆue
) {

327 
size_t
 
ödex
 = 
°¨tIndexInW‹d
;

328 i‡(
födBôInW‹d
(
w‹d
, 
ödex
, 
bôsInPoöãr
(), 
vÆue
))

329  
w‹dIndex
 * 
bôsInPoöãr
(Ë+ 
	gödex
;

332 
	gw‹dIndex
++;

333 
	g°¨tIndexInW‹d
 = 0;

336  
	gbôs
->
numBôs
();

339 
size_t
 
födBôSim∂e
(size_à
ödex
, 
boﬁ
 
vÆue
) const

341 
	gödex
 < 
size
()) {

342 i‡(
gë
(
ödex
Ë=
vÆue
)

343  
ödex
;

344 
	gödex
++;

346  
size
();

349 
boﬁ
 
födBôInW‹d
(
uöçå_t
 
w‹d
, 
size_t
& 
ödex
, size_à
ídIndex
, boﬁ 
vÆue
)

351 
	gw‹d
 >>
ödex
;

353 
	gödex
 < 
	gídIndex
) {

354 i‡((
	gw‹d
 & 1Ë=
°©ic_ˇ°
<
uöçå_t
>(
vÆue
))

355  
åue
;

356 
	gödex
++;

357 
	gw‹d
 >>= 1;

360 
	gödex
 = 
ídIndex
;

361  
	gÁl£
;

364 ˛as†
	cOutOfLöeBôs
 {

365 
	gpublic
:

366 
size_t
 
numBôs
(Ëc⁄° {  
m_numBôs
; }

367 
size_t
 
numW‹ds
(Ëc⁄° {  (
	gm_numBôs
 + 
bôsInPoöãr
() - 1) / bitsInPointer(); }

368 
uöçå_t
* 
bôs
(Ë{  
	gbôwi£_ˇ°
<
	guöçå_t
*>(
	gthis
 + 1); }

369 c⁄° 
uöçå_t
* 
bôs
(Ëc⁄° {  
	gbôwi£_ˇ°
<c⁄° 
	guöçå_t
*>(
	gthis
 + 1); }

371 
WTF_EXPORT_PRIVATE
 
OutOfLöeBôs
* 
¸óã
(
size_t
 
numBôs
);

373 
WTF_EXPORT_PRIVATE
 
de°roy
(
OutOfLöeBôs
*);

375 
	g¥iv©e
:

376 
OutOfLöeBôs
(
size_t
 
numBôs
)

377 : 
m_numBôs
(
numBôs
)

381 
size_t
 
m_numBôs
;

384 
boﬁ
 
isI∆öe
(Ëc⁄° {  
	gm_bôsOrPoöãr
 >> 
maxI∆öeBôs
(); }

386 c⁄° 
OutOfLöeBôs
* 
outOfLöeBôs
(Ëc⁄° {  
	gbôwi£_ˇ°
<c⁄° 
	gOutOfLöeBôs
*>(
	gm_bôsOrPoöãr
 << 1); }

387 
OutOfLöeBôs
* 
outOfLöeBôs
(Ë{  
	gbôwi£_ˇ°
<
	gOutOfLöeBôs
*>(
	gm_bôsOrPoöãr
 << 1); }

389 
WTF_EXPORT_PRIVATE
 
ªsizeOutOfLöe
(
size_t
 
numBôs
);

390 
WTF_EXPORT_PRIVATE
 
£tSlow
(c⁄° 
BôVe˘‹
& 
Ÿhî
);

392 
WTF_EXPORT_PRIVATE
 
mîgeSlow
(c⁄° 
BôVe˘‹
& 
Ÿhî
);

393 
WTF_EXPORT_PRIVATE
 
fûãrSlow
(c⁄° 
BôVe˘‹
& 
Ÿhî
);

394 
WTF_EXPORT_PRIVATE
 
ex˛udeSlow
(c⁄° 
BôVe˘‹
& 
Ÿhî
);

396 
WTF_EXPORT_PRIVATE
 
size_t
 
bôCou¡Slow
() const;

398 
WTF_EXPORT_PRIVATE
 
boﬁ
 
equÆsSlowCa£
(c⁄° 
BôVe˘‹
& 
Ÿhî
) const;

399 
boﬁ
 
equÆsSlowCa£Fa°
(c⁄° 
BôVe˘‹
& 
Ÿhî
) const;

400 
boﬁ
 
equÆsSlowCa£Sim∂e
(c⁄° 
BôVe˘‹
& 
Ÿhî
) const;

401 
WTF_EXPORT_PRIVATE
 
uöçå_t
 
hashSlowCa£
() const;

403 
uöçå_t
* 
bôs
()

405 i‡(
isI∆öe
())

406  &
	gm_bôsOrPoöãr
;

407  
outOfLöeBôs
()->
bôs
();

410 c⁄° 
uöçå_t
* 
bôs
() const

412 i‡(
isI∆öe
())

413  &
	gm_bôsOrPoöãr
;

414  
outOfLöeBôs
()->
bôs
();

417 
uöçå_t
 
	gm_bôsOrPoöãr
;

420 
	sBôVe˘‹Hash
 {

421 
hash
(c⁄° 
BôVe˘‹
& 
ve˘‹
Ë{  
	gve˘‹
.hash(); }

422 
boﬁ
 
equÆ
(c⁄° 
BôVe˘‹
& 
a
, c⁄° BôVe˘‹& 
b
Ë{  
	ga
 == b; }

423 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
Ál£
;

426 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gDeÁu…Hash
;

427 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	gBôVe˘‹
> {

428 
BôVe˘‹Hash
 
	tHash
;

431 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gHashTøôs
;

432 
	gãm∂©e
<> 
	gHashTøôs
<
	gBôVe˘‹
> : 
public
 
Cu°omHashTøôs
<
BôVe˘‹
> { };

436 
usög
 
	gWTF
::
BôVe˘‹
;

	@Bitmap.h

19 #i‚de‡
Bôm≠_h


20 
	#Bôm≠_h


	)

22 
	~<¨øy
>

23 
	~<wtf/Atomics.h
>

24 
	~<wtf/StdLibExåas.h
>

25 
	~<°döt.h
>

26 
	~<°rög.h
>

28 
«me•a˚
 
	gWTF
 {

30 
	eBôm≠AtomicMode
 {

32 
	gBôm≠NŸAtomic
,

36 
	gBôm≠Atomic


39 
	gãm∂©e
<
size_t
 
	gSize
, 
Bôm≠AtomicMode
 
	g©omicMode
 = 
Bôm≠NŸAtomic
, 
ty≥«me
 
	gW‹dTy≥
 = 
uöt32_t
>

40 ˛as†
	cBôm≠
 {

41 
WTF_MAKE_FAST_ALLOCATED
;

42 
	gpublic
:

43 
Bôm≠
();

45 
boﬁ
 
gë
(
size_t
) const;

46 
£t
(
size_t
);

47 
boﬁ
 
ã°AndSë
(
size_t
);

48 
boﬁ
 
ã°AndCÀ¨
(
size_t
);

49 
boﬁ
 
c⁄cuºítTe°AndSë
(
size_t
);

50 
boﬁ
 
c⁄cuºítTe°AndCÀ¨
(
size_t
);

51 
size_t
 
√xtPossiblyUn£t
(size_t) const;

52 
˛ór
(
size_t
);

53 
˛órAŒ
();

54 
öt64_t
 
födRunOfZîos
(
size_t
) const;

55 
size_t
 
cou¡
(size_t = 0) const;

56 
size_t
 
isEm±y
() const;

57 
size_t
 
isFuŒ
() const;

59 
	g¥iv©e
:

60 c⁄° 
w‹dSize
 = (
W‹dTy≥
) * 8;

61 c⁄° 
	gw‹ds
 = (
Size
 + 
w‹dSize
 - 1) / wordSize;

68 c⁄° 
W‹dTy≥
 
	g⁄e
 = 1;

70 
	g°d
::
¨øy
<
W‹dTy≥
, 
	gw‹ds
> 
	gbôs
;

73 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

74 
ölöe
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$Bôm≠
()

76 
	`˛órAŒ
();

77 
	}
}

79 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

80 
ölöe
 
boﬁ
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$gë
(
size_t
 
n
) const

82  !!(
bôs
[
n
 / 
w‹dSize
] & (
⁄e
 << (n % wordSize)));

83 
	}
}

85 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

86 
ölöe
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$£t
(
size_t
 
n
)

88 
bôs
[
n
 / 
w‹dSize
] |(
⁄e
 << (n % wordSize));

89 
	}
}

91 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

92 
ölöe
 
boﬁ
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$ã°AndSë
(
size_t
 
n
)

94 
W‹dTy≥
 
mask
 = 
⁄e
 << (
n
 % 
w‹dSize
);

95 
size_t
 
ödex
 = 
n
 / 
w‹dSize
;

96 
boﬁ
 
ªsu…
 = 
bôs
[
ödex
] & 
mask
;

97 
bôs
[
ödex
] |
mask
;

98  
ªsu…
;

99 
	}
}

101 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

102 
ölöe
 
boﬁ
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$ã°AndCÀ¨
(
size_t
 
n
)

104 
W‹dTy≥
 
mask
 = 
⁄e
 << (
n
 % 
w‹dSize
);

105 
size_t
 
ödex
 = 
n
 / 
w‹dSize
;

106 
boﬁ
 
ªsu…
 = 
bôs
[
ödex
] & 
mask
;

107 
bôs
[
ödex
] &~
mask
;

108  
ªsu…
;

109 
	}
}

111 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

112 
ölöe
 
boﬁ
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$c⁄cuºítTe°AndSë
(
size_t
 
n
)

114 i‡(
©omicMode
 =
Bôm≠NŸAtomic
)

115  
	`ã°AndSë
(
n
);

117 
	`ASSERT
(
©omicMode
 =
Bôm≠Atomic
);

119 
W‹dTy≥
 
mask
 = 
⁄e
 << (
n
 % 
w‹dSize
);

120 
size_t
 
ödex
 = 
n
 / 
w‹dSize
;

121 
W‹dTy≥
* 
w‹dPå
 = 
bôs
.
	`d©a
(Ë+ 
ödex
;

122 
W‹dTy≥
 
ﬁdVÆue
;

124 
ﬁdVÆue
 = *
w‹dPå
;

125 i‡(
ﬁdVÆue
 & 
mask
)

126  
åue
;

127 } !
	`wókCom∑ªAndSw≠
(
w‹dPå
, 
ﬁdVÆue
, oldVÆuê| 
mask
));

128  
Ál£
;

129 
	}
}

131 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

132 
ölöe
 
boﬁ
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$c⁄cuºítTe°AndCÀ¨
(
size_t
 
n
)

134 i‡(
©omicMode
 =
Bôm≠NŸAtomic
)

135  
	`ã°AndCÀ¨
(
n
);

137 
	`ASSERT
(
©omicMode
 =
Bôm≠Atomic
);

139 
W‹dTy≥
 
mask
 = 
⁄e
 << (
n
 % 
w‹dSize
);

140 
size_t
 
ödex
 = 
n
 / 
w‹dSize
;

141 
W‹dTy≥
* 
w‹dPå
 = 
bôs
.
	`d©a
(Ë+ 
ödex
;

142 
W‹dTy≥
 
ﬁdVÆue
;

144 
ﬁdVÆue
 = *
w‹dPå
;

145 i‡(!(
ﬁdVÆue
 & 
mask
))

146  
Ál£
;

147 } !
	`wókCom∑ªAndSw≠
(
w‹dPå
, 
ﬁdVÆue
, oldVÆuê& ~
mask
));

148  
åue
;

149 
	}
}

151 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

152 
ölöe
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$˛ór
(
size_t
 
n
)

154 
bôs
[
n
 / 
w‹dSize
] &~(
⁄e
 << (n % wordSize));

155 
	}
}

157 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

158 
ölöe
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$˛órAŒ
()

160 
	`mem£t
(
bôs
.
	`d©a
(), 0, (bits));

161 
	}
}

163 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

164 
ölöe
 
size_t
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$√xtPossiblyUn£t
(
size_t
 
°¨t
) const

166 i‡(!~
bôs
[
°¨t
 / 
w‹dSize
])

167  ((
°¨t
 / 
w‹dSize
) + 1) * wordSize;

168  
°¨t
 + 1;

169 
	}
}

171 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

172 
ölöe
 
öt64_t
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$födRunOfZîos
(
size_t
 
runLígth
) const

174 i‡(!
runLígth
)

175 
runLígth
 = 1;

177 
size_t
 
i
 = 0; i <(
size
 - 
runLígth
) ; i++) {

178 
boﬁ
 
found
 = 
åue
;

179 
size_t
 
j
 = 
i
; j <(ò+ 
runLígth
 - 1) ; j++) {

180 i‡(
	`gë
(
j
)) {

181 
found
 = 
Ál£
;

185 i‡(
found
)

186  
i
;

189 
	}
}

191 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

192 
ölöe
 
size_t
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$cou¡
(
size_t
 
°¨t
) const

194 
size_t
 
ªsu…
 = 0;

195  ; (
°¨t
 % 
w‹dSize
); ++start) {

196 i‡(
	`gë
(
°¨t
))

197 ++
ªsu…
;

199 
size_t
 
i
 = 
°¨t
 / 
w‹dSize
; i < 
w‹ds
; ++i)

200 
ªsu…
 +
WTF
::
	`bôCou¡
(
°©ic_ˇ°
<>(
bôs
[
i
]));

201  
ªsu…
;

202 
	}
}

204 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

205 
ölöe
 
size_t
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$isEm±y
() const

207 
size_t
 
i
 = 0; i < 
w‹ds
; ++i)

208 i‡(
bôs
[
i
])

209  
Ál£
;

210  
åue
;

211 
	}
}

213 
	gãm∂©e
<
size_t
 
	gsize
, 
Bôm≠AtomicMode
 
	g©omicMode
, 
ty≥«me
 
	gW‹dTy≥
>

214 
ölöe
 
size_t
 
	gBôm≠
<
	gsize
, 
	g©omicMode
, 
	gW‹dTy≥
>::
	$isFuŒ
() const

216 
size_t
 
i
 = 0; i < 
w‹ds
; ++i)

217 i‡(~
bôs
[
i
])

218  
Ál£
;

219  
åue
;

220 
	}
}

	@BlockStack.h

26 #i‚de‡
BlockSèck_h


27 
	#BlockSèck_h


	)

29 
	~<wtf/As£πi⁄s.h
>

30 
	~<wtf/Fa°MÆloc.h
>

31 
	~<wtf/Ve˘‹.h
>

33 
«me•a˚
 
	gWTF
 {

35 
	gãm∂©e
 <
ty≥«me
 
	gT
> cœs†
	cBlockSèck
 {

36 
	gpublic
:

37 c⁄° 
size_t
 
blockSize
 = 4096;

38 c⁄° 
size_t
 
	gblockLígth
 = 
blockSize
 / (
T
);

40 
BlockSèck
();

41 ~
BlockSèck
();

43 
T
* 
grow
();

44 
shrök
(
T
*);

46 c⁄° 
	gVe˘‹
<
	gT
*>& 
blocks
();

48 
	g¥iv©e
:

49 
Ve˘‹
<
T
*> 
m_blocks
;

50 
T
* 
	gm_•¨eBlock
;

53 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gBlockSèck
<T>::
	$BlockSèck
()

54 : 
	$m_•¨eBlock
(0)

56 
	}
}

58 
ãm∂©e
 <
ty≥«me
 
T
> 
BlockSèck
<T>::~
	$BlockSèck
()

60 i‡(
m_•¨eBlock
)

61 
	`Á°Fªe
(
m_•¨eBlock
);

62 
size_t
 
i
 = 0; i < 
m_blocks
.
	`size
(); ++i)

63 
	`Á°Fªe
(
m_blocks
[
i
]);

64 
	}
}

66 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 c⁄° 
	gVe˘‹
<T*>& 
	gBlockSèck
<T>::
	$blocks
()

68  
m_blocks
;

69 
	}
}

71 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
T
* 
	gBlockSèck
<T>::
	$grow
()

73 
T
* 
block
 = 
m_•¨eBlock
 ? m_•¨eBlock : 
°©ic_ˇ°
<T*>(
	`Á°MÆloc
(
blockSize
));

74 
m_•¨eBlock
 = 0;

76 
m_blocks
.
	`≠≥nd
(
block
);

77  
block
;

78 
	}
}

80 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gBlockSèck
<T>::
	$shrök
(
T
* 
√wEnd
)

82 
	`ASSERT
(
√wEnd
 !
m_blocks
.
	`œ°
(Ë+ 
blockLígth
);

83 
m_•¨eBlock
 = 
m_blocks
.
	`œ°
();

84 
m_blocks
.
	`ªmoveLa°
();

86 
m_blocks
.
	`œ°
(Ë+ 
blockLígth
 !
√wEnd
) {

87 
	`Á°Fªe
(
m_blocks
.
	`œ°
());

88 
m_blocks
.
	`ªmoveLa°
();

90 
	}
}

94 
usög
 
	gWTF
::
BlockSèck
;

	@BloomFilter.h

26 #i‚de‡
BloomFûãr_h


27 
	#BloomFûãr_h


	)

29 
	~<wtf/ãxt/AtomicSåög.h
>

31 
«me•a˚
 
	gWTF
 {

36 
	gãm∂©e
 <
	gkeyBôs
>

37 ˛as†
	cBloomFûãr
 {

38 
	gWTF_MAKE_FAST_ALLOCATED
;

39 
	gpublic
:

40 
°©ic_as£π
(
keyBôs
 <= 16, "BloomFilter key size must beÜessÅhan orÉqualÅo 16!");

42 c⁄° 
size_t
 
	gèbÀSize
 = 1 << 
keyBôs
;

43 c⁄° 
	gkeyMask
 = (1 << 
keyBôs
) - 1;

44 
uöt8_t
 
maximumCou¡
(Ë{  
	g°d
::
numîic_limôs
<uöt8_t>::
max
(); }

46 
BloomFûãr
(Ë{ 
˛ór
(); }

48 
add
(
hash
);

49 
ªmove
(
hash
);

53 
boﬁ
 
mayC⁄èö
(
hash
Ëc⁄° {  
fú°SlŸ
(hashË&& 
£c⁄dSlŸ
(hash); }

57 
˛ór
();

59 
add
(c⁄° 
AtomicSåög
& 
°rög
Ë{ádd(°rög.
im∂
()->
exi°ögHash
()); }

60 
add
(c⁄° 
Såög
& 
°rög
Ë{ádd(°rög.
im∂
()->
hash
()); }

61 
ªmove
(c⁄° 
AtomicSåög
& 
°rög
Ë{Ñemove(°rög.
im∂
()->
exi°ögHash
()); }

62 
ªmove
(c⁄° 
Såög
& 
°rög
Ë{Ñemove(°rög.
im∂
()->
hash
()); }

64 
boﬁ
 
mayC⁄èö
(c⁄° 
AtomicSåög
& 
°rög
Ëc⁄° {  mayC⁄èö(°rög.
im∂
()->
exi°ögHash
()); }

65 
boﬁ
 
mayC⁄èö
(c⁄° 
Såög
& 
°rög
Ëc⁄° {  mayC⁄èö(°rög.
im∂
()->
hash
()); }

67 #i‡!
ASSERT_DISABLED


69 
boﬁ
 
likñyEm±y
() const;

70 
boﬁ
 
isCÀ¨
() const;

73 
	g¥iv©e
:

74 
uöt8_t
& 
fú°SlŸ
(
hash
Ë{  
m_èbÀ
[hash & 
keyMask
]; }

75 
	guöt8_t
& 
£c⁄dSlŸ
(
hash
Ë{  
	gm_èbÀ
[(hash >> 16Ë& 
keyMask
]; }

76 c⁄° 
	guöt8_t
& 
fú°SlŸ
(
hash
Ëc⁄° {  
	gm_èbÀ
[hash & 
keyMask
]; }

77 c⁄° 
	guöt8_t
& 
£c⁄dSlŸ
(
hash
Ëc⁄° {  
	gm_èbÀ
[(hash >> 16Ë& 
keyMask
]; }

79 
uöt8_t
 
	gm_èbÀ
[
èbÀSize
];

82 
	gãm∂©e
 <
	gkeyBôs
>

83 
ölöe
 
	gBloomFûãr
<
	gkeyBôs
>::
	$add
(
hash
)

85 
uöt8_t
& 
fú°
 = 
	`fú°SlŸ
(
hash
);

86 
uöt8_t
& 
£c⁄d
 = 
	`£c⁄dSlŸ
(
hash
);

87 i‡(
	`LIKELY
(
fú°
 < 
	`maximumCou¡
()))

88 ++
fú°
;

89 i‡(
	`LIKELY
(
£c⁄d
 < 
	`maximumCou¡
()))

90 ++
£c⁄d
;

91 
	}
}

93 
	gãm∂©e
 <
	gkeyBôs
>

94 
ölöe
 
	gBloomFûãr
<
	gkeyBôs
>::
	$ªmove
(
hash
)

96 
uöt8_t
& 
fú°
 = 
	`fú°SlŸ
(
hash
);

97 
uöt8_t
& 
£c⁄d
 = 
	`£c⁄dSlŸ
(
hash
);

98 
	`ASSERT
(
fú°
);

99 
	`ASSERT
(
£c⁄d
);

101 i‡(
	`LIKELY
(
fú°
 < 
	`maximumCou¡
()))

102 --
fú°
;

103 i‡(
	`LIKELY
(
£c⁄d
 < 
	`maximumCou¡
()))

104 --
£c⁄d
;

105 
	}
}

107 
	gãm∂©e
 <
	gkeyBôs
>

108 
ölöe
 
	gBloomFûãr
<
	gkeyBôs
>::
	$˛ór
()

110 
	`mem£t
(
m_èbÀ
, 0, 
èbÀSize
);

111 
	}
}

113 #i‡!
ASSERT_DISABLED


114 
	gãm∂©e
 <
	gkeyBôs
>

115 
boﬁ
 
	gBloomFûãr
<
	gkeyBôs
>::
	$likñyEm±y
() const

117 
size_t
 
n
 = 0;Ç < 
èbÀSize
; ++n) {

118 i‡(
m_èbÀ
[
n
] && m_èbÀ[n] !
	`maximumCou¡
())

119  
Ál£
;

121  
åue
;

122 
	}
}

124 
	gãm∂©e
 <
	gkeyBôs
>

125 
boﬁ
 
	gBloomFûãr
<
	gkeyBôs
>::
	$isCÀ¨
() const

127 
size_t
 
n
 = 0;Ç < 
èbÀSize
; ++n) {

128 i‡(
m_èbÀ
[
n
])

129  
Ál£
;

131  
åue
;

132 
	}
}

137 
usög
 
	gWTF
::
BloomFûãr
;

	@BoundsCheckedPointer.h

29 #i‚de‡
WTF_BoundsCheckedPoöãr_h


30 
	#WTF_BoundsCheckedPoöãr_h


	)

32 
	~<wtf/As£πi⁄s.h
>

34 
«me•a˚
 
	gWTF
 {

44 
	gãm∂©e
<
ty≥«me
 
	gT
>

45 ˛as†
	cBoundsCheckedPoöãr
 {

46 
	gpublic
:

47 
BoundsCheckedPoöãr
()

48 : 
m_poöãr
(0)

49 #i‡!
ASSERT_DISABLED


50 , 
m_begö
(0)

51 , 
m_íd
(0)

56 
BoundsCheckedPoöãr
(
T
* 
poöãr
, 
size_t
 
numEÀmíts
)

57 : 
m_poöãr
(
poöãr
)

58 #i‡!
ASSERT_DISABLED


59 , 
m_begö
(
poöãr
)

60 , 
m_íd
(
poöãr
 + 
numEÀmíts
)

63 
UNUSED_PARAM
(
numEÀmíts
);

66 
BoundsCheckedPoöãr
(
T
* 
poöãr
, T* 
íd
)

67 : 
m_poöãr
(
poöãr
)

68 #i‡!
ASSERT_DISABLED


69 , 
m_begö
(
poöãr
)

70 , 
m_íd
(
íd
)

73 
UNUSED_PARAM
(
íd
);

76 
BoundsCheckedPoöãr
(
T
* 
poöãr
, T* 
begö
, 
size_t
 
numEÀmíts
)

77 : 
m_poöãr
(
poöãr
)

78 #i‡!
ASSERT_DISABLED


79 , 
m_begö
(
begö
)

80 , 
m_íd
(
begö
 + 
numEÀmíts
)

83 
UNUSED_PARAM
(
begö
);

84 
UNUSED_PARAM
(
numEÀmíts
);

87 
BoundsCheckedPoöãr
(
T
* 
poöãr
, T* 
begö
, T* 
íd
)

88 : 
m_poöãr
(
poöãr
)

89 #i‡!
ASSERT_DISABLED


90 , 
m_begö
(
begö
)

91 , 
m_íd
(
íd
)

94 
UNUSED_PARAM
(
begö
);

95 
UNUSED_PARAM
(
íd
);

98 
	gBoundsCheckedPoöãr
& 
	g›î©‹
=(
T
* 
vÆue
)

100 
m_poöãr
 = 
vÆue
;

101  *
	gthis
;

104 
	gBoundsCheckedPoöãr
& 
	g›î©‹
+=(
±rdiff_t
 
amou¡
)

106 
m_poöãr
 +
amou¡
;

107  *
	gthis
;

110 
	gBoundsCheckedPoöãr
& 
	g›î©‹
-=(
±rdiff_t
 
amou¡
)

112 
m_poöãr
 -
amou¡
;

113  *
	gthis
;

116 
BoundsCheckedPoöãr
 
	g›î©‹
+(
±rdiff_t
 
	gamou¡
) const

118 
BoundsCheckedPoöãr
 
	gªsu…
 = *
this
;

119 
	gªsu…
.
	gm_poöãr
 +
amou¡
;

120  
	gªsu…
;

123 
BoundsCheckedPoöãr
 
	g›î©‹
-(
±rdiff_t
 
	gamou¡
) const

125 
BoundsCheckedPoöãr
 
	gªsu…
 = *
this
;

126 
	gªsu…
.
	gm_poöãr
 -
amou¡
;

127  
	gªsu…
;

130 
BoundsCheckedPoöãr
 
	g›î©‹
++()

132 
	gm_poöãr
++;

133  *
	gthis
;

136 
BoundsCheckedPoöãr
 
	g›î©‹
--()

138 
	gm_poöãr
--;

139  *
	gthis
;

142 
BoundsCheckedPoöãr
 
	g›î©‹
++()

144 
BoundsCheckedPoöãr
 
	gªsu…
 = *
this
;

145 
	gm_poöãr
++;

146  
	gªsu…
;

149 
BoundsCheckedPoöãr
 
	g›î©‹
--()

151 
BoundsCheckedPoöãr
 
	gªsu…
 = *
this
;

152 
	gm_poöãr
--;

153  
	gªsu…
;

156 
boﬁ
 
	g›î©‹
<(
T
* 
	gŸhî
) const

158  
	gm_poöãr
 < 
	gŸhî
;

161 
boﬁ
 
	g›î©‹
<=(
T
* 
Ÿhî
) const

163  
m_poöãr
 <
Ÿhî
;

166 
boﬁ
 
	g›î©‹
>(
T
* 
	gŸhî
) const

168  
	gm_poöãr
 > 
	gŸhî
;

171 
boﬁ
 
	g›î©‹
>=(
T
* 
Ÿhî
) const

173  
m_poöãr
 >
Ÿhî
;

176 
boﬁ
 
	g›î©‹
==(
T
* 
Ÿhî
) const

178  
m_poöãr
 =
Ÿhî
;

181 
boﬁ
 
	g›î©‹
!=(
T
* 
Ÿhî
) const

183  
m_poöãr
 !
Ÿhî
;

186 
boﬁ
 
	g›î©‹
<(
BoundsCheckedPoöãr
 
	gŸhî
) const

188  
	gm_poöãr
 < 
	gŸhî
.m_pointer;

191 
boﬁ
 
	g›î©‹
<=(
BoundsCheckedPoöãr
 
Ÿhî
) const

193  
m_poöãr
 <
Ÿhî
.m_pointer;

196 
boﬁ
 
	g›î©‹
>(
BoundsCheckedPoöãr
 
	gŸhî
) const

198  
	gm_poöãr
 > 
	gŸhî
.m_pointer;

201 
boﬁ
 
	g›î©‹
>=(
BoundsCheckedPoöãr
 
Ÿhî
) const

203  
m_poöãr
 >
Ÿhî
.m_pointer;

206 
boﬁ
 
	g›î©‹
==(
BoundsCheckedPoöãr
 
Ÿhî
) const

208  
m_poöãr
 =
Ÿhî
.m_pointer;

211 
boﬁ
 
	g›î©‹
!=(
BoundsCheckedPoöãr
 
Ÿhî
) const

213  
m_poöãr
 !
Ÿhî
.m_pointer;

216 
BoundsCheckedPoöãr
 
	g›î©‹
!()

218  !
	gm_poöãr
;

221 
T
* 
gë
()

223  
	gm_poöãr
;

226 
	gT
& 
	g›î©‹
*()

228 
vÆid©e
();

229  *
	gm_poöãr
;

232 c⁄° 
	gT
& 
	g›î©‹
*() const

234 
vÆid©e
();

235  *
	gm_poöãr
;

238 
	gT
& 
	g›î©‹
[](
±rdiff_t
 
	gödex
)

240 
vÆid©e
(
m_poöãr
 + 
ödex
);

241  
	gm_poöãr
[
ödex
];

244 c⁄° 
	gT
& 
	g›î©‹
[](
±rdiff_t
 
	gödex
) const

246 
vÆid©e
(
m_poöãr
 + 
ödex
);

247  
	gm_poöãr
[
ödex
];

252 
	gBoundsCheckedPoöãr
& 
°rˇt
(c⁄° 
T
* 
sour˚
)

254 *
	gsour˚
)

255 *(*
	gthis
)++ = *
sour˚
++;

256  *
	gthis
;

259 
	g¥iv©e
:

260 
vÆid©e
(
T
* 
poöãr
) const

262 
ASSERT_UNUSED
(
poöãr
,Öoöã∏>
m_begö
);

267 
ASSERT_UNUSED
(
poöãr
,Öoöã∏+ 1 <
m_íd
);

270 
vÆid©e
() const

272 
vÆid©e
(
m_poöãr
);

275 
T
* 
	gm_poöãr
;

276 #i‡!
ASSERT_DISABLED


277 
T
* 
	gm_begö
;

278 
T
* 
	gm_íd
;

284 
usög
 
	gWTF
::
BoundsCheckedPoöãr
;

	@BumpPointerAllocator.h

26 #i‚de‡
BumpPoöãrAŒoˇt‹_h


27 
	#BumpPoöãrAŒoˇt‹_h


	)

29 
	~<Æg‹ôhm
>

30 
	~<wtf/PageAŒoˇti⁄.h
>

31 
	~<wtf/PageBlock.h
>

33 
«me•a˚
 
	gWTF
 {

35 
	#MINIMUM_BUMP_POOL_SIZE
 0x1000

	)

37 ˛as†
	cBumpPoöãrPoﬁ
 {

38 
	gpublic
:

47 
BumpPoöãrPoﬁ
* 
ísuªC≠acôy
(
size_t
 
size
)

49 * 
Æloˇti⁄End
 = 
°©ic_ˇ°
<*>(
m_cuºít
Ë+ 
size
;

50 
ASSERT_WITH_SECURITY_IMPLICATION
(
Æloˇti⁄End
 > 
m_cuºít
);

51 i‡(
	gÆloˇti⁄End
 <
°©ic_ˇ°
<*>(
this
))

52  
this
;

53  
ísuªC≠acôyCrossPoﬁ
(
this
, 
size
);

58 * 
Æloc
(
size_t
 
size
)

60 * 
	gcuºít
 = 
m_cuºít
;

61 * 
	gÆloˇti⁄End
 = 
°©ic_ˇ°
<*>(
cuºít
Ë+ 
size
;

62 
ASSERT_WITH_SECURITY_IMPLICATION
(
Æloˇti⁄End
 > 
cuºít
);

63 
ASSERT
(
Æloˇti⁄End
 <
°©ic_ˇ°
<*>(
this
));

64 
	gm_cuºít
 = 
Æloˇti⁄End
;

65  
	gcuºít
;

81 
BumpPoöãrPoﬁ
* 
dóŒoc
(* 
posôi⁄
)

83 i‡((
	gposôi⁄
 >
m_°¨t
Ë&& (
posôi⁄
 <
°©ic_ˇ°
<*>(
this
))) {

84 
ASSERT
(
posôi⁄
 <
m_cuºít
);

85 
	gm_cuºít
 = 
posôi⁄
;

86  
	gthis
;

88  
dóŒocCrossPoﬁ
(
this
, 
posôi⁄
);

91 
	g¥iv©e
:

93 * 
›î©‹
 
√w
(
size_t
 
size
, c⁄° 
PageAŒoˇti⁄
& 
Æloˇti⁄
)

95 
ASSERT
(
size
 < 
Æloˇti⁄
.size());

96  
	gªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
	göçå_t
>(
	gÆloˇti⁄
.
ba£
()Ë+áŒoˇti⁄.
size
()Ë- 
	gsize
;

99 
BumpPoöãrPoﬁ
(c⁄° 
PageAŒoˇti⁄
& 
Æloˇti⁄
)

100 : 
m_cuºít
(
Æloˇti⁄
.
ba£
())

101 , 
m_°¨t
(
Æloˇti⁄
.
ba£
())

102 , 
m_√xt
(0)

103 , 
m_¥evious
(0)

104 , 
m_Æloˇti⁄
(
Æloˇti⁄
)

108 
BumpPoöãrPoﬁ
* 
¸óã
(
size_t
 
möimumC≠acôy
 = 0)

111 
möimumC≠acôy
 +(
BumpPoöãrPoﬁ
);

112 i‡(
	gmöimumC≠acôy
 < (
	gBumpPoöãrPoﬁ
))

115 
size_t
 
	gpoﬁSize
 = 
°d
::
max
(
°©ic_ˇ°
<size_t>(
MINIMUM_BUMP_POOL_SIZE
), 
WTF
::
∑geSize
());

116 
	gpoﬁSize
 < 
	gmöimumC≠acôy
) {

117 
	gpoﬁSize
 <<= 1;

119 
ASSERT
(!(
MINIMUM_BUMP_POOL_SIZE
 & (MINIMUM_BUMP_POOL_SIZE - 1)));

120 i‡(!
	gpoﬁSize
)

124 
PageAŒoˇti⁄
 
	gÆloˇti⁄
 = PageAŒoˇti⁄::
Æloˇã
(
poﬁSize
);

125 i‡(!!
	gÆloˇti⁄
)

126  
√w
 (
Æloˇti⁄
Ë
BumpPoöãrPoﬁ
(allocation);

130 
shrök
()

132 
ASSERT
(!
m_¥evious
);

133 
	gm_cuºít
 = 
m_°¨t
;

134 
	gm_√xt
) {

135 
BumpPoöãrPoﬁ
* 
	g√xtNext
 = 
m_√xt
->m_next;

136 
	gm_√xt
->
de°roy
();

137 
	gm_√xt
 = 
√xtNext
;

141 
de°roy
()

143 
	gm_Æloˇti⁄
.
dóŒoˇã
();

146 
BumpPoöãrPoﬁ
* 
ísuªC≠acôyCrossPoﬁ
(BumpPoöãrPoﬁ* 
¥eviousPoﬁ
, 
size_t
 
size
)

149 
ASSERT
(
¥eviousPoﬁ
);

150 
ASSERT
((
°©ic_ˇ°
<*>(
¥eviousPoﬁ
->
m_cuºít
Ë+ 
size
) >ÖreviousPool->m_current);

151 
ASSERT
((
°©ic_ˇ°
<*>(
¥eviousPoﬁ
->
m_cuºít
Ë+ 
size
) > static_cast<*>(previousPool));

152 
BumpPoöãrPoﬁ
* 
	gpoﬁ
 = 
¥eviousPoﬁ
->
m_√xt
;

154 
	gåue
) {

155 i‡(!
	gpoﬁ
) {

157 
	gpoﬁ
 = 
BumpPoöãrPoﬁ
::
¸óã
(
size
);

158 
	g¥eviousPoﬁ
->
	gm_√xt
 = 
poﬁ
;

159 
	gpoﬁ
->
	gm_¥evious
 = 
¥eviousPoﬁ
;

160  
	gpoﬁ
;

164 * 
	gcuºít
 = 
poﬁ
->
m_cuºít
;

165 * 
	gÆloˇti⁄End
 = 
°©ic_ˇ°
<*>(
cuºít
Ë+ 
size
;

166 
ASSERT_WITH_SECURITY_IMPLICATION
(
Æloˇti⁄End
 > 
cuºít
);

167 i‡(
	gÆloˇti⁄End
 <
°©ic_ˇ°
<*>(
poﬁ
))

168  
poﬁ
;

172 
BumpPoöãrPoﬁ
* 
dóŒocCrossPoﬁ
(BumpPoöãrPoﬁ* 
poﬁ
, * 
posôi⁄
)

175 
ASSERT
((
posôi⁄
 < 
poﬁ
->
m_°¨t
Ë|| (posôi⁄ > 
°©ic_ˇ°
<*>(pool)));

177 
	gåue
) {

179 
	gpoﬁ
->
	gm_cuºít
 = 
poﬁ
->
m_°¨t
;

180 
	gpoﬁ
 = 
poﬁ
->
m_¥evious
;

183 i‡(!
	gpoﬁ
)

184 
CRASH
();

186 i‡((
	gposôi⁄
 >
poﬁ
->
m_°¨t
Ë&& (
posôi⁄
 <
°©ic_ˇ°
<*>(pool))) {

187 
ASSERT
(
posôi⁄
 <
poﬁ
->
m_cuºít
);

188 
	gpoﬁ
->
	gm_cuºít
 = 
posôi⁄
;

189  
	gpoﬁ
;

194 * 
	gm_cuºít
;

195 * 
	gm_°¨t
;

196 
BumpPoöãrPoﬁ
* 
	gm_√xt
;

197 
BumpPoöãrPoﬁ
* 
	gm_¥evious
;

198 
PageAŒoˇti⁄
 
	gm_Æloˇti⁄
;

200 
‰õnd
 
˛ass
 
	gBumpPoöãrAŒoˇt‹
;

218 ˛as†
	cBumpPoöãrAŒoˇt‹
 {

219 
	gpublic
:

220 
BumpPoöãrAŒoˇt‹
()

221 : 
m_hód
(0)

225 ~
BumpPoöãrAŒoˇt‹
()

227 i‡(
m_hód
)

228 
m_hód
->
de°roy
();

231 
BumpPoöãrPoﬁ
* 
°¨tAŒoˇt‹
()

233 i‡(!
	gm_hód
)

234 
	gm_hód
 = 
BumpPoöãrPoﬁ
::
¸óã
();

235  
	gm_hód
;

238 
°›AŒoˇt‹
()

240 i‡(
	gm_hód
)

241 
	gm_hód
->
shrök
();

244 
	g¥iv©e
:

245 
BumpPoöãrPoﬁ
* 
m_hód
;

250 
usög
 
	gWTF
::
BumpPoöãrAŒoˇt‹
;

	@ByteOrder.h

31 #i‚de‡
WTF_ByãOrdî_h


32 
	#WTF_ByãOrdî_h


	)

34 #i‡
OS
(
UNIX
)

35 
	~<¨∑/öë.h
>

38 #i‡
OS
(
WINDOWS
)

40 
«me•a˚
 
	gWTF
 {

41 
ölöe
 
uöt32_t
 
wsw≠32
(uöt32_à
x
Ë{  ((
	gx
 & 0xffff0000) >> 16) | ((x & 0x0000ffff) << 16); }

42 
ölöe
 
uöt32_t
 
bsw≠32
(uöt32_à
x
Ë{  ((
	gx
 & 0xff000000) >> 24) | ((x & 0x00ff0000) >> 8) | ((x & 0x0000ff00) << 8) | ((x & 0x000000ff) << 24); }

43 
ölöe
 
uöt16_t
 
bsw≠16
(uöt16_à
x
Ë{  ((
	gx
 & 0xff00) >> 8) | ((x & 0x00ff) << 8); }

46 #i‡
CPU
(
BIG_ENDIAN
)

47 
ölöe
 
uöt16_t
 
	$¡ohs
(
uöt16_t
 
x
Ë{  x; 
	}
}

48 
ölöe
 
uöt16_t
 
	$ht⁄s
(
uöt16_t
 
x
Ë{  x; 
	}
}

49 
ölöe
 
uöt32_t
 
	$¡ohl
(
uöt32_t
 
x
Ë{  x; 
	}
}

50 
ölöe
 
uöt32_t
 
	$ht⁄l
(
uöt32_t
 
x
Ë{  x; 
	}
}

51 #ñi‡
CPU
(
MIDDLE_ENDIAN
)

52 
ölöe
 
uöt16_t
 
	$¡ohs
(
uöt16_t
 
x
Ë{  x; 
	}
}

53 
ölöe
 
uöt16_t
 
	$ht⁄s
(
uöt16_t
 
x
Ë{  x; 
	}
}

54 
ölöe
 
uöt32_t
 
	$¡ohl
(
uöt32_t
 
x
Ë{  
WTF
::
	`wsw≠32
(x); 
	}
}

55 
ölöe
 
uöt32_t
 
	$ht⁄l
(
uöt32_t
 
x
Ë{  
WTF
::
	`wsw≠32
(x); 
	}
}

57 
ölöe
 
uöt16_t
 
	$¡ohs
(
uöt16_t
 
x
Ë{  
WTF
::
	`bsw≠16
(x); 
	}
}

58 
ölöe
 
uöt16_t
 
	$ht⁄s
(
uöt16_t
 
x
Ë{  
WTF
::
	`bsw≠16
(x); 
	}
}

59 
ölöe
 
uöt32_t
 
	$¡ohl
(
uöt32_t
 
x
Ë{  
WTF
::
	`bsw≠32
(x); 
	}
}

60 
ölöe
 
uöt32_t
 
	$ht⁄l
(
uöt32_t
 
x
Ë{  
WTF
::
	`bsw≠32
(x); 
	}
}

	@ByteSpinLock.h

26 #i‚de‡
ByãSpöLock_h


27 
	#ByãSpöLock_h


	)

29 
	~<thªad
>

30 
	~<wtf/As£πi⁄s.h
>

31 
	~<wtf/Atomics.h
>

32 
	~<wtf/Lockî.h
>

33 
	~<wtf/N⁄c›yabÀ.h
>

35 
«me•a˚
 
	gWTF
 {

37 ˛as†
	cByãSpöLock
 {

38 
WTF_MAKE_NONCOPYABLE
(
ByãSpöLock
);

39 
	gpublic
:

40 
ByãSpöLock
()

41 : 
m_lock
(0)

45 
lock
()

47 !
wókCom∑ªAndSw≠
(&
m_lock
, 0, 1))

48 
	g°d
::
this_thªad
::
yõld
();

49 
mem‹yB¨rõrA·îLock
();

52 
u∆ock
()

54 
mem‹yB¨rõrBef‹eU∆ock
();

55 
	gm_lock
 = 0;

58 
boﬁ
 
isHñd
(Ëc⁄° {  !!
	gm_lock
; }

60 
	g¥iv©e
:

61 
uöt8_t
 
m_lock
;

64 
	gLockî
<
	tByãSpöLock
> 
	tByãSpöLockî
;

68 
usög
 
	gWTF
::
ByãSpöLock
;

69 
usög
 
	gWTF
::
ByãSpöLockî
;

	@CheckedArithmetic.h

26 #i‚de‡
CheckedArôhmëic_h


27 
	#CheckedArôhmëic_h


	)

29 
	~<wtf/As£πi⁄s.h
>

31 
	~<limôs
>

32 
	~<°döt.h
>

33 
	~<ty≥_åaôs
>

67 
«me•a˚
 
	gWTF
 {

69 ˛as†
	cCheckedSèã
 {

70 
	gDidOvîÊow
,

71 
	gDidNŸOvîÊow


74 ˛as†
	cCøshOnOvîÊow
 {

75 
	gpublic
:

76 
NO_RETURN_DUE_TO_CRASH
 
ovîÊowed
()

78 
CRASH
();

81 
˛órOvîÊow
() { }

83 
	gpublic
:

84 
boﬁ
 
hasOvîÊowed
(Ëc⁄° {  
Ál£
; }

87 ˛as†
	cRec‹dOvîÊow
 {

88 
	g¥Ÿe˘ed
:

89 
Rec‹dOvîÊow
()

90 : 
m_ovîÊowed
(
Ál£
)

94 
ovîÊowed
()

96 
m_ovîÊowed
 = 
åue
;

99 
˛órOvîÊow
()

101 
	gm_ovîÊowed
 = 
Ál£
;

104 
	gpublic
:

105 
boﬁ
 
hasOvîÊowed
(Ëc⁄° {  
m_ovîÊowed
; }

107 
	g¥iv©e
:

108 
m_ovîÊowed
;

111 
	gãm∂©e
 <
ty≥«me
 
	gT
, 
˛ass
 
	gOvîÊowH™dÀr
 = 
CøshOnOvîÊow
> cœs†
Checked
;

112 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gRemoveChecked
;

113 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gRemoveChecked
<
	gChecked
<T>>;

115 
	gãm∂©e
 <
ty≥«me
 
	gT¨gë
,Åy≥«mê
	gSour˚
, 
boﬁ
 
	gèrgëSig√d
 = 
°d
::
numîic_limôs
<
T¨gë
>::
is_sig√d
, boﬁ 
	gsour˚Sig√d
 = std::numîic_limôs<
Sour˚
>::is_sig√d> 
BoundsCheckî
;

116 
	gãm∂©e
 <
ty≥«me
 
	gT¨gë
,Åy≥«mê
	gSour˚
> 
	gBoundsCheckî
<T¨gë, Sour˚, 
	gÁl£
, false> {

117 
boﬁ
 
öBounds
(
Sour˚
 
vÆue
)

121  
	gvÆue
 <
°d
::
numîic_limôs
<
T¨gë
>::
max
();

125 
	gãm∂©e
 <
ty≥«me
 
	gT¨gë
,Åy≥«mê
	gSour˚
> 
	gBoundsCheckî
<T¨gë, Sour˚, 
	gåue
,Årue> {

126 
boﬁ
 
öBounds
(
Sour˚
 
vÆue
)

130  
	g°d
::
numîic_limôs
<
T¨gë
>::
mö
(Ë<
vÆue
 && vÆuê<
°d
::numîic_limôs<T¨gë>::
max
();

134 
	gãm∂©e
 <
ty≥«me
 
	gT¨gë
,Åy≥«mê
	gSour˚
> 
	gBoundsCheckî
<T¨gë, Sour˚, 
	gÁl£
, 
	gåue
> {

135 
boﬁ
 
öBounds
(
Sour˚
 
vÆue
)

138 i‡(
	gvÆue
 < 0)

139  
	gÁl£
;

142 i‡((
	gT¨gë
Ë>(
Sour˚
))

143  
°©ic_ˇ°
<
T¨gë
>(
vÆue
Ë<
°d
::
numîic_limôs
<T¨gë>::
max
();

146  
	gvÆue
 <
°©ic_ˇ°
<
Sour˚
>(
°d
::
numîic_limôs
<
T¨gë
>::
max
());

150 
	gãm∂©e
 <
ty≥«me
 
	gT¨gë
,Åy≥«mê
	gSour˚
> 
	gBoundsCheckî
<T¨gë, Sour˚, 
	gåue
, 
	gÁl£
> {

151 
boﬁ
 
öBounds
(
Sour˚
 
vÆue
)

154 i‡((
	gT¨gë
Ë<(
Sour˚
))

155  
vÆue
 <
°©ic_ˇ°
<
Sour˚
>(
°d
::
numîic_limôs
<
T¨gë
>::
max
());

158  
	gåue
;

162 
	gãm∂©e
 <
ty≥«me
 
	gT¨gë
,Åy≥«mê
	gSour˚
, 
boﬁ
 
	gC™Elide
 = 
°d
::
is_ßme
<
T¨gë
, Sour˚>::
vÆue
 || ((T¨gëË> (
Sour˚
)Ë> 
BoundsCheckElidî
;

163 
	gãm∂©e
 <
ty≥«me
 
	gT¨gë
,Åy≥«mê
	gSour˚
> 
	gBoundsCheckElidî
<T¨gë, Sour˚, 
	gåue
> {

164 
boﬁ
 
öBounds
(
Sour˚
Ë{  
	gåue
; }

166 
	gãm∂©e
 <
ty≥«me
 
	gT¨gë
,Åy≥«mê
	gSour˚
> 
	gBoundsCheckElidî
<T¨gë, Sour˚, 
	gÁl£
> : 
public
 
BoundsCheckî
<
T¨gë
, Source> {

169 
	gãm∂©e
 <
ty≥«me
 
	gT¨gë
,Åy≥«mê
	gSour˚
> 
ölöe
 
boﬁ
 
	$isInBounds
(
Sour˚
 
vÆue
)

171  
BoundsCheckElidî
<
T¨gë
, 
Sour˚
>::
	`öBounds
(
vÆue
);

172 
	}
}

174 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	sRemoveChecked
 {

175 
T
 
	tCÀ™Ty≥
;

176 c⁄° 
CÀ™Ty≥
 
	gDeÁu…VÆue
 = 0;

179 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gRemoveChecked
<
	gChecked
<T, 
	gCøshOnOvîÊow
>> {

180 
ty≥«me
 
	tRemoveChecked
<
	tT
>::
	tCÀ™Ty≥
 CleanType;

181 c⁄° 
CÀ™Ty≥
 
	gDeÁu…VÆue
 = 0;

184 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gRemoveChecked
<
	gChecked
<T, 
	gRec‹dOvîÊow
>> {

185 
ty≥«me
 
	tRemoveChecked
<
	tT
>::
	tCÀ™Ty≥
 CleanType;

186 c⁄° 
CÀ™Ty≥
 
	gDeÁu…VÆue
 = 0;

191 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
, 
boﬁ
 
	guIsBiggî
 = ((
U
Ë> (
V
)), boﬁ 
	gßmeSize
 = ((UË=(V))> 
Resu…Ba£
;

192 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> 
	gResu…Ba£
<U, V, 
	gåue
, 
	gÁl£
> {

193 
U
 
	tResu…Ty≥
;

196 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> 
	gResu…Ba£
<U, V, 
	gÁl£
, false> {

197 
V
 
	tResu…Ty≥
;

200 
	gãm∂©e
 <
ty≥«me
 
	gU
> 
	gResu…Ba£
<U, U, 
	gÁl£
, 
	gåue
> {

201 
U
 
	tResu…Ty≥
;

204 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
, 
boﬁ
 
	guIsSig√d
 = 
°d
::
numîic_limôs
<
U
>::
is_sig√d
, boﬁ 
	gvIsSig√d
 = std::numîic_limôs<
V
>::is_sig√d> 
Sig√d√ssSñe˘‹
;

205 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> 
	gSig√d√ssSñe˘‹
<U, V, 
	gåue
,Årue> {

206 
U
 
	tResu…Ty≥
;

209 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> 
	gSig√d√ssSñe˘‹
<U, V, 
	gÁl£
, false> {

210 
U
 
	tResu…Ty≥
;

213 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> 
	gSig√d√ssSñe˘‹
<U, V, 
	gåue
, 
	gÁl£
> {

214 
V
 
	tResu…Ty≥
;

217 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> 
	gSig√d√ssSñe˘‹
<U, V, 
	gÁl£
, 
	gåue
> {

218 
U
 
	tResu…Ty≥
;

221 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> 
	gResu…Ba£
<U, V, 
	gÁl£
, 
	gåue
> {

222 
ty≥«me
 
	tSig√d√ssSñe˘‹
<
	tU
, 
	tV
>::
	tResu…Ty≥
 ResultType;

225 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> 
	gResu…
 : 
Resu…Ba£
<ty≥«mê
RemoveChecked
<
U
>::
CÀ™Ty≥
,Åy≥«mê
	gRemoveChecked
<V>::CleanType> {

228 
	gãm∂©e
 <
ty≥«me
 
	gLHS
,Åy≥«mê
	gRHS
,Åy≥«mê
	gResu…Ty≥
 =Åy≥«mê
Resu…
<
LHS
, RHS>::
Resu…Ty≥
,

229 
boﬁ
 
	glhsSig√d
 = 
°d
::
numîic_limôs
<
LHS
>::
is_sig√d
, boﬁ 
	grhsSig√d
 = std::numîic_limôs<
RHS
>::is_sig√d> 
ArôhmëicO≥øti⁄s
;

231 
	gãm∂©e
 <
ty≥«me
 
	gLHS
,Åy≥«mê
	gRHS
,Åy≥«mê
	gResu…Ty≥
> 
	gArôhmëicO≥øti⁄s
<LHS, RHS, Resu…Ty≥, 
	gåue
,Årue> {

235 
ölöe
 
boﬁ
 
signsM©ch
(
LHS
 
lhs
, 
RHS
 
rhs
)

237  (
	glhs
 ^ 
	grhs
) >= 0;

240 
ölöe
 
boﬁ
 
add
(
LHS
 
lhs
, 
RHS
 
rhs
, 
Resu…Ty≥
& 
ªsu…
Ë
	gWARN_UNUSED_RETURN


242 i‡(
signsM©ch
(
lhs
, 
rhs
)) {

243 i‡(
	glhs
 >= 0) {

244 i‡((
°d
::
numîic_limôs
<
Resu…Ty≥
>::
max
(Ë- 
rhs
Ë< 
lhs
)

245  
Ál£
;

247 
Resu…Ty≥
 
	gãmp
 = 
lhs
 - 
°d
::
numîic_limôs
<Resu…Ty≥>::
mö
();

248 i‡(
	grhs
 < -
	gãmp
)

249  
	gÁl£
;

252 
	gªsu…
 = 
lhs
 + 
rhs
;

253  
	gåue
;

256 
ölöe
 
boﬁ
 
sub
(
LHS
 
lhs
, 
RHS
 
rhs
, 
Resu…Ty≥
& 
ªsu…
Ë
	gWARN_UNUSED_RETURN


258 i‡(!
signsM©ch
(
lhs
, 
rhs
)) {

259 i‡(
	glhs
 >= 0) {

260 i‡(
lhs
 > 
°d
::
numîic_limôs
<
Resu…Ty≥
>::
max
(Ë+ 
rhs
)

261  
Ál£
;

263 i‡(
	grhs
 > 
	g°d
::
numîic_limôs
<
Resu…Ty≥
>::
max
(Ë+ 
lhs
)

264  
Ál£
;

267 
	gªsu…
 = 
lhs
 - 
rhs
;

268  
	gåue
;

271 
ölöe
 
boﬁ
 
mu…ùly
(
LHS
 
lhs
, 
RHS
 
rhs
, 
Resu…Ty≥
& 
ªsu…
Ë
	gWARN_UNUSED_RETURN


273 i‡(
signsM©ch
(
lhs
, 
rhs
)) {

274 i‡(
	glhs
 >= 0) {

275 i‡(
lhs
 && (
°d
::
numîic_limôs
<
Resu…Ty≥
>::
max
(Ë/ÜhsË< 
rhs
)

276  
Ál£
;

278 i‡(
	g°©ic_ˇ°
<
	gResu…Ty≥
>(
	glhs
Ë=
°d
::
numîic_limôs
<
Resu…Ty≥
>::
mö
(Ë|| 
°©ic_ˇ°
<Resu…Ty≥>(
rhs
) == std::numeric_limits<ResultType>::min())

279  
Ál£
;

280 i‡((
	g°d
::
numîic_limôs
<
Resu…Ty≥
>::
max
(Ë/ -
lhs
Ë< -
rhs
)

281  
Ál£
;

284 i‡(
	glhs
 < 0) {

285 i‡(
	grhs
 && 
	glhs
 < (
	g°d
::
numîic_limôs
<
Resu…Ty≥
>::
mö
(Ë/ 
rhs
))

286  
Ál£
;

288 i‡(
	glhs
 && 
	grhs
 < (
	g°d
::
numîic_limôs
<
Resu…Ty≥
>::
mö
(Ë/ 
lhs
))

289  
Ál£
;

292 
	gªsu…
 = 
lhs
 * 
rhs
;

293  
	gåue
;

296 
ölöe
 
boﬁ
 
equÆs
(
LHS
 
lhs
, 
RHS
 
rhs
Ë{  
	glhs
 ==Ñhs; }

300 
	gãm∂©e
 <
ty≥«me
 
	gLHS
,Åy≥«mê
	gRHS
,Åy≥«mê
	gResu…Ty≥
> 
	gArôhmëicO≥øti⁄s
<LHS, RHS, Resu…Ty≥, 
	gÁl£
, false> {

302 
ölöe
 
boﬁ
 
add
(
LHS
 
lhs
, 
RHS
 
rhs
, 
Resu…Ty≥
& 
ªsu…
Ë
	gWARN_UNUSED_RETURN


304 
Resu…Ty≥
 
	gãmp
 = 
lhs
 + 
rhs
;

305 i‡(
	gãmp
 < 
	glhs
)

306  
	gÁl£
;

307 
	gªsu…
 = 
ãmp
;

308  
	gåue
;

311 
ölöe
 
boﬁ
 
sub
(
LHS
 
lhs
, 
RHS
 
rhs
, 
Resu…Ty≥
& 
ªsu…
Ë
	gWARN_UNUSED_RETURN


313 
Resu…Ty≥
 
	gãmp
 = 
lhs
 - 
rhs
;

314 i‡(
	gãmp
 > 
	glhs
)

315  
	gÁl£
;

316 
	gªsu…
 = 
ãmp
;

317  
	gåue
;

320 
ölöe
 
boﬁ
 
mu…ùly
(
LHS
 
lhs
, 
RHS
 
rhs
, 
Resu…Ty≥
& 
ªsu…
Ë
	gWARN_UNUSED_RETURN


322 i‡(!
	glhs
 || !
	grhs
) {

323 
	gªsu…
 = 0;

324  
	gåue
;

326 i‡(
	g°d
::
numîic_limôs
<
Resu…Ty≥
>::
max
(Ë/ 
lhs
 < 
rhs
)

327  
Ál£
;

328 
	gªsu…
 = 
lhs
 * 
rhs
;

329  
	gåue
;

332 
ölöe
 
boﬁ
 
equÆs
(
LHS
 
lhs
, 
RHS
 
rhs
Ë{  
	glhs
 ==Ñhs; }

336 
	gãm∂©e
 <
ty≥«me
 
	gResu…Ty≥
> 
	gArôhmëicO≥øti⁄s
<, , Resu…Ty≥, 
	gåue
, 
	gÁl£
> {

337 
ölöe
 
boﬁ
 
add
(
öt64_t
 
lhs
, i¡64_à
rhs
, 
Resu…Ty≥
& 
ªsu…
)

339 
öt64_t
 
	gãmp
 = 
lhs
 + 
rhs
;

340 i‡(
	gãmp
 < 
	g°d
::
numîic_limôs
<
Resu…Ty≥
>::
mö
())

341  
Ál£
;

342 i‡(
	gãmp
 > 
	g°d
::
numîic_limôs
<
Resu…Ty≥
>::
max
())

343  
Ál£
;

344 
	gªsu…
 = 
°©ic_ˇ°
<
Resu…Ty≥
>(
ãmp
);

345  
	gåue
;

348 
ölöe
 
boﬁ
 
sub
(
öt64_t
 
lhs
, i¡64_à
rhs
, 
Resu…Ty≥
& 
ªsu…
)

350 
öt64_t
 
	gãmp
 = 
lhs
 - 
rhs
;

351 i‡(
	gãmp
 < 
	g°d
::
numîic_limôs
<
Resu…Ty≥
>::
mö
())

352  
Ál£
;

353 i‡(
	gãmp
 > 
	g°d
::
numîic_limôs
<
Resu…Ty≥
>::
max
())

354  
Ál£
;

355 
	gªsu…
 = 
°©ic_ˇ°
<
Resu…Ty≥
>(
ãmp
);

356  
	gåue
;

359 
ölöe
 
boﬁ
 
mu…ùly
(
öt64_t
 
lhs
, i¡64_à
rhs
, 
Resu…Ty≥
& 
ªsu…
)

361 
öt64_t
 
	gãmp
 = 
lhs
 * 
rhs
;

362 i‡(
	gãmp
 < 
	g°d
::
numîic_limôs
<
Resu…Ty≥
>::
mö
())

363  
Ál£
;

364 i‡(
	gãmp
 > 
	g°d
::
numîic_limôs
<
Resu…Ty≥
>::
max
())

365  
Ál£
;

366 
	gªsu…
 = 
°©ic_ˇ°
<
Resu…Ty≥
>(
ãmp
);

367  
	gåue
;

370 
ölöe
 
boﬁ
 
equÆs
(
lhs
, 
rhs
)

372  
	g°©ic_ˇ°
<
	göt64_t
>(
	glhs
Ë=
°©ic_ˇ°
<
öt64_t
>(
rhs
);

376 
	gãm∂©e
 <
ty≥«me
 
	gResu…Ty≥
> 
	gArôhmëicO≥øti⁄s
<, , Resu…Ty≥, 
	gÁl£
, 
	gåue
> {

377 
ölöe
 
boﬁ
 
add
(
öt64_t
 
lhs
, i¡64_à
rhs
, 
Resu…Ty≥
& 
ªsu…
)

379  
	gArôhmëicO≥øti⁄s
<, , 
	gResu…Ty≥
>::
add
(
rhs
, 
lhs
, 
ªsu…
);

382 
ölöe
 
boﬁ
 
sub
(
öt64_t
 
lhs
, i¡64_à
rhs
, 
Resu…Ty≥
& 
ªsu…
)

384  
	gArôhmëicO≥øti⁄s
<, , 
	gResu…Ty≥
>::
sub
(
lhs
, 
rhs
, 
ªsu…
);

387 
ölöe
 
boﬁ
 
mu…ùly
(
öt64_t
 
lhs
, i¡64_à
rhs
, 
Resu…Ty≥
& 
ªsu…
)

389  
	gArôhmëicO≥øti⁄s
<, , 
	gResu…Ty≥
>::
mu…ùly
(
rhs
, 
lhs
, 
ªsu…
);

392 
ölöe
 
boﬁ
 
equÆs
(
lhs
, 
rhs
)

394  
	gArôhmëicO≥øti⁄s
<, , 
	gResu…Ty≥
>::
equÆs
(
rhs
, 
lhs
);

398 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gR
> 
ölöe
 
boﬁ
 
	$ß„Add
(
U
 
lhs
, 
V
 
rhs
, 
R
& 
ªsu…
)

400  
ArôhmëicO≥øti⁄s
<
U
, 
V
, 
R
>::
	`add
(
lhs
, 
rhs
, 
ªsu…
);

401 
	}
}

403 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gR
> 
ölöe
 
boﬁ
 
	$ß„Sub
(
U
 
lhs
, 
V
 
rhs
, 
R
& 
ªsu…
)

405  
ArôhmëicO≥øti⁄s
<
U
, 
V
, 
R
>::
	`sub
(
lhs
, 
rhs
, 
ªsu…
);

406 
	}
}

408 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gR
> 
ölöe
 
boﬁ
 
	$ß„Mu…ùly
(
U
 
lhs
, 
V
 
rhs
, 
R
& 
ªsu…
)

410  
ArôhmëicO≥øti⁄s
<
U
, 
V
, 
R
>::
	`mu…ùly
(
lhs
, 
rhs
, 
ªsu…
);

411 
	}
}

413 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> 
ölöe
 
boﬁ
 
	$ß„EquÆs
(
U
 
lhs
, 
V
 
rhs
)

415  
ArôhmëicO≥øti⁄s
<
U
, 
V
>::
	`equÆs
(
lhs
, 
rhs
);

416 
	}
}

418 
	eResu…OvîÊowedTag
 { 
	gResu…OvîÊowed
 };

420 
	gãm∂©e
 <
ty≥«me
 
	gT
, 
˛ass
 
	gOvîÊowH™dÀr
> cœs†
	cChecked
 : 
public
 
OvîÊowH™dÀr
 {

421 
public
:

422 
ãm∂©e
 <
ty≥«me
 
_T
, 
˛ass
 
	g_OvîÊowH™dÀr
> 
‰õnd
 cœs†
	gChecked
;

423 
Checked
()

424 : 
m_vÆue
(0)

428 
Checked
(
Resu…OvîÊowedTag
)

429 : 
m_vÆue
(0)

431 
this
->
ovîÊowed
();

434 
	gãm∂©e
 <
ty≥«me
 
	gU
> 
Checked
(
U
 
vÆue
)

436 i‡(!
	gisInBounds
<
	gT
>(
	gvÆue
))

437 
	gthis
->
ovîÊowed
();

438 
	gm_vÆue
 = 
°©ic_ˇ°
<
T
>(
vÆue
);

441 
	gãm∂©e
 <
ty≥«me
 
	gV
> 
Checked
(c⁄° Checked<
T
, 
V
>& 
rhs
)

442 : 
m_vÆue
(
rhs
.m_value)

444 i‡(
rhs
.
hasOvîÊowed
())

445 
this
->
ovîÊowed
();

448 
	gãm∂©e
 <
ty≥«me
 
	gU
> 
Checked
(c⁄° Checked<
U
, 
OvîÊowH™dÀr
>& 
rhs
)

449 : 
OvîÊowH™dÀr
(
rhs
)

451 i‡(!
isInBounds
<
T
>(
rhs
.
m_vÆue
))

452 
this
->
ovîÊowed
();

453 
	gm_vÆue
 = 
°©ic_ˇ°
<
T
>(
rhs
.
m_vÆue
);

456 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> 
Checked
(c⁄° Checked<
U
, 
V
>& 
rhs
)

458 i‡(
	grhs
.
hasOvîÊowed
())

459 
	gthis
->
ovîÊowed
();

460 i‡(!
	gisInBounds
<
	gT
>(
	grhs
.
	gm_vÆue
))

461 
	gthis
->
ovîÊowed
();

462 
	gm_vÆue
 = 
°©ic_ˇ°
<
T
>(
rhs
.
m_vÆue
);

465 c⁄° 
	gChecked
& 
	g›î©‹
=(
Checked
 
rhs
)

467 
this
->
˛órOvîÊow
();

468 i‡(
	grhs
.
hasOvîÊowed
())

469 
	gthis
->
ovîÊowed
();

470 
	gm_vÆue
 = 
°©ic_ˇ°
<
T
>(
rhs
.
m_vÆue
);

471  *
	gthis
;

474 
	gãm∂©e
 <
ty≥«me
 
	gU
> c⁄° 
	gChecked
& 
	g›î©‹
=(
U
 
vÆue
)

476  *
this
 = 
Checked
(
vÆue
);

479 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> c⁄° 
	gChecked
& 
	g›î©‹
=(c⁄° 
Checked
<
U
, V>& 
	grhs
)

481  *
	gthis
 = 
Checked
(
rhs
);

485 c⁄° 
	gChecked
& 
	g›î©‹
++()

487 i‡(
	gm_vÆue
 =
°d
::
numîic_limôs
<
T
>::
max
())

488 
this
->
ovîÊowed
();

489 
	gm_vÆue
++;

490  *
	gthis
;

493 c⁄° 
	gChecked
& 
	g›î©‹
--()

495 i‡(
	gm_vÆue
 =
°d
::
numîic_limôs
<
T
>::
mö
())

496 
this
->
ovîÊowed
();

497 
	gm_vÆue
--;

498  *
	gthis
;

502 c⁄° 
Checked
 
	g›î©‹
++()

504 i‡(
	gm_vÆue
 =
°d
::
numîic_limôs
<
T
>::
max
())

505 
this
->
ovîÊowed
();

506  
Checked
(
m_vÆue
++);

509 c⁄° 
Checked
 
	g›î©‹
--()

511 i‡(
	gm_vÆue
 =
°d
::
numîic_limôs
<
T
>::
mö
())

512 
this
->
ovîÊowed
();

513  
Checked
(
m_vÆue
--);

517 
boﬁ
 
	g›î©‹
!() const

519 i‡(
	gthis
->
hasOvîÊowed
())

520 
CRASH
();

521  !
	gm_vÆue
;

524 * (
	tChecked
::*
	tUn•ecifõdBoﬁTy≥
);

525 
›î©‹
 
	gUn•ecifõdBoﬁTy≥
*() const

527 i‡(
	gthis
->
hasOvîÊowed
())

528 
CRASH
();

529  (
	gm_vÆue
Ë? 
	gªöãΩªt_ˇ°
<
	gUn•ecifõdBoﬁTy≥
*>(1) : 0;

533 
T
 
unß„Gë
() const

535 i‡(
	gthis
->
hasOvîÊowed
())

536 
CRASH
();

537  
	gm_vÆue
;

540 
ölöe
 
CheckedSèã
 
ß„Gë
(
T
& 
vÆue
Ëc⁄° 
	gWARN_UNUSED_RETURN


542 
	gvÆue
 = 
m_vÆue
;

543 i‡(
	gthis
->
hasOvîÊowed
())

544  
	gCheckedSèã
::
DidOvîÊow
;

545  
	gCheckedSèã
::
DidNŸOvîÊow
;

549 
	gãm∂©e
 <
ty≥«me
 
	gU
> c⁄° 
Checked
 
	g›î©‹
+=(
U
 
rhs
)

551 i‡(!
ß„Add
(
m_vÆue
, 
rhs
, m_value))

552 
this
->
ovîÊowed
();

553  *
	gthis
;

556 
	gãm∂©e
 <
ty≥«me
 
	gU
> c⁄° 
Checked
 
	g›î©‹
-=(
U
 
rhs
)

558 i‡(!
ß„Sub
(
m_vÆue
, 
rhs
, m_value))

559 
this
->
ovîÊowed
();

560  *
	gthis
;

563 
	gãm∂©e
 <
ty≥«me
 
	gU
> c⁄° 
Checked
 
	g›î©‹
*=(
U
 
rhs
)

565 i‡(!
ß„Mu…ùly
(
m_vÆue
, 
rhs
, m_value))

566 
this
->
ovîÊowed
();

567  *
	gthis
;

570 c⁄° 
Checked
 
	g›î©‹
*=(
rhs
)

572 
ªsu…
 = 
rhs
 * 
m_vÆue
;

574 i‡(!(
	g°d
::
numîic_limôs
<
T
>::
mö
(Ë<
ªsu…
 && 
°d
::numîic_limôs<T>::
max
() >=Ñesult))

575 
this
->
ovîÊowed
();

576 
	gm_vÆue
 = (
T
)
ªsu…
;

577  *
	gthis
;

580 c⁄° 
Checked
 
	g›î©‹
*=(
rhs
)

582  *
this
 *()
rhs
;

585 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> c⁄° 
Checked
 
	g›î©‹
+=(Checked<
U
, V> 
	grhs
)

587 i‡(
	grhs
.
hasOvîÊowed
())

588 
	gthis
->
ovîÊowed
();

589  *
	gthis
 +
rhs
.
m_vÆue
;

592 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> c⁄° 
Checked
 
	g›î©‹
-=(Checked<
U
, V> 
	grhs
)

594 i‡(
	grhs
.
hasOvîÊowed
())

595 
	gthis
->
ovîÊowed
();

596  *
	gthis
 -
rhs
.
m_vÆue
;

599 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> c⁄° 
Checked
 
	g›î©‹
*=(Checked<
U
, V> 
	grhs
)

601 i‡(
	grhs
.
hasOvîÊowed
())

602 
	gthis
->
ovîÊowed
();

603  *
	gthis
 *
rhs
.
m_vÆue
;

607 
	gãm∂©e
 <
ty≥«me
 
	gV
> 
boﬁ
 
	g›î©‹
==(
Checked
<
T
, V> 
	grhs
)

609  
unß„Gë
(Ë=
rhs
.unsafeGet();

612 
	gãm∂©e
 <
ty≥«me
 
	gU
> 
boﬁ
 
	g›î©‹
==(
U
 
rhs
)

614 i‡(
this
->
hasOvîÊowed
())

615 
this
->
ovîÊowed
();

616  
ß„EquÆs
(
m_vÆue
, 
rhs
);

619 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
> c⁄° 
Checked
 
	g›î©‹
==(Checked<
U
, V> 
	grhs
)

621  
unß„Gë
(Ë=
Checked
(
rhs
.unsafeGet());

624 
	gãm∂©e
 <
ty≥«me
 
	gU
> 
boﬁ
 
	g›î©‹
!=(
U
 
rhs
)

626  !(*
this
 =
rhs
);

629 
	g¥iv©e
:

631 
Checked
();

632 
Checked
();

633 
	g›î©‹
=();

634 
	g›î©‹
=();

635 
	g›î©‹
+=();

636 
	g›î©‹
+=();

637 
	g›î©‹
-=();

638 
	g›î©‹
-=();

639 
T
 
	gm_vÆue
;

642 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gOvîÊowH™dÀr
> 
ölöe
 
	gChecked
<ty≥«mê
	gResu…
<U, V>::
Resu…Ty≥
, OvîÊowH™dÀr> 
	g›î©‹
+(Checked<U, OvîÊowH™dÀr> 
	glhs
, Checked<V, OvîÊowH™dÀr> 
	grhs
)

644 
U
 
	gx
 = 0;

645 
V
 
	gy
 = 0;

646 
boﬁ
 
	govîÊowed
 = 
lhs
.
ß„Gë
(
x
Ë=
CheckedSèã
::
DidOvîÊow
 || 
rhs
.ß„Gë(
y
) == CheckedState::DidOverflow;

647 
ty≥«me
 
	gResu…
<
	gU
, 
	gV
>::
Resu…Ty≥
 
ªsu…
 = 0;

648 
	govîÊowed
 |!
ß„Add
(
x
, 
y
, 
ªsu…
);

649 i‡(
	govîÊowed
)

650  
	gResu…OvîÊowed
;

651  
	gªsu…
;

654 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gOvîÊowH™dÀr
> 
ölöe
 
	gChecked
<ty≥«mê
	gResu…
<U, V>::
Resu…Ty≥
, OvîÊowH™dÀr> 
	g›î©‹
-(Checked<U, OvîÊowH™dÀr> 
	glhs
, Checked<V, OvîÊowH™dÀr> 
	grhs
)

656 
U
 
	gx
 = 0;

657 
V
 
	gy
 = 0;

658 
boﬁ
 
	govîÊowed
 = 
lhs
.
ß„Gë
(
x
Ë=
CheckedSèã
::
DidOvîÊow
 || 
rhs
.ß„Gë(
y
) == CheckedState::DidOverflow;

659 
ty≥«me
 
	gResu…
<
	gU
, 
	gV
>::
Resu…Ty≥
 
ªsu…
 = 0;

660 
	govîÊowed
 |!
ß„Sub
(
x
, 
y
, 
ªsu…
);

661 i‡(
	govîÊowed
)

662  
	gResu…OvîÊowed
;

663  
	gªsu…
;

666 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gOvîÊowH™dÀr
> 
ölöe
 
	gChecked
<ty≥«mê
	gResu…
<U, V>::
Resu…Ty≥
, OvîÊowH™dÀr> 
	g›î©‹
*(Checked<U, OvîÊowH™dÀr> 
	glhs
, Checked<V, OvîÊowH™dÀr> 
	grhs
)

668 
U
 
	gx
 = 0;

669 
V
 
	gy
 = 0;

670 
boﬁ
 
	govîÊowed
 = 
lhs
.
ß„Gë
(
x
Ë=
CheckedSèã
::
DidOvîÊow
 || 
rhs
.ß„Gë(
y
) == CheckedState::DidOverflow;

671 
ty≥«me
 
	gResu…
<
	gU
, 
	gV
>::
Resu…Ty≥
 
ªsu…
 = 0;

672 
	govîÊowed
 |!
ß„Mu…ùly
(
x
, 
y
, 
ªsu…
);

673 i‡(
	govîÊowed
)

674  
	gResu…OvîÊowed
;

675  
	gªsu…
;

678 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gOvîÊowH™dÀr
> 
ölöe
 
	gChecked
<ty≥«mê
	gResu…
<U, V>::
Resu…Ty≥
, OvîÊowH™dÀr> 
	g›î©‹
+(Checked<U, OvîÊowH™dÀr> 
	glhs
, 
V
 
	grhs
)

680  
	glhs
 + 
	gChecked
<
	gV
, 
	gOvîÊowH™dÀr
>(
	grhs
);

683 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gOvîÊowH™dÀr
> 
ölöe
 
	gChecked
<ty≥«mê
	gResu…
<U, V>::
Resu…Ty≥
, OvîÊowH™dÀr> 
	g›î©‹
-(Checked<U, OvîÊowH™dÀr> 
	glhs
, 
V
 
	grhs
)

685  
	glhs
 - 
	gChecked
<
	gV
, 
	gOvîÊowH™dÀr
>(
	grhs
);

688 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gOvîÊowH™dÀr
> 
ölöe
 
	gChecked
<ty≥«mê
	gResu…
<U, V>::
Resu…Ty≥
, OvîÊowH™dÀr> 
	g›î©‹
*(Checked<U, OvîÊowH™dÀr> 
	glhs
, 
V
 
	grhs
)

690  
lhs
 * 
	gChecked
<
	gV
, 
	gOvîÊowH™dÀr
>(
	grhs
);

693 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gOvîÊowH™dÀr
> 
ölöe
 
	gChecked
<ty≥«mê
	gResu…
<U, V>::
Resu…Ty≥
, OvîÊowH™dÀr> 
	g›î©‹
+(
U
 
	glhs
, Checked<V, OvîÊowH™dÀr> 
	grhs
)

695  
	gChecked
<
	gU
, 
	gOvîÊowH™dÀr
>(
	glhs
Ë+ 
	grhs
;

698 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gOvîÊowH™dÀr
> 
ölöe
 
	gChecked
<ty≥«mê
	gResu…
<U, V>::
Resu…Ty≥
, OvîÊowH™dÀr> 
	g›î©‹
-(
U
 
	glhs
, Checked<V, OvîÊowH™dÀr> 
	grhs
)

700  
	gChecked
<
	gU
, 
	gOvîÊowH™dÀr
>(
	glhs
Ë- 
	grhs
;

703 
	gãm∂©e
 <
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gOvîÊowH™dÀr
> 
ölöe
 
	gChecked
<ty≥«mê
	gResu…
<U, V>::
Resu…Ty≥
, OvîÊowH™dÀr> 
	g›î©‹
*(
U
 
	glhs
, Checked<V, OvîÊowH™dÀr> 
	grhs
)

705  
	gChecked
<
	gU
, 
	gOvîÊowH™dÀr
>(
	glhs
Ë* 
	grhs
;

709 
	gChecked
<
	töt8_t
, 
	tRec‹dOvîÊow
> 
	tCheckedI¡8
;

710 
	gChecked
<
	tuöt8_t
, 
	tRec‹dOvîÊow
> 
	tCheckedUöt8
;

711 
	gChecked
<
	töt16_t
, 
	tRec‹dOvîÊow
> 
	tCheckedI¡16
;

712 
	gChecked
<
	tuöt16_t
, 
	tRec‹dOvîÊow
> 
	tCheckedUöt16
;

713 
	gChecked
<
	töt32_t
, 
	tRec‹dOvîÊow
> 
	tCheckedI¡32
;

714 
	gChecked
<
	tuöt32_t
, 
	tRec‹dOvîÊow
> 
	tCheckedUöt32
;

715 
	gChecked
<
	töt64_t
, 
	tRec‹dOvîÊow
> 
	tCheckedI¡64
;

716 
	gChecked
<
	tuöt64_t
, 
	tRec‹dOvîÊow
> 
	tCheckedUöt64
;

717 
	gChecked
<
	tsize_t
, 
	tRec‹dOvîÊow
> 
	tCheckedSize
;

719 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

720 
	gChecked
<
	gT
, 
	gRec‹dOvîÊow
> 
	$checkedSum
(
U
 
vÆue
)

722  
Checked
<
T
, 
Rec‹dOvîÊow
>(
vÆue
);

723 
	}
}

724 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
, 
	gty≥«me
... 
	gArgs
>

725 
	gChecked
<
	gT
, 
	gRec‹dOvîÊow
> 
	$checkedSum
(
U
 
vÆue
, 
Args
... 
¨gs
)

727  
Checked
<
T
, 
Rec‹dOvîÊow
>(
vÆue
Ë+ 
checkedSum
<T>(
¨gs
...);

728 
	}
}

733 
	gãm∂©e
<
ty≥«me
 
	gT
, 
	gty≥«me
... 
	gArgs
> 
boﬁ
 
	$sumOvîÊows
(
Args
... 
¨gs
)

735  
checkedSum
<
T
>(
¨gs
...).
	`hasOvîÊowed
();

736 
	}
}

740 
usög
 
	gWTF
::
Checked
;

741 
usög
 
	gWTF
::
CheckedSèã
;

742 
usög
 
	gWTF
::
Rec‹dOvîÊow
;

743 
usög
 
	gWTF
::
CheckedI¡8
;

744 
usög
 
	gWTF
::
CheckedUöt8
;

745 
usög
 
	gWTF
::
CheckedI¡16
;

746 
usög
 
	gWTF
::
CheckedUöt16
;

747 
usög
 
	gWTF
::
CheckedI¡32
;

748 
usög
 
	gWTF
::
CheckedUöt32
;

749 
usög
 
	gWTF
::
CheckedI¡64
;

750 
usög
 
	gWTF
::
CheckedUöt64
;

751 
usög
 
	gWTF
::
CheckedSize
;

752 
usög
 
	gWTF
::
checkedSum
;

753 
usög
 
	gWTF
::
sumOvîÊows
;

	@CheckedBoolean.h

26 #i‚de‡
CheckedBoﬁón_h


27 
	#CheckedBoﬁón_h


	)

29 
	~<wtf/As£πi⁄s.h
>

31 ˛as†
	cCheckedBoﬁón
 {

32 
	mpublic
:

33 #i‡!
ASSERT_DISABLED


34 
	$CheckedBoﬁón
(c⁄° 
CheckedBoﬁón
& 
Ÿhî
)

35 : 
	`m_vÆue
(
Ÿhî
.
m_vÆue
)

36 , 
	$m_checked
(
Ál£
)

38 
Ÿhî
.
m_checked
 = 
åue
;

42 
	$CheckedBoﬁón
(
boﬁ
 
vÆue
)

43 : 
	$m_vÆue
(
vÆue
)

44 #i‡!
ASSERT_DISABLED


45 , 
	$m_checked
(
Ál£
)

48 
	}
}

50 ~
	$CheckedBoﬁón
()

52 
	`ASSERT
(
m_checked
);

53 
	}
}

55 
›î©‹
 
	$boﬁ
()

57 #i‡!
ASSERT_DISABLED


58 
m_checked
 = 
åue
;

60  
m_vÆue
;

61 
	}
}

63 
	g¥iv©e
:

64 
boﬁ
 
m_vÆue
;

65 #i‡!
ASSERT_DISABLED


66 
muèbÀ
 
boﬁ
 
	gm_checked
;

	@CommaPrinter.h

26 #i‚de‡
CommaPröãr_h


27 
	#CommaPröãr_h


	)

29 
	~"PrötSåóm.h
"

31 
«me•a˚
 
	gWTF
 {

33 ˛as†
	cCommaPröãr
 {

34 
	gpublic
:

35 
CommaPröãr
(c⁄° * 
comma
 = ", ")

36 : 
m_comma
(
comma
)

37 , 
m_isFú°
(
åue
)

41 
dump
(
PrötSåóm
& 
out
) const

43 i‡(
	gm_isFú°
) {

44 
	gm_isFú°
 = 
Ál£
;

48 
	gout
.
¥öt
(
m_comma
);

51 
	g¥iv©e
:

52 c⁄° * 
m_comma
;

53 
muèbÀ
 
boﬁ
 
	gm_isFú°
;

58 
usög
 
	gWTF
::
CommaPröãr
;

	@CompilationThread.cpp

26 
	~"c⁄fig.h
"

27 
	~"Compû©i⁄Thªad.h
"

29 
	~"StdLibExåas.h
"

30 
	~"ThªadS≥cific.h
"

31 
	~"Thªadög.h
"

32 
	~<muãx
>

34 
«me•a˚
 
	gWTF
 {

36 
	gThªadS≥cific
<
	gboﬁ
>* 
	gs_isCompû©i⁄Thªad
;

38 
öôülizeCompû©i⁄Thªads
()

40 
	g°d
::
⁄˚_Êag
 
öôülizeCompû©i⁄ThªadsOn˚Fœg
;

41 
	g°d
::
ˇŒ_⁄˚
(
öôülizeCompû©i⁄ThªadsOn˚Fœg
, []{

42 
s_isCompû©i⁄Thªad
 = 
√w
 
ThªadS≥cific
<
boﬁ
>();

46 
boﬁ
 
isCompû©i⁄Thªad
()

48 i‡(!
	gs_isCompû©i⁄Thªad
)

49  
	gÁl£
;

50 i‡(!
	gs_isCompû©i⁄Thªad
->
isSë
())

51  
	gÁl£
;

52  **
	gs_isCompû©i⁄Thªad
;

55 
boﬁ
 
exch™geIsCompû©i⁄Thªad
(boﬁ 
√wVÆue
)

57 
öôülizeCompû©i⁄Thªads
();

58 
boﬁ
 
	gﬁdVÆue
 = 
isCompû©i⁄Thªad
();

59 **
	gs_isCompû©i⁄Thªad
 = 
√wVÆue
;

60  
	gﬁdVÆue
;

	@CompilationThread.h

26 #i‚de‡
Compû©i⁄Thªad_h


27 
	#Compû©i⁄Thªad_h


	)

29 
«me•a˚
 
	gWTF
 {

31 
WTF_EXPORT_PRIVATE
 
boﬁ
 
exch™geIsCompû©i⁄Thªad
(boﬁ 
√wVÆue
);

33 ˛as†
	cCompû©i⁄Sc›e
 {

34 
	gpublic
:

35 
Compû©i⁄Sc›e
()

36 : 
m_ﬁdVÆue
(
exch™geIsCompû©i⁄Thªad
(
åue
))

40 ~
Compû©i⁄Sc›e
()

42 
exch™geIsCompû©i⁄Thªad
(
m_ﬁdVÆue
);

45 
ÀaveE¨ly
()

47 
exch™geIsCompû©i⁄Thªad
(
m_ﬁdVÆue
);

49 
	g¥iv©e
:

50 
boﬁ
 
m_ﬁdVÆue
;

55 
usög
 
	gWTF
::
Compû©i⁄Sc›e
;

56 
usög
 
	gWTF
::
exch™geIsCompû©i⁄Thªad
;

	@Compiler.h

26 #i‚de‡
WTF_Compûî_h


27 
	#WTF_Compûî_h


	)

30 
	#COMPILER
(
WTF_FEATURE
Ë(
deföed
 
WTF_COMPILER_
##WTF_FEATURE && WTF_COMPILER_##WTF_FEATURE)

	)

33 
	#COMPILER_SUPPORTS
(
WTF_COMPILER_FEATURE
Ë(
deföed
 
WTF_COMPILER_SUPPORTS_
##WTF_COMPILER_FEATURE && WTF_COMPILER_SUPPORTS_##WTF_COMPILER_FEATURE)

	)

36 
	#COMPILER_QUIRK
(
WTF_COMPILER_QUIRK
Ë(
deföed
 
WTF_COMPILER_QUIRK_
##WTF_COMPILER_QUIRK && WTF_COMPILER_QUIRK_##WTF_COMPILER_QUIRK)

	)

42 #i‡
deföed
(
__˛™g__
)

43 
	#WTF_COMPILER_CLANG
 1

	)

44 
	#WTF_COMPILER_SUPPORTS_BLOCKS
 
	`__has_„©uª
(
blocks
)

	)

45 
	#WTF_COMPILER_SUPPORTS_C_STATIC_ASSERT
 
	`__has_„©uª
(
c_°©ic_as£π
)

	)

46 
	#WTF_COMPILER_SUPPORTS_CXX_CONSTEXPR
 
	`__has_„©uª
(
cxx_c⁄°ex¥
)

	)

47 
	#WTF_COMPILER_SUPPORTS_CXX_REFERENCE_QUALIFIED_FUNCTIONS
 
	`__has_„©uª
(
cxx_ª„ªn˚_quÆifõd_fun˘i⁄s
)

	)

48 
	#WTF_COMPILER_SUPPORTS_CXX_USER_LITERALS
 
	`__has_„©uª
(
cxx_u£r_lôîÆs
)

	)

49 
	#WTF_COMPILER_SUPPORTS_FALLTHROUGH_WARNINGS
 
	`__has_„©uª
(
cxx_©åibuãs
Ë&& 
	`__has_w¨nög
("-Wim∂icô-ÁŒthrough")

	)

56 #i‡
deföed
(
__GNUC__
)

57 
	#WTF_COMPILER_GCC
 1

	)

58 
	#GCC_VERSION
 (
__GNUC__
 * 10000 + 
__GNUC_MINOR__
 * 100 + 
__GNUC_PATCHLEVEL__
)

	)

59 
	#GCC_VERSION_AT_LEAST
(
maj‹
, 
mö‹
, 
∑tch
Ë(
GCC_VERSION
 >(maj‹ * 10000 + mö‹ * 100 +Ö©ch))

	)

64 #i‡!
deföed
(
GCC_VERSION_AT_LEAST
)

65 
	#GCC_VERSION_AT_LEAST
(
maj‹
, 
mö‹
, 
∑tch
Ë0

	)

68 #i‡
COMPILER
(
GCC
Ë&& !COMPILER(
CLANG
Ë&& !
GCC_VERSION_AT_LEAST
(4, 7, 0)

72 #i‡
COMPILER
(
GCC
Ë&& !COMPILER(
CLANG
)

73 
	#WTF_COMPILER_SUPPORTS_CXX_CONSTEXPR
 1

	)

74 
	#WTF_COMPILER_SUPPORTS_CXX_USER_LITERALS
 1

	)

77 #i‡!
COMPILER
(
CLANG
)

78 
	#WTF_COMPILER_QUIRK_CONSIDERS_UNREACHABLE_CODE
 1

	)

81 #i‡
COMPILER
(
GCC
Ë&& !COMPILER(
CLANG
Ë&& 
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 201112L

82 
	#WTF_COMPILER_SUPPORTS_C_STATIC_ASSERT
 1

	)

85 #i‡
COMPILER
(
GCC
Ë&& !COMPILER(
CLANG
Ë&& 
GCC_VERSION_AT_LEAST
(4, 8, 0)

86 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wmaybe-uninitialized"

89 #i‡
COMPILER
(
GCC
Ë&& !COMPILER(
CLANG
Ë&& (
deföed
(
__GXX_EXPERIMENTAL_CXX0X__
Ë|| (deföed(
__˝lu•lus
) && __cplusplus >= 201103L))

90 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wunused-local-typedefs"

95 #i‡
deföed
(
__MINGW32__
)

96 
	#WTF_COMPILER_MINGW
 1

	)

97 
	~<_mögw.h
>

104 #i‡
COMPILER
(
MINGW
Ë&& 
deföed
(
__MINGW64_VERSION_MAJOR
)

105 
	#WTF_COMPILER_MINGW64
 1

	)

110 #i‡
deföed
(
_MSC_VER
)

111 
	#WTF_COMPILER_MSVC
 1

	)

114 #i‡
deföed
(
_MSC_VER
) && _MSC_VER < 1800

120 #i‡
deföed
(
__SUNPRO_CC
Ë|| deföed(
__SUNPRO_C
)

121 
	#WTF_COMPILER_SUNCC
 1

	)

128 #i‡
deföed
(
__ARM_EABI__
Ë|| deföed(
__EABI__
)

129 
	#WTF_COMPILER_SUPPORTS_EABI
 1

	)

136 #i‡!
deföed
(
ALWAYS_INLINE
Ë&& 
COMPILER
(
GCC
Ë&& deföed(
NDEBUG
Ë&& !COMPILER(
MINGW
)

137 
	#ALWAYS_INLINE
 
ölöe
 
	`__©åibuã__
((
__Æways_ölöe__
))

	)

140 #i‡!
deföed
(
ALWAYS_INLINE
Ë&& 
COMPILER
(
MSVC
Ë&& deföed(
NDEBUG
)

141 
	#ALWAYS_INLINE
 
__f‹˚ölöe


	)

144 #i‡!
deföed
(
ALWAYS_INLINE
)

145 
	#ALWAYS_INLINE
 
ölöe


	)

150 #i‡!
deföed
(
CONSTEXPR
Ë&& 
COMPILER_SUPPORTS
(
CXX_CONSTEXPR
)

151 
	#CONSTEXPR
 
c⁄°ex¥


	)

154 #i‡!
deföed
(
CONSTEXPR
)

155 
	#CONSTEXPR


	)

160 #i‡!
deföed
(
FALLTHROUGH
Ë&& 
COMPILER_SUPPORTS
(
FALLTHROUGH_WARNINGS
Ë&& 
COMPILER
(
CLANG
)

161 
	#FALLTHROUGH
 [[
˛™g
::
ÁŒthrough
]]

	)

164 #i‡!
deföed
(
FALLTHROUGH
)

165 
	#FALLTHROUGH


	)

170 #i‡!
deföed
(
LIKELY
Ë&& 
COMPILER
(
GCC
)

171 
	#LIKELY
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 1)

	)

174 #i‡!
deföed
(
LIKELY
)

175 
	#LIKELY
(
x
Ë(x)

	)

180 #i‡!
deföed
(
NEVER_INLINE
Ë&& 
COMPILER
(
GCC
)

181 
	#NEVER_INLINE
 
	`__©åibuã__
((
__noölöe__
))

	)

184 #i‡!
deföed
(
NEVER_INLINE
Ë&& 
COMPILER
(
MSVC
)

185 
	#NEVER_INLINE
 
	`__de˛•ec
(
noölöe
)

	)

188 #i‡!
deföed
(
NEVER_INLINE
)

189 
	#NEVER_INLINE


	)

194 #i‡!
deföed
(
NO_RETURN
Ë&& 
COMPILER
(
GCC
)

195 
	#NO_RETURN
 
	`__©åibuã
((
__n‹ëu∫__
))

	)

198 #i‡!
deföed
(
NO_RETURN
Ë&& 
COMPILER
(
MSVC
)

199 
	#NO_RETURN
 
	`__de˛•ec
(
n‹ëu∫
)

	)

202 #i‡!
deföed
(
NO_RETURN
)

203 
	#NO_RETURN


	)

208 #i‡!
deföed
(
NO_RETURN_WITH_VALUE
Ë&& !
COMPILER
(
MSVC
)

209 
	#NO_RETURN_WITH_VALUE
 
NO_RETURN


	)

212 #i‡!
deföed
(
NO_RETURN_WITH_VALUE
)

213 
	#NO_RETURN_WITH_VALUE


	)

218 #i‡!
deföed
(
OBJC_CLASS
Ë&& deföed(
__OBJC__
)

219 
	#OBJC_CLASS
 @
˛ass


	)

222 #i‡!
deföed
(
OBJC_CLASS
)

223 
	#OBJC_CLASS
 
˛ass


	)

228 #i‡!
deföed
(
PURE_FUNCTION
Ë&& 
COMPILER
(
GCC
)

229 
	#PURE_FUNCTION
 
	`__©åibuã__
((
__puª__
))

	)

232 #i‡!
deföed
(
PURE_FUNCTION
)

233 
	#PURE_FUNCTION


	)

238 #i‡!
deföed
(
REFERENCED_FROM_ASM
Ë&& 
COMPILER
(
GCC
)

239 
	#REFERENCED_FROM_ASM
 
	`__©åibuã__
((
__u£d__
))

	)

242 #i‡!
deföed
(
REFERENCED_FROM_ASM
)

243 
	#REFERENCED_FROM_ASM


	)

248 #i‡!
deföed
(
UNLIKELY
Ë&& 
COMPILER
(
GCC
)

249 
	#UNLIKELY
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

252 #i‡!
deföed
(
UNLIKELY
)

253 
	#UNLIKELY
(
x
Ë(x)

	)

261 #i‡!
deföed
(
UNUSED_LABEL
Ë&& 
COMPILER
(
MSVC
)

262 
	#UNUSED_LABEL
(
œbñ
Ëi‡(
Ál£
Ë
	)
label

265 #i‡!
deföed
(
UNUSED_LABEL
)

266 
	#UNUSED_LABEL
(
œbñ
Ë
	`UNUSED_PARAM
(&&Üabñ)

	)

271 #i‡!
deföed
(
UNUSED_PARAM
Ë&& 
COMPILER
(
MSVC
)

272 
	#UNUSED_PARAM
(
v¨übÀ
Ë()&
	)
variable

275 #i‡!
deföed
(
UNUSED_PARAM
)

276 
	#UNUSED_PARAM
(
v¨übÀ
Ë()
	)
variable

281 #i‡!
deföed
(
WARN_UNUSED_RETURN
Ë&& 
COMPILER
(
GCC
)

282 
	#WARN_UNUSED_RETURN
 
	`__©åibuã__
((
__w¨n_unu£d_ªsu…__
))

	)

285 #i‡!
deföed
(
WARN_UNUSED_RETURN
)

286 
	#WARN_UNUSED_RETURN


	)

	@Compression.cpp

26 
	~"c⁄fig.h
"

27 
	~"Com¥essi⁄.h
"

29 
	~"CheckedArôhmëic.h
"

31 #i‡
USE
(
ZLIB
Ë&& !
COMPILER
(
MSVC
)

33 
	~<°rög.h
>

34 
	~<zlib.h
>

36 
«me•a˚
 
	gWTF
 {

38 * 
zAŒoc
(*, 
uöt32_t
 
cou¡
, uöt32_à
size
)

40 
CheckedSize
 
	gÆlocSize
 = 
cou¡
;

41 
	gÆlocSize
 *
size
;

42 i‡(
	gÆlocSize
.
hasOvîÊowed
())

43  
	gZ_NULL
;

44 * 
	gªsu…
 = 0;

45 i‡(
åyFa°MÆloc
(
ÆlocSize
.
unß„Gë
()).
gëVÆue
(
ªsu…
))

46  
	gªsu…
;

47  
	gZ_NULL
;

50 
zFªe
(*, * 
d©a
)

52 
Á°Fªe
(
d©a
);

55 
	g°d
::
unique_±r
<
GíîicCom¥es£dD©a
> GíîicCom¥es£dD©a::
¸óã
(c⁄° 
uöt8_t
* 
d©a
, 
size_t
 
d©aLígth
)

57 íum { 
	gMöimumSize
 = (
GíîicCom¥es£dD©a
) * 8 };

59 i‡(!
	gd©a
 || 
	gd©aLígth
 < 
	gMöimumSize
)

60  
	gnuŒ±r
;

62 
z_°ªam
 
	g°ªam
;

63 
mem£t
(&
°ªam
, 0, (stream));

64 
	g°ªam
.
	gzÆloc
 = 
zAŒoc
;

65 
	g°ªam
.
	gz‰ì
 = 
zFªe
;

66 
	g°ªam
.
	gd©a_ty≥
 = 
Z_BINARY
;

67 
	g°ªam
.
	g›aque
 = 
Z_NULL
;

68 
	g°ªam
.
	gavaû_ö
 = 
d©aLígth
;

69 
	g°ªam
.
	g√xt_ö
 = 
c⁄°_ˇ°
<
uöt8_t
*>(
d©a
);

71 
size_t
 
	gcuºítOff£t
 = 
OBJECT_OFFSETOF
(
GíîicCom¥es£dD©a
, 
m_d©a
);

72 
size_t
 
	gcuºítC≠acôy
 = 
Á°MÆlocGoodSize
(
MöimumSize
);

73 
Byãf
* 
	gcom¥es£dD©a
 = 
°©ic_ˇ°
<Byãf*>(
Á°MÆloc
(
cuºítC≠acôy
));

74 
mem£t
(
com¥es£dD©a
, 0, (
GíîicCom¥es£dD©a
));

75 
	g°ªam
.
	g√xt_out
 = 
com¥es£dD©a
 + 
cuºítOff£t
;

76 
	g°ªam
.
	gavaû_out
 = 
cuºítC≠acôy
 - 
cuºítOff£t
;

78 
deÊ©eInô
(&
°ªam
, 
Z_BEST_COMPRESSION
);

80 
	gåue
) {

81 
	gdeÊ©eResu…
 = 
deÊ©e
(&
°ªam
, 
Z_FINISH
);

82 i‡(
	gdeÊ©eResu…
 =
Z_OK
 || !
°ªam
.
avaû_out
) {

83 
size_t
 
√wC≠acôy
 = 0;

84 
	gcuºítC≠acôy
 -
°ªam
.
avaû_out
;

85 i‡(!
	g°ªam
.
	gavaû_ö
)

86 
	g√wC≠acôy
 = 
cuºítC≠acôy
 + 8;

89 
size_t
 
	gcom¥es£dC⁄ã¡
 = 
°ªam
.
√xt_ö
 - 
d©a
;

90 
	gex≥˘edSize
 = 
°©ic_ˇ°
<>(
d©aLígth
Ë* 
com¥es£dC⁄ã¡
 / 
cuºítC≠acôy
;

95 
	g√wC≠acôy
 = 
°d
::
max
(
°©ic_ˇ°
<
size_t
>(
ex≥˘edSize
 + 8), 
cuºítC≠acôy
 + 8);

97 
	g√wC≠acôy
 = 
Á°MÆlocGoodSize
(
√wC≠acôy
);

98 i‡(
	g√wC≠acôy
 >
d©aLígth
)

99 
Áû
;

100 
	gcom¥es£dD©a
 = 
°©ic_ˇ°
<
Byãf
*>(
Á°RóŒoc
(
com¥es£dD©a
, 
√wC≠acôy
));

101 
	gcuºítOff£t
 = 
cuºítC≠acôy
 - 
°ªam
.
avaû_out
;

102 
	g°ªam
.
	g√xt_out
 = 
com¥es£dD©a
 + 
cuºítOff£t
;

103 
	g°ªam
.
	gavaû_out
 = 
√wC≠acôy
 - 
cuºítC≠acôy
;

104 
	gcuºítC≠acôy
 = 
√wC≠acôy
;

108 i‡(
	gdeÊ©eResu…
 =
Z_STREAM_END
) {

109 
ASSERT
(!
°ªam
.
avaû_ö
);

113 
ASSERT_NOT_REACHED
();

114 
	gÁû
:

115 
deÊ©eEnd
(&
°ªam
);

116 
Á°Fªe
(
com¥es£dD©a
);

117  
	gnuŒ±r
;

119 
deÊ©eEnd
(&
°ªam
);

120 
öt64_t
 
	gtŸÆCom¥es£d
 = 0;

121 
öt64_t
 
	gtŸÆI≈ut
 = 0;

123 
	gtŸÆCom¥es£d
 +
cuºítC≠acôy
;

124 
	gtŸÆI≈ut
 +
d©aLígth
;

125  
	g°d
::
unique_±r
<
GíîicCom¥es£dD©a
>(
√w
 (
com¥es£dD©a
ËGíîicCom¥es£dD©a(
d©aLígth
, 
°ªam
.
tŸÆ_out
));

128 
boﬁ
 
	gGíîicCom¥es£dD©a
::
decom¥ess
(
uöt8_t
* 
de°ö©i⁄
, 
size_t
 
buf„rSize
, size_t* 
decom¥es£dByãCou¡
)

130 i‡(
	gdecom¥es£dByãCou¡
)

131 *
	gdecom¥es£dByãCou¡
 = 0;

132 
z_°ªam
 
	g°ªam
;

133 
mem£t
(&
°ªam
, 0, (stream));

134 
	g°ªam
.
	gzÆloc
 = 
zAŒoc
;

135 
	g°ªam
.
	gz‰ì
 = 
zFªe
;

136 
	g°ªam
.
	gd©a_ty≥
 = 
Z_BINARY
;

137 
	g°ªam
.
	g›aque
 = 
Z_NULL
;

138 
	g°ªam
.
	g√xt_out
 = 
de°ö©i⁄
;

139 
	g°ªam
.
	gavaû_out
 = 
buf„rSize
;

140 
	g°ªam
.
	g√xt_ö
 = 
m_d©a
;

141 
	g°ªam
.
	gavaû_ö
 = 
com¥es£dSize
();

142 i‡(
öÊ©eInô
(&
°ªam
Ë!
Z_OK
) {

143 
ASSERT_NOT_REACHED
();

144  
	gÁl£
;

147 
	göÊ©eResu…
 = 
öÊ©e
(&
°ªam
, 
Z_FINISH
);

148 
öÊ©eEnd
(&
°ªam
);

150 
ASSERT
(
°ªam
.
tŸÆ_out
 <
buf„rSize
);

151 i‡(
	gdecom¥es£dByãCou¡
)

152 *
	gdecom¥es£dByãCou¡
 = 
°ªam
.
tŸÆ_out
;

154 i‡(
	göÊ©eResu…
 !
Z_STREAM_END
) {

155 
ASSERT_NOT_REACHED
();

156  
	gÁl£
;

159  
	gåue
;

166 
«me•a˚
 
	gWTF
 {

167 
	g°d
::
unique_±r
<
GíîicCom¥es£dD©a
> GíîicCom¥es£dD©a::
¸óã
(c⁄° 
uöt8_t
*, 
size_t
)

169  
	gnuŒ±r
;

172 
boﬁ
 
	gGíîicCom¥es£dD©a
::
decom¥ess
(
uöt8_t
*, 
size_t
, size_t*)

174  
	gÁl£
;

	@Compression.h

26 #i‚de‡
Com¥essi⁄_h


27 
	#Com¥essi⁄_h


	)

29 
	~<mem‹y
>

30 
	~<wtf/Ve˘‹.h
>

32 
«me•a˚
 
	gWTF
 {

34 ˛as†
	cGíîicCom¥es£dD©a
 {

35 
WTF_MAKE_NONCOPYABLE
(
GíîicCom¥es£dD©a
)

36 
	gWTF_MAKE_FAST_ALLOCATED
;

37 
	gpublic
:

38 
WTF_EXPORT_PRIVATE
 
°d
::
unique_±r
<
GíîicCom¥es£dD©a
> 
¸óã
(c⁄° 
uöt8_t
*, 
size_t
);

39 
uöt32_t
 
com¥es£dSize
(Ëc⁄° {  
	gm_com¥es£dSize
; }

40 
uöt32_t
 
‹igöÆSize
(Ëc⁄° {  
	gm_‹igöÆSize
; }

42 
WTF_EXPORT_PRIVATE
 
boﬁ
 
decom¥ess
(
uöt8_t
* 
de°ö©i⁄
, 
size_t
 
buf„rSize
, size_t* 
decom¥es£dByãCou¡
 = 0);

44 
	g¥iv©e
:

45 
GíîicCom¥es£dD©a
(
size_t
 
‹igöÆSize
, size_à
com¥es£dSize
)

47 
UNUSED_PARAM
(
m_d©a
);

48 
ASSERT
(!
m_‹igöÆSize
);

49 
ASSERT
(!
m_com¥es£dSize
);

50 
	gm_‹igöÆSize
 = 
‹igöÆSize
;

51 
	gm_com¥es£dSize
 = 
com¥es£dSize
;

53 
uöt32_t
 
	gm_‹igöÆSize
;

54 
uöt32_t
 
	gm_com¥es£dSize
;

55 
uöt8_t
 
	gm_d©a
[1];

58 
	gãm∂©e
 <
ty≥«me
 
	gT
> cœs†
	cCom¥es£dVe˘‹
 : 
public
 
GíîicCom¥es£dD©a
 {

59 
public
:

60 
°d
::
unique_±r
<
Com¥es£dVe˘‹
> 
¸óã
(c⁄° 
Ve˘‹
<
T
>& 
sour˚
)

62 
°d
::
unique_±r
<
GíîicCom¥es£dD©a
> 
ªsu…
 = GíîicCom¥es£dD©a::
¸óã
(
ªöãΩªt_ˇ°
<c⁄° 
uöt8_t
*>(
sour˚
.
d©a
()), (
T
Ë* sour˚.
size
());

63  
	g°d
::
unique_±r
<
Com¥es£dVe˘‹
<
T
>>(
°©ic_ˇ°
<Com¥es£dVe˘‹<T>*>(
ªsu…
.
ªÀa£
()));

66 
decom¥ess
(
Ve˘‹
<
T
>& 
de°ö©i⁄
)

68 
	gVe˘‹
<
	gT
> 
ouçut
(
‹igöÆSize
(Ë/ (
T
));

69 
ASSERT
(
ouçut
.
size
(Ë* (
T
Ë=
‹igöÆSize
());

70 
size_t
 
	gdecom¥es£dByãCou¡
 = 0;

71 
	gGíîicCom¥es£dD©a
::
decom¥ess
(
ªöãΩªt_ˇ°
<
uöt8_t
*>(
ouçut
.
d©a
()), 
‹igöÆSize
(), &
decom¥es£dByãCou¡
);

72 
ASSERT
(
decom¥es£dByãCou¡
 =
‹igöÆSize
());

73 
ASSERT
(
ouçut
.
size
(Ë* (
T
Ë=
decom¥es£dByãCou¡
);

75 
	gde°ö©i⁄
.
sw≠
(
ouçut
);

78 
size_t
 
size
(Ëc⁄° {  
‹igöÆSize
(Ë/ (
	gT
); }

81 
	gãm∂©e
 <
ty≥«me
 
	gT
> cœs†
	cCom¥essibÀVe˘‹
 {

82 
WTF_MAKE_NONCOPYABLE
(
Com¥essibÀVe˘‹
)

83 
	gpublic
:

84 
Com¥essibÀVe˘‹
(
size_t
 
size
 = 0)

85 : 
m_decom¥es£dD©a
(
size
)

89 
ty≥«me
 
	tVe˘‹
<
	tT
>::
	tôî©‹
 iterator;

90 
ty≥«me
 
	tVe˘‹
<
	tT
>::
	tc⁄°_ôî©‹
 const_iterator;

92 
shrökToFô
()

94 
ASSERT
(!
m_com¥es£dD©a
);

95 
	gm_com¥es£dD©a
 = 
Com¥es£dVe˘‹
<
T
>::
¸óã
(
m_decom¥es£dD©a
);

96 i‡(
	gm_com¥es£dD©a
)

97 
	gm_decom¥es£dD©a
.
˛ór
();

99 
	gm_decom¥es£dD©a
.
shrökToFô
();

102 
size_t
 
size
()

104 i‡(
	gm_com¥es£dD©a
)

105  
	gm_com¥es£dD©a
->
size
();

106  
	gm_decom¥es£dD©a
.
size
();

109 
	gãm∂©e
 <
ty≥«me
 
	gU
> 
	gT
& 
	g›î©‹
[](
	gChecked
<U> 
	gödex
Ë{  
d©a
().
©
(
ödex
); }

110 
	gãm∂©e
 <
ty≥«me
 
	gU
> c⁄° 
	gT
& 
	g›î©‹
[](
	gChecked
<U> 
	gödex
Ëc⁄° {  
d©a
().
©
(
ödex
); }

111 
	gãm∂©e
 <
ty≥«me
 
	gU
> 
	gT
& 
©
(
Checked
<
U
> 
ödex
Ë{  
d©a
().at(index); }

112 
	gãm∂©e
 <
ty≥«me
 
	gU
> c⁄° 
	gT
& 
©
(
Checked
<
U
> 
ödex
Ëc⁄° {  
d©a
().at(index); }

114 
ôî©‹
 
begö
(Ë{  
d©a
().begin(); }

115 
ôî©‹
 
íd
(Ë{  
d©a
().end(); }

116 
c⁄°_ôî©‹
 
begö
(Ëc⁄° {  
d©a
().begin(); }

117 
c⁄°_ôî©‹
 
íd
(Ëc⁄° {  
d©a
().end(); }

119 c⁄° 
	gVe˘‹
<
	gT
>& 
d©a
() const

121 
decom¥essIfNe˚sßry
();

122  
	gm_decom¥es£dD©a
;

125 
	gVe˘‹
<
	gT
>& 
d©a
()

127 
decom¥essIfNe˚sßry
();

128  
	gm_decom¥es£dD©a
;

131 
	g¥iv©e
:

132 
decom¥essIfNe˚sßry
() const

134 i‡(!
m_com¥es£dD©a
)

136 
	gm_com¥es£dD©a
->
decom¥ess
(
m_decom¥es£dD©a
);

137 
	gm_com¥es£dD©a
 = 
nuŒ±r
;

139 
muèbÀ
 
	gVe˘‹
<
	gT
> 
	gm_decom¥es£dD©a
;

140 
muèbÀ
 
	g°d
::
unique_±r
<
Com¥es£dVe˘‹
<
T
>> 
m_com¥es£dD©a
;

145 
usög
 
	gWTF
::
GíîicCom¥es£dD©a
;

146 
usög
 
	gWTF
::
Com¥es£dVe˘‹
;

147 
usög
 
	gWTF
::
Com¥essibÀVe˘‹
;

	@CryptographicUtilities.cpp

26 
	~"c⁄fig.h
"

27 
	~"Cry±ogøphicUtûôõs.h
"

29 
«me•a˚
 
	gWTF
 {

32 
NEVER_INLINE
 
c⁄°™tTimeMemcmp
(c⁄° * 
voidA
, c⁄° * 
voidB
, 
size_t
 
Àngth
)

34 c⁄° 
uöt8_t
* 
	ga
 = 
°©ic_ˇ°
<c⁄° uöt8_t*>(
voidA
);

35 c⁄° 
uöt8_t
* 
	gb
 = 
°©ic_ˇ°
<c⁄° uöt8_t*>(
voidB
);

37 
uöt8_t
 
	gªsu…
 = 0;

38 
size_t
 
	gi
 = 0; i < 
	gÀngth
; ++i)

39 
	gªsu…
 |
a
[
i
] ^ 
b
[i];

41  
	gªsu…
;

	@CryptographicUtilities.h

26 #i‚de‡
WTF_Cry±ogøphicUtûôõs_h


27 
	#WTF_Cry±ogøphicUtûôõs_h


	)

29 
«me•a˚
 
	gWTF
 {

32 
WTF_EXPORT_PRIVATE
 
c⁄°™tTimeMemcmp
(c⁄° *, c⁄° *, 
size_t
 
Àngth
);

36 
usög
 
	gWTF
::
c⁄°™tTimeMemcmp
;

	@CryptographicallyRandomNumber.cpp

30 
	~"c⁄fig.h
"

31 
	~"Cry±ogøphiˇŒyR™domNumbî.h
"

33 
	~"NevîDe°royed.h
"

34 
	~"OSR™domSour˚.h
"

35 
	~<muãx
>

37 
«me•a˚
 
	gWTF
 {

39 
	g«me•a˚
 {

41 ˛as†
	cARC4Såóm
 {

42 
	gpublic
:

43 
ARC4Såóm
();

45 
uöt8_t
 
	gi
;

46 
uöt8_t
 
	gj
;

47 
uöt8_t
 
	gs
[256];

50 ˛as†
	cARC4R™domNumbîGíî©‹
 {

51 
	gWTF_MAKE_FAST_ALLOCATED
;

52 
	gpublic
:

53 
ARC4R™domNumbîGíî©‹
();

55 
uöt32_t
 
øndomNumbî
();

56 
øndomVÆues
(* 
buf„r
, 
size_t
 
Àngth
);

58 
	g¥iv©e
:

59 
ölöe
 
addR™domD©a
(*
d©a
, 
Àngth
);

60 
°ú
();

61 
°úIfNìded
();

62 
ölöe
 
uöt8_t
 
gëByã
();

63 
ölöe
 
uöt32_t
 
gëW‹d
();

65 
ARC4Såóm
 
	gm_°ªam
;

66 
	gm_cou¡
;

67 
	g°d
::
muãx
 
m_muãx
;

70 
	gARC4Såóm
::
ARC4Såóm
()

72 
n
 = 0; 
	gn
 < 256;Ç++)

73 
	gs
[
n
] =Ç;

74 
	gi
 = 0;

75 
	gj
 = 0;

78 
	gARC4R™domNumbîGíî©‹
::
ARC4R™domNumbîGíî©‹
()

79 : 
m_cou¡
(0)

83 
ARC4R™domNumbîGíî©‹
::
addR™domD©a
(* 
d©a
, 
Àngth
)

85 
	gm_°ªam
.
	gi
--;

86 
	gn
 = 0;Ç < 256;Ç++) {

87 
	gm_°ªam
.
	gi
++;

88 
uöt8_t
 
	gsi
 = 
m_°ªam
.
s
[m_°ªam.
i
];

89 
	gm_°ªam
.
	gj
 +
si
 + 
d©a
[
n
 % 
Àngth
];

90 
	gm_°ªam
.
	gs
[
m_°ªam
.
i
] = m_°ªam.
s
[m_°ªam.
j
];

91 
	gm_°ªam
.
	gs
[
m_°ªam
.
j
] = 
si
;

93 
	gm_°ªam
.
	gj
 = 
m_°ªam
.
i
;

96 
	gARC4R™domNumbîGíî©‹
::
°ú
()

98 
øndom√ss
[128];

99 
size_t
 
	gÀngth
 = (
øndom√ss
);

100 
¸y±ogøphiˇŒyR™domVÆuesFromOS
(
øndom√ss
, 
Àngth
);

101 
addR™domD©a
(
øndom√ss
, 
Àngth
);

105 
	gi
 = 0; i < 256; i++)

106 
gëByã
();

107 
	gm_cou¡
 = 1600000;

110 
	gARC4R™domNumbîGíî©‹
::
°úIfNìded
()

112 i‡(
m_cou¡
 <= 0)

113 
°ú
();

116 
uöt8_t
 
	gARC4R™domNumbîGíî©‹
::
gëByã
()

118 
m_°ªam
.
i
++;

119 
uöt8_t
 
	gsi
 = 
m_°ªam
.
s
[m_°ªam.
i
];

120 
	gm_°ªam
.
	gj
 +
si
;

121 
uöt8_t
 
	gsj
 = 
m_°ªam
.
s
[m_°ªam.
j
];

122 
	gm_°ªam
.
	gs
[
m_°ªam
.
i
] = 
sj
;

123 
	gm_°ªam
.
	gs
[
m_°ªam
.
j
] = 
si
;

124  (
	gm_°ªam
.
	gs
[(
si
 + 
sj
) & 0xff]);

127 
uöt32_t
 
	gARC4R™domNumbîGíî©‹
::
gëW‹d
()

129 
uöt32_t
 
vÆ
;

130 
	gvÆ
 = 
gëByã
() << 24;

131 
	gvÆ
 |
gëByã
() << 16;

132 
	gvÆ
 |
gëByã
() << 8;

133 
	gvÆ
 |
gëByã
();

134  
	gvÆ
;

137 
uöt32_t
 
	gARC4R™domNumbîGíî©‹
::
øndomNumbî
()

139 
°d
::
lock_gu¨d
<°d::
muãx
> 
lock
(
m_muãx
);

141 
	gm_cou¡
 -= 4;

142 
°úIfNìded
();

143  
gëW‹d
();

146 
	gARC4R™domNumbîGíî©‹
::
øndomVÆues
(* 
buf„r
, 
size_t
 
Àngth
)

148 
	g°d
::
lock_gu¨d
<
°d
::
muãx
> 
lock
(
m_muãx
);

150 * 
	gªsu…
 = 
ªöãΩªt_ˇ°
<*>(
buf„r
);

151 
°úIfNìded
();

152 
	gÀngth
--) {

153 
	gm_cou¡
--;

154 
°úIfNìded
();

155 
	gªsu…
[
Àngth
] = 
gëByã
();

159 
	gARC4R™domNumbîGíî©‹
& 
sh¨edR™domNumbîGíî©‹
()

161 
	gNevîDe°royed
<
	gARC4R™domNumbîGíî©‹
> 
	gøndomNumbîGíî©‹
;

163  
	gøndomNumbîGíî©‹
;

168 
uöt32_t
 
	$¸y±ogøphiˇŒyR™domNumbî
()

170  
	`sh¨edR™domNumbîGíî©‹
().
	`øndomNumbî
();

171 
	}
}

173 
	$¸y±ogøphiˇŒyR™domVÆues
(* 
buf„r
, 
size_t
 
Àngth
)

175 
	`sh¨edR™domNumbîGíî©‹
().
	`øndomVÆues
(
buf„r
, 
Àngth
);

176 
	}
}

	@CryptographicallyRandomNumber.h

26 #i‚de‡
WTF_Cry±ogøphiˇŒyR™domNumbî_h


27 
	#WTF_Cry±ogøphiˇŒyR™domNumbî_h


	)

29 
	~<°döt.h
>

31 
«me•a˚
 
	gWTF
 {

33 
WTF_EXPORT_PRIVATE
 
uöt32_t
 
¸y±ogøphiˇŒyR™domNumbî
();

34 
WTF_EXPORT_PRIVATE
 
¸y±ogøphiˇŒyR™domVÆues
(* 
buf„r
, 
size_t
 
Àngth
);

38 
usög
 
	gWTF
::
¸y±ogøphiˇŒyR™domNumbî
;

39 
usög
 
	gWTF
::
¸y±ogøphiˇŒyR™domVÆues
;

	@CurrentTime.cpp

34 
	~"c⁄fig.h
"

35 
	~"CuºítTime.h
"

37 #i‡
OS
(
DARWIN
)

38 
	~<mach/mach.h
>

39 
	~<mach/mach_time.h
>

40 
	~<muãx
>

41 
	~<sys/time.h
>

42 #ñi‡
OS
(
WINDOWS
)

47 #unde‡
WIN32_LEAN_AND_MEAN


48 
	~<wödows.h
>

49 
	~<m©h.h
>

50 
	~<°döt.h
>

51 
	~<time.h
>

53 #ñi‡
PLATFORM
(
EFL
)

54 
	~<Ec‹e.h
>

56 
	~<sys/time.h
>

59 #i‡
USE
(
GLIB
Ë&& !
PLATFORM
(
EFL
)

60 
	~<glib.h
>

63 
«me•a˚
 
	gWTF
 {

65 #i‡
OS
(
WINDOWS
)

68 c⁄° 
ULONGLONG
 
	gïochBüs
 = 116444736000000000ULL;

69 c⁄° 
	ghundªdsOfN™o£c⁄dsPîMûli£c⁄d
 = 10000;

71 
lowResUTCTime
()

73 
FILETIME
 
	gfûeTime
;

75 
GëSy°emTimeAsFûeTime
(&
fûeTime
);

81 
ULARGE_INTEGER
 
	gd©eTime
;

82 
mem˝y
(&
d©eTime
, &
fûeTime
, (dateTime));

85  (
	gd©eTime
.
	gQuadP¨t
 - 
	gïochBüs
Ë/ 
	ghundªdsOfN™o£c⁄dsPîMûli£c⁄d
;

88 #i‡
USE
(
QUERY_PERFORMANCE_COUNTER
)

90 
LARGE_INTEGER
 
	gqpcFªquícy
;

91 
boﬁ
 
	gsyn˚dTime
;

93 
highResUpTime
()

100 
LARGE_INTEGER
 
	gqpcLa°
;

101 
DWORD
 
	gtickCou¡La°
;

102 
boﬁ
 
	göôed
;

104 
LARGE_INTEGER
 
	gqpc
;

105 
QuîyPîf‹m™˚Cou¡î
(&
qpc
);

106 #i‡
deföed
(
_M_IX86
Ë|| deföed(
__i386__
)

107 
DWORD
 
	gtickCou¡
 = 
GëTickCou¡
();

109 
ULONGLONG
 
	gtickCou¡
 = 
GëTickCou¡64
();

112 i‡(
	göôed
) {

113 
__öt64
 
	gqpcEœp£d
 = ((
qpc
.
QuadP¨t
 - 
qpcLa°
.QuadP¨tË* 1000Ë/ 
qpcFªquícy
.QuadPart;

114 
__öt64
 
	gtickCou¡Eœp£d
;

115 i‡(
	gtickCou¡
 >
tickCou¡La°
)

116 
tickCou¡Eœp£d
 = (
tickCou¡
 - 
tickCou¡La°
);

118 #i‡
COMPILER
(
MINGW
)

119 
__öt64
 
	gtickCou¡L¨ge
 = 
tickCou¡
 + 0x100000000ULL;

121 
__öt64
 
	gtickCou¡L¨ge
 = 
tickCou¡
 + 0x100000000
I64
;

123 
	gtickCou¡Eœp£d
 = 
tickCou¡L¨ge
 - 
tickCou¡La°
;

128 
__öt64
 
	gdiff
 = 
tickCou¡Eœp£d
 - 
qpcEœp£d
;

129 i‡(
	gdiff
 > 500 || diff < -500)

130 
	gsyn˚dTime
 = 
Ál£
;

132 
	göôed
 = 
åue
;

134 
	gqpcLa°
 = 
qpc
;

135 
	gtickCou¡La°
 = 
tickCou¡
;

137  (1000.0 * 
	gqpc
.
	gQuadP¨t
Ë/ 
	g°©ic_ˇ°
<>(
	gqpcFªquícy
.QuadPart);

140 
boﬁ
 
qpcAvaûabÀ
()

142 
boﬁ
 
	gavaûabÀ
;

143 
boﬁ
 
	gchecked
;

145 i‡(
	gchecked
)

146  
	gavaûabÀ
;

148 
	gavaûabÀ
 = 
QuîyPîf‹m™˚Fªquícy
(&
qpcFªquícy
);

149 
	gchecked
 = 
åue
;

150  
	gavaûabÀ
;

153 
cuºítTime
()

160 
	gsyncLowResUTCTime
;

161 
	gsyncHighResUpTime
;

162 
	gœ°UTCTime
;

164 
	glowResTime
 = 
lowResUTCTime
();

166 i‡(!
qpcAvaûabÀ
())

167  
	glowResTime
 / 1000.0;

169 
	ghighResTime
 = 
highResUpTime
();

171 i‡(!
	gsyn˚dTime
) {

172 
timeBegöPîiod
(1);

173 
	gsyncLowResUTCTime
 = 
lowResTime
 = 
lowResUTCTime
();

174 
timeEndPîiod
(1);

175 
	gsyncHighResUpTime
 = 
highResTime
;

176 
	gsyn˚dTime
 = 
åue
;

179 
	ghighResEœp£d
 = 
highResTime
 - 
syncHighResUpTime
;

180 
	gutc
 = 
syncLowResUTCTime
 + 
highResEœp£d
;

183 
	glowResEœp£d
 = 
lowResTime
 - 
syncLowResUTCTime
;

184 c⁄° 
	gmaximumAŒowedDri·M£c
 = 15.625 * 2.0;

185 i‡(
Ábs
(
highResEœp£d
 - 
lowResEœp£d
Ë> 
	gmaximumAŒowedDri·M£c
)

186 
	gsyn˚dTime
 = 
Ál£
;

189 c⁄° 
	gbackw¨dTimeLimô
 = 2000.0;

190 i‡(
	gutc
 < 
	gœ°UTCTime
 && (œ°UTCTimê- utcË< 
	gbackw¨dTimeLimô
)

191  
	gœ°UTCTime
 / 1000.0;

192 
	gœ°UTCTime
 = 
utc
;

193  
	gutc
 / 1000.0;

198 
cuºítTime
()

200 
boﬁ
 
	göô
 = 
Ál£
;

201 
	gœ°Time
;

202 
DWORD
 
	gœ°TickCou¡
;

203 i‡(!
	göô
) {

204 
	gœ°Time
 = 
lowResUTCTime
();

205 
	gœ°TickCou¡
 = 
GëTickCou¡
();

206 
	göô
 = 
åue
;

207  
	gœ°Time
;

210 
DWORD
 
	gtickCou¡Now
 = 
GëTickCou¡
();

211 
DWORD
 
	gñ≠£d
 = 
tickCou¡Now
 - 
œ°TickCou¡
;

212 
	gtimeNow
 = 
œ°Time
 + ()
ñ≠£d
 / 1000.;

213 i‡(
	gñ≠£d
 >= 0x7FFFFFFF) {

214 
œ°Time
 = 
timeNow
;

215 
	gœ°TickCou¡
 = 
tickCou¡Now
;

217  
	gtimeNow
;

222 #ñi‡
USE
(
GLIB
Ë&& !
PLATFORM
(
EFL
)

228 
cuºítTime
()

230 
GTimeVÆ
 
	gnow
;

231 
g_gë_cuºít_time
(&
now
);

232  
	g°©ic_ˇ°
<>(
	gnow
.
	gtv_£c
Ë+ sètic_ˇ°<>“ow.
	gtv_u£c
 / 1000000.0);

235 #ñi‡
PLATFORM
(
EFL
)

237 
cuºítTime
()

239  
ec‹e_time_unix_gë
();

244 
cuºítTime
()

246 
timevÆ
 
	gnow
;

247 
gëtimeofday
(&
now
, 0);

248  
	gnow
.
	gtv_£c
 +Çow.
	gtv_u£c
 / 1000000.0;

253 #i‡
PLATFORM
(
EFL
)

255 
m⁄Ÿ⁄iˇŒyIn¸ósögTime
()

257  
ec‹e_time_gë
();

260 #ñi‡
USE
(
GLIB
)

262 
m⁄Ÿ⁄iˇŒyIn¸ósögTime
()

264  
	g°©ic_ˇ°
<>(
g_gë_m⁄Ÿ⁄ic_time
() / 1000000.0);

267 #ñi‡
OS
(
DARWIN
)

269 
m⁄Ÿ⁄iˇŒyIn¸ósögTime
()

272 
mach_timeba£_öfo_d©a_t
 
	gtimeba£Info
;

273 
	g°d
::
⁄˚_Êag
 
öôülizeTimîOn˚Fœg
;

274 
	g°d
::
ˇŒ_⁄˚
(
öôülizeTimîOn˚Fœg
, [] {

275 
kîn_ªtu∫_t
 
kr
 = 
mach_timeba£_öfo
(&
timeba£Info
);

276 
ASSERT_UNUSED
(
kr
, k∏=
KERN_SUCCESS
);

277 
ASSERT
(
timeba£Info
.
díom
);

280  (
mach_absﬁuã_time
(Ë* 
	gtimeba£Info
.
	gnumî
Ë/ (1.0e9 *Åimeba£Info.
	gdíom
);

285 
m⁄Ÿ⁄iˇŒyIn¸ósögTime
()

287 
	gœ°Time
 = 0;

288 
	gcuºítTimeNow
 = 
cuºítTime
();

289 i‡(
	gcuºítTimeNow
 < 
	gœ°Time
)

290  
	gœ°Time
;

291 
	gœ°Time
 = 
cuºítTimeNow
;

292  
	gcuºítTimeNow
;

297 
cuºítCPUTime
()

299 #i‡
OS
(
DARWIN
)

300 
mach_msg_ty≥_numbî_t
 
	göfoCou¡
 = 
THREAD_BASIC_INFO_COUNT
;

301 
thªad_basic_öfo_d©a_t
 
	göfo
;

304 
mach_p‹t_t
 
	gthªadP‹t
 = 
mach_thªad_£lf
();

305 
thªad_öfo
(
thªadP‹t
, 
THREAD_BASIC_INFO
, 
ªöãΩªt_ˇ°
<
thªad_öfo_t
>(&
öfo
), &
öfoCou¡
);

306 
mach_p‹t_dóŒoˇã
(
mach_èsk_£lf
(), 
thªadP‹t
);

308 
	gtime
 = 
öfo
.
u£r_time
.
£c⁄ds
 + info.u£r_time.
mi¸o£c⁄ds
 / 1000000.;

309 
	gtime
 +
öfo
.
sy°em_time
.
£c⁄ds
 + info.sy°em_time.
mi¸o£c⁄ds
 / 1000000.;

311  
	gtime
;

312 #ñi‡
OS
(
WINDOWS
)

314 
FILETIME
 
	gfûeTime
;

315 
	gfûeTimeAsL⁄g
;

316 } 
	gu£rTime
, 
	gkî√lTime
;

320 
FILETIME
 
	g¸óti⁄Time
, 
	gexôTime
;

322 
GëThªadTimes
(
GëCuºítThªad
(), &
¸óti⁄Time
, &
exôTime
, &
kî√lTime
.
fûeTime
, &
u£rTime
.fileTime);

324  
	gu£rTime
.
	gfûeTimeAsL⁄g
 / 10000000. + 
	gkî√lTime
.fileTimeAsLong / 10000000.;

329 
	gfú°Time
 = 
cuºítTime
();

330  
cuºítTime
(Ë- 
	gfú°Time
;

334 
cuºítCPUTimeMS
()

336  
cuºítCPUTime
() * 1000;

	@CurrentTime.h

32 #i‚de‡
CuºítTime_h


33 
	#CuºítTime_h


	)

35 
	~<time.h
>

37 
«me•a˚
 
	gWTF
 {

44 
WTF_EXPORT_PRIVATE
 
cuºítTime
();

47 
ölöe
 
cuºítTimeMS
()

49  
cuºítTime
() * 1000.0;

56 
WTF_EXPORT_PRIVATE
 
m⁄Ÿ⁄iˇŒyIn¸ósögTime
();

61 
WTF_EXPORT_PRIVATE
 
cuºítCPUTime
();

64 
WTF_EXPORT_PRIVATE
 
cuºítCPUTimeMS
();

68 
usög
 
	gWTF
::
cuºítTime
;

69 
usög
 
	gWTF
::
cuºítTimeMS
;

70 
usög
 
	gWTF
::
m⁄Ÿ⁄iˇŒyIn¸ósögTime
;

71 
usög
 
	gWTF
::
cuºítCPUTime
;

	@DataLog.cpp

26 
	~"c⁄fig.h
"

27 
	~"D©aLog.h
"

28 
	~<°d¨g.h
>

29 
	~<°rög.h
>

30 
	~<wtf/FûePrötSåóm.h
>

31 
	~<wtf/WTFThªadD©a.h
>

32 
	~<wtf/Thªadög.h
>

34 #i‡
OS
(
UNIX
Ë|| OS(
DARWIN
)

35 
	~<uni°d.h
>

38 
	#DATA_LOG_TO_FILE
 0

	)

42 
	#DATA_LOG_TO_DARWIN_TEMP_DIR
 0

	)

47 
	#DATA_LOG_FILENAME
 "/tmp/WTFLog"

	)

49 
«me•a˚
 
	gWTF
 {

51 #i‡
USE
(
PTHREADS
)

52 
±hªad_⁄˚_t
 
	göôülizeLogFûeOn˚Key
 = 
PTHREAD_ONCE_INIT
;

55 
FûePrötSåóm
* 
	gfûe
;

57 
uöt64_t
 
	gfûeD©a
[((
FûePrötSåóm
) + 7) / 8];

59 
öôülizeLogFûeOn˚
()

61 #i‡
DATA_LOG_TO_FILE


62 c⁄° 
	gmaxP©hLígth
 = 1024;

64 
	gfûíameSuffix
[
maxP©hLígth
 + 1];

66 #i‡
PLATFORM
(
WIN
)

67 
_¢¥ötf
(
fûíameSuffix
, (fûíameSuffix), ".%d.txt", 
GëCuºítPro˚ssId
());

69 
¢¥ötf
(
fûíameSuffix
, (fûíameSuffix), ".%d.txt", 
gëpid
());

72 #i‡
DATA_LOG_TO_DARWIN_TEMP_DIR


73 
	gfûíameBuf„r
[
maxP©hLígth
 + 1];

74 
	gsuffixLígth
 = 
°æí
(
fûíameSuffix
);

76 #i‡
deföed
(
DATA_LOG_FILENAME
)

77 * 
	glogBa£«me
 = 
°ºchr
(
DATA_LOG_FILENAME
, '/');

78 i‡(!
	glogBa£«me
)

79 
	glogBa£«me
 = (*)
DATA_LOG_FILENAME
;

81 c⁄° * 
	glogBa£«me
 = "WTFLog";

84 c⁄° * 
	gfûíame
 = 0;

86 
size_t
 
	gœ°Comp⁄ítLígth
 = 
°æí
(
logBa£«me
Ë+ 
suffixLígth
;

87 
size_t
 
	gdú«meLígth
 = 
c⁄f°r
(
_CS_DARWIN_USER_TEMP_DIR
, 
fûíameBuf„r
, 1024);

88 i‡((
	gdú«meLígth
 + 
	gœ°Comp⁄ítLígth
 + 
	gsuffixLígth
Ë< 
	gmaxP©hLígth
) {

89 
°∫ˇt
(
fûíameBuf„r
, 
logBa£«me
, 
maxP©hLígth
 - 
dú«meLígth
);

90 
	gfûíame
 = 
fûíameBuf„r
;

92 #ñi‡
deföed
(
DATA_LOG_FILENAME
)

93 c⁄° * 
	gfûíame
 = 
DATA_LOG_FILENAME
;

95 c⁄° * 
	gfûíame
 = 
gëív
("WTF_DATA_LOG_FILENAME");

97 
	ga˘uÆFûíame
[
maxP©hLígth
 + 1];

99 i‡(
	gfûíame
) {

100 #i‡
PLATFORM
(
WIN
)

101 
_¢¥ötf
(
a˘uÆFûíame
, ◊˘uÆFûíame), "%s%s", 
fûíame
, 
fûíameSuffix
);

103 
¢¥ötf
(
a˘uÆFûíame
, ◊˘uÆFûíame), "%s%s", 
fûíame
, 
fûíameSuffix
);

106 
	gfûe
 = 
FûePrötSåóm
::
›í
(
a˘uÆFûíame
, "w").
ªÀa£
();

107 i‡(
	gfûe
)

108 
WTFLogAlways
("*** D©aLog ouçuàtÿ\"%s\" ***\n", 
a˘uÆFûíame
);

110 
WTFLogAlways
("W¨nög: CouldÇŸ o≥¿D©aLog fûê%†f‹ wrôög.\n", 
a˘uÆFûíame
);

113 i‡(!
	gfûe
) {

116 
	gfûe
 = 
√w
 (
fûeD©a
Ë
FûePrötSåóm
(
°dîr
, FûePrötSåóm::
B‹row
);

119 
£tvbuf
(
fûe
->fûe(), 0, 
_IONBF
, 0);

122 
öôülizeLogFûe
()

124 #i‡
USE
(
PTHREADS
)

125 
±hªad_⁄˚
(&
öôülizeLogFûeOn˚Key
, 
öôülizeLogFûeOn˚
);

127 i‡(!
	gfûe
)

128 
öôülizeLogFûeOn˚
();

132 
	gFûePrötSåóm
& 
d©aFûe
()

134 
öôülizeLogFûe
();

135  *
	gfûe
;

138 
d©aLogFV
(c⁄° * 
f‹m©
, 
va_li°
 
¨gLi°
)

140 
d©aFûe
().
v¥ötf
(
f‹m©
, 
¨gLi°
);

143 
d©aLogF
(c⁄° * 
f‹m©
, ...)

145 
va_li°
 
	g¨gLi°
;

146 
va_°¨t
(
¨gLi°
, 
f‹m©
);

147 
d©aLogFV
(
f‹m©
, 
¨gLi°
);

148 
va_íd
(
¨gLi°
);

151 
d©aLogFSåög
(c⁄° * 
°r
)

153 
d©aFûe
().
¥ötf
("%s", 
°r
);

	@DataLog.h

26 #i‚de‡
D©aLog_h


27 
	#D©aLog_h


	)

29 
	~<°d¨g.h
>

30 
	~<°dio.h
>

31 
	~<wtf/FûePrötSåóm.h
>

32 
	~<wtf/StdLibExåas.h
>

34 
«me•a˚
 
	gWTF
 {

36 
WTF_EXPORT_PRIVATE
 
	gFûePrötSåóm
& 
d©aFûe
();

38 
WTF_EXPORT_PRIVATE
 
d©aLogFV
(c⁄° * 
f‹m©
, 
va_li°
Ë
WTF_ATTRIBUTE_PRINTF
(1, 0);

39 
WTF_EXPORT_PRIVATE
 
d©aLogF
(c⁄° * 
f‹m©
, ...Ë
WTF_ATTRIBUTE_PRINTF
(1, 2);

40 
WTF_EXPORT_PRIVATE
 
d©aLogFSåög
(const *);

42 
	gãm∂©e
<
	gty≥«me
... 
	gTy≥s
>

43 
d©aLog
(c⁄° 
Ty≥s
&... 
vÆues
)

45 
d©aFûe
().
¥öt
(
vÆues
...);

50 
usög
 
	gWTF
::
d©aLog
;

51 
usög
 
	gWTF
::
d©aLogF
;

52 
usög
 
	gWTF
::
d©aLogFSåög
;

	@DateMath.cpp

72 
	~"c⁄fig.h
"

73 
	~"D©eM©h.h
"

75 
	~"As£πi⁄s.h
"

76 
	~"ASCIICTy≥.h
"

77 
	~"CuºítTime.h
"

78 
	~"M©hExåas.h
"

79 
	~"StdLibExåas.h
"

80 
	~"SåögExåas.h
"

82 
	~<Æg‹ôhm
>

83 
	~<limôs.h
>

84 
	~<limôs
>

85 
	~<°döt.h
>

86 
	~<time.h
>

87 
	~<wtf/ãxt/SåögBuûdî.h
>

89 #i‡
OS
(
WINDOWS
)

90 
	~<wödows.h
>

93 #i‡
HAVE
(
ERRNO_H
)

94 
	~<î∫o.h
>

97 #i‡
HAVE
(
SYS_TIME_H
)

98 
	~<sys/time.h
>

101 #i‡
HAVE
(
SYS_TIMEB_H
)

102 
	~<sys/timeb.h
>

105 
usög
 
«me•a˚
 
	gWTF
;

107 
«me•a˚
 
	gWTF
 {

111 c⁄° 
	gmaxUnixTime
 = 2145859200.0;

115 c⁄° 
	gmaxECMAS¸ùtTime
 = 8.64E15;

119 c⁄° 
	gfú°DayOfM⁄th
[2][12] = {

124 
ölöe
 
gëLoˇlTime
(c⁄° 
time_t
* 
loˇlTime
, 
tm
* 
loˇlTM
)

126 #i‡
COMPILER
(
MINGW
)

127 *
	gloˇlTM
 = *
loˇ…ime
(
loˇlTime
);

128 #ñi‡
COMPILER
(
MSVC
)

129 
loˇ…ime_s
(
loˇlTM
, 
loˇlTime
);

131 
loˇ…ime_r
(
loˇlTime
, 
loˇlTM
);

135 
boﬁ
 
isLópYór
(
yór
)

137 i‡(
	gyór
 % 4 != 0)

138  
Ál£
;

139 i‡(
	gyór
 % 400 == 0)

140  
åue
;

141 i‡(
	gyór
 % 100 == 0)

142  
Ál£
;

143  
	gåue
;

146 
ölöe
 
daysInYór
(
yór
)

148  365 + 
isLópYór
(
yór
);

151 
ölöe
 
daysFrom1970ToYór
(
yór
)

158 c⁄° 
	gÀ≠DaysBef‹e1971By4RuÀ
 = 1970 / 4;

159 c⁄° 
	gex˛udedLópDaysBef‹e1971By100RuÀ
 = 1970 / 100;

160 c⁄° 
	gÀ≠DaysBef‹e1971By400RuÀ
 = 1970 / 400;

162 c⁄° 
	gyórMöusO√
 = 
yór
 - 1;

163 c⁄° 
	gyórsToAddBy4RuÀ
 = 
Êo‹
(
yórMöusO√
 / 4.0Ë- 
À≠DaysBef‹e1971By4RuÀ
;

164 c⁄° 
	gyórsToEx˛udeBy100RuÀ
 = 
Êo‹
(
yórMöusO√
 / 100.0Ë- 
ex˛udedLópDaysBef‹e1971By100RuÀ
;

165 c⁄° 
	gyórsToAddBy400RuÀ
 = 
Êo‹
(
yórMöusO√
 / 400.0Ë- 
À≠DaysBef‹e1971By400RuÀ
;

167  365.0 * (
	gyór
 - 1970Ë+ 
	gyórsToAddBy4RuÀ
 - 
	gyórsToEx˛udeBy100RuÀ
 + 
	gyórsToAddBy400RuÀ
;

170 
msToDays
(
ms
)

172  
Êo‹
(
ms
 / 
msPîDay
);

175 
≠≥ndTwoDigôNumbî
(
SåögBuûdî
& 
buûdî
, 
numbî
)

177 
ASSERT
(
numbî
 >= 0);

178 
ASSERT
(
numbî
 < 100);

179 
	gbuûdî
.
≠≥nd
(
°©ic_ˇ°
<
LCh¨
>('0' + 
numbî
 / 10));

180 
	gbuûdî
.
≠≥nd
(
°©ic_ˇ°
<
LCh¨
>('0' + 
numbî
 % 10));

183 
msToYór
(
ms
)

185 
	g≠¥oxYór
 = 
°©ic_ˇ°
<>(
Êo‹
(
ms
 / (
msPîDay
 * 365.2425)) + 1970);

186 
	gmsFromAµroxYórTo1970
 = 
msPîDay
 * 
daysFrom1970ToYór
(
≠¥oxYór
);

187 i‡(
	gmsFromAµroxYórTo1970
 > 
	gms
)

188  
	g≠¥oxYór
 - 1;

189 i‡(
	gmsFromAµroxYórTo1970
 + 
msPîDay
 * 
daysInYór
(
≠¥oxYór
Ë<
ms
)

190  
≠¥oxYór
 + 1;

191  
	g≠¥oxYór
;

194 
dayInYór
(
ms
, 
yór
)

196  
	g°©ic_ˇ°
<>(
msToDays
(
ms
Ë- 
daysFrom1970ToYór
(
yór
));

199 
ölöe
 
msToMûli£c⁄ds
(
ms
)

201 
	gªsu…
 = 
fmod
(
ms
, 
msPîDay
);

202 i‡(
	gªsu…
 < 0)

203 
	gªsu…
 +
msPîDay
;

204  
	gªsu…
;

207 
msToMöuãs
(
ms
)

209 
	gªsu…
 = 
fmod
(
Êo‹
(
ms
 / 
msPîMöuã
), 
möuãsPîHour
);

210 i‡(
	gªsu…
 < 0)

211 
	gªsu…
 +
möuãsPîHour
;

212  
	g°©ic_ˇ°
<>(
	gªsu…
);

215 
msToHours
(
ms
)

217 
	gªsu…
 = 
fmod
(
Êo‹
(
ms
/
msPîHour
), 
hoursPîDay
);

218 i‡(
	gªsu…
 < 0)

219 
	gªsu…
 +
hoursPîDay
;

220  
	g°©ic_ˇ°
<>(
	gªsu…
);

223 
m⁄thFromDayInYór
(
dayInYór
, 
boﬁ
 
À≠Yór
)

225 c⁄° 
	gd
 = 
dayInYór
;

226 
	g°ï
;

228 i‡(
	gd
 < (
	g°ï
 = 31))

230 
	g°ï
 +(
À≠Yór
 ? 29 : 28);

231 i‡(
	gd
 < 
	g°ï
)

233 i‡(
	gd
 < (
	g°ï
 += 31))

235 i‡(
	gd
 < (
	g°ï
 += 30))

237 i‡(
	gd
 < (
	g°ï
 += 31))

239 i‡(
	gd
 < (
	g°ï
 += 30))

241 i‡(
	gd
 < (
	g°ï
 += 31))

243 i‡(
	gd
 < (
	g°ï
 += 31))

245 i‡(
	gd
 < (
	g°ï
 += 30))

247 i‡(
	gd
 < (
	g°ï
 += 31))

249 i‡(
	gd
 < (
	g°ï
 += 30))

254 
ölöe
 
boﬁ
 
checkM⁄th
(
dayInYór
, & 
°¨tDayOfThisM⁄th
, & 
°¨tDayOfNextM⁄th
, 
daysInThisM⁄th
)

256 
	g°¨tDayOfThisM⁄th
 = 
°¨tDayOfNextM⁄th
;

257 
	g°¨tDayOfNextM⁄th
 +
daysInThisM⁄th
;

258  (
	gdayInYór
 <
°¨tDayOfNextM⁄th
);

261 
dayInM⁄thFromDayInYór
(
dayInYór
, 
boﬁ
 
À≠Yór
)

263 c⁄° 
	gd
 = 
dayInYór
;

264 
	g°ï
;

265 
	g√xt
 = 30;

267 i‡(
	gd
 <
√xt
)

268  
d
 + 1;

269 c⁄° 
	gdaysInFeb
 = (
À≠Yór
 ? 29 : 28);

270 i‡(
checkM⁄th
(
d
, 
°ï
, 
√xt
, 
daysInFeb
))

271  
	gd
 - 
	g°ï
;

272 i‡(
checkM⁄th
(
d
, 
°ï
, 
√xt
, 31))

273  
	gd
 - 
	g°ï
;

274 i‡(
checkM⁄th
(
d
, 
°ï
, 
√xt
, 30))

275  
	gd
 - 
	g°ï
;

276 i‡(
checkM⁄th
(
d
, 
°ï
, 
√xt
, 31))

277  
	gd
 - 
	g°ï
;

278 i‡(
checkM⁄th
(
d
, 
°ï
, 
√xt
, 30))

279  
	gd
 - 
	g°ï
;

280 i‡(
checkM⁄th
(
d
, 
°ï
, 
√xt
, 31))

281  
	gd
 - 
	g°ï
;

282 i‡(
checkM⁄th
(
d
, 
°ï
, 
√xt
, 31))

283  
	gd
 - 
	g°ï
;

284 i‡(
checkM⁄th
(
d
, 
°ï
, 
√xt
, 30))

285  
	gd
 - 
	g°ï
;

286 i‡(
checkM⁄th
(
d
, 
°ï
, 
√xt
, 31))

287  
	gd
 - 
	g°ï
;

288 i‡(
checkM⁄th
(
d
, 
°ï
, 
√xt
, 30))

289  
	gd
 - 
	g°ï
;

290 
	g°ï
 = 
√xt
;

291  
	gd
 - 
	g°ï
;

294 
dayInYór
(
yór
, 
m⁄th
, 
day
)

296  
	gfú°DayOfM⁄th
[
isLópYór
(
yór
)][
m⁄th
] + 
	gday
 - 1;

299 
d©eToDaysFrom1970
(
yór
, 
m⁄th
, 
day
)

301 
	gyór
 +
m⁄th
 / 12;

303 
	gm⁄th
 %= 12;

304 i‡(
	gm⁄th
 < 0) {

305 
	gm⁄th
 += 12;

306 --
	gyór
;

309 
	gyórday
 = 
Êo‹
(
daysFrom1970ToYór
(
yór
));

310 
ASSERT
((
yór
 >1970 && 
yórday
 >= 0) || (year < 1970 && yearday < 0));

311  
	gyórday
 + 
dayInYór
(
yór
, 
m⁄th
, 
day
);

316 
ölöe
 
maximumYórF‹DST
()

321 
ölöe
 
möimumYórF‹DST
()

327  
	g°d
::
mö
(
msToYór
(
jsCuºítTime
()), 
maximumYórF‹DST
() - 27) ;

340 
equivÆítYórF‹DST
(
yór
)

345 
	gmöYór
 = 
möimumYórF‹DST
();

346 
	gmaxYór
 = 
maximumYórF‹DST
();

348 
	gdif„ªn˚
;

349 i‡(
	gyór
 > 
	gmaxYór
)

350 
	gdif„ªn˚
 = 
möYór
 - 
yór
;

351 i‡(
	gyór
 < 
	gmöYór
)

352 
	gdif„ªn˚
 = 
maxYór
 - 
yór
;

354  
	gyór
;

356 
	gquŸõ¡
 = 
dif„ªn˚
 / 28;

357 
	g¥odu˘
 = (
quŸõ¡
) * 28;

359 
	gyór
 +
¥odu˘
;

360 
ASSERT
((
yór
 >
möYór
 && yó∏<
maxYór
Ë|| (
¥odu˘
 - yó∏=
°©ic_ˇ°
<>(
°d
::
numîic_limôs
<>::
quõt_NaN
())));

361  
	gyór
;

364 #i‡!
HAVE
(
TM_GMTOFF
)

366 
öt32_t
 
ˇlcuœãUTCOff£t
()

368 #i‡
OS
(
WINDOWS
)

369 
TIME_ZONE_INFORMATION
 
	gtimeZ⁄eInf‹m©i⁄
;

370 
GëTimeZ⁄eInf‹m©i⁄
(&
timeZ⁄eInf‹m©i⁄
);

371 
öt32_t
 
	gbüs
 = 
timeZ⁄eInf‹m©i⁄
.
Büs
 +ÅimeZ⁄eInf‹m©i⁄.
Sènd¨dBüs
;

372  -
	gbüs
 * 60 * 1000;

374 
time_t
 
	gloˇlTime
 = 
time
(0);

375 
tm
 
	gloˇ…
;

376 
gëLoˇlTime
(&
loˇlTime
, &
loˇ…
);

379 
	gloˇ…
.
	gtm_£c
 = 0;

380 
	gloˇ…
.
	gtm_mö
 = 0;

381 
	gloˇ…
.
	gtm_hour
 = 0;

382 
	gloˇ…
.
	gtm_mday
 = 1;

383 
	gloˇ…
.
	gtm_m⁄
 = 0;

385 
	gloˇ…
.
	gtm_wday
 = 0;

386 
	gloˇ…
.
	gtm_yday
 = 0;

387 
	gloˇ…
.
	gtm_isd°
 = 0;

388 #i‡
HAVE
(
TM_GMTOFF
)

389 
	gloˇ…
.
	gtm_gmtoff
 = 0;

391 #i‡
HAVE
(
TM_ZONE
)

392 
	gloˇ…
.
	gtm_z⁄e
 = 0;

395 #i‡
HAVE
(
TIMEGM
)

396 
time_t
 
	gutcOff£t
 = 
timegm
(&
loˇ…
Ë- 
mktime
(&localt);

399 
	gloˇ…
.
	gtm_yór
 = 109;

400 
time_t
 
	gutcOff£t
 = 1230768000 - 
mktime
(&
loˇ…
);

403  
	g°©ic_ˇ°
<
	göt32_t
>(
	gutcOff£t
 * 1000);

407 #i‡
OS
(
WINDOWS
)

409 
UnixTimeToFûeTime
(
time_t
 
t
, 
LPFILETIME
 
p·
)

412 
LONGLONG
 
	gŒ
;

414 
	gŒ
 = 
I¡32x32To64
(
t
, 10000000) + 116444736000000000;

415 
	gp·
->
	gdwLowD©eTime
 = (
DWORD
)
Œ
;

416 
	gp·
->
	gdwHighD©eTime
 = 
Œ
 >> 32;

423 
ˇlcuœãDSTOff£t
(
time_t
 
loˇlTime
, 
utcOff£t
)

425 #i‡
OS
(
WINDOWS
)

426 
FILETIME
 
	gutcFûeTime
;

427 
UnixTimeToFûeTime
(
loˇlTime
, &
utcFûeTime
);

428 
SYSTEMTIME
 
	gutcSy°emTime
, 
	gloˇlSy°emTime
;

429 
FûeTimeToSy°emTime
(&
utcFûeTime
, &
utcSy°emTime
);

430 
Sy°emTimeToTzS≥cificLoˇlTime
(0, &
utcSy°emTime
, &
loˇlSy°emTime
);

432 
	goff£tTime
 = (
loˇlTime
 * 
msPîSec⁄d
Ë+ 
utcOff£t
;

435 
	goff£tHour
 = 
msToHours
(
off£tTime
);

436 
	goff£tMöuã
 = 
msToMöuãs
(
off£tTime
);

438 
	gdiff
 = ((
loˇlSy°emTime
.
wHour
 - 
off£tHour
Ë* 
£c⁄dsPîHour
Ë+ (÷oˇlSy°emTime.
wMöuã
 - 
off£tMöuã
) * 60);

440  
diff
 * 
	gmsPîSec⁄d
;

443 
	goff£tTime
 = (
loˇlTime
 * 
msPîSec⁄d
Ë+ 
utcOff£t
;

446 
	goff£tHour
 = 
msToHours
(
off£tTime
);

447 
	goff£tMöuã
 = 
msToMöuãs
(
off£tTime
);

449 
tm
 
	gloˇlTM
;

450 
gëLoˇlTime
(&
loˇlTime
, &
loˇlTM
);

452 
	gdiff
 = ((
loˇlTM
.
tm_hour
 - 
off£tHour
Ë* 
£c⁄dsPîHour
Ë+ (÷oˇlTM.
tm_mö
 - 
off£tMöuã
) * 60);

454 i‡(
	gdiff
 < 0)

455 
	gdiff
 +
£c⁄dsPîDay
;

457  (
diff
 * 
	gmsPîSec⁄d
);

464 
LoˇlTimeOff£t
 
ˇlcuœãLoˇlTimeOff£t
(
ms
)

471 
	gyór
 = 
msToYór
(
ms
);

472 
	gequivÆítYór
 = 
equivÆítYórF‹DST
(
yór
);

473 i‡(
	gyór
 !
equivÆítYór
) {

474 
boﬁ
 
À≠Yór
 = 
isLópYór
(
yór
);

475 
	gdayInYórLoˇl
 = 
dayInYór
(
ms
, 
yór
);

476 
	gdayInM⁄th
 = 
dayInM⁄thFromDayInYór
(
dayInYórLoˇl
, 
À≠Yór
);

477 
	gm⁄th
 = 
m⁄thFromDayInYór
(
dayInYórLoˇl
, 
À≠Yór
);

478 
	gday
 = 
d©eToDaysFrom1970
(
equivÆítYór
, 
m⁄th
, 
dayInM⁄th
);

479 
	gms
 = (
day
 * 
msPîDay
Ë+ 
msToMûli£c⁄ds
(
ms
);

482 
	gloˇlTimeSec⁄ds
 = 
ms
 / 
msPîSec⁄d
;

483 i‡(
	gloˇlTimeSec⁄ds
 > 
	gmaxUnixTime
)

484 
	gloˇlTimeSec⁄ds
 = 
maxUnixTime
;

485 i‡(
	gloˇlTimeSec⁄ds
 < 0)

486 
	gloˇlTimeSec⁄ds
 +
£c⁄dsPîDay
;

488 
time_t
 
	gloˇlTime
 = 
°©ic_ˇ°
<time_t>(
loˇlTimeSec⁄ds
);

490 #i‡
HAVE
(
TM_GMTOFF
)

491 
tm
 
	gloˇlTM
;

492 
gëLoˇlTime
(&
loˇlTime
, &
loˇlTM
);

493  
LoˇlTimeOff£t
(
loˇlTM
.
tm_isd°
,ÜoˇlTM.
tm_gmtoff
 * 
msPîSec⁄d
);

495 
	gutcOff£t
 = 
ˇlcuœãUTCOff£t
();

496 
	gd°Off£t
 = 
ˇlcuœãDSTOff£t
(
loˇlTime
, 
utcOff£t
);

497  
LoˇlTimeOff£t
(
d°Off£t
, 
utcOff£t
 + dstOffset);

501 
öôülizeD©es
()

503 #i‡!
ASSERT_DISABLED


504 
boﬁ
 
	gÆªadyInôülized
;

505 
ASSERT
(!
ÆªadyInôülized
);

506 
	gÆªadyInôülized
 = 
åue
;

509 
equivÆítYórF‹DST
(2000);

512 
ölöe
 
ymdhmsToSec⁄ds
(
yór
, 
m⁄
, 
day
, 
hour
, 
möuã
, 
£c⁄d
)

514 
	gmday
 = 
fú°DayOfM⁄th
[
isLópYór
(
yór
)][
m⁄
 - 1];

515 
	gydays
 = 
daysFrom1970ToYór
(
yór
);

517  (
	g£c⁄d
 + 
möuã
 * 
	g£c⁄dsPîMöuã
 + 
hour
 * 
	g£c⁄dsPîHour
 + (
	gmday
 + 
	gday
 - 1 + 
	gydays
Ë* 
	g£c⁄dsPîDay
);

522 c⁄° 
	sKnownZ⁄e
 {

523 #i‡!
OS
(
WINDOWS
)

526 
	gtzName
[4];

527 
	gtzOff£t
;

528 } 
	gknown_z⁄es
[] = {

541 
ölöe
 
skùS∑˚sAndCommíts
(c⁄° *& 
s
)

543 
	g√°ög
 = 0;

544 
	gch
;

545 (
	gch
 = *
s
)) {

546 i‡(!
isASCIIS∑˚
(
ch
)) {

547 i‡(
ch
 == '(')

548 
√°ög
++;

549 i‡(
	gch
 =')' && 
√°ög
 > 0)

550 
√°ög
--;

551 i‡(
	g√°ög
 == 0)

554 
	gs
++;

559 
födM⁄th
(c⁄° * 
m⁄thSå
)

561 
ASSERT
(
m⁄thSå
);

562 
	g√edÀ
[4];

563 
	gi
 = 0; i < 3; ++i) {

564 i‡(!*
	gm⁄thSå
)

566 
	g√edÀ
[
i
] = 
°©ic_ˇ°
<>(
toASCIILowî
(*
m⁄thSå
++));

568 
	g√edÀ
[3] = '\0';

569 c⁄° *
	ghay°ack
 = "janfebmaraprmayjunjulaugsepoctnovdec";

570 c⁄° *
	g°r
 = 
°r°r
(
hay°ack
, 
√edÀ
);

571 i‡(
	g°r
) {

572 
	gposôi⁄
 = 
°©ic_ˇ°
<>(
°r
 - 
hay°ack
);

573 i‡(
	gposôi⁄
 % 3 == 0)

574  
posôi⁄
 / 3;

579 
boﬁ
 
∑r£I¡
(c⁄° * 
°rög
, ** 
°›Posôi⁄
, 
ba£
, * 
ªsu…
)

581 
	gl⁄gResu…
 = 
°πﬁ
(
°rög
, 
°›Posôi⁄
, 
ba£
);

583 i‡(
	g°rög
 =*
°›Posôi⁄
 || 
l⁄gResu…
 <
°d
::
numîic_limôs
<>::
mö
(Ë||Ü⁄gResu… >°d::numîic_limôs<>::
max
())

584  
Ál£
;

585 *
	gªsu…
 = 
°©ic_ˇ°
<>(
l⁄gResu…
);

586  
	gåue
;

589 
boﬁ
 
∑r£L⁄g
(c⁄° * 
°rög
, ** 
°›Posôi⁄
, 
ba£
, * 
ªsu…
)

591 *
	gªsu…
 = 
°πﬁ
(
°rög
, 
°›Posôi⁄
, 
ba£
);

593 i‡(
	g°rög
 =*
°›Posôi⁄
 || *
ªsu…
 =
°d
::
numîic_limôs
<>::
mö
(Ë|| *ªsu… =°d::numîic_limôs<>::
max
())

594  
Ál£
;

595  
	gåue
;

601 * 
∑r£ES5D©eP‹ti⁄
(c⁄° * 
cuºítPosôi⁄
, & 
yór
, & 
m⁄th
, & 
day
)

603 * 
	gpo°P¨£Posôi⁄
;

608 i‡(!
∑r£I¡
(
cuºítPosôi⁄
, &
po°P¨£Posôi⁄
, 10, &
yór
))

612 i‡(*
	gpo°P¨£Posôi⁄
 != '-')

613  
po°P¨£Posôi⁄
;

614 
	gcuºítPosôi⁄
 = 
po°P¨£Posôi⁄
 + 1;

616 i‡(!
isASCIIDigô
(*
cuºítPosôi⁄
))

618 i‡(!
∑r£L⁄g
(
cuºítPosôi⁄
, &
po°P¨£Posôi⁄
, 10, &
m⁄th
))

620 i‡((
	gpo°P¨£Posôi⁄
 - 
	gcuºítPosôi⁄
) != 2)

624 i‡(*
	gpo°P¨£Posôi⁄
 != '-')

625  
po°P¨£Posôi⁄
;

626 
	gcuºítPosôi⁄
 = 
po°P¨£Posôi⁄
 + 1;

628 i‡(!
isASCIIDigô
(*
cuºítPosôi⁄
))

630 i‡(!
∑r£L⁄g
(
cuºítPosôi⁄
, &
po°P¨£Posôi⁄
, 10, &
day
))

632 i‡((
	gpo°P¨£Posôi⁄
 - 
	gcuºítPosôi⁄
) != 2)

634  
	gpo°P¨£Posôi⁄
;

640 * 
∑r£ES5TimeP‹ti⁄
(* 
cuºítPosôi⁄
, & 
hours
, & 
möuãs
, & 
£c⁄ds
, & 
timeZ⁄eSec⁄ds
)

642 * 
	gpo°P¨£Posôi⁄
;

643 i‡(!
isASCIIDigô
(*
cuºítPosôi⁄
))

645 i‡(!
∑r£L⁄g
(
cuºítPosôi⁄
, &
po°P¨£Posôi⁄
, 10, &
hours
))

647 i‡(*
	gpo°P¨£Posôi⁄
 !':' || (
po°P¨£Posôi⁄
 - 
cuºítPosôi⁄
) != 2)

649 
	gcuºítPosôi⁄
 = 
po°P¨£Posôi⁄
 + 1;

651 i‡(!
isASCIIDigô
(*
cuºítPosôi⁄
))

653 i‡(!
∑r£L⁄g
(
cuºítPosôi⁄
, &
po°P¨£Posôi⁄
, 10, &
möuãs
))

655 i‡((
	gpo°P¨£Posôi⁄
 - 
	gcuºítPosôi⁄
) != 2)

657 
	gcuºítPosôi⁄
 = 
po°P¨£Posôi⁄
;

660 i‡(*
	gcuºítPosôi⁄
 == ':') {

661 ++
cuºítPosôi⁄
;

663 
	götSec⁄ds
;

664 i‡(!
isASCIIDigô
(*
cuºítPosôi⁄
))

666 i‡(!
∑r£L⁄g
(
cuºítPosôi⁄
, &
po°P¨£Posôi⁄
, 10, &
ötSec⁄ds
))

668 i‡((
	gpo°P¨£Posôi⁄
 - 
	gcuºítPosôi⁄
) != 2)

670 
	g£c⁄ds
 = 
ötSec⁄ds
;

671 i‡(*
	gpo°P¨£Posôi⁄
 == '.') {

672 
cuºítPosôi⁄
 = 
po°P¨£Posôi⁄
 + 1;

677 i‡(!
isASCIIDigô
(*
cuºítPosôi⁄
))

681 
	g‰acSec⁄ds
;

682 i‡(!
∑r£L⁄g
(
cuºítPosôi⁄
, &
po°P¨£Posôi⁄
, 10, &
‰acSec⁄ds
))

685 
	gnumFøcDigôs
 = 
po°P¨£Posôi⁄
 - 
cuºítPosôi⁄
;

686 
	g£c⁄ds
 +
‰acSec⁄ds
 * 
pow
(10.0, 
°©ic_ˇ°
<>(-
numFøcDigôs
));

688 
	gcuºítPosôi⁄
 = 
po°P¨£Posôi⁄
;

691 i‡(*
	gcuºítPosôi⁄
 == 'Z')

692  
cuºítPosôi⁄
 + 1;

694 
boﬁ
 
	gtzNeg©ive
;

695 i‡(*
	gcuºítPosôi⁄
 == '-')

696 
tzNeg©ive
 = 
åue
;

697 i‡(*
	gcuºítPosôi⁄
 == '+')

698 
tzNeg©ive
 = 
Ál£
;

700  
	gcuºítPosôi⁄
;

701 ++
	gcuºítPosôi⁄
;

703 
	gtzHours
;

704 
	gtzHoursAbs
;

705 
	gtzMöuãs
;

707 i‡(!
isASCIIDigô
(*
cuºítPosôi⁄
))

709 i‡(!
∑r£L⁄g
(
cuºítPosôi⁄
, &
po°P¨£Posôi⁄
, 10, &
tzHours
))

711 i‡(*
	gpo°P¨£Posôi⁄
 !':' || (
po°P¨£Posôi⁄
 - 
cuºítPosôi⁄
) != 2)

713 
	gtzHoursAbs
 = 
œbs
(
tzHours
);

714 
	gcuºítPosôi⁄
 = 
po°P¨£Posôi⁄
 + 1;

716 i‡(!
isASCIIDigô
(*
cuºítPosôi⁄
))

718 i‡(!
∑r£L⁄g
(
cuºítPosôi⁄
, &
po°P¨£Posôi⁄
, 10, &
tzMöuãs
))

720 i‡((
	gpo°P¨£Posôi⁄
 - 
	gcuºítPosôi⁄
) != 2)

722 
	gcuºítPosôi⁄
 = 
po°P¨£Posôi⁄
;

724 i‡(
	gtzHoursAbs
 > 24)

726 i‡(
	gtzMöuãs
 < 0 ||ÅzMinutes > 59)

729 
	gtimeZ⁄eSec⁄ds
 = 60 * (
tzMöuãs
 + (60 * 
tzHoursAbs
));

730 i‡(
	gtzNeg©ive
)

731 
	gtimeZ⁄eSec⁄ds
 = -
timeZ⁄eSec⁄ds
;

733  
	gcuºítPosôi⁄
;

736 
∑r£ES5D©eFromNuŒTîmö©edCh¨a˘îs
(c⁄° * 
d©eSåög
)

742 c⁄° 
	gdaysPîM⁄th
[12] = { 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

745 
	gyór
 = 0;

746 
	gm⁄th
 = 1;

747 
	gday
 = 1;

748 
	ghours
 = 0;

749 
	gmöuãs
 = 0;

750 
	g£c⁄ds
 = 0;

751 
	gtimeZ⁄eSec⁄ds
 = 0;

754 * 
	gcuºítPosôi⁄
 = 
∑r£ES5D©eP‹ti⁄
(
d©eSåög
, 
yór
, 
m⁄th
, 
day
);

755 i‡(!
	gcuºítPosôi⁄
)

756  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

758 i‡(*
	gcuºítPosôi⁄
 == 'T') {

760 
cuºítPosôi⁄
 = 
∑r£ES5TimeP‹ti⁄
(cuºítPosôi⁄ + 1, 
hours
, 
möuãs
, 
£c⁄ds
, 
timeZ⁄eSec⁄ds
);

761 i‡(!
	gcuºítPosôi⁄
)

762  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

765 i‡(*
	gcuºítPosôi⁄
)

766  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

770 i‡(
	gm⁄th
 < 1 || month > 12)

771  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

772 i‡(
	gday
 < 1 || day > 
	gdaysPîM⁄th
[
m⁄th
 - 1])

773  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

774 i‡(
	gm⁄th
 =2 && 
day
 > 28 && !
isLópYór
(
yór
))

775  
°d
::
numîic_limôs
<>::
quõt_NaN
();

776 i‡(
	ghours
 < 0 || hours > 24)

777  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

778 i‡(
	ghours
 =24 && (
möuãs
 || 
£c⁄ds
))

779  
°d
::
numîic_limôs
<>::
quõt_NaN
();

780 i‡(
	gmöuãs
 < 0 || minutes > 59)

781  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

782 i‡(
	g£c⁄ds
 < 0 || seconds >= 61)

783  
°d
::
numîic_limôs
<>::
quõt_NaN
();

784 i‡(
	g£c⁄ds
 > 60) {

786 
	g£c⁄ds
 = 60;

789 
	gd©eSec⁄ds
 = 
ymdhmsToSec⁄ds
(
yór
, 
m⁄th
, 
day
, 
hours
, 
möuãs
, 
£c⁄ds
Ë- 
	gtimeZ⁄eSec⁄ds
;

790  
d©eSec⁄ds
 * 
	gmsPîSec⁄d
;

794 
∑r£D©eFromNuŒTîmö©edCh¨a˘îs
(c⁄° * 
d©eSåög
, 
boﬁ
& 
haveTZ
, & 
off£t
)

796 
	ghaveTZ
 = 
Ál£
;

797 
	goff£t
 = 0;

814 
skùS∑˚sAndCommíts
(
d©eSåög
);

816 
	gm⁄th
 = -1;

817 c⁄° *
	gw‹dSèπ
 = 
d©eSåög
;

819 *
	gd©eSåög
 && !
isASCIIDigô
(*
d©eSåög
)) {

820 i‡(
isASCIIS∑˚
(*
d©eSåög
Ë|| *
	gd©eSåög
 == '(') {

821 i‡(
d©eSåög
 - 
w‹dSèπ
 >= 3)

822 
m⁄th
 = 
födM⁄th
(
w‹dSèπ
);

823 
skùS∑˚sAndCommíts
(
d©eSåög
);

824 
	gw‹dSèπ
 = 
d©eSåög
;

826 
	gd©eSåög
++;

830 i‡(
	gm⁄th
 =-1 && 
w‹dSèπ
 !
d©eSåög
)

831 
m⁄th
 = 
födM⁄th
(
w‹dSèπ
);

833 
skùS∑˚sAndCommíts
(
d©eSåög
);

835 i‡(!*
	gd©eSåög
)

836  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

839 * 
	g√wPosSå
;

840 
	gday
;

841 i‡(!
∑r£L⁄g
(
d©eSåög
, &
√wPosSå
, 10, &
day
))

842  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

843 
	gd©eSåög
 = 
√wPosSå
;

845 i‡(!*
	gd©eSåög
)

846  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

848 i‡(
	gday
 < 0)

849  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

851 
	gyór
 = 0;

852 i‡(
	gday
 > 31) {

854 i‡(*
	gd©eSåög
 != '/')

855  
°d
::
numîic_limôs
<>::
quõt_NaN
();

857 i‡(!*++
	gd©eSåög
)

858  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

859 i‡(
	gday
 <
°d
::
numîic_limôs
<>::
mö
(Ë|| 
day
 >°d::numîic_limôs<>::
max
())

860  
°d
::
numîic_limôs
<>::
quõt_NaN
();

861 
	gyór
 = 
°©ic_ˇ°
<>(
day
);

862 i‡(!
∑r£L⁄g
(
d©eSåög
, &
√wPosSå
, 10, &
m⁄th
))

863  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

864 
	gm⁄th
 -= 1;

865 
	gd©eSåög
 = 
√wPosSå
;

866 i‡(*
	gd©eSåög
++ !'/' || !*
d©eSåög
)

867  
°d
::
numîic_limôs
<>::
quõt_NaN
();

868 i‡(!
∑r£L⁄g
(
d©eSåög
, &
√wPosSå
, 10, &
day
))

869  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

870 
	gd©eSåög
 = 
√wPosSå
;

871 } i‡(*
	gd©eSåög
 ='/' && 
m⁄th
 == -1) {

872 
d©eSåög
++;

874 
	gm⁄th
 = 
day
 - 1;

875 i‡(!
∑r£L⁄g
(
d©eSåög
, &
√wPosSå
, 10, &
day
))

876  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

877 i‡(
	gday
 < 1 || day > 31)

878  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

879 
	gd©eSåög
 = 
√wPosSå
;

880 i‡(*
	gd©eSåög
 == '/')

881 
d©eSåög
++;

882 i‡(!*
	gd©eSåög
)

883  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

885 i‡(*
	gd©eSåög
 == '-')

886 
d©eSåög
++;

888 
skùS∑˚sAndCommíts
(
d©eSåög
);

890 i‡(*
	gd©eSåög
 == ',')

891 
d©eSåög
++;

893 i‡(
	gm⁄th
 == -1) {

894 
m⁄th
 = 
födM⁄th
(
d©eSåög
);

895 i‡(
	gm⁄th
 == -1)

896  
°d
::
numîic_limôs
<>::
quõt_NaN
();

898 *
	gd©eSåög
 && *d©eSåög !'-' && *
d©eSåög
 !',' && !
isASCIIS∑˚
(*dateString))

899 
d©eSåög
++;

901 i‡(!*
	gd©eSåög
)

902  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

905 i‡(*
	gd©eSåög
 !'-' && *
d©eSåög
 !'/' && *d©eSåög !',' && !
isASCIIS∑˚
(*dateString))

906  
°d
::
numîic_limôs
<>::
quõt_NaN
();

907 
	gd©eSåög
++;

911 i‡(
	gm⁄th
 < 0 || month > 11)

912  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

915 i‡(
	gyór
 <0 && *
d©eSåög
) {

916 i‡(!
∑r£I¡
(
d©eSåög
, &
√wPosSå
, 10, &
yór
))

917  
°d
::
numîic_limôs
<>::
quõt_NaN
();

921 
	ghour
 = 0;

922 
	gmöuã
 = 0;

923 
	g£c⁄d
 = 0;

924 i‡(!*
	g√wPosSå
)

925 
	gd©eSåög
 = 
√wPosSå
;

928 i‡(!(
isASCIIS∑˚
(*
√wPosSå
Ë|| *
	g√wPosSå
 == ',')) {

929 i‡(*
√wPosSå
 != ':')

930  
°d
::
numîic_limôs
<>::
quõt_NaN
();

932 
	gyór
 = -1;

935 
	gd©eSåög
 = ++
√wPosSå
;

936 
skùS∑˚sAndCommíts
(
d©eSåög
);

939 
∑r£L⁄g
(
d©eSåög
, &
√wPosSå
, 10, &
hour
);

945 i‡(
	g√wPosSå
 !
d©eSåög
) {

946 
d©eSåög
 = 
√wPosSå
;

948 i‡(
	ghour
 < 0 || hour > 23)

949  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

951 i‡(!*
	gd©eSåög
)

952  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

955 i‡(*
	gd©eSåög
++ != ':')

956  
°d
::
numîic_limôs
<>::
quõt_NaN
();

958 i‡(!
∑r£L⁄g
(
d©eSåög
, &
√wPosSå
, 10, &
möuã
))

959  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

960 
	gd©eSåög
 = 
√wPosSå
;

962 i‡(
	gmöuã
 < 0 || minute > 59)

963  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

966 i‡(*
	gd©eSåög
 && *d©eSåög !':' && !
isASCIIS∑˚
(*
d©eSåög
))

967  
°d
::
numîic_limôs
<>::
quõt_NaN
();

970 i‡(*
	gd©eSåög
 ==':') {

971 
d©eSåög
++;

973 i‡(!
∑r£L⁄g
(
d©eSåög
, &
√wPosSå
, 10, &
£c⁄d
))

974  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

975 
	gd©eSåög
 = 
√wPosSå
;

977 i‡(
	g£c⁄d
 < 0 || second > 59)

978  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

981 
skùS∑˚sAndCommíts
(
d©eSåög
);

983 i‡(
°∫ˇ£cmp
(
d©eSåög
, "AM", 2) == 0) {

984 i‡(
hour
 > 12)

985  
°d
::
numîic_limôs
<>::
quõt_NaN
();

986 i‡(
	ghour
 == 12)

987 
hour
 = 0;

988 
	gd©eSåög
 += 2;

989 
skùS∑˚sAndCommíts
(
d©eSåög
);

990 } i‡(
°∫ˇ£cmp
(
d©eSåög
, "PM", 2) == 0) {

991 i‡(
hour
 > 12)

992  
°d
::
numîic_limôs
<>::
quõt_NaN
();

993 i‡(
	ghour
 != 12)

994 
hour
 += 12;

995 
	gd©eSåög
 += 2;

996 
skùS∑˚sAndCommíts
(
d©eSåög
);

1002 i‡(
isASCIIDigô
(*
d©eSåög
Ë&& 
	gyór
 == -1) {

1003 i‡(!
∑r£I¡
(
d©eSåög
, &
√wPosSå
, 10, &
yór
))

1004  
°d
::
numîic_limôs
<>::
quõt_NaN
();

1005 
	gd©eSåög
 = 
√wPosSå
;

1006 
skùS∑˚sAndCommíts
(
d©eSåög
);

1011 i‡(*
	gd©eSåög
) {

1012 i‡(
°∫ˇ£cmp
(
d©eSåög
, "GMT", 3) == 0 || strncasecmp(dateString, "UTC", 3) == 0) {

1013 
d©eSåög
 += 3;

1014 
	ghaveTZ
 = 
åue
;

1017 i‡(*
	gd©eSåög
 ='+' || *
d©eSåög
 == '-') {

1018 
o
;

1019 i‡(!
∑r£I¡
(
d©eSåög
, &
√wPosSå
, 10, &
o
))

1020  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

1021 
	gd©eSåög
 = 
√wPosSå
;

1023 i‡(
	go
 < -9959 || o > 9959)

1024  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

1026 
	gsgn
 = (
o
 < 0) ? -1 : 1;

1027 
	go
 = 
abs
(
o
);

1028 i‡(*
	gd©eSåög
 != ':') {

1029 i‡(
o
 >= 24)

1030 
off£t
 = ((
o
 / 100Ë* 60 + (ÿ% 100)Ë* 
sgn
;

1032 
	goff£t
 = 
o
 * 60 * 
sgn
;

1034 ++
	gd©eSåög
;

1035 
	go2
;

1036 i‡(!
∑r£I¡
(
d©eSåög
, &
√wPosSå
, 10, &
o2
))

1037  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

1038 
	gd©eSåög
 = 
√wPosSå
;

1039 
	goff£t
 = (
o
 * 60 + 
o2
Ë* 
sgn
;

1041 
	ghaveTZ
 = 
åue
;

1043 
size_t
 
	gi
 = 0; i < 
WTF_ARRAY_LENGTH
(
known_z⁄es
); ++i) {

1044 i‡(0 =
°∫ˇ£cmp
(
d©eSåög
, 
known_z⁄es
[
i
].
tzName
, 
°æí
(known_zones[i].tzName))) {

1045 
	goff£t
 = 
known_z⁄es
[
i
].
tzOff£t
;

1046 
	gd©eSåög
 +
°æí
(
known_z⁄es
[
i
].
tzName
);

1047 
	ghaveTZ
 = 
åue
;

1054 
skùS∑˚sAndCommíts
(
d©eSåög
);

1056 i‡(*
	gd©eSåög
 && 
	gyór
 == -1) {

1057 i‡(!
∑r£I¡
(
d©eSåög
, &
√wPosSå
, 10, &
yór
))

1058  
°d
::
numîic_limôs
<>::
quõt_NaN
();

1059 
	gd©eSåög
 = 
√wPosSå
;

1060 
skùS∑˚sAndCommíts
(
d©eSåög
);

1064 i‡(*
	gd©eSåög
)

1065  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

1068 i‡(
	gyór
 >0 && 
yór
 < 100) {

1069 i‡(
yór
 < 50)

1070 
yór
 += 2000;

1072 
	gyór
 += 1900;

1075  
ymdhmsToSec⁄ds
(
yór
, 
m⁄th
 + 1, 
day
, 
hour
, 
möuã
, 
£c⁄d
Ë* 
	gmsPîSec⁄d
;

1078 
∑r£D©eFromNuŒTîmö©edCh¨a˘îs
(c⁄° * 
d©eSåög
)

1080 
boﬁ
 
	ghaveTZ
;

1081 
	goff£t
;

1082 
	gms
 = 
∑r£D©eFromNuŒTîmö©edCh¨a˘îs
(
d©eSåög
, 
haveTZ
, 
off£t
);

1083 i‡(
	g°d
::
i¢™
(
ms
))

1084  
°d
::
numîic_limôs
<>::
quõt_NaN
();

1087 i‡(!
	ghaveTZ
)

1088 
	goff£t
 = 
ˇlcuœãLoˇlTimeOff£t
(
ms
).
off£t
 / 
msPîMöuã
;

1090  
	gms
 - (
off£t
 * 
	gmsPîMöuã
);

1093 
timeClù
(
t
)

1095 i‡(!
	g°d
::
isföôe
(
t
))

1096  
°d
::
numîic_limôs
<>::
quõt_NaN
();

1097 i‡(
Ábs
(
t
Ë> 
	gmaxECMAS¸ùtTime
)

1098  
	g°d
::
numîic_limôs
<>::
quõt_NaN
();

1099  
åunc
(
t
);

1103 
Såög
 
makeRFC2822D©eSåög
(
dayOfWìk
, 
day
, 
m⁄th
, 
yór
, 
hours
, 
möuãs
, 
£c⁄ds
, 
utcOff£t
)

1105 
SåögBuûdî
 
	g°rögBuûdî
;

1106 
	g°rögBuûdî
.
≠≥nd
(
wìkdayName
[
dayOfWìk
]);

1107 
	g°rögBuûdî
.
≠≥ndLôîÆ
(", ");

1108 
	g°rögBuûdî
.
≠≥ndNumbî
(
day
);

1109 
	g°rögBuûdî
.
≠≥nd
(' ');

1110 
	g°rögBuûdî
.
≠≥nd
(
m⁄thName
[
m⁄th
]);

1111 
	g°rögBuûdî
.
≠≥nd
(' ');

1112 
	g°rögBuûdî
.
≠≥ndNumbî
(
yór
);

1113 
	g°rögBuûdî
.
≠≥nd
(' ');

1115 
≠≥ndTwoDigôNumbî
(
°rögBuûdî
, 
hours
);

1116 
	g°rögBuûdî
.
≠≥nd
(':');

1117 
≠≥ndTwoDigôNumbî
(
°rögBuûdî
, 
möuãs
);

1118 
	g°rögBuûdî
.
≠≥nd
(':');

1119 
≠≥ndTwoDigôNumbî
(
°rögBuûdî
, 
£c⁄ds
);

1120 
	g°rögBuûdî
.
≠≥nd
(' ');

1122 
	g°rögBuûdî
.
≠≥nd
(
utcOff£t
 > 0 ? '+' : '-');

1123 
	gabsﬁuãUTCOff£t
 = 
abs
(
utcOff£t
);

1124 
≠≥ndTwoDigôNumbî
(
°rögBuûdî
, 
absﬁuãUTCOff£t
 / 60);

1125 
≠≥ndTwoDigôNumbî
(
°rögBuûdî
, 
absﬁuãUTCOff£t
 % 60);

1127  
	g°rögBuûdî
.
toSåög
();

	@DateMath.h

43 #i‚de‡
D©eM©h_h


44 
	#D©eM©h_h


	)

46 
	~<m©h.h
>

47 
	~<°döt.h
>

48 
	~<°rög.h
>

49 
	~<time.h
>

50 
	~<wtf/CuºítTime.h
>

51 
	~<wtf/N⁄c›yabÀ.h
>

52 
	~<wtf/ãxt/WTFSåög.h
>

54 
«me•a˚
 
	gWTF
 {

56 
	sLoˇlTimeOff£t
 {

57 
LoˇlTimeOff£t
()

58 : 
isDST
(
Ál£
)

59 , 
off£t
(0)

63 
LoˇlTimeOff£t
(
boﬁ
 
isDST
, 
off£t
)

64 : 
isDST
(isDST)

65 , 
off£t
(offset)

69 
boﬁ
 
	g›î©‹
==(c⁄° 
LoˇlTimeOff£t
& 
Ÿhî
)

71  
isDST
 =
Ÿhî
.isDST && 
off£t
 == other.offset;

74 
boﬁ
 
	g›î©‹
!=(c⁄° 
LoˇlTimeOff£t
& 
Ÿhî
)

76  
isDST
 !
Ÿhî
.isDST || 
off£t
 != other.offset;

79 
boﬁ
 
	gisDST
;

80 
	goff£t
;

83 
öôülizeD©es
();

84 
equivÆítYórF‹DST
(
yór
);

87 
WTF_EXPORT_PRIVATE
 
∑r£ES5D©eFromNuŒTîmö©edCh¨a˘îs
(c⁄° * 
d©eSåög
);

88 
WTF_EXPORT_PRIVATE
 
∑r£D©eFromNuŒTîmö©edCh¨a˘îs
(c⁄° * 
d©eSåög
);

89 
WTF_EXPORT_PRIVATE
 
∑r£D©eFromNuŒTîmö©edCh¨a˘îs
(c⁄° * 
d©eSåög
, 
boﬁ
& 
haveTZ
, & 
off£t
);

90 
WTF_EXPORT_PRIVATE
 
timeClù
();

92 
Såög
 
makeRFC2822D©eSåög
(
dayOfWìk
, 
day
, 
m⁄th
, 
yór
, 
hours
, 
möuãs
, 
£c⁄ds
, 
utcOff£t
);

94 
ölöe
 
jsCuºítTime
()

97  
Êo‹
(
WTF
::
cuºítTimeMS
());

100 c⁄° * c⁄° 
	gwìkdayName
[7] = { "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun" };

101 c⁄° * c⁄° 
	gm⁄thName
[12] = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };

102 c⁄° * c⁄° 
	gm⁄thFuŒName
[12] = { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" };

104 c⁄° 
	ghoursPîDay
 = 24.0;

105 c⁄° 
	gmöuãsPîHour
 = 60.0;

106 c⁄° 
	g£c⁄dsPîMöuã
 = 60.0;

107 c⁄° 
	gmsPîSec⁄d
 = 1000.0;

108 c⁄° 
	gmsPîM⁄th
 = 2592000000.0;

109 c⁄° 
	g£c⁄dsPîHour
 = 
£c⁄dsPîMöuã
 * 
möuãsPîHour
;

110 c⁄° 
	g£c⁄dsPîDay
 = 
£c⁄dsPîHour
 * 
hoursPîDay
;

111 c⁄° 
	gmsPîMöuã
 = 
msPîSec⁄d
 * 
£c⁄dsPîMöuã
;

112 c⁄° 
	gmsPîHour
 = 
msPîSec⁄d
 * 
£c⁄dsPîHour
;

113 c⁄° 
	gmsPîDay
 = 
msPîSec⁄d
 * 
£c⁄dsPîDay
;

115 
WTF_EXPORT_PRIVATE
 
boﬁ
 
isLópYór
(
yór
);

118 
WTF_EXPORT_PRIVATE
 
d©eToDaysFrom1970
(
yór
, 
m⁄th
, 
day
);

119 
WTF_EXPORT_PRIVATE
 
msToYór
(
ms
);

120 
WTF_EXPORT_PRIVATE
 
msToDays
(
ms
);

121 
WTF_EXPORT_PRIVATE
 
msToMöuãs
(
ms
);

122 
WTF_EXPORT_PRIVATE
 
msToHours
(
ms
);

123 
WTF_EXPORT_PRIVATE
 
dayInYór
(
yór
, 
m⁄th
, 
day
);

124 
WTF_EXPORT_PRIVATE
 
dayInYór
(
ms
, 
yór
);

125 
WTF_EXPORT_PRIVATE
 
m⁄thFromDayInYór
(
dayInYór
, 
boﬁ
 
À≠Yór
);

126 
WTF_EXPORT_PRIVATE
 
dayInM⁄thFromDayInYór
(
dayInYór
, 
boﬁ
 
À≠Yór
);

129 
WTF_EXPORT_PRIVATE
 
LoˇlTimeOff£t
 
ˇlcuœãLoˇlTimeOff£t
(
utcInMûli£c⁄ds
);

133 
usög
 
	gWTF
::
isLópYór
;

134 
usög
 
	gWTF
::
d©eToDaysFrom1970
;

135 
usög
 
	gWTF
::
dayInM⁄thFromDayInYór
;

136 
usög
 
	gWTF
::
dayInYór
;

137 
usög
 
	gWTF
::
möuãsPîHour
;

138 
usög
 
	gWTF
::
m⁄thFromDayInYór
;

139 
usög
 
	gWTF
::
msPîDay
;

140 
usög
 
	gWTF
::
msPîHour
;

141 
usög
 
	gWTF
::
msPîMöuã
;

142 
usög
 
	gWTF
::
msPîSec⁄d
;

143 
usög
 
	gWTF
::
msToYór
;

144 
usög
 
	gWTF
::
msToDays
;

145 
usög
 
	gWTF
::
msToMöuãs
;

146 
usög
 
	gWTF
::
msToHours
;

147 
usög
 
	gWTF
::
£c⁄dsPîDay
;

148 
usög
 
	gWTF
::
£c⁄dsPîMöuã
;

149 
usög
 
	gWTF
::
∑r£D©eFromNuŒTîmö©edCh¨a˘îs
;

150 
usög
 
	gWTF
::
makeRFC2822D©eSåög
;

151 
usög
 
	gWTF
::
LoˇlTimeOff£t
;

152 
usög
 
	gWTF
::
ˇlcuœãLoˇlTimeOff£t
;

	@DecimalNumber.cpp

26 
	~"c⁄fig.h
"

27 
	~"DecimÆNumbî.h
"

28 
	~<m©h.h
>

29 
	~<wtf/M©hExåas.h
>

30 
	~<wtf/ãxt/WTFSåög.h
>

32 
«me•a˚
 
	gWTF
 {

34 
	gDecimÆNumbî
::
buf„rLígthF‹SåögDecimÆ
() const

36 
Àngth
 = 0;

39 i‡(
	gm_exp⁄ít
 < 0) {

40 i‡(
	gm_sign
)

41 ++
	gÀngth
;

42 
	gÀngth
 += 2;

43 
	gÀngth
 +-
m_exp⁄ít
 - 1;

44 
	gÀngth
 +
m_¥ecisi⁄
;

45  
	gÀngth
;

48 
	gdigôsBef‹eDecimÆPoöt
 = 
m_exp⁄ít
 + 1;

53 i‡(
	gm_¥ecisi⁄
 <
digôsBef‹eDecimÆPoöt
) {

54 i‡(
m_sign
)

55 ++
Àngth
;

56 
	gÀngth
 +
m_¥ecisi⁄
;

57 
	gÀngth
 +
digôsBef‹eDecimÆPoöt
 - 
m_¥ecisi⁄
;

58  
	gÀngth
;

64 i‡(
	gm_sign
)

65 ++
	gÀngth
;

66 
	gÀngth
 +
digôsBef‹eDecimÆPoöt
;

67 ++
	gÀngth
;

68 
	gÀngth
 +
m_¥ecisi⁄
 - 
digôsBef‹eDecimÆPoöt
;

70  
	gÀngth
;

73 
	gDecimÆNumbî
::
buf„rLígthF‹SåögExp⁄ítül
() const

75 
Àngth
 = 0;

76 i‡(
	gm_sign
)

77 ++
	gÀngth
;

80 ++
	gÀngth
;

82 i‡(
	gm_¥ecisi⁄
 > 1) {

83 ++
	gÀngth
;

84 
	gÀngth
 +
m_¥ecisi⁄
 - 1;

88 
	gÀngth
 += 2;

90 
	gexp⁄ít
 = (
m_exp⁄ít
 >= 0) ? m_exponent : -m_exponent;

93 i‡(
	gexp⁄ít
 >= 100)

94 ++
Àngth
;

95 i‡(
	gexp⁄ít
 >= 10)

96 ++
Àngth
;

97 ++
	gÀngth
;

99  
	gÀngth
;

102 
	gDecimÆNumbî
::
toSåögDecimÆ
(
LCh¨
* 
buf„r
, 
buf„rLígth
) const

104 
ASSERT_UNUSED
(
buf„rLígth
, buf„rLígth >
buf„rLígthF‹SåögDecimÆ
());

107 
ASSERT
(
m_¥ecisi⁄
);

108 
LCh¨
* 
	g√xt
 = 
buf„r
;

112 i‡(
	gm_exp⁄ít
 < 0) {

113 
	gzîos
 = -
m_exp⁄ít
 - 1;

115 i‡(
	gm_sign
)

116 *
	g√xt
++ = '-';

117 *
	g√xt
++ = '0';

118 *
	g√xt
++ = '.';

119 
	gi
 = 0; i < 
	gzîos
; ++i)

120 *
	g√xt
++ = '0';

121 
	gi
 = 0; i < 
	gm_¥ecisi⁄
; ++i)

122 *
	g√xt
++ = 
m_signifiˇnd
[
i
];

124  
	g√xt
 - 
	gbuf„r
;

127 
	gdigôsBef‹eDecimÆPoöt
 = 
m_exp⁄ít
 + 1;

132 i‡(
	gm_¥ecisi⁄
 <
digôsBef‹eDecimÆPoöt
) {

133 i‡(
m_sign
)

134 *
√xt
++ = '-';

135 
	gi
 = 0; i < 
	gm_¥ecisi⁄
; ++i)

136 *
	g√xt
++ = 
m_signifiˇnd
[
i
];

137 
	gi
 = 0; i < (
	gdigôsBef‹eDecimÆPoöt
 - 
	gm_¥ecisi⁄
); ++i)

138 *
	g√xt
++ = '0';

140  
	g√xt
 - 
	gbuf„r
;

147 i‡(
	gm_sign
)

148 *
	g√xt
++ = '-';

149 
	gi
 = 0; i < 
	gdigôsBef‹eDecimÆPoöt
; ++i)

150 *
	g√xt
++ = 
m_signifiˇnd
[
i
];

151 *
	g√xt
++ = '.';

152 
	gi
 = 
digôsBef‹eDecimÆPoöt
; i < 
	gm_¥ecisi⁄
; ++i)

153 *
	g√xt
++ = 
m_signifiˇnd
[
i
];

155  
	g√xt
 - 
	gbuf„r
;

158 
	gDecimÆNumbî
::
toSåögExp⁄ítül
(
LCh¨
* 
buf„r
, 
buf„rLígth
) const

160 
ASSERT_UNUSED
(
buf„rLígth
, buf„rLígth >
buf„rLígthF‹SåögExp⁄ítül
());

163 
ASSERT
(
m_¥ecisi⁄
);

164 
LCh¨
* 
	g√xt
 = 
buf„r
;

167 i‡(
	gm_sign
)

168 *
	g√xt
++ = '-';

171 *
	g√xt
++ = 
m_signifiˇnd
[0];

172 i‡(
	gm_¥ecisi⁄
 > 1) {

173 *
	g√xt
++ = '.';

174 
	gi
 = 1; i < 
	gm_¥ecisi⁄
; ++i)

175 *
	g√xt
++ = 
m_signifiˇnd
[
i
];

179 *
	g√xt
++ = 'e';

180 
	gexp⁄ít
;

181 i‡(
	gm_exp⁄ít
 >= 0) {

182 *
√xt
++ = '+';

183 
	gexp⁄ít
 = 
m_exp⁄ít
;

185 *
	g√xt
++ = '-';

186 
	gexp⁄ít
 = -
m_exp⁄ít
;

190 i‡(
	gexp⁄ít
 >= 100)

191 *
√xt
++ = '0' + 
exp⁄ít
 / 100;

192 i‡(
	gexp⁄ít
 >= 10)

193 *
√xt
++ = '0' + (
exp⁄ít
 % 100) / 10;

194 *
	g√xt
++ = '0' + 
exp⁄ít
 % 10;

196  
	g√xt
 - 
	gbuf„r
;

	@DecimalNumber.h

26 #i‚de‡
DecimÆNumbî_h


27 
	#DecimÆNumbî_h


	)

29 
	~<m©h.h
>

30 
	~<wtf/dtﬂ.h
>

31 
	~<wtf/M©hExåas.h
>

32 
	~<wtf/ãxt/WTFSåög.h
>

34 
«me•a˚
 
	gWTF
 {

36 
	eRoundögSignifiˇ¡FiguªsTy≥
 { 
	gRoundögSignifiˇ¡Figuªs
 };

37 
	eRoundögDecimÆPœ˚sTy≥
 { 
	gRoundögDecimÆPœ˚s
 };

39 ˛as†
	cDecimÆNumbî
 {

40 
	gpublic
:

41 
DecimÆNumbî
(
d
)

43 
ASSERT
(
°d
::
isföôe
(
d
));

44 
dtﬂ
(
m_signifiˇnd
, 
d
, 
m_sign
, 
m_exp⁄ít
, 
m_¥ecisi⁄
);

46 
ASSERT
(
m_¥ecisi⁄
);

48 
ASSERT
(
m_signifiˇnd
[0] !'0' || !
m_exp⁄ít
);

50 
ASSERT
(
m_signifiˇnd
[0] !'0' || 
m_¥ecisi⁄
 == 1);

52 
ASSERT
(
m_signifiˇnd
[0] ='0' || m_signifiˇnd[
m_¥ecisi⁄
 - 1] != '0');

55 
DecimÆNumbî
(
d
, 
RoundögSignifiˇ¡FiguªsTy≥
, 
signifiˇ¡Figuªs
)

57 
ASSERT
(
°d
::
isföôe
(
d
));

58 
dtﬂRoundSF
(
m_signifiˇnd
, 
d
, 
signifiˇ¡Figuªs
, 
m_sign
, 
m_exp⁄ít
, 
m_¥ecisi⁄
);

60 
ASSERT_WITH_SECURITY_IMPLICATION
(
signifiˇ¡Figuªs
 && signifiˇ¡Figuª†<(
DtﬂBuf„r
));

61 
	gm_¥ecisi⁄
 < 
	gsignifiˇ¡Figuªs
)

62 
	gm_signifiˇnd
[
m_¥ecisi⁄
++] = '0';

64 
ASSERT
(
m_¥ecisi⁄
);

66 
ASSERT
(
m_signifiˇnd
[0] !'0' || !
m_exp⁄ít
);

69 
DecimÆNumbî
(
d
, 
RoundögDecimÆPœ˚sTy≥
, 
decimÆPœ˚s
)

71 
ASSERT
(
°d
::
isföôe
(
d
));

72 
dtﬂRoundDP
(
m_signifiˇnd
, 
d
, 
decimÆPœ˚s
, 
m_sign
, 
m_exp⁄ít
, 
m_¥ecisi⁄
);

74 
	gsignifiˇ¡Figuªs
 = 1 + 
m_exp⁄ít
 + 
decimÆPœ˚s
;

75 
ASSERT_WITH_SECURITY_IMPLICATION
(
signifiˇ¡Figuªs
 && signifiˇ¡Figuª†<(
DtﬂBuf„r
));

76 
	gm_¥ecisi⁄
 < 
	gsignifiˇ¡Figuªs
)

77 
	gm_signifiˇnd
[
m_¥ecisi⁄
++] = '0';

79 
ASSERT
(
m_¥ecisi⁄
);

81 
ASSERT
(
m_signifiˇnd
[0] !'0' || !
m_exp⁄ít
);

84 
WTF_EXPORT_PRIVATE
 
buf„rLígthF‹SåögDecimÆ
() const;

85 
WTF_EXPORT_PRIVATE
 
buf„rLígthF‹SåögExp⁄ítül
() const;

87 
WTF_EXPORT_PRIVATE
 
toSåögDecimÆ
(
LCh¨
* 
buf„r
, 
buf„rLígth
) const;

88 
WTF_EXPORT_PRIVATE
 
toSåögExp⁄ítül
(
LCh¨
* 
buf„r
, 
buf„rLígth
) const;

90 
boﬁ
 
sign
(Ëc⁄° {  
	gm_sign
; }

91 
exp⁄ít
(Ëc⁄° {  
	gm_exp⁄ít
; }

92 c⁄° * 
signifiˇnd
(Ëc⁄° {  
	gm_signifiˇnd
; }

93 
¥ecisi⁄
(Ëc⁄° {  
	gm_¥ecisi⁄
; }

95 
	g¥iv©e
:

96 
boﬁ
 
m_sign
;

97 
	gm_exp⁄ít
;

98 
DtﬂBuf„r
 
	gm_signifiˇnd
;

99 
	gm_¥ecisi⁄
;

104 
usög
 
	gWTF
::
DecimÆNumbî
;

105 
usög
 
	gWTF
::
RoundögSignifiˇ¡Figuªs
;

106 
usög
 
	gWTF
::
RoundögDecimÆPœ˚s
;

	@DeferrableRefCounted.h

26 #i‚de‡
De„ºabÀRefCou¡ed_h


27 
	#De„ºabÀRefCou¡ed_h


	)

29 
	~<wtf/As£πi⁄s.h
>

30 
	~<wtf/Fa°MÆloc.h
>

31 
	~<wtf/N⁄c›yabÀ.h
>

33 
«me•a˚
 
	gWTF
 {

41 ˛as†
	cDe„ºabÀRefCou¡edBa£
 {

42 c⁄° 
	gde„ºedFœg
 = 1;

43 c⁄° 
	gn‹mÆIn¸emít
 = 2;

45 
	gpublic
:

46 
ªf
()

48 
m_ªfCou¡
 +
n‹mÆIn¸emít
;

51 
boﬁ
 
hasO√Ref
() const

53  
ªfCou¡
() == 1;

56 
ªfCou¡
() const

58  
	gm_ªfCou¡
 / 
	gn‹mÆIn¸emít
;

61 
boﬁ
 
isDe„ºed
() const

63  !!(
	gm_ªfCou¡
 & 
	gde„ºedFœg
);

66 
	g¥Ÿe˘ed
:

67 
De„ºabÀRefCou¡edBa£
()

68 : 
m_ªfCou¡
(
n‹mÆIn¸emít
)

72 ~
De„ºabÀRefCou¡edBa£
()

76 
boﬁ
 
dîefBa£
()

78 
m_ªfCou¡
 -
n‹mÆIn¸emít
;

79  !
	gm_ªfCou¡
;

82 
boﬁ
 
£tIsDe„ºedBa£
(boﬁ 
vÆue
)

84 i‡(
	gvÆue
) {

85 
	gm_ªfCou¡
 |
de„ºedFœg
;

86  
	gÁl£
;

88 
	gm_ªfCou¡
 &~
de„ºedFœg
;

89  !
	gm_ªfCou¡
;

92 
	g¥iv©e
:

93 
m_ªfCou¡
;

96 
	gãm∂©e
<
ty≥«me
 
	gT
>

97 ˛as†
	cDe„ºabÀRefCou¡ed
 : 
public
 
De„ºabÀRefCou¡edBa£
 {

98 
WTF_MAKE_NONCOPYABLE
(
De„ºabÀRefCou¡ed
); 
	gWTF_MAKE_FAST_ALLOCATED
;

99 
	gpublic
:

100 
dîef
()

102 i‡(
dîefBa£
())

103 
dñëe
 
°©ic_ˇ°
<
T
*>(
this
);

106 
boﬁ
 
£tIsDe„ºed
(boﬁ 
vÆue
)

108 i‡(!
£tIsDe„ºedBa£
(
vÆue
))

109  
	gÁl£
;

110 
dñëe
 
	g°©ic_ˇ°
<
	gT
*>(
	gthis
);

111  
	gåue
;

114 
	g¥Ÿe˘ed
:

115 
De„ºabÀRefCou¡ed
() { }

116 ~
De„ºabÀRefCou¡ed
() { }

121 
usög
 
	gWTF
::
De„ºabÀRefCou¡ed
;

	@Deque.h

30 #i‚de‡
WTF_Deque_h


31 
	#WTF_Deque_h


	)

36 
	~<ôî©‹
>

37 
	~<wtf/Ve˘‹.h
>

39 
«me•a˚
 
	gWTF
 {

41 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
> 
˛ass
 
	gDequeIãøt‹Ba£
;

42 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
> 
˛ass
 
	gDequeIãøt‹
;

43 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
> 
˛ass
 
	gDequeC⁄°Iãøt‹
;

45 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
 = 0>

46 ˛as†
	cDeque
 {

47 
WTF_MAKE_FAST_ALLOCATED
;

48 
	gpublic
:

49 
DequeIãøt‹
<
	tT
, 
	tölöeC≠acôy
> 
	tôî©‹
;

50 
	gDequeC⁄°Iãøt‹
<
	tT
, 
	tölöeC≠acôy
> 
	tc⁄°_ôî©‹
;

51 
	g°d
::
	tªvî£_ôî©‹
<
	tôî©‹
>Ñeverse_iterator;

52 
	g°d
::
	tªvî£_ôî©‹
<
	tc⁄°_ôî©‹
> 
	tc⁄°_ªvî£_ôî©‹
;

54 
Deque
();

55 
Deque
(c⁄° Deque<
T
, 
ölöeC≠acôy
>&);

56 
	gDeque
& 
	g›î©‹
=(c⁄° 
Deque
<
T
, 
	gölöeC≠acôy
>&);

57 ~
Deque
();

59 
sw≠
(
Deque
<
T
, 
ölöeC≠acôy
>&);

61 
size_t
 
size
(Ëc⁄° {  
	gm_°¨t
 <
m_íd
 ? m_íd - 
m_°¨t
 : m_íd + 
m_buf„r
.
ˇ∑côy
() - m_start; }

62 
boﬁ
 
isEm±y
(Ëc⁄° {  
	gm_°¨t
 =
m_íd
; }

64 
ôî©‹
 
begö
(Ë{  iãøt‹(
this
, 
m_°¨t
); }

65 
ôî©‹
 
íd
(Ë{  iãøt‹(
this
, 
m_íd
); }

66 
c⁄°_ôî©‹
 
begö
(Ëc⁄° {  c⁄°_ôî©‹(
this
, 
m_°¨t
); }

67 
c⁄°_ôî©‹
 
íd
(Ëc⁄° {  c⁄°_ôî©‹(
this
, 
m_íd
); }

68 
ªvî£_ôî©‹
 
rbegö
(Ë{ Ñevî£_ôî©‹(
íd
()); }

69 
ªvî£_ôî©‹
 
ªnd
(Ë{ Ñevî£_ôî©‹(
begö
()); }

70 
c⁄°_ªvî£_ôî©‹
 
rbegö
(Ëc⁄° {  c⁄°_ªvî£_ôî©‹(
íd
()); }

71 
c⁄°_ªvî£_ôî©‹
 
ªnd
(Ëc⁄° {  c⁄°_ªvî£_ôî©‹(
begö
()); }

73 
	gT
& 
fú°
(Ë{ 
ASSERT
(
m_°¨t
 !
m_íd
);  
	gm_buf„r
.
buf„r
()[m_start]; }

74 c⁄° 
	gT
& 
fú°
(Ëc⁄° { 
ASSERT
(
m_°¨t
 !
m_íd
);  
	gm_buf„r
.
buf„r
()[m_start]; }

75 
T
 
èkeFú°
();

77 
	gT
& 
œ°
(Ë{ 
ASSERT
(
m_°¨t
 !
m_íd
);  *(--
íd
()); }

78 c⁄° 
	gT
& 
œ°
(Ëc⁄° { 
ASSERT
(
m_°¨t
 !
m_íd
);  *(--
íd
()); }

79 
T
 
èkeLa°
();

81 
	gãm∂©e
<
ty≥«me
 
	gU
> 
≠≥nd
(
U
&&);

82 
	gãm∂©e
<
ty≥«me
 
	gU
> 
¥ïíd
(
U
&&);

83 
ªmoveFú°
();

84 
ªmoveLa°
();

85 
ªmove
(
ôî©‹
&);

86 
ªmove
(
c⁄°_ôî©‹
&);

88 
˛ór
();

90 
	gãm∂©e
<
ty≥«me
 
	gPªdiˇã
>

91 
ôî©‹
 
födIf
(
Pªdiˇã
&&);

93 
	g¥iv©e
:

94 
‰õnd
 
˛ass
 
DequeIãøt‹Ba£
<
T
, 
	gölöeC≠acôy
>;

96 
	gVe˘‹Buf„r
<
	tT
, 
	tölöeC≠acôy
> 
	tBuf„r
;

97 
	gVe˘‹Ty≥O≥øti⁄s
<
	tT
> 
	tTy≥O≥øti⁄s
;

98 
	gDequeIãøt‹Ba£
<
	tT
, 
	tölöeC≠acôy
> 
	tIãøt‹Ba£
;

100 
ªmove
(
size_t
 
posôi⁄
);

101 
övÆid©eIãøt‹s
();

102 
de°royAŒ
();

103 
checkVÆidôy
() const;

104 
checkIndexVÆidôy
(
size_t
) const;

105 
ex∑ndC≠acôyIfNìded
();

106 
ex∑ndC≠acôy
();

108 
size_t
 
	gm_°¨t
;

109 
size_t
 
	gm_íd
;

110 
Buf„r
 
	gm_buf„r
;

111 #i‚de‡
NDEBUG


112 
muèbÀ
 
Iãøt‹Ba£
* 
	gm_ôî©‹s
;

116 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
 = 0>

117 ˛as†
	cDequeIãøt‹Ba£
 {

118 
¥Ÿe˘ed
:

119 
DequeIãøt‹Ba£
();

120 
DequeIãøt‹Ba£
(c⁄° 
Deque
<
T
, 
ölöeC≠acôy
>*, 
size_t
);

121 
DequeIãøt‹Ba£
(const DequeIteratorBase&);

122 
	gDequeIãøt‹Ba£
& 
	g›î©‹
=(c⁄° 
DequeIãøt‹Ba£
&);

123 ~
DequeIãøt‹Ba£
();

125 
assign
(c⁄° 
DequeIãøt‹Ba£
& 
Ÿhî
Ë{ *
	gthis
 = other; }

127 
ö¸emít
();

128 
de¸emít
();

130 
T
* 
bef‹e
() const;

131 
T
* 
a·î
() const;

133 
boﬁ
 
isEquÆ
(c⁄° 
DequeIãøt‹Ba£
&) const;

135 
	g¥iv©e
:

136 
addToIãøt‹sLi°
();

137 
ªmoveFromIãøt‹sLi°
();

138 
checkVÆidôy
() const;

139 
checkVÆidôy
(c⁄° 
DequeIãøt‹Ba£
&) const;

141 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>* 
	gm_deque
;

142 
size_t
 
	gm_ödex
;

144 
‰õnd
 
˛ass
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>;

146 #i‚de‡
NDEBUG


147 
muèbÀ
 
DequeIãøt‹Ba£
* 
	gm_√xt
;

148 
muèbÀ
 
DequeIãøt‹Ba£
* 
	gm_¥evious
;

152 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
 = 0>

153 
˛ass
 
DequeIãøt‹
 : 
public
 
DequeIãøt‹Ba£
<
T
, 
	gölöeC≠acôy
> {

154 
	g¥iv©e
:

155 
DequeIãøt‹Ba£
<
	tT
, 
	tölöeC≠acôy
> 
	tBa£
;

156 
	gDequeIãøt‹
<
	tT
, 
	tölöeC≠acôy
> 
	tIãøt‹
;

158 
	gpublic
:

159 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

160 
T
 
	tvÆue_ty≥
;

161 
T
* 
	tpoöãr
;

162 
	gT
& 
	tª„ªn˚
;

163 
	g°d
::
	tbidúe˘i⁄Æ_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

165 
DequeIãøt‹
(
Deque
<
T
, 
ölöeC≠acôy
>* 
deque
, 
size_t
 
ödex
)

166 : 
Ba£
(
deque
, 
ödex
) { }

168 
DequeIãøt‹
(c⁄° 
Iãøt‹
& 
Ÿhî
Ë: 
Ba£
(other) { }

169 
DequeIãøt‹
& 
›î©‹
=(c⁄° 
Iãøt‹
& 
Ÿhî
Ë{ 
Ba£
::
assign
(Ÿhî);  *
	gthis
; }

171 
	gT
& 
	g›î©‹
*(Ëc⁄° {  *
	gBa£
::
a·î
(); }

172 
T
* 
	g›î©‹
->(Ëc⁄° {  
	gBa£
::
a·î
(); }

174 
boﬁ
 
	g›î©‹
==(c⁄° 
Iãøt‹
& 
Ÿhî
Ëc⁄° {  
Ba£
::
isEquÆ
(other); }

175 
boﬁ
 
	g›î©‹
!=(c⁄° 
Iãøt‹
& 
Ÿhî
Ëc⁄° {  !
Ba£
::
isEquÆ
(other); }

177 
	gIãøt‹
& 
	g›î©‹
++(Ë{ 
	gBa£
::
ö¸emít
();  *
	gthis
; }

179 
	gIãøt‹
& 
	g›î©‹
--(Ë{ 
	gBa£
::
de¸emít
();  *
	gthis
; }

183 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
 = 0>

184 
˛ass
 
DequeC⁄°Iãøt‹
 : 
public
 
DequeIãøt‹Ba£
<
T
, 
	gölöeC≠acôy
> {

185 
	g¥iv©e
:

186 
DequeIãøt‹Ba£
<
	tT
, 
	tölöeC≠acôy
> 
	tBa£
;

187 
	gDequeC⁄°Iãøt‹
<
	tT
, 
	tölöeC≠acôy
> 
	tIãøt‹
;

188 
	gDequeIãøt‹
<
	tT
, 
	tölöeC≠acôy
> 
	tN⁄C⁄°Iãøt‹
;

190 
	gpublic
:

191 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

192 
T
 
	tvÆue_ty≥
;

193 c⁄° 
	tT
* 
	tpoöãr
;

194 c⁄° 
	tT
& 
	tª„ªn˚
;

195 
	g°d
::
	tbidúe˘i⁄Æ_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

197 
DequeC⁄°Iãøt‹
(c⁄° 
Deque
<
T
, 
ölöeC≠acôy
>* 
deque
, 
size_t
 
ödex
)

198 : 
Ba£
(
deque
, 
ödex
) { }

200 
DequeC⁄°Iãøt‹
(c⁄° 
Iãøt‹
& 
Ÿhî
Ë: 
Ba£
(other) { }

201 
DequeC⁄°Iãøt‹
(c⁄° 
N⁄C⁄°Iãøt‹
& 
Ÿhî
Ë: 
Ba£
(other) { }

202 
DequeC⁄°Iãøt‹
& 
›î©‹
=(c⁄° 
Iãøt‹
& 
Ÿhî
Ë{ 
Ba£
::
assign
(Ÿhî);  *
	gthis
; }

203 
	gDequeC⁄°Iãøt‹
& 
	g›î©‹
=(c⁄° 
N⁄C⁄°Iãøt‹
& 
Ÿhî
Ë{ 
Ba£
::
assign
(Ÿhî);  *
	gthis
; }

205 c⁄° 
	gT
& 
	g›î©‹
*(Ëc⁄° {  *
	gBa£
::
a·î
(); }

206 c⁄° 
T
* 
	g›î©‹
->(Ëc⁄° {  
	gBa£
::
a·î
(); }

208 
boﬁ
 
	g›î©‹
==(c⁄° 
Iãøt‹
& 
Ÿhî
Ëc⁄° {  
Ba£
::
isEquÆ
(other); }

209 
boﬁ
 
	g›î©‹
!=(c⁄° 
Iãøt‹
& 
Ÿhî
Ëc⁄° {  !
Ba£
::
isEquÆ
(other); }

211 
	gIãøt‹
& 
	g›î©‹
++(Ë{ 
	gBa£
::
ö¸emít
();  *
	gthis
; }

213 
	gIãøt‹
& 
	g›î©‹
--(Ë{ 
	gBa£
::
de¸emít
();  *
	gthis
; }

217 #ifde‡
NDEBUG


218 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
> 
ölöe
 
	gDeque
<T, i∆öeC≠acôy>::
	$checkVÆidôy
(Ëc⁄° { 
	}
}

219 
ãm∂©e
<
ty≥«me
 
T
, 
size_t
 
	gölöeC≠acôy
> 
ölöe
 
	gDeque
<
	gT
, i∆öeC≠acôy>::
	$checkIndexVÆidôy
(
size_t
Ëc⁄° { 
	}
}

220 
ãm∂©e
<
ty≥«me
 
T
, 
size_t
 
	gölöeC≠acôy
> 
ölöe
 
	gDeque
<
	gT
, i∆öeC≠acôy>::
	$övÆid©eIãøt‹s
(Ë{ 
	}
}

222 
ãm∂©e
<
ty≥«me
 
T
, 
size_t
 
	gölöeC≠acôy
>

223 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$checkVÆidôy
() const

227 
	`ASSERT
(
m_buf„r
.
	`ˇ∑côy
() != 1);

229 i‡(!
m_buf„r
.
	`ˇ∑côy
()) {

230 
	`ASSERT
(!
m_°¨t
);

231 
	`ASSERT
(!
m_íd
);

233 
	`ASSERT
(
m_°¨t
 < 
m_buf„r
.
	`ˇ∑côy
());

234 
	`ASSERT
(
m_íd
 < 
m_buf„r
.
	`ˇ∑côy
());

236 
	}
}

238 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

239 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$checkIndexVÆidôy
(
size_t
 
ödex
) const

241 
	`ASSERT_UNUSED
(
ödex
, index <
m_buf„r
.
	`ˇ∑côy
());

242 i‡(
m_°¨t
 <
m_íd
) {

243 
	`ASSERT
(
ödex
 >
m_°¨t
);

244 
	`ASSERT
(
ödex
 <
m_íd
);

246 
	`ASSERT
(
ödex
 >
m_°¨t
 || index <
m_íd
);

248 
	}
}

250 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

251 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$övÆid©eIãøt‹s
()

253 
Iãøt‹Ba£
* 
√xt
;

254 
Iãøt‹Ba£
* 
p
 = 
m_ôî©‹s
;Ö;Ö = 
√xt
) {

255 
√xt
 = 
p
->
m_√xt
;

256 
p
->
m_deque
 = 0;

257 
p
->
m_√xt
 = 0;

258 
p
->
m_¥evious
 = 0;

260 
m_ôî©‹s
 = 0;

261 
	}
}

264 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

265 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$Deque
()

266 : 
	`m_°¨t
(0)

267 , 
	$m_íd
(0)

268 #i‚de‡
NDEBUG


269 , 
	$m_ôî©‹s
(0)

272 
	`checkVÆidôy
();

273 
	}
}

275 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

276 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
Deque
(c⁄° Deque<
T
, 
ölöeC≠acôy
>& 
Ÿhî
)

277 : 
m_°¨t
(
Ÿhî
.m_start)

278 , 
m_íd
(
Ÿhî
.m_end)

279 , 
m_buf„r
(
Ÿhî
.m_buf„r.
	$ˇ∑côy
())

280 #i‚de‡
NDEBUG


281 , 
	$m_ôî©‹s
(0)

284 c⁄° 
T
* 
ŸhîBuf„r
 = 
Ÿhî
.
m_buf„r
.
	`buf„r
();

285 i‡(
m_°¨t
 <
m_íd
)

286 
Ty≥O≥øti⁄s
::
	`unöôülizedC›y
(
ŸhîBuf„r
 + 
m_°¨t
, othîBuf„∏+ 
m_íd
, 
m_buf„r
.
	`buf„r
() + m_start);

288 
Ty≥O≥øti⁄s
::
	`unöôülizedC›y
(
ŸhîBuf„r
, othîBuf„∏+ 
m_íd
, 
m_buf„r
.
	`buf„r
());

289 
Ty≥O≥øti⁄s
::
	`unöôülizedC›y
(
ŸhîBuf„r
 + 
m_°¨t
, othîBuf„∏+ 
m_buf„r
.
	`ˇ∑côy
(), m_buf„r.
	`buf„r
() + m_start);

291 
	}
}

293 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

294 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>& Deque<T, i∆öeC≠acôy>::
›î©‹
=(c⁄° 
Deque
<
T
, i∆öeC≠acôy>& 
	gŸhî
)

298 
	gDeque
<
	gT
, 
	gölöeC≠acôy
> 
c›y
(
Ÿhî
);

299 
sw≠
(
c›y
);

300  *
	gthis
;

303 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

304 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$de°royAŒ
()

306 i‡(
m_°¨t
 <
m_íd
)

307 
Ty≥O≥øti⁄s
::
	`de°ru˘
(
m_buf„r
.
	`buf„r
(Ë+ 
m_°¨t
, m_buf„r.buf„r(Ë+ 
m_íd
);

309 
Ty≥O≥øti⁄s
::
	`de°ru˘
(
m_buf„r
.
	`buf„r
(), m_buf„r.buf„r(Ë+ 
m_íd
);

310 
Ty≥O≥øti⁄s
::
	`de°ru˘
(
m_buf„r
.
	`buf„r
(Ë+ 
m_°¨t
, m_buf„r.buf„r(Ë+ m_buf„r.
	`ˇ∑côy
());

312 
	}
}

314 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

315 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::~
	$Deque
()

317 
	`checkVÆidôy
();

318 
	`övÆid©eIãøt‹s
();

319 
	`de°royAŒ
();

320 
	}
}

322 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

323 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
sw≠
(
Deque
<
T
, 
ölöeC≠acôy
>& 
Ÿhî
)

325 
checkVÆidôy
();

326 
	gŸhî
.
checkVÆidôy
();

327 
övÆid©eIãøt‹s
();

328 
	g°d
::
sw≠
(
m_°¨t
, 
Ÿhî
.m_start);

329 
	g°d
::
sw≠
(
m_íd
, 
Ÿhî
.m_end);

330 
	gm_buf„r
.
sw≠
(
Ÿhî
.
m_buf„r
, 0, 0);

331 
checkVÆidôy
();

332 
	gŸhî
.
checkVÆidôy
();

335 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

336 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$˛ór
()

338 
	`checkVÆidôy
();

339 
	`övÆid©eIãøt‹s
();

340 
	`de°royAŒ
();

341 
m_°¨t
 = 0;

342 
m_íd
 = 0;

343 
m_buf„r
.
	`dóŒoˇãBuf„r
(m_buf„r.
	`buf„r
());

344 
	`checkVÆidôy
();

345 
	}
}

347 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

348 
	gãm∂©e
<
ty≥«me
 
	gPªdiˇã
>

349 
ölöe
áutÿ
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
födIf
(
Pªdiˇã
&& 
¥ediˇã
Ë-> 
ôî©‹


351 
ôî©‹
 
íd_ôî©‹
 = 
íd
();

352 
ôî©‹
 
	gô
 = 
begö
(); ià!
íd_ôî©‹
; ++it) {

353 i‡(
¥ediˇã
(*
ô
))

354  
	gô
;

356  
	gíd_ôî©‹
;

359 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

360 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$ex∑ndC≠acôyIfNìded
()

362 i‡(
m_°¨t
) {

363 i‡(
m_íd
 + 1 !
m_°¨t
)

365 } i‡(
m_íd
) {

366 i‡(
m_íd
 !
m_buf„r
.
	`ˇ∑côy
() - 1)

368 } i‡(
m_buf„r
.
	`ˇ∑côy
())

371 
	`ex∑ndC≠acôy
();

372 
	}
}

374 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

375 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$ex∑ndC≠acôy
()

377 
	`checkVÆidôy
();

378 
size_t
 
ﬁdC≠acôy
 = 
m_buf„r
.
	`ˇ∑côy
();

379 
T
* 
ﬁdBuf„r
 = 
m_buf„r
.
	`buf„r
();

380 
m_buf„r
.
	`ÆloˇãBuf„r
(
°d
::
	`max
(
°©ic_ˇ°
<
size_t
>(16), 
ﬁdC≠acôy
 + oldCapacity / 4 + 1));

381 i‡(
m_°¨t
 <
m_íd
)

382 
Ty≥O≥øti⁄s
::
	`move
(
ﬁdBuf„r
 + 
m_°¨t
, oldBuf„∏+ 
m_íd
, 
m_buf„r
.
	`buf„r
() + m_start);

384 
Ty≥O≥øti⁄s
::
	`move
(
ﬁdBuf„r
, oldBuf„∏+ 
m_íd
, 
m_buf„r
.
	`buf„r
());

385 
size_t
 
√wSèπ
 = 
m_buf„r
.
	`ˇ∑côy
(Ë- (
ﬁdC≠acôy
 - 
m_°¨t
);

386 
Ty≥O≥øti⁄s
::
	`move
(
ﬁdBuf„r
 + 
m_°¨t
, oldBuf„∏+ 
ﬁdC≠acôy
, 
m_buf„r
.
	`buf„r
(Ë+ 
√wSèπ
);

387 
m_°¨t
 = 
√wSèπ
;

389 
m_buf„r
.
	`dóŒoˇãBuf„r
(
ﬁdBuf„r
);

390 
	`checkVÆidôy
();

391 
	}
}

393 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

394 
ölöe
áutÿ
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
èkeFú°
(Ë-> 
T


396 
T
 
ﬁdFú°
 = 
WTF
::
move
(
fú°
());

397 
ªmoveFú°
();

398  
	gﬁdFú°
;

401 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

402 
ölöe
áutÿ
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
èkeLa°
(Ë-> 
T


404 
T
 
ﬁdLa°
 = 
WTF
::
move
(
œ°
());

405 
ªmoveLa°
();

406  
	gﬁdLa°
;

409 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>Åem∂©e<ty≥«mê
	gU
>

410 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$≠≥nd
(
U
&& 
vÆue
)

412 
	`checkVÆidôy
();

413 
	`ex∑ndC≠acôyIfNìded
();

414 
	`√w
 (
NŸNuŒ
, &
m_buf„r
.
	`buf„r
()[
m_íd
]Ë
	`T
(
°d
::
f‹w¨d
<
U
>(
vÆue
));

415 i‡(
m_íd
 =
m_buf„r
.
	`ˇ∑côy
() - 1)

416 
m_íd
 = 0;

418 ++
m_íd
;

419 
	`checkVÆidôy
();

420 
	}
}

422 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>Åem∂©e<ty≥«mê
	gU
>

423 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$¥ïíd
(
U
&& 
vÆue
)

425 
	`checkVÆidôy
();

426 
	`ex∑ndC≠acôyIfNìded
();

427 i‡(!
m_°¨t
)

428 
m_°¨t
 = 
m_buf„r
.
	`ˇ∑côy
() - 1;

430 --
m_°¨t
;

431 
	`√w
 (
NŸNuŒ
, &
m_buf„r
.
	`buf„r
()[
m_°¨t
]Ë
	`T
(
°d
::
f‹w¨d
<
U
>(
vÆue
));

432 
	`checkVÆidôy
();

433 
	}
}

435 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

436 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$ªmoveFú°
()

438 
	`checkVÆidôy
();

439 
	`övÆid©eIãøt‹s
();

440 
	`ASSERT
(!
	`isEm±y
());

441 
Ty≥O≥øti⁄s
::
	`de°ru˘
(&
m_buf„r
.
	`buf„r
()[
m_°¨t
], &m_buffer.buffer()[m_start + 1]);

442 i‡(
m_°¨t
 =
m_buf„r
.
	`ˇ∑côy
() - 1)

443 
m_°¨t
 = 0;

445 ++
m_°¨t
;

446 
	`checkVÆidôy
();

447 
	}
}

449 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

450 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$ªmoveLa°
()

452 
	`checkVÆidôy
();

453 
	`övÆid©eIãøt‹s
();

454 
	`ASSERT
(!
	`isEm±y
());

455 i‡(!
m_íd
)

456 
m_íd
 = 
m_buf„r
.
	`ˇ∑côy
() - 1;

458 --
m_íd
;

459 
Ty≥O≥øti⁄s
::
	`de°ru˘
(&
m_buf„r
.
	`buf„r
()[
m_íd
], &m_buffer.buffer()[m_end + 1]);

460 
	`checkVÆidôy
();

461 
	}
}

463 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

464 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$ªmove
(
ôî©‹
& 
ô
)

466 
ô
.
	`checkVÆidôy
();

467 
	`ªmove
(
ô
.
m_ödex
);

468 
	}
}

470 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

471 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$ªmove
(
c⁄°_ôî©‹
& 
ô
)

473 
ô
.
	`checkVÆidôy
();

474 
	`ªmove
(
ô
.
m_ödex
);

475 
	}
}

477 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

478 
ölöe
 
	gDeque
<
	gT
, 
	gölöeC≠acôy
>::
	$ªmove
(
size_t
 
posôi⁄
)

480 i‡(
posôi⁄
 =
m_íd
)

483 
	`checkVÆidôy
();

484 
	`övÆid©eIãøt‹s
();

486 
T
* 
buf„r
 = 
m_buf„r
.
	`buf„r
();

487 
Ty≥O≥øti⁄s
::
	`de°ru˘
(&
buf„r
[
posôi⁄
], &buffer[position + 1]);

490 i‡(
posôi⁄
 >
m_°¨t
) {

491 
Ty≥O≥øti⁄s
::
	`moveOvîœµög
(
buf„r
 + 
m_°¨t
, buf„∏+ 
posôi⁄
, buffer + m_start + 1);

492 
m_°¨t
 = (m_°¨à+ 1Ë% 
m_buf„r
.
	`ˇ∑côy
();

494 
Ty≥O≥øti⁄s
::
	`moveOvîœµög
(
buf„r
 + 
posôi⁄
 + 1, buf„∏+ 
m_íd
, buffer +Öosition);

495 
m_íd
 = (m_íd - 1 + 
m_buf„r
.
	`ˇ∑côy
()) % m_buffer.capacity();

497 
	`checkVÆidôy
();

498 
	}
}

500 #ifde‡
NDEBUG


501 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
> 
ölöe
 
	gDequeIãøt‹Ba£
<T, i∆öeC≠acôy>::
	$checkVÆidôy
(Ëc⁄° { 
	}
}

502 
ãm∂©e
<
ty≥«me
 
T
, 
size_t
 
	gölöeC≠acôy
> 
ölöe
 
	gDequeIãøt‹Ba£
<
	gT
, i∆öeC≠acôy>::
checkVÆidôy
(c⁄° 
DequeIãøt‹Ba£
<T, 
ölöeC≠acôy
>&) const { }

503 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
> 
ölöe
 
	gDequeIãøt‹Ba£
<T, i∆öeC≠acôy>::
	$addToIãøt‹sLi°
(Ë{ 
	}
}

504 
ãm∂©e
<
ty≥«me
 
T
, 
size_t
 
	gölöeC≠acôy
> 
ölöe
 
	gDequeIãøt‹Ba£
<
	gT
, i∆öeC≠acôy>::
	$ªmoveFromIãøt‹sLi°
(Ë{ 
	}
}

506 
ãm∂©e
<
ty≥«me
 
T
, 
size_t
 
	gölöeC≠acôy
>

507 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::
	$checkVÆidôy
() const

509 
	`ASSERT
(
m_deque
);

510 
m_deque
->
	`checkIndexVÆidôy
(
m_ödex
);

511 
	}
}

513 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

514 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::
	$checkVÆidôy
(c⁄° 
DequeIãøt‹Ba£
& 
Ÿhî
) const

516 
	`checkVÆidôy
();

517 
Ÿhî
.
	`checkVÆidôy
();

518 
	`ASSERT
(
m_deque
 =
Ÿhî
.m_deque);

519 
	}
}

521 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

522 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::
	$addToIãøt‹sLi°
()

524 i‡(!
m_deque
)

525 
m_√xt
 = 0;

527 
m_√xt
 = 
m_deque
->
m_ôî©‹s
;

528 
m_deque
->
m_ôî©‹s
 = 
this
;

529 i‡(
m_√xt
)

530 
m_√xt
->
m_¥evious
 = 
this
;

532 
m_¥evious
 = 0;

533 
	}
}

535 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

536 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::
	$ªmoveFromIãøt‹sLi°
()

538 i‡(!
m_deque
) {

539 
	`ASSERT
(!
m_√xt
);

540 
	`ASSERT
(!
m_¥evious
);

542 i‡(
m_√xt
) {

543 
	`ASSERT
(
m_√xt
->
m_¥evious
 =
this
);

544 
m_√xt
->
m_¥evious
 = m_previous;

546 i‡(
m_¥evious
) {

547 
	`ASSERT
(
m_deque
->
m_ôî©‹s
 !
this
);

548 
	`ASSERT
(
m_¥evious
->
m_√xt
 =
this
);

549 
m_¥evious
->
m_√xt
 = m_next;

551 
	`ASSERT
(
m_deque
->
m_ôî©‹s
 =
this
);

552 
m_deque
->
m_ôî©‹s
 = 
m_√xt
;

555 
m_√xt
 = 0;

556 
m_¥evious
 = 0;

557 
	}
}

560 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

561 
ölöe
 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::
	$DequeIãøt‹Ba£
()

562 : 
	$m_deque
(0)

564 
	}
}

566 
ãm∂©e
<
ty≥«me
 
T
, 
size_t
 
	gölöeC≠acôy
>

567 
ölöe
 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::
DequeIãøt‹Ba£
(c⁄° 
Deque
<
T
, 
ölöeC≠acôy
>* 
deque
, 
size_t
 
ödex
)

568 : 
m_deque
(
c⁄°_ˇ°
<
Deque
<
T
, 
ölöeC≠acôy
>*>(
deque
))

569 , 
	$m_ödex
(
ödex
)

571 
	`addToIãøt‹sLi°
();

572 
	`checkVÆidôy
();

573 
	}
}

575 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

576 
ölöe
 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::
	$DequeIãøt‹Ba£
(c⁄° 
DequeIãøt‹Ba£
& 
Ÿhî
)

577 : 
	`m_deque
(
Ÿhî
.
m_deque
)

578 , 
	$m_ödex
(
Ÿhî
.
m_ödex
)

580 
	`addToIãøt‹sLi°
();

581 
	`checkVÆidôy
();

582 
	}
}

584 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

585 
ölöe
 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>& DequeIãøt‹Ba£<T, i∆öeC≠acôy>::
›î©‹
=(c⁄° 
DequeIãøt‹Ba£
& 
Ÿhî
)

587 
Ÿhî
.
checkVÆidôy
();

588 
ªmoveFromIãøt‹sLi°
();

590 
	gm_deque
 = 
Ÿhî
.
m_deque
;

591 
	gm_ödex
 = 
Ÿhî
.
m_ödex
;

592 
addToIãøt‹sLi°
();

593 
checkVÆidôy
();

594  *
	gthis
;

597 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

598 
ölöe
 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::~
	$DequeIãøt‹Ba£
()

600 #i‚de‡
NDEBUG


601 
	`ªmoveFromIãøt‹sLi°
();

602 
m_deque
 = 0;

604 
	}
}

606 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

607 
ölöe
 
boﬁ
 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::
	$isEquÆ
(c⁄° 
DequeIãøt‹Ba£
& 
Ÿhî
) const

609 
	`checkVÆidôy
(
Ÿhî
);

610  
m_ödex
 =
Ÿhî
.m_index;

611 
	}
}

613 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

614 
ölöe
 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::
	$ö¸emít
()

616 
	`checkVÆidôy
();

617 
	`ASSERT
(
m_ödex
 !
m_deque
->
m_íd
);

618 
	`ASSERT
(
m_deque
->
m_buf„r
.
	`ˇ∑côy
());

619 i‡(
m_ödex
 =
m_deque
->
m_buf„r
.
	`ˇ∑côy
() - 1)

620 
m_ödex
 = 0;

622 ++
m_ödex
;

623 
	`checkVÆidôy
();

624 
	}
}

626 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

627 
ölöe
 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::
	$de¸emít
()

629 
	`checkVÆidôy
();

630 
	`ASSERT
(
m_ödex
 !
m_deque
->
m_°¨t
);

631 
	`ASSERT
(
m_deque
->
m_buf„r
.
	`ˇ∑côy
());

632 i‡(!
m_ödex
)

633 
m_ödex
 = 
m_deque
->
m_buf„r
.
	`ˇ∑côy
() - 1;

635 --
m_ödex
;

636 
	`checkVÆidôy
();

637 
	}
}

639 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

640 
ölöe
 
T
* 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::
	$a·î
() const

642 
	`checkVÆidôy
();

643 
	`ASSERT
(
m_ödex
 !
m_deque
->
m_íd
);

644  &
m_deque
->
m_buf„r
.
	`buf„r
()[
m_ödex
];

645 
	}
}

647 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

648 
ölöe
 
T
* 
	gDequeIãøt‹Ba£
<
	gT
, 
	gölöeC≠acôy
>::
	$bef‹e
() const

650 
	`checkVÆidôy
();

651 
	`ASSERT
(
m_ödex
 !
m_deque
->
m_°¨t
);

652 i‡(!
m_ödex
)

653  &
m_deque
->
m_buf„r
.
	`buf„r
()[m_deque->m_buf„r.
	`ˇ∑côy
() - 1];

654  &
m_deque
->
m_buf„r
.
	`buf„r
()[
m_ödex
 - 1];

655 
	}
}

659 
usög
 
	gWTF
::
Deque
;

	@DisallowCType.h

29 #i‚de‡
WTF_DißŒowCTy≥_h


30 
	#WTF_DißŒowCTy≥_h


	)

43 #i‡!(
OS
(
DARWIN
Ë&& 
PLATFORM
(
GTK
)Ë&& !PLATFORM(
EFL
Ë&& !
deföed
(
_LIBCPP_VERSION
)

45 
	~<˘y≥.h
>

47 #unde‡
iß um


48 #unde‡
ißÕha


49 #unde‡
ißscii


50 #unde‡
isbœnk


51 #unde‡
is˙ål


52 #unde‡
isdigô


53 #unde‡
isgøph


54 #unde‡
i¶owî


55 #unde‡
i•röt


56 #unde‡
i•un˘


57 #unde‡
is•a˚


58 #unde‡
isuµî


59 #unde‡
isxdigô


60 #unde‡
tﬂscii


61 #unde‡
tﬁowî


62 #unde‡
touµî


64 
	#iß um
 
iß um_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

65 
	#ißÕha
 
ißÕha_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

66 
	#ißscii
 
ißscii_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

67 
	#isbœnk
 
isbœnk_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

68 
	#is˙ål
 
is˙ål_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

69 
	#isdigô
 
isdigô_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

70 
	#isgøph
 
isgøph_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

71 
	#i¶owî
 
i¶owî_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

72 
	#i•röt
 
i•röt_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

73 
	#i•un˘
 
i•un˘_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

74 
	#is•a˚
 
is•a˚_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

75 
	#isuµî
 
isuµî_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

76 
	#isxdigô
 
isxdigô_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

77 
	#tﬂscii
 
tﬂscii_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

78 
	#tﬁowî
 
tﬁowî_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

79 
	#touµî
 
touµî_WTF_PÀa£_u£_ASCIICTy≥_ö°ód_of_˘y≥_£e_commít_ö_ASCIICTy≥_h


	)

	@DoublyLinkedList.h

26 #i‚de‡
DoublyLökedLi°_h


27 
	#DoublyLökedLi°_h


	)

29 
«me•a˚
 
	gWTF
 {

32 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cDoublyLökedLi°Node
 {

33 
	gpublic
:

34 
DoublyLökedLi°Node
();

36 
£tPªv
(
T
*);

37 
£tNext
(
T
*);

39 
T
* 
¥ev
() const;

40 
T
* 
√xt
() const;

43 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gDoublyLökedLi°Node
<T>::
	$DoublyLökedLi°Node
()

45 
	`£tPªv
(0);

46 
	`£tNext
(0);

47 
	}
}

49 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gDoublyLökedLi°Node
<T>::
	$£tPªv
(
T
* 
¥ev
)

51 
°©ic_ˇ°
<
T
*>(
this
)->
m_¥ev
 = 
¥ev
;

52 
	}
}

54 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gDoublyLökedLi°Node
<T>::
	$£tNext
(
T
* 
√xt
)

56 
°©ic_ˇ°
<
T
*>(
this
)->
m_√xt
 = 
√xt
;

57 
	}
}

59 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
T
* 
	gDoublyLökedLi°Node
<T>::
	$¥ev
() const

61  
°©ic_ˇ°
<c⁄° 
T
*>(
this
)->
m_¥ev
;

62 
	}
}

64 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
T
* 
	gDoublyLökedLi°Node
<T>::
	$√xt
() const

66  
°©ic_ˇ°
<c⁄° 
T
*>(
this
)->
m_√xt
;

67 
	}
}

69 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cDoublyLökedLi°
 {

70 
	gpublic
:

71 
DoublyLökedLi°
();

73 
boﬁ
 
isEm±y
() const;

74 
size_t
 
size
() const;

75 
˛ór
();

77 
T
* 
hód
() const;

78 
T
* 
ªmoveHód
();

80 
T
* 
èû
() const;

82 
push
(
T
*);

83 
≠≥nd
(
T
*);

84 
ªmove
(
T
*);

85 
≠≥nd
(
DoublyLökedLi°
<
T
>&);

87 
	g¥iv©e
:

88 
T
* 
m_hód
;

89 
T
* 
	gm_èû
;

92 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gDoublyLökedLi°
<T>::
	$DoublyLökedLi°
()

93 : 
	`m_hód
(0)

94 , 
	$m_èû
(0)

96 
	}
}

98 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
boﬁ
 
	gDoublyLökedLi°
<T>::
	$isEm±y
() const

100  !
m_hód
;

101 
	}
}

103 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
size_t
 
	gDoublyLökedLi°
<T>::
	$size
() const

105 
size_t
 
size
 = 0;

106 
T
* 
node
 = 
m_hód
;Çode;Çodênode->
	`√xt
())

107 ++
size
;

108  
size
;

109 
	}
}

111 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gDoublyLökedLi°
<T>::
	$˛ór
()

113 
m_hód
 = 0;

114 
m_èû
 = 0;

115 
	}
}

117 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
T
* 
	gDoublyLökedLi°
<T>::
	$hód
() const

119  
m_hód
;

120 
	}
}

122 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
T
* 
	gDoublyLökedLi°
<T>::
	$èû
() const

124  
m_èû
;

125 
	}
}

127 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gDoublyLökedLi°
<T>::
	$push
(
T
* 
node
)

129 i‡(!
m_hód
) {

130 
	`ASSERT
(!
m_èû
);

131 
m_hód
 = 
node
;

132 
m_èû
 = 
node
;

133 
node
->
	`£tPªv
(0);

134 
node
->
	`£tNext
(0);

138 
	`ASSERT
(
m_èû
);

139 
m_hód
->
	`£tPªv
(
node
);

140 
node
->
	`£tNext
(
m_hód
);

141 
node
->
	`£tPªv
(0);

142 
m_hód
 = 
node
;

143 
	}
}

145 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gDoublyLökedLi°
<T>::
	$≠≥nd
(
T
* 
node
)

147 i‡(!
m_èû
) {

148 
	`ASSERT
(!
m_hód
);

149 
m_hód
 = 
node
;

150 
m_èû
 = 
node
;

151 
node
->
	`£tPªv
(0);

152 
node
->
	`£tNext
(0);

156 
	`ASSERT
(
m_hód
);

157 
m_èû
->
	`£tNext
(
node
);

158 
node
->
	`£tPªv
(
m_èû
);

159 
node
->
	`£tNext
(0);

160 
m_èû
 = 
node
;

161 
	}
}

163 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gDoublyLökedLi°
<T>::
	$ªmove
(
T
* 
node
)

165 i‡(
node
->
	`¥ev
()) {

166 
	`ASSERT
(
node
 !
m_hód
);

167 
node
->
	`¥ev
()->
	`£tNext
“ode->
	`√xt
());

169 
	`ASSERT
(
node
 =
m_hód
);

170 
m_hód
 = 
node
->
	`√xt
();

173 i‡(
node
->
	`√xt
()) {

174 
	`ASSERT
(
node
 !
m_èû
);

175 
node
->
	`√xt
()->
	`£tPªv
“ode->
	`¥ev
());

177 
	`ASSERT
(
node
 =
m_èû
);

178 
m_èû
 = 
node
->
	`¥ev
();

180 
	}
}

182 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
T
* 
	gDoublyLökedLi°
<T>::
	$ªmoveHód
()

184 
T
* 
node
 = 
	`hód
();

185 i‡(
node
)

186 
	`ªmove
(
node
);

187  
node
;

188 
	}
}

190 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gDoublyLökedLi°
<T>::
≠≥nd
(
DoublyLökedLi°
<
T
>& 
Ÿhî
)

192 i‡(!
Ÿhî
.
hód
())

195 i‡(!
hód
()) {

196 
	gm_hód
 = 
Ÿhî
.
hód
();

197 
	gm_èû
 = 
Ÿhî
.
èû
();

198 
	gŸhî
.
˛ór
();

202 
ASSERT
(
èû
());

203 
ASSERT
(
Ÿhî
.
hód
());

204 
T
* 
	gŸhîHód
 = 
Ÿhî
.
hód
();

205 
T
* 
	gŸhîTaû
 = 
Ÿhî
.
èû
();

206 
	gŸhî
.
˛ór
();

208 
ASSERT
(!
m_èû
->
√xt
());

209 
	gm_èû
->
£tNext
(
ŸhîHód
);

210 
ASSERT
(!
ŸhîHód
->
¥ev
());

211 
	gŸhîHód
->
£tPªv
(
m_èû
);

212 
	gm_èû
 = 
ŸhîTaû
;

217 
usög
 
	gWTF
::
DoublyLökedLi°Node
;

218 
usög
 
	gWTF
::
DoublyLökedLi°
;

	@ExportMacros.h

30 #i‚de‡
Exp‹tMa¸os_h


31 
	#Exp‹tMa¸os_h


	)

39 #i‡
OS
(
WINDOWS
)

40 
	#HAVE_INTERNAL_VISIBILITY
 1

	)

41 
	#WTF_INTERNAL


	)

42 #ñi‡
deföed
(
__GNUC__
Ë&& !deföed(
__CC_ARM
Ë&& !deföed(
__ARMCC__
)

43 
	#HAVE_INTERNAL_VISIBILITY
 1

	)

44 
	#WTF_INTERNAL
 
	`__©åibuã__
((
	`visibûôy
("hiddí")))

	)

46 
	#WTF_INTERNAL


	)

49 #i‡
OS
(
WINDOWS
)

51 
	#WTF_EXPORT_DECLARATION
 
	`__de˛•ec
(
dŒexp‹t
)

	)

52 
	#WTF_IMPORT_DECLARATION
 
	`__de˛•ec
(
dŒimp‹t
)

	)

53 
	#WTF_HIDDEN_DECLARATION


	)

55 #ñi‡
deföed
(
__GNUC__
Ë&& !deföed(
__CC_ARM
Ë&& !deföed(
__ARMCC__
)

57 
	#WTF_EXPORT_DECLARATION
 
	`__©åibuã__
((
	`visibûôy
("deÁu…")))

	)

58 
	#WTF_IMPORT_DECLARATION
 
WTF_EXPORT_DECLARATION


	)

59 
	#WTF_HIDDEN_DECLARATION
 
	`__©åibuã__
((
	`visibûôy
("hiddí")))

	)

63 
	#WTF_EXPORT_DECLARATION


	)

64 
	#WTF_IMPORT_DECLARATION


	)

65 
	#WTF_HIDDEN_DECLARATION


	)

69 #i‡
deföed
(
BUILDING_WTF
Ë|| deföed(
STATICALLY_LINKED_WITH_WTF
)

70 
	#WTF_IS_LINKED_IN_SAME_BINARY
 1

	)

74 #i‡
USE
(
EXPORT_MACROS
)

76 
	#WTF_EXPORT
 
WTF_EXPORT_DECLARATION


	)

77 
	#WTF_IMPORT
 
WTF_IMPORT_DECLARATION


	)

78 
	#WTF_HIDDEN
 
WTF_IMPORT_DECLARATION


	)

82 #i‡
deföed
(
WTF_IS_LINKED_IN_SAME_BINARY
)

83 
	#WTF_EXPORTDATA
 
WTF_EXPORT


	)

85 
	#WTF_EXPORTDATA
 
WTF_IMPORT


	)

90 #i‡
OS
(
WINDOWS
Ë&& !
COMPILER
(
GCC
)

91 #i‡
deföed
(
BUILDING_WTF
Ë|| deföed(
STATICALLY_LINKED_WITH_WTF
)

92 
	#WTF_EXPORTDATA
 
	`__de˛•ec
(
dŒexp‹t
)

	)

94 
	#WTF_EXPORTDATA
 
	`__de˛•ec
(
dŒimp‹t
)

	)

97 
	#WTF_EXPORTDATA


	)

100 
	#WTF_EXPORTCLASS
 
WTF_EXPORTDATA


	)

102 
	#WTF_EXPORT


	)

103 
	#WTF_IMPORT


	)

104 
	#WTF_HIDDEN


	)

108 #i‡
deföed
(
WTF_IS_LINKED_IN_SAME_BINARY
)

109 
	#WTF_EXPORT_PRIVATE
 
WTF_EXPORT


	)

111 
	#WTF_EXPORT_PRIVATE
 
WTF_IMPORT


	)

114 
	#WTF_EXPORT_STRING_API
 
WTF_EXPORT_PRIVATE


	)

116 
	#WTF_EXPORT_HIDDEN
 
WTF_HIDDEN


	)

118 
	#HIDDEN_INLINE
 
WTF_EXPORT_HIDDEN
 
ölöe


	)

	@FastBitVector.cpp

26 
	~"c⁄fig.h
"

27 
	~"Fa°BôVe˘‹.h
"

29 
	~"PrötSåóm.h
"

31 
«me•a˚
 
	gWTF
 {

33 
	gFa°BôVe˘‹
::
dump
(
PrötSåóm
& 
out
) const

35 
i
 = 0; 
	gi
 < 
	gm_numBôs
; ++i)

36 
	gout
.
¥öt
(
gë
(
i
) ? "1" : "-");

	@FastBitVector.h

26 #i‚de‡
Fa°BôVe˘‹_h


27 
	#Fa°BôVe˘‹_h


	)

29 
	~<°rög.h
>

30 
	~<wtf/Fa°MÆloc.h
>

31 
	~<wtf/StdLibExåas.h
>

33 
«me•a˚
 
	gWTF
 {

35 
˛ass
 
	gPrötSåóm
;

37 ˛as†
	cFa°BôVe˘‹
 {

38 
	gpublic
:

39 
Fa°BôVe˘‹
()

40 : 
m_¨øy
(0)

41 , 
m_numBôs
(0)

45 
Fa°BôVe˘‹
(c⁄° Fa°BôVe˘‹& 
Ÿhî
)

46 : 
m_¨øy
(0)

47 , 
m_numBôs
(0)

49 *
	gthis
 = 
Ÿhî
;

52 ~
Fa°BôVe˘‹
()

54 i‡(
	gm_¨øy
)

55 
Á°Fªe
(
m_¨øy
);

58 
	gFa°BôVe˘‹
& 
	g›î©‹
=(c⁄° 
Fa°BôVe˘‹
& 
Ÿhî
)

60 
size_t
 
Àngth
 = 
Ÿhî
.
¨øyLígth
();

61 
uöt32_t
* 
	g√wAºay
 = 
°©ic_ˇ°
<uöt32_t*>(
Á°CÆloc
(
Àngth
, 4));

62 
mem˝y
(
√wAºay
, 
Ÿhî
.
m_¨øy
, 
Àngth
 * 4);

63 i‡(
	gm_¨øy
)

64 
Á°Fªe
(
m_¨øy
);

65 
	gm_¨øy
 = 
√wAºay
;

66 
	gm_numBôs
 = 
Ÿhî
.
m_numBôs
;

67  *
	gthis
;

70 
size_t
 
numBôs
(Ëc⁄° {  
	gm_numBôs
; }

72 
ªsize
(
size_t
 
numBôs
)

77 
size_t
 
	g√wLígth
 = 
¨øyLígth
(
numBôs
);

78 
uöt32_t
* 
	g√wAºay
 = 
°©ic_ˇ°
<uöt32_t*>(
Á°CÆloc
(
√wLígth
, 4));

79 
mem˝y
(
√wAºay
, 
m_¨øy
, 
¨øyLígth
() * 4);

80 i‡(
	gm_¨øy
)

81 
Á°Fªe
(
m_¨øy
);

82 
	gm_¨øy
 = 
√wAºay
;

83 
	gm_numBôs
 = 
numBôs
;

86 
£tAŒ
()

88 
mem£t
(
m_¨øy
, 255, 
¨øyLígth
() * 4);

91 
˛órAŒ
()

93 
mem£t
(
m_¨øy
, 0, 
¨øyLígth
() * 4);

96 
£t
(c⁄° 
Fa°BôVe˘‹
& 
Ÿhî
)

98 
ASSERT
(
m_numBôs
 =
Ÿhî
.m_numBits);

99 
mem˝y
(
m_¨øy
, 
Ÿhî
.m_¨øy, 
¨øyLígth
() * 4);

102 
boﬁ
 
£tAndCheck
(c⁄° 
Fa°BôVe˘‹
& 
Ÿhî
)

104 
boﬁ
 
	gch™ged
 = 
Ál£
;

105 
ASSERT
(
m_numBôs
 =
Ÿhî
.m_numBits);

106 
	gi
 = 
¨øyLígth
(); i--;) {

107 
	gch™ged
 |
m_¨øy
[
i
] !
Ÿhî
.m_array[i];

108 
	gm_¨øy
[
i
] = 
Ÿhî
.
m_¨øy
[i];

110  
	gch™ged
;

113 
boﬁ
 
equÆs
(c⁄° 
Fa°BôVe˘‹
& 
Ÿhî
) const

115 
ASSERT
(
m_numBôs
 =
Ÿhî
.m_numBits);

118 
	gi
 = 
¨øyLígth
(); i--;) {

119 i‡(
	gm_¨øy
[
i
] !
Ÿhî
.
m_¨øy
[i])

120  
Ál£
;

122  
	gåue
;

125 
mîge
(c⁄° 
Fa°BôVe˘‹
& 
Ÿhî
)

127 
ASSERT
(
m_numBôs
 =
Ÿhî
.m_numBits);

128 
	gi
 = 
¨øyLígth
(); i--;)

129 
	gm_¨øy
[
i
] |
Ÿhî
.
m_¨øy
[i];

132 
fûãr
(c⁄° 
Fa°BôVe˘‹
& 
Ÿhî
)

134 
ASSERT
(
m_numBôs
 =
Ÿhî
.m_numBits);

135 
	gi
 = 
¨øyLígth
(); i--;)

136 
	gm_¨øy
[
i
] &
Ÿhî
.
m_¨øy
[i];

139 
ex˛ude
(c⁄° 
Fa°BôVe˘‹
& 
Ÿhî
)

141 
ASSERT
(
m_numBôs
 =
Ÿhî
.m_numBits);

142 
	gi
 = 
¨øyLígth
(); i--;)

143 
	gm_¨øy
[
i
] &~
Ÿhî
.
m_¨øy
[i];

146 
£t
(
size_t
 
i
)

148 
ASSERT_WITH_SECURITY_IMPLICATION
(
i
 < 
m_numBôs
);

149 
	gm_¨øy
[
i
 >> 5] |= (1 << (i & 31));

152 
˛ór
(
size_t
 
i
)

154 
ASSERT_WITH_SECURITY_IMPLICATION
(
i
 < 
m_numBôs
);

155 
	gm_¨øy
[
i
 >> 5] &= ~(1 << (i & 31));

158 
£t
(
size_t
 
i
, 
boﬁ
 
vÆue
)

160 i‡(
	gvÆue
)

161 
£t
(
i
);

163 
˛ór
(
i
);

166 
boﬁ
 
gë
(
size_t
 
i
) const

168 
ASSERT_WITH_SECURITY_IMPLICATION
(
i
 < 
m_numBôs
);

169  !!(
	gm_¨øy
[
i
 >> 5] & (1 << (
	gi
 & 31)));

172 
size_t
 
bôCou¡
() const

174 
size_t
 
	gªsu…
 = 0;

175 
	gi
 = 
¨øyLígth
(); i--;)

176 
	gªsu…
 +
WTF
::
bôCou¡
(
m_¨øy
[
i
]);

177  
	gªsu…
;

180 
WTF_EXPORT_PRIVATE
 
dump
(
PrötSåóm
&) const;

182 
	g¥iv©e
:

183 
size_t
 
¨øyLígth
(size_à
numBôs
) {  (numBits + 31) >> 5; }

184 
size_t
 
¨øyLígth
(Ëc⁄° { áºayLígth(
m_numBôs
); }

186 
uöt32_t
* 
	gm_¨øy
;

187 
size_t
 
	gm_numBôs
;

192 
usög
 
	gWTF
::
Fa°BôVe˘‹
;

	@FastMalloc.cpp

77 
	~"c⁄fig.h
"

78 
	~"Fa°MÆloc.h
"

80 
	~"As£πi⁄s.h
"

81 
	~"CuºítTime.h
"

83 
	~<limôs
>

84 #i‡
OS
(
WINDOWS
)

85 
	~<wödows.h
>

87 
	~<±hªad.h
>

89 
	~<°rög.h
>

90 
	~<wtf/D©aLog.h
>

91 
	~<wtf/StdLibExåas.h
>

93 #i‡
OS
(
DARWIN
)

94 
	~<mach/mach_öô.h
>

95 
	~<mÆloc/mÆloc.h
>

98 #i‚de‡
NO_TCMALLOC_SAMPLES


99 #ifde‡
WTF_CHANGES


100 
	#NO_TCMALLOC_SAMPLES


	)

104 #i‡(
PLATFORM
(
COCOA
Ë&& (
CPU
(
X86_64
Ë|| CPU(
ARM64
)))

105 
	#USE_BMALLOC
 1

	)

108 #i‡!(
deföed
(
USE_SYSTEM_MALLOC
Ë&& USE_SYSTEM_MALLOCË&& deföed(
NDEBUG
)

109 
	#FORCE_SYSTEM_MALLOC
 0

	)

111 
	#FORCE_SYSTEM_MALLOC
 1

	)

115 
	#ENABLE_TCMALLOC_HARDENING
 1

	)

118 
	#USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY
 1

	)

120 #i‚de‡
NDEBUG


121 
«me•a˚
 
	gWTF
 {

123 #i‡
OS
(
WINDOWS
)

125 
DWORD
 
	gisF‹ibiddíTlsIndex
 = 
TLS_OUT_OF_INDEXES
;

126 c⁄° 
LPVOID
 
	gkTlsAŒowVÆue
 = 
ªöãΩªt_ˇ°
<LPVOID>(0);

127 c⁄° 
LPVOID
 
	gkTlsF‹biddíVÆue
 = 
ªöãΩªt_ˇ°
<LPVOID>(1);

129 #i‡!
ASSERT_DISABLED


130 
boﬁ
 
isF‹biddí
()

135  (
	gisF‹ibiddíTlsIndex
 !
TLS_OUT_OF_INDEXES
Ë&& (
TlsGëVÆue
(
isF‹ibiddíTlsIndex
Ë=
kTlsF‹biddíVÆue
);

139 
Á°MÆlocF‹bid
()

141 i‡(
	gisF‹ibiddíTlsIndex
 =
TLS_OUT_OF_INDEXES
)

142 
isF‹ibiddíTlsIndex
 = 
TlsAŒoc
();

143 
TlsSëVÆue
(
isF‹ibiddíTlsIndex
, 
kTlsF‹biddíVÆue
);

146 
Á°MÆlocAŒow
()

148 i‡(
	gisF‹ibiddíTlsIndex
 =
TLS_OUT_OF_INDEXES
)

150 
TlsSëVÆue
(
isF‹ibiddíTlsIndex
, 
kTlsAŒowVÆue
);

155 
±hªad_key_t
 
	gisF‹biddíKey
;

156 
±hªad_⁄˚_t
 
	gisF‹biddíKeyOn˚
 = 
PTHREAD_ONCE_INIT
;

157 
öôülizeIsF‹biddíKey
()

159 
±hªad_key_¸óã
(&
isF‹biddíKey
, 0);

162 #i‡!
ASSERT_DISABLED


163 
boﬁ
 
isF‹biddí
()

165 
±hªad_⁄˚
(&
isF‹biddíKeyOn˚
, 
öôülizeIsF‹biddíKey
);

166  !!
±hªad_gë•ecific
(
isF‹biddíKey
);

170 
Á°MÆlocF‹bid
()

172 
±hªad_⁄˚
(&
isF‹biddíKeyOn˚
, 
öôülizeIsF‹biddíKey
);

173 
±hªad_£t•ecific
(
isF‹biddíKey
, &isForbiddenKey);

176 
Á°MÆlocAŒow
()

178 
±hªad_⁄˚
(&
isF‹biddíKeyOn˚
, 
öôülizeIsF‹biddíKey
);

179 
±hªad_£t•ecific
(
isF‹biddíKey
, 0);

186 
«me•a˚
 
	gWTF
 {

189 
«me•a˚
 
	gI¡î«l
 {

190 #i‡!
ENABLE
(
WTF_MALLOC_VALIDATION
)

191 
WTF_EXPORT_PRIVATE
 
NO_RETURN_DUE_TO_CRASH
 
Á°MÆlocM©chFaûed
(*);

193 
COMPILE_ASSERT
((((
VÆid©i⁄Hódî
Ë% (
AŒocAlignmítI¡egî
)Ë=0), 
VÆid©i⁄Hódî_mu°_¥odu˚_c‹ª˘_Æignmít
);

196 
NO_RETURN_DUE_TO_CRASH
 
Á°MÆlocM©chFaûed
(*)

198 
CRASH
();

204 * 
Á°Zî€dMÆloc
(
size_t
 
n
)

206 * 
	gªsu…
 = 
Á°MÆloc
(
n
);

207 
mem£t
(
ªsu…
, 0, 
n
);

208  
	gªsu…
;

211 * 
Á°SåDup
(c⁄° * 
§c
)

213 
size_t
 
	gÀn
 = 
°æí
(
§c
) + 1;

214 * 
	gdup
 = 
°©ic_ˇ°
<*>(
Á°MÆloc
(
Àn
));

215 
mem˝y
(
dup
, 
§c
, 
Àn
);

216  
	gdup
;

219 
TryMÆlocRëu∫VÆue
 
åyFa°Zî€dMÆloc
(
size_t
 
n
)

221 * 
	gªsu…
;

222 i‡(!
åyFa°MÆloc
(
n
).
gëVÆue
(
ªsu…
))

224 
mem£t
(
ªsu…
, 0, 
n
);

225  
	gªsu…
;

230 #i‡
FORCE_SYSTEM_MALLOC


232 #i‡
OS
(
WINDOWS
)

233 
	~<mÆloc.h
>

236 
«me•a˚
 
	gWTF
 {

238 
size_t
 
Á°MÆlocGoodSize
(size_à
byãs
)

240 #i‡
OS
(
DARWIN
)

241  
mÆloc_good_size
(
byãs
);

243  
	gbyãs
;

247 
TryMÆlocRëu∫VÆue
 
åyFa°MÆloc
(
size_t
 
n
)

249 
ASSERT
(!
isF‹biddí
());

251 #i‡
ENABLE
(
WTF_MALLOC_VALIDATION
)

252 i‡(
	g°d
::
numîic_limôs
<
size_t
>::
max
(Ë- 
I¡î«l
::
VÆid©i⁄Buf„rSize
 <
n
)

255 * 
	gªsu…
 = 
mÆloc
(
n
 + 
I¡î«l
::
VÆid©i⁄Buf„rSize
);

256 i‡(!
	gªsu…
)

258 
	gI¡î«l
::
VÆid©i⁄Hódî
* 
hódî
 = 
°©ic_ˇ°
<
I¡î«l
::VÆid©i⁄Hódî*>(
ªsu…
);

259 
	ghódî
->
	gm_size
 = 
n
;

260 
	ghódî
->
	gm_ty≥
 = 
I¡î«l
::
AŒocTy≥MÆloc
;

261 
	ghódî
->
	gm_¥efix
 = 
°©ic_ˇ°
<>(
I¡î«l
::
VÆid©i⁄Pªfix
);

262 
	gªsu…
 = 
hódî
 + 1;

263 *
	gI¡î«l
::
Á°MÆlocVÆid©i⁄Suffix
(
ªsu…
Ë
I¡î«l
::
VÆid©i⁄Suffix
;

264 
Á°MÆlocVÆid©e
(
ªsu…
);

265  
	gªsu…
;

267  
mÆloc
(
n
);

271 * 
Á°MÆloc
(
size_t
 
n
)

273 
ASSERT
(!
isF‹biddí
());

275 #i‡
ENABLE
(
WTF_MALLOC_VALIDATION
)

276 
TryMÆlocRëu∫VÆue
 
	gªtu∫VÆue
 = 
åyFa°MÆloc
(
n
);

277 * 
	gªsu…
;

278 i‡(!
	gªtu∫VÆue
.
gëVÆue
(
ªsu…
))

279 
CRASH
();

281 * 
	gªsu…
 = 
mÆloc
(
n
);

284 i‡(!
	gªsu…
)

285 
CRASH
();

287  
	gªsu…
;

290 
TryMÆlocRëu∫VÆue
 
åyFa°CÆloc
(
size_t
 
n_ñemíts
, size_à
ñemít_size
)

292 
ASSERT
(!
isF‹biddí
());

294 #i‡
ENABLE
(
WTF_MALLOC_VALIDATION
)

295 
size_t
 
	gtŸÆByãs
 = 
n_ñemíts
 * 
ñemít_size
;

296 i‡(
	gn_ñemíts
 > 1 && 
	gñemít_size
 && (
	gtŸÆByãs
 /ÉÀmít_sizeË!
n_ñemíts
)

299 
TryMÆlocRëu∫VÆue
 
	gªtu∫VÆue
 = 
åyFa°MÆloc
(
tŸÆByãs
);

300 * 
	gªsu…
;

301 i‡(!
	gªtu∫VÆue
.
gëVÆue
(
ªsu…
))

303 
mem£t
(
ªsu…
, 0, 
tŸÆByãs
);

304 
Á°MÆlocVÆid©e
(
ªsu…
);

305  
	gªsu…
;

307  
ˇŒoc
(
n_ñemíts
, 
ñemít_size
);

311 * 
Á°CÆloc
(
size_t
 
n_ñemíts
, size_à
ñemít_size
)

313 
ASSERT
(!
isF‹biddí
());

315 #i‡
ENABLE
(
WTF_MALLOC_VALIDATION
)

316 
TryMÆlocRëu∫VÆue
 
	gªtu∫VÆue
 = 
åyFa°CÆloc
(
n_ñemíts
, 
ñemít_size
);

317 * 
	gªsu…
;

318 i‡(!
	gªtu∫VÆue
.
gëVÆue
(
ªsu…
))

319 
CRASH
();

321 * 
	gªsu…
 = 
ˇŒoc
(
n_ñemíts
, 
ñemít_size
);

324 i‡(!
	gªsu…
)

325 
CRASH
();

327  
	gªsu…
;

330 
Á°Fªe
(* 
p
)

332 
ASSERT
(!
isF‹biddí
());

334 #i‡
ENABLE
(
WTF_MALLOC_VALIDATION
)

335 i‡(!
	gp
)

338 
Á°MÆlocM©chVÆid©eFªe
(
p
, 
I¡î«l
::
AŒocTy≥MÆloc
);

339 
	gI¡î«l
::
VÆid©i⁄Hódî
* 
hódî
 = 
I¡î«l
::
Á°MÆlocVÆid©i⁄Hódî
(
p
);

340 
mem£t
(
p
, 0xCC, 
hódî
->
m_size
);

341 
‰ì
(
hódî
);

343 
‰ì
(
p
);

347 
TryMÆlocRëu∫VÆue
 
åyFa°RóŒoc
(* 
p
, 
size_t
 
n
)

349 
ASSERT
(!
isF‹biddí
());

351 #i‡
ENABLE
(
WTF_MALLOC_VALIDATION
)

352 i‡(
	gp
) {

353 i‡(
	g°d
::
numîic_limôs
<
size_t
>::
max
(Ë- 
I¡î«l
::
VÆid©i⁄Buf„rSize
 <
n
)

355 
Á°MÆlocVÆid©e
(
p
);

356 
	gI¡î«l
::
VÆid©i⁄Hódî
* 
ªsu…
 = 
°©ic_ˇ°
<
I¡î«l
::VÆid©i⁄Hódî*>(
ªÆloc
(I¡î«l::
Á°MÆlocVÆid©i⁄Hódî
(
p
), 
n
 + I¡î«l::
VÆid©i⁄Buf„rSize
));

357 i‡(!
	gªsu…
)

359 
	gªsu…
->
	gm_size
 = 
n
;

360 
	gªsu…
 = 
ªsu…
 + 1;

361 *
Á°MÆlocVÆid©i⁄Suffix
(
ªsu…
Ë
I¡î«l
::
VÆid©i⁄Suffix
;

362 
Á°MÆlocVÆid©e
(
ªsu…
);

363  
	gªsu…
;

365  
Á°MÆloc
(
n
);

368  
ªÆloc
(
p
, 
n
);

372 * 
Á°RóŒoc
(* 
p
, 
size_t
 
n
)

374 
ASSERT
(!
isF‹biddí
());

376 #i‡
ENABLE
(
WTF_MALLOC_VALIDATION
)

377 
TryMÆlocRëu∫VÆue
 
	gªtu∫VÆue
 = 
åyFa°RóŒoc
(
p
, 
n
);

378 * 
	gªsu…
;

379 i‡(!
	gªtu∫VÆue
.
gëVÆue
(
ªsu…
))

380 
CRASH
();

382 * 
	gªsu…
 = 
ªÆloc
(
p
, 
n
);

385 i‡(!
	gªsu…
)

386 
CRASH
();

387  
	gªsu…
;

390 
ªÀa£Fa°MÆlocFªeMem‹y
() { }

392 
Fa°MÆlocSèti°ics
 
Á°MÆlocSèti°ics
()

394 
Fa°MÆlocSèti°ics
 
	g°©i°ics
 = { 0, 0, 0 };

395  
	g°©i°ics
;

398 
size_t
 
Á°MÆlocSize
(c⁄° * 
p
)

400 #i‡
ENABLE
(
WTF_MALLOC_VALIDATION
)

401  
	gI¡î«l
::
Á°MÆlocVÆid©i⁄Hódî
(
c⁄°_ˇ°
<*>(
p
))->
m_size
;

402 #ñi‡
OS
(
DARWIN
)

403  
mÆloc_size
(
p
);

404 #ñi‡
OS
(
WINDOWS
)

405  
_msize
(
c⁄°_ˇ°
<*>(
p
));

407 
UNUSED_PARAM
(
p
);

414 #i‡
OS
(
DARWIN
)

417 "C" 
WTF_EXPORT_PRIVATE
 c⁄° 
jsc‹e_Á°mÆloc_öåo•e˘i⁄
 = 0;

420 #ñi‡
deföed
(
USE_BMALLOC
) && USE_BMALLOC

422 
	~<bmÆloc/bmÆloc.h
>

424 
«me•a˚
 
	gWTF
 {

426 * 
Á°MÆloc
(
size_t
 
size
)

428 
ASSERT
(!
isF‹biddí
());

429  
	gbmÆloc
::
≠i
::
mÆloc
(
size
);

432 * 
Á°CÆloc
(
size_t
 
numEÀmíts
, size_à
ñemítSize
)

434  
Á°Zî€dMÆloc
(
numEÀmíts
 * 
ñemítSize
);

437 * 
Á°RóŒoc
(* 
obje˘
, 
size_t
 
size
)

439  
	gbmÆloc
::
≠i
::
ªÆloc
(
obje˘
, 
size
);

442 
Á°Fªe
(* 
obje˘
)

444 
	gbmÆloc
::
≠i
::
‰ì
(
obje˘
);

447 
size_t
 
Á°MÆlocSize
(const *)

452 
size_t
 
Á°MÆlocGoodSize
(size_à
size
)

454  
	gsize
;

457 
TryMÆlocRëu∫VÆue
 
åyFa°MÆloc
(
size_t
 
size
)

459  
Á°MÆloc
(
size
);

462 
TryMÆlocRëu∫VÆue
 
åyFa°RóŒoc
(* 
p
, 
size_t
 
n
)

464  
Á°RóŒoc
(
p
, 
n
);

467 
TryMÆlocRëu∫VÆue
 
åyFa°CÆloc
(
size_t
 
numEÀmíts
, size_à
ñemítSize
)

469  
Á°CÆloc
(
numEÀmíts
, 
ñemítSize
);

472 
ªÀa£Fa°MÆlocFªeMem‹y
()

474 
	gbmÆloc
::
≠i
::
sˇvíge
();

477 
Fa°MÆlocSèti°ics
 
Á°MÆlocSèti°ics
()

479 
Fa°MÆlocSèti°ics
 
	g°©i°ics
 = { 0, 0, 0 };

480  
	g°©i°ics
;

487 
	~"TCPackedCache.h
"

488 
	~"TCPageM≠.h
"

489 
	~"TCSpöLock.h
"

490 
	~"TCSy°emAŒoc.h
"

491 
	~"ThªadS≥cific.h
"

492 
	~<Æg‹ôhm
>

493 #i‡
USE
(
PTHREADS
)

494 
	~<±hªad.h
>

496 
	~<°d¨g.h
>

497 
	~<°ddef.h
>

498 
	~<°döt.h
>

499 
	~<°dio.h
>

500 #i‡
HAVE
(
ERRNO_H
)

501 
	~<î∫o.h
>

503 #i‡
OS
(
UNIX
)

504 
	~<uni°d.h
>

506 #i‡
OS
(
WINDOWS
)

507 #i‚de‡
WIN32_LEAN_AND_MEAN


508 
	#WIN32_LEAN_AND_MEAN


	)

510 
	~<wödows.h
>

513 #ifde‡
WTF_CHANGES


515 #i‡
OS
(
DARWIN
)

516 
	~<wtf/HashSë.h
>

517 
	~<wtf/Ve˘‹.h
>

520 #i‡
HAVE
(
DISPATCH_H
)

521 
	~<di•©ch/di•©ch.h
>

524 #i‡
OS
(
DARWIN
)

525 #i‡
deföed
(
__has_ö˛ude
Ë&& __has_ö˛ude(<
Sy°em
/
±hªad_machdï
.
h
>)

526 
	~<Sy°em/±hªad_machdï.h
>

530 #i‡
deföed
(
__PTK_FRAMEWORK_JAVASCRIPTCORE_KEY0
)

531 
	#WTF_USE_PTHREAD_GETSPECIFIC_DIRECT
 1

	)

534 #i‚de‡
PRIuS


535 
	#PRIuS
 "zu"

	)

542 #i‡
OS
(
DARWIN
)

543 #i‡!
USE
(
PTHREAD_GETSPECIFIC_DIRECT
)

544 * (*
	g±hªad_gë•ecific_fun˘i⁄_poöãr
)(
	g±hªad_key_t
Ë
±hªad_gë•ecific
;

545 
	#±hªad_gë•ecific
(
key
Ë
	`±hªad_gë•ecific_fun˘i⁄_poöãr
(key)

	)

547 
	#±hªad_gë•ecific
(
key
Ë
	`_±hªad_gë•ecific_dúe˘
(key)

	)

548 
	#±hªad_£t•ecific
(
key
, 
vÆ
Ë
	`_±hªad_£t•ecific_dúe˘
(key, (vÆ))

	)

552 
	#DEFINE_VARIABLE
(
ty≥
, 
«me
, 
vÆue
, 
mónög
) \

553 
«me•a˚
 
FLAG__«me•a˚_do_nŸ_u£_dúe˘ly_u£_DECLARE_
##
ty≥
##
_ö°ód
 { \

554 
ty≥
 
FLAGS_
##
	`«me
(
vÆue
); \

555 
FLAGS_no
##
«me
; \

557 
usög
 
FLAG__«me•a˚_do_nŸ_u£_dúe˘ly_u£_DECLARE_
##
ty≥
##
_ö°ód
::
FLAGS_
##
«me


	)

559 
	#DEFINE_öt64
(
«me
, 
vÆue
, 
mónög
) \

560 
	`DEFINE_VARIABLE
(
öt64_t
, 
«me
, 
vÆue
, 
mónög
)

	)

562 
	#DEFINE_doubÀ
(
«me
, 
vÆue
, 
mónög
) \

563 
	`DEFINE_VARIABLE
(, 
«me
, 
vÆue
, 
mónög
)

	)

565 
«me•a˚
 
	gWTF
 {

567 
	#mÆloc
 
Á°MÆloc


	)

568 
	#ˇŒoc
 
Á°CÆloc


	)

569 
	#‰ì
 
Á°Fªe


	)

570 
	#ªÆloc
 
Á°RóŒoc


	)

572 
	#MESSAGE
 
LOG_ERROR


	)

573 
	#CHECK_CONDITION
 
ASSERT


	)

575 #i‡!
OS
(
DARWIN
)

576 c⁄° 
	gkLLH¨díögMask
 = 0;

579 
	gãm∂©e
 <> 
	gE¡r›ySour˚
;

580 
	gãm∂©e
 <> 
	gE¡r›ySour˚
<4> {

581 
uöt32_t
 
vÆue
()

583 #i‡
OS
(
DARWIN
)

584  
¨c4øndom
();

586  
	g°©ic_ˇ°
<
	guöt32_t
>(°©ic_ˇ°<
	guöçå_t
>(
cuºítTime
(Ë* 10000Ë^ 
	gªöãΩªt_ˇ°
<uöçå_t>(&
	gkLLH¨díögMask
));

591 
	gãm∂©e
 <> 
	gE¡r›ySour˚
<8> {

592 
uöt64_t
 
vÆue
()

594  
	gE¡r›ySour˚
<4>::
vÆue
(Ë| (
°©ic_ˇ°
<
uöt64_t
>(
E¡r›ySour˚
<4>::value()) << 32);

598 #i‡
ENABLE
(
TCMALLOC_HARDENING
)

607 
	gMaskKeyShi·
 = 13

610 
ALWAYS_INLINE
 
uöçå_t
 
öã∫ÆE¡r›yVÆue
()

612 
uöçå_t
 
	gvÆue
 = 
E¡r›ySour˚
<(uöçå_t)>::
vÆue
() | 1;

613 
ASSERT
(
vÆue
);

614  
	gvÆue
;

617 
	#HARDENING_ENTROPY
 
	`öã∫ÆE¡r›yVÆue
()

	)

618 
	#ROTATE_VALUE
(
vÆue
, 
amou¡
Ë(((vÆueË>> (amou¡)Ë| ((vÆueË<< ((vÆueË* 8 - (amou¡))))

	)

619 #i‡
COMPILER
(
MSVC
)

620 
	#XOR_MASK_PTR_WITH_KEY
(
±r
, 
key
, 
íå›y
Ë(
ªöãΩªt_ˇ°
<
	`de˛ty≥
’å)>‘eöãΩªt_ˇ°<
uöçå_t
>’å)^(
	`ROTATE_VALUE
‘eöãΩªt_ˇ°<uöçå_t>(key), 
MaskKeyShi·
)^íå›y)))

	)

622 
	#XOR_MASK_PTR_WITH_KEY
(
±r
, 
key
, 
íå›y
Ë(
ªöãΩªt_ˇ°
<
	`__ty≥of__
’å)>‘eöãΩªt_ˇ°<
uöçå_t
>’å)^(
	`ROTATE_VALUE
‘eöãΩªt_ˇ°<uöçå_t>(key), 
MaskKeyShi·
)^íå›y)))

	)

625 
ALWAYS_INLINE
 
uöt32_t
 
‰ìdObje˘SèπPois⁄
()

627 
uöt32_t
 
	gvÆue
 = 
E¡r›ySour˚
<(uöt32_t)>::
vÆue
() | 1;

628 
ASSERT
(
vÆue
);

629  
	gvÆue
;

632 
ALWAYS_INLINE
 
uöt32_t
 
‰ìdObje˘EndPois⁄
()

634 
uöt32_t
 
	gvÆue
 = 
E¡r›ySour˚
<(uöt32_t)>::
vÆue
() | 1;

635 
ASSERT
(
vÆue
);

636  
	gvÆue
;

639 
	#PTR_TO_UINT32
(
±r
Ë
°©ic_ˇ°
<
uöt32_t
>(
ªöãΩªt_ˇ°
<
uöçå_t
>’å))

	)

640 
	#END_POISON_INDEX
(
Æloˇti⁄Size
Ë((◊Œoˇti⁄SizeË- (
uöt32_t
)Ë/ (uöt32_t))

	)

641 
	#POISON_ALLOCATION
(
Æloˇti⁄
, 
Æloˇti⁄Size
) do { \

642 
	`ASSERT
((
Æloˇti⁄Size
Ë>2 * (
uöt32_t
)); \

643 
ªöãΩªt_ˇ°
<
uöt32_t
*>(
Æloˇti⁄
)[0] = 0xbadbeef1; \

644 
ªöãΩªt_ˇ°
<
uöt32_t
*>(
Æloˇti⁄
)[1] = 0xbadbeef3; \

645 i‡((
Æloˇti⁄Size
Ë< 4 * (
uöt32_t
)) \

647 
ªöãΩªt_ˇ°
<
uöt32_t
*>(
Æloˇti⁄
)[2] = 0xbadbeef5; \

648 
ªöãΩªt_ˇ°
<
uöt32_t
*>(
Æloˇti⁄
)[
	`END_POISON_INDEX
(
Æloˇti⁄Size
)] = 0xbadbeef7; \

649 } 
Ál£
);

	)

651 
	#POISON_DEALLOCATION_EXPLICIT
(
Æloˇti⁄
, 
Æloˇti⁄Size
, 
°¨tPois⁄
, 
ídPois⁄
) do { \

652 
	`ASSERT
((
Æloˇti⁄Size
Ë>2 * (
uöt32_t
)); \

653 
ªöãΩªt_ˇ°_±r
<
uöt32_t
*>(
Æloˇti⁄
)[0] = 0xbadbeef9; \

654 
ªöãΩªt_ˇ°_±r
<
uöt32_t
*>(
Æloˇti⁄
)[1] = 0xbadbeefb; \

655 i‡((
Æloˇti⁄Size
Ë< 4 * (
uöt32_t
)) \

657 
ªöãΩªt_ˇ°_±r
<
uöt32_t
*>(
Æloˇti⁄
)[2] = (
°¨tPois⁄
Ë^ 
	`PTR_TO_UINT32
(allocation); \

658 
ªöãΩªt_ˇ°_±r
<
uöt32_t
*>(
Æloˇti⁄
)[
	`END_POISON_INDEX
(
Æloˇti⁄Size
)] = (
ídPois⁄
Ë^ 
	`PTR_TO_UINT32
(allocation); \

659 } 
Ál£
)

	)

661 
	#POISON_DEALLOCATION
(
Æloˇti⁄
, 
Æloˇti⁄Size
) \

662 
	`POISON_DEALLOCATION_EXPLICIT
(
Æloˇti⁄
, (
Æloˇti⁄Size
), 
	`‰ìdObje˘SèπPois⁄
(), 
	`‰ìdObje˘EndPois⁄
())

	)

664 
	#MAY_BE_POISONED
(
Æloˇti⁄
, 
Æloˇti⁄Size
Ë((◊Œoˇti⁄SizeË>4 * (
uöt32_t
)) && ( \

665 (
ªöãΩªt_ˇ°
<
uöt32_t
*>(
Æloˇti⁄
)[2] =(
	`‰ìdObje˘SèπPois⁄
(Ë^ 
	`PTR_TO_UINT32
(allocation))) || \

666 (
ªöãΩªt_ˇ°
<
uöt32_t
*>(
Æloˇti⁄
)[
	`END_POISON_INDEX
(
Æloˇti⁄Size
)] =(
	`‰ìdObje˘EndPois⁄
(Ë^ 
	`PTR_TO_UINT32
(allocation))) \

667 ))

	)

669 
	#IS_DEFINITELY_POISONED
(
Æloˇti⁄
, 
Æloˇti⁄Size
Ë((◊Œoˇti⁄SizeË< 4 * (
uöt32_t
)) || ( \

670 (
ªöãΩªt_ˇ°
<
uöt32_t
*>(
Æloˇti⁄
)[2] =(
	`‰ìdObje˘SèπPois⁄
(Ë^ 
	`PTR_TO_UINT32
(allocation))) && \

671 (
ªöãΩªt_ˇ°
<
uöt32_t
*>(
Æloˇti⁄
)[
	`END_POISON_INDEX
(
Æloˇti⁄Size
)] =(
	`‰ìdObje˘EndPois⁄
(Ë^ 
	`PTR_TO_UINT32
(allocation))) \

672 ))

	)

676 
	#POISON_ALLOCATION
(
Æloˇti⁄
, 
Æloˇti⁄Size
)

	)

677 
	#POISON_DEALLOCATION
(
Æloˇti⁄
, 
Æloˇti⁄Size
)

	)

678 
	#POISON_DEALLOCATION_EXPLICIT
(
Æloˇti⁄
, 
Æloˇti⁄Size
, 
°¨tPois⁄
, 
ídPois⁄
)

	)

679 
	#MAY_BE_POISONED
(
Æloˇti⁄
, 
Æloˇti⁄Size
Ë(
Ál£
)

	)

680 
	#IS_DEFINITELY_POISONED
(
Æloˇti⁄
, 
Æloˇti⁄Size
Ë(
åue
)

	)

681 
	#XOR_MASK_PTR_WITH_KEY
(
±r
, 
key
, 
íå›y
Ë(((Î¡r›y), (()key),Öå)

	)

683 
	#HARDENING_ENTROPY
 0

	)

692 
uöçå_t
 
	tLígth
;

697 
	#K_PAGE_SHIFT_MIN
 12

	)

698 
	#K_PAGE_SHIFT_MAX
 14

	)

699 
	#K_NUM_CLASSES_MAX
 77

	)

700 
size_t
 
	gkPageShi·
 = 0;

701 
size_t
 
	gkNumCœs£s
 = 0;

702 
size_t
 
	gkPageSize
 = 0;

703 
Lígth
 
	gkMaxVÆidPages
 = 0;

704 c⁄° 
size_t
 
	gkMaxSize
 = 32u * 1024;

705 c⁄° 
size_t
 
	gkAlignShi·
 = 3;

706 c⁄° 
size_t
 
	gkAlignmít
 = 1 << 
kAlignShi·
;

710 c⁄° 
size_t
 
	gkPageM≠BigAŒoˇti⁄Thªshﬁd
 = 128 << 20;

718 c⁄° 
size_t
 
	gkMöSy°emAŒoc
 = 1 << (20 - 
K_PAGE_SHIFT_MAX
);

725 
	gnum_obje˘s_to_move
[
K_NUM_CLASSES_MAX
];

732 c⁄° 
	gkMaxFªeLi°Lígth
 = 256;

735 c⁄° 
size_t
 
	gkMöThªadCacheSize
 = 
kMaxSize
 * 2;

736 c⁄° 
size_t
 
	gkMaxThªadCacheSize
 = 2 << 20;

739 c⁄° 
size_t
 
	gkDeÁu…OvîÆlThªadCacheSize
 = 16 << 20;

743 c⁄° 
size_t
 
	gkMaxPages
 = 
kMöSy°emAŒoc
;

746 
	g¥imes_li°
[] = {

759 #ifde‡
NO_TCMALLOC_SAMPLES


760 
DEFINE_öt64
(
tcmÆloc_ßm∂e_∑ømëî
, 0,

762 
size_t
 
	gßm∂e_≥riod
 = 0;

764 
DEFINE_öt64
(
tcmÆloc_ßm∂e_∑ømëî
, 262147,

768 
size_t
 
	gßm∂e_≥riod
 = 262147;

772 
SpöLock
 
	gßm∂e_≥riod_lock
 = 
SPINLOCK_INITIALIZER
;

776 
DEFINE_doubÀ
(
tcmÆloc_ªÀa£_øã
, 1,

805 c⁄° 
size_t
 
	gkMaxSmÆlSize
 = 1024;

806 c⁄° 
	gshi·_amou¡
[2] = { 3, 7 };

807 c⁄° 
	gadd_amou¡
[2] = { 7, 127 + (120 << 7) };

808 
	g˛ass_¨øy
[377];

811 
ölöe
 
CœssIndex
(
size_t
 
s
) {

812 c⁄° 
	gi
 = (
s
 > 
kMaxSmÆlSize
);

813  
	g°©ic_ˇ°
<>((
	gs
 + 
	gadd_amou¡
[
i
]Ë>> 
	gshi·_amou¡
[i]);

817 
size_t
 
	g˛ass_to_size
[
K_NUM_CLASSES_MAX
];

820 
size_t
 
	g˛ass_to_∑ges
[
K_NUM_CLASSES_MAX
];

824 ˛as†
	cH¨díedSLL
 {

825 
	gpublic
:

826 
ALWAYS_INLINE
 
H¨díedSLL
 
¸óã
(* 
vÆue
)

828 
H¨díedSLL
 
ªsu…
;

829 
	gªsu…
.
	gm_vÆue
 = 
vÆue
;

830  
	gªsu…
;

833 
ALWAYS_INLINE
 
H¨díedSLL
 
nuŒ
()

835 
H¨díedSLL
 
	gªsu…
;

836 
	gªsu…
.
	gm_vÆue
 = 0;

837  
	gªsu…
;

840 
ALWAYS_INLINE
 
£tVÆue
(* 
vÆue
Ë{ 
	gm_vÆue
 = value; }

841 
ALWAYS_INLINE
 * 
vÆue
(Ëc⁄° {  
	gm_vÆue
; }

842 
ALWAYS_INLINE
 
boﬁ
 
	g›î©‹
!(Ëc⁄° {  !
	gm_vÆue
; }

843 * (
	tH¨díedSLL
::*
	tUn•ecifõdBoﬁTy≥
);

844 
ALWAYS_INLINE
 
›î©‹
 
Un•ecifõdBoﬁTy≥
(Ëc⁄° {  
	gm_vÆue
 ? &
	gH¨díedSLL
::
m_vÆue
 : 0; }

846 
boﬁ
 
	g›î©‹
!=(c⁄° 
H¨díedSLL
& 
Ÿhî
Ëc⁄° {  
m_vÆue
 != other.m_value; }

847 
boﬁ
 
	g›î©‹
==(c⁄° 
H¨díedSLL
& 
Ÿhî
Ëc⁄° {  
m_vÆue
 == other.m_value; }

849 
	g¥iv©e
:

850 * 
m_vÆue
;

856 
	sTCE¡ry
 {

857 
H¨díedSLL
 
	ghód
;

858 
H¨díedSLL
 
	gèû
;

865 
	#K_NUM_TRANSFER_ENTRIES_MAX
 
°©ic_ˇ°
<>(
K_NUM_CLASSES_MAX
)

	)

866 
	#kNumTøns„rE¡rõs
 
°©ic_ˇ°
<>(
kNumCœs£s
)

	)

870 
ölöe
 
	$LgFlo‹
(
size_t
 
n
) {

871 
log
 = 0;

872 
i
 = 4; i >= 0; --i) {

873 
shi·
 = (1 << 
i
);

874 
size_t
 
x
 = 
n
 >> 
shi·
;

875 i‡(
x
 != 0) {

876 
n
 = 
x
;

877 
log
 +
shi·
;

880 
	`ASSERT
(
n
 == 1);

881  
log
;

882 
	}
}

885 
ALWAYS_INLINE
 
H¨díedSLL
 
	$SLL_Next
(
H¨díedSLL
 
t
, 
uöçå_t
 
íå›y
) {

886 * 
tVÆueNext
 = *(
ªöãΩªt_ˇ°
<**>(
t
.
	`vÆue
()));

887  
H¨díedSLL
::
	`¸óã
(
	`XOR_MASK_PTR_WITH_KEY
(
tVÆueNext
, 
t
.
	`vÆue
(), 
íå›y
));

888 
	}
}

890 
ALWAYS_INLINE
 
	$SLL_SëNext
(
H¨díedSLL
 
t
, H¨díedSLL 
n
, 
uöçå_t
 
íå›y
) {

891 *(
ªöãΩªt_ˇ°
<**>(
t
.
	`vÆue
())Ë
	`XOR_MASK_PTR_WITH_KEY
(
n
.vÆue(),Å.vÆue(), 
íå›y
);

892 
	}
}

894 
ALWAYS_INLINE
 
	$SLL_Push
(
H¨díedSLL
* 
li°
, H¨díedSLL 
ñemít
, 
uöçå_t
 
íå›y
) {

895 
	`SLL_SëNext
(
ñemít
, *
li°
, 
íå›y
);

896 *
li°
 = 
ñemít
;

897 
	}
}

899 
ALWAYS_INLINE
 
H¨díedSLL
 
	$SLL_P›
(
H¨díedSLL
 *
li°
, 
uöçå_t
 
íå›y
) {

900 
H¨díedSLL
 
ªsu…
 = *
li°
;

901 *
li°
 = 
	`SLL_Next
(*li°, 
íå›y
);

902  
ªsu…
;

903 
	}
}

910 
ALWAYS_INLINE
 
	$SLL_P›R™ge
(
H¨díedSLL
* 
hód
, 
N
, H¨díedSLL *
°¨t
, H¨díedSLL *
íd
, 
uöçå_t
 
íå›y
) {

911 i‡(
N
 == 0) {

912 *
°¨t
 = 
H¨díedSLL
::
	`nuŒ
();

913 *
íd
 = 
H¨díedSLL
::
	`nuŒ
();

917 
H¨díedSLL
 
tmp
 = *
hód
;

918 
i
 = 1; i < 
N
; ++i) {

919 
tmp
 = 
	`SLL_Next
—mp, 
íå›y
);

922 *
°¨t
 = *
hód
;

923 *
íd
 = 
tmp
;

924 *
hód
 = 
	`SLL_Next
(
tmp
, 
íå›y
);

926 
	`SLL_SëNext
(
tmp
, 
H¨díedSLL
::
	`nuŒ
(), 
íå›y
);

927 
	}
}

929 
ALWAYS_INLINE
 
	$SLL_PushR™ge
(
H¨díedSLL
 *
hód
, H¨díedSLL 
°¨t
, H¨díedSLL 
íd
, 
uöçå_t
 
íå›y
) {

930 i‡(!
°¨t
) ;

931 
	`SLL_SëNext
(
íd
, *
hód
, 
íå›y
);

932 *
hód
 = 
°¨t
;

933 
	}
}

937 
ALWAYS_INLINE
 
size_t
 
	$SizeCœss
(
size_t
 
size
) {

938  
˛ass_¨øy
[
	`CœssIndex
(
size
)];

939 
	}
}

942 
ALWAYS_INLINE
 
size_t
 
	$ByãSizeF‹Cœss
(
size_t
 
˛
) {

943  
˛ass_to_size
[
˛
];

944 
	}
}

945 
	$NumMoveSize
(
size_t
 
size
) {

946 i‡(
size
 == 0)  0;

948 
num
 = 
°©ic_ˇ°
<>(64.0 * 1024.0 / 
size
);

949 i‡(
num
 < 2)Çum = 2;

952 i‡(
num
 > 
°©ic_ˇ°
<>(0.8 * 
kMaxFªeLi°Lígth
))

953 
num
 = 
°©ic_ˇ°
<>(0.8 * 
kMaxFªeLi°Lígth
);

963 i‡(
num
 > 32)Çum = 32;

965  
num
;

966 
	}
}

969 
	$InôSizeCœs£s
() {

970 #i‡
	`OS
(
DARWIN
)

971 
kPageShi·
 = 
vm_∑ge_shi·
;

972 
kPageShi·
) {

974 
kNumCœs£s
 = 68;

977 
kNumCœs£s
 = 77;

980 
	`CRASH
();

983 
kPageShi·
 = 12;

984 
kNumCœs£s
 = 68;

986 
kPageSize
 = 1 << 
kPageShi·
;

987 
kMaxVÆidPages
 = (~
°©ic_ˇ°
<
Lígth
>(0)Ë>> 
kPageShi·
;

990 i‡(
	`CœssIndex
(0) < 0) {

991 
	`MESSAGE
("InvÆid cœs†ödex %d f‹ sizê0\n", 
	`CœssIndex
(0));

992 
	`CRASH
();

994 i‡(
°©ic_ˇ°
<
size_t
>(
	`CœssIndex
(
kMaxSize
)Ë>(
˛ass_¨øy
)) {

995 
	`MESSAGE
("InvÆid cœs†ödex %d f‹ kMaxSize\n", 
	`CœssIndex
(
kMaxSize
));

996 
	`CRASH
();

1000 
size_t
 
sc
 = 1;

1001 
Æignshi·
 = 
kAlignShi·
;

1002 
œ°_lg
 = -1;

1003 
size_t
 
size
 = 
kAlignmít
; sizê<
kMaxSize
; sizê+(1 << 
Æignshi·
)) {

1004 
lg
 = 
	`LgFlo‹
(
size
);

1005 i‡(
lg
 > 
œ°_lg
) {

1013 i‡((
lg
 >7Ë&& (
Æignshi·
 < 8)) {

1014 
Æignshi·
++;

1016 
œ°_lg
 = 
lg
;

1021 
size_t
 
psize
 = 
kPageSize
;

1022 (
psize
 % 
size
) > (psize >> 3)) {

1023 
psize
 +
kPageSize
;

1025 c⁄° 
size_t
 
my_∑ges
 = 
psize
 >> 
kPageShi·
;

1027 i‡(
sc
 > 1 && 
my_∑ges
 =
˛ass_to_∑ges
[sc-1]) {

1030 c⁄° 
size_t
 
my_obje˘s
 = (
my_∑ges
 << 
kPageShi·
Ë/ 
size
;

1031 c⁄° 
size_t
 
¥ev_obje˘s
 = (
˛ass_to_∑ges
[
sc
-1] << 
kPageShi·
)

1032 / 
˛ass_to_size
[
sc
-1];

1033 i‡(
my_obje˘s
 =
¥ev_obje˘s
) {

1035 
˛ass_to_size
[
sc
-1] = 
size
;

1041 
˛ass_to_∑ges
[
sc
] = 
my_∑ges
;

1042 
˛ass_to_size
[
sc
] = 
size
;

1043 
sc
++;

1045 i‡(
sc
 !
kNumCœs£s
) {

1046 
	`MESSAGE
("wr⁄gÇumbî o‡sizê˛as£s: found %" 
PRIuS
 " instead of %d\n",

1047 
sc
, (
kNumCœs£s
));

1048 
	`CRASH
();

1052 
√xt_size
 = 0;

1053 
c
 = 1; c < 
kNumCœs£s
; c++) {

1054 c⁄° 
size_t
 
max_size_ö_˛ass
 = 
˛ass_to_size
[
c
];

1055 
size_t
 
s
 = 
√xt_size
; s <
max_size_ö_˛ass
; s +
kAlignmít
) {

1056 
˛ass_¨øy
[
	`CœssIndex
(
s
)] = 
c
;

1058 
√xt_size
 = 
°©ic_ˇ°
<>(
max_size_ö_˛ass
 + 
kAlignmít
);

1062 
size_t
 
size
 = 0; sizê<
kMaxSize
; size++) {

1063 c⁄° 
size_t
 
sc
 = 
	`SizeCœss
(
size
);

1064 i‡(
sc
 == 0) {

1065 
	`MESSAGE
("Bad sizê˛as†%" 
PRIuS
 " f‹ %" PRIuS "\n", 
sc
, 
size
);

1066 
	`CRASH
();

1068 i‡(
sc
 > 1 && 
size
 <
˛ass_to_size
[sc-1]) {

1069 
	`MESSAGE
("AŒoˇtög u¬e˚sßrûyÜ¨gê˛as†%" 
PRIuS
 " for %" PRIuS

1070 "\n", 
sc
, 
size
);

1071 
	`CRASH
();

1073 i‡(
sc
 >
kNumCœs£s
) {

1074 
	`MESSAGE
("Bad sizê˛as†%" 
PRIuS
 " f‹ %" PRIuS "\n", 
sc
, 
size
);

1075 
	`CRASH
();

1077 c⁄° 
size_t
 
s
 = 
˛ass_to_size
[
sc
];

1078 i‡(
size
 > 
s
) {

1079 
	`MESSAGE
("Bad sizê%" 
PRIuS
 " f‹ %" PRIuS " (s¯%" PRIuS ")\n", 
s
, 
size
, 
sc
);

1080 
	`CRASH
();

1082 i‡(
s
 == 0) {

1083 
	`MESSAGE
("Bad sizê%" 
PRIuS
 " f‹ %" PRIuS " (s¯%" PRIuS ")\n", 
s
, 
size
, 
sc
);

1084 
	`CRASH
();

1089 
size_t
 
˛
 = 1; c»< 
kNumCœs£s
; ++cl) {

1090 
num_obje˘s_to_move
[
˛
] = 
	`NumMoveSize
(
	`ByãSizeF‹Cœss
(cl));

1093 #i‚de‡
WTF_CHANGES


1094 i‡(
Ál£
) {

1096 
size_t
 
˛
 = 1; c»< 
kNumCœs£s
; ++cl) {

1097 c⁄° 
Æloc_size
 = 
˛ass_to_∑ges
[
˛
] << 
kPageShi·
;

1098 c⁄° 
Æloc_objs
 = 
Æloc_size
 / 
˛ass_to_size
[
˛
];

1099 c⁄° 
mö_u£d
 = (
˛ass_to_size
[
˛
-1] + 1Ë* 
Æloc_objs
;

1100 c⁄° 
max_wa°e
 = 
Æloc_size
 - 
mö_u£d
;

1101 
	`MESSAGE
("SC %3d [ %8d .. %8d ] from %8d ; %2.0f%% maxwaste\n",

1102 (
˛
),

1103 (
˛ass_to_size
[
˛
-1] + 1),

1104 (
˛ass_to_size
[
˛
]),

1105 (
˛ass_to_∑ges
[
˛
] << 
kPageShi·
),

1106 
max_wa°e
 * 100.0 / 
Æloc_size


1111 
	}
}

1119 
uöt64_t
 
	gmëad©a_sy°em_byãs
 = 0;

1120 * 
	$MëaD©aAŒoc
(
size_t
 
byãs
) {

1121 * 
ªsu…
 = 
	`TCMÆloc_Sy°emAŒoc
(
byãs
, 0);

1122 i‡(
ªsu…
 !
NULL
) {

1123 
mëad©a_sy°em_byãs
 +
byãs
;

1125  
ªsu…
;

1126 
	}
}

1128 #i‡
deföed
(
WTF_CHANGES
Ë&& 
	$OS
(
DARWIN
)

1129 
˛ass
 
RemŸeMem‹yRódî
;

1132 
ãm∂©e
 <
˛ass
 
T
>

1133 ˛as†
	cPageHópAŒoˇt‹
 {

1134 
¥iv©e
:

1136 c⁄° 
size_t
 
kAŒocIn¸emít
 = 32 << 10;

1139 c⁄° 
size_t
 
kAlig√dSize


1140 ((((
T
Ë+ 
kAlignmít
 - 1) / kAlignment) * kAlignment);

1143 * 
‰ì_¨ó_
;

1144 
size_t
 
‰ì_avaû_
;

1147 
H¨díedSLL
 
Æloˇãd_ªgi⁄s_
;

1150 
H¨díedSLL
 
‰ì_li°_
;

1153 
öu£_
;

1154 
uöçå_t
 
íå›y_
;

1156 
public
:

1157 
	`Inô
(
uöçå_t
 
íå›y
) {

1158 
	`ASSERT
(
kAlig√dSize
 <
kAŒocIn¸emít
);

1159 
öu£_
 = 0;

1160 
Æloˇãd_ªgi⁄s_
 = 
H¨díedSLL
::
	`nuŒ
();

1161 
‰ì_¨ó_
 = 
NULL
;

1162 
‰ì_avaû_
 = 0;

1163 
‰ì_li°_
.
	`£tVÆue
(
NULL
);

1164 
íå›y_
 = 
íå›y
;

1167 
T
* 
	`New
() {

1169 * 
ªsu…
;

1170 i‡(
‰ì_li°_
) {

1171 
ªsu…
 = 
‰ì_li°_
.
	`vÆue
();

1172 
‰ì_li°_
 = 
	`SLL_Next
(‰ì_li°_, 
íå›y_
);

1174 i‡(
‰ì_avaû_
 < 
kAlig√dSize
) {

1176 * 
√w_Æloˇti⁄
 = 
ªöãΩªt_ˇ°
<*>(
	`MëaD©aAŒoc
(
kAŒocIn¸emít
));

1177 i‡(!
√w_Æloˇti⁄
)

1178 
	`CRASH
();

1180 
H¨díedSLL
 
√w_hód
 = H¨díedSLL::
	`¸óã
(
√w_Æloˇti⁄
);

1181 
	`SLL_SëNext
(
√w_hód
, 
Æloˇãd_ªgi⁄s_
, 
íå›y_
);

1182 
Æloˇãd_ªgi⁄s_
 = 
√w_hód
;

1183 
‰ì_¨ó_
 = 
√w_Æloˇti⁄
 + 
kAlig√dSize
;

1184 
‰ì_avaû_
 = 
kAŒocIn¸emít
 - 
kAlig√dSize
;

1186 
ªsu…
 = 
‰ì_¨ó_
;

1187 
‰ì_¨ó_
 +
kAlig√dSize
;

1188 
‰ì_avaû_
 -
kAlig√dSize
;

1190 
öu£_
++;

1191  
ªöãΩªt_ˇ°
<
T
*>(
ªsu…
);

1194 
	`Dñëe
(
T
* 
p
) {

1195 
H¨díedSLL
 
√w_hód
 = H¨díedSLL::
	`¸óã
(
p
);

1196 
	`SLL_SëNext
(
√w_hód
, 
‰ì_li°_
, 
íå›y_
);

1197 
‰ì_li°_
 = 
√w_hód
;

1198 
öu£_
--;

1201 
	`öu£
(Ëc⁄° {  
öu£_
; }

1203 #i‡
	`deföed
(
WTF_CHANGES
Ë&& 
	`OS
(
DARWIN
)

1204 
ãm∂©e
 <
ty≥«me
 
Rec‹dî
>

1205 
	`ªc‹dAdmöi°øtiveRegi⁄s
(
Rec‹dî
&, c⁄° 
RemŸeMem‹yRódî
&);

1207 
	}
};

1214 
uöçå_t
 
	tPageID
;

1218 
ölöe
 
Lígth
 
	$∑ges
(
size_t
 
byãs
) {

1219 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

1220  (
byãs
 >> 
kPageShi·
) +

1221 ((
byãs
 & (
kPageSize
 - 1)) > 0 ? 1 : 0);

1222 
	}
}

1226 
size_t
 
	$AŒoˇti⁄Size
(
size_t
 
byãs
) {

1227 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

1228 i‡(
byãs
 > 
kMaxSize
) {

1230 
	`ASSERT
(
byãs
 <(
kMaxVÆidPages
 << 
kPageShi·
));

1231  
	`∑ges
(
byãs
Ë<< 
kPageShi·
;

1234  
	`ByãSizeF‹Cœss
(
	`SizeCœss
(
byãs
));

1236 
	}
}

1239 
	gkS∑nCookõBôs
 = 10,

1240 
	gkS∑nCookõMask
 = (1 << 10) - 1,

1241 
	gkS∑nThisShi·
 = 7

1244 
uöt32_t
 
	g•™VÆid©i⁄Cookõ
;

1245 
uöt32_t
 
	$•™InôülizîCookõ
()

1247 
uöt32_t
 
vÆue
 = 
E¡r›ySour˚
<(uöt32_t)>::
	`vÆue
(Ë& 
kS∑nCookõMask
;

1248 
•™VÆid©i⁄Cookõ
 = 
vÆue
;

1249  
vÆue
;

1250 
	}
}

1253 
	sS∑n
 {

1254 
PageID
 
	g°¨t
;

1255 
Lígth
 
	gÀngth
;

1256 
S∑n
* 
√xt
(
uöçå_t
 
íå›y
Ëc⁄° {  
XOR_MASK_PTR_WITH_KEY
(
m_√xt
, 
this
,Éntropy); }

1257 
S∑n
* 
ªmŸeNext
(c⁄° S∑n* 
ªmŸeS∑nPoöãr
, 
uöçå_t
 
íå›y
Ëc⁄° {  
XOR_MASK_PTR_WITH_KEY
(
m_√xt
,ÑemoteSpanPointer,Éntropy); }

1258 
S∑n
* 
¥ev
(
uöçå_t
 
íå›y
Ëc⁄° {  
XOR_MASK_PTR_WITH_KEY
(
m_¥ev
, 
this
,Éntropy); }

1259 
£tNext
(
S∑n
* 
√xt
, 
uöçå_t
 
íå›y
Ë{ 
	gm_√xt
 = 
XOR_MASK_PTR_WITH_KEY
“ext, 
this
,Éntropy); }

1260 
£tPªv
(
S∑n
* 
¥ev
, 
uöçå_t
 
íå›y
Ë{ 
	gm_¥ev
 = 
XOR_MASK_PTR_WITH_KEY
’ªv, 
this
,Éntropy); }

1262 
	g¥iv©e
:

1263 
S∑n
* 
m_√xt
;

1264 
S∑n
* 
	gm_¥ev
;

1265 
	gpublic
:

1266 
H¨díedSLL
 
obje˘s
;

1267 
	g‰ì
 : 1;

1268 #i‚de‡
NO_TCMALLOC_SAMPLES


1269 
	gßm∂e
 : 1;

1271 
	gsize˛ass
 : 8;

1272 
	gªfcou¡
 : 11;

1273 
boﬁ
 
	gdecommôãd
 : 1;

1274 
öôCookõ
()

1276 
	gm_cookõ
 = ((
ªöãΩªt_ˇ°
<
uöçå_t
>(
this
Ë>> 
kS∑nThisShi·
Ë& 
kS∑nCookõMask
Ë^ 
•™InôülizîCookõ
();

1278 
˛órCookõ
(Ë{ 
	gm_cookõ
 = 0; }

1279 
boﬁ
 
isVÆid
() const

1281  (((
	gªöãΩªt_ˇ°
<
	guöçå_t
>(
	gthis
Ë>> 
	gkS∑nThisShi·
Ë& 
	gkS∑nCookõMask
Ë^ 
	gm_cookõ
Ë=
•™VÆid©i⁄Cookõ
;

1283 
	g¥iv©e
:

1284 
uöt32_t
 
m_cookõ
 : 
kS∑nCookõBôs
;

1286 #unde‡
SPAN_HISTORY


1287 #ifde‡
SPAN_HISTORY


1289 
	g√xthi°‹y
;

1290 
	ghi°‹y
[64];

1291 
	gvÆue
[64];

1295 
	#ASSERT_SPAN_COMMITTED
(
•™
Ë
	`ASSERT
(!•™->
decommôãd
)

	)

1297 #ifde‡
SPAN_HISTORY


1298 
	$Evít
(
S∑n
* 
•™
, 
›
, 
v
 = 0) {

1299 
•™
->
hi°‹y
[•™->
√xthi°‹y
] = 
›
;

1300 
•™
->
vÆue
[•™->
√xthi°‹y
] = 
v
;

1301 
•™
->
√xthi°‹y
++;

1302 i‡(
•™
->
√xthi°‹y
 =(•™->
hi°‹y
)) span->nexthistory = 0;

1303 
	}
}

1305 
	#Evít
(
s
,
o
,
v
Ë((Ë0)

	)

1309 
	gPageHópAŒoˇt‹
<
	gS∑n
> 
	g•™_Æloˇt‹
;

1310 
S∑n
* 
	$NewS∑n
(
PageID
 
p
, 
Lígth
 
Àn
) {

1311 
S∑n
* 
ªsu…
 = 
•™_Æloˇt‹
.
	`New
();

1312 
	`mem£t
(
ªsu…
, 0, (*result));

1313 
ªsu…
->
°¨t
 = 
p
;

1314 
ªsu…
->
Àngth
 = 
Àn
;

1315 
ªsu…
->
	`öôCookõ
();

1316 #ifde‡
SPAN_HISTORY


1317 
ªsu…
->
√xthi°‹y
 = 0;

1319  
ªsu…
;

1320 
	}
}

1322 
ölöe
 
	$DñëeS∑n
(
S∑n
* 
•™
) {

1323 
	`RELEASE_ASSERT
(
•™
->
	`isVÆid
());

1324 #i‚de‡
NDEBUG


1326 
	`mem£t
(
•™
, 0x3f, (*span));

1328 
•™
->
	`˛órCookõ
();

1329 
•™_Æloˇt‹
.
	`Dñëe
(
•™
);

1330 
	}
}

1336 
ölöe
 
	$DLL_Inô
(
S∑n
* 
li°
, 
uöçå_t
 
íå›y
) {

1337 
li°
->
	`£tNext
÷i°, 
íå›y
);

1338 
li°
->
	`£tPªv
÷i°, 
íå›y
);

1339 
	}
}

1341 
ölöe
 
	$DLL_Remove
(
S∑n
* 
•™
, 
uöçå_t
 
íå›y
) {

1342 
•™
->
	`¥ev
(
íå›y
)->
	`£tNext
(•™->
	`√xt
(entropy),Éntropy);

1343 
•™
->
	`√xt
(
íå›y
)->
	`£tPªv
(•™->
	`¥ev
(entropy),Éntropy);

1344 
•™
->
	`£tPªv
(
NULL
, 
íå›y
);

1345 
•™
->
	`£tNext
(
NULL
, 
íå›y
);

1346 
	}
}

1348 
ALWAYS_INLINE
 
boﬁ
 
	$DLL_IsEm±y
(c⁄° 
S∑n
* 
li°
, 
uöçå_t
 
íå›y
) {

1349  
li°
->
	`√xt
(
íå›y
) ==Üist;

1350 
	}
}

1352 
	$DLL_Lígth
(c⁄° 
S∑n
* 
li°
, 
uöçå_t
 
íå›y
) {

1353 
ªsu…
 = 0;

1354 
S∑n
* 
s
 = 
li°
->
	`√xt
(
íå›y
); s !=Üist; s = s->next(entropy)) {

1355 
ªsu…
++;

1357  
ªsu…
;

1358 
	}
}

1361 
	$DLL_Pröt
(c⁄° * 
œbñ
, c⁄° 
S∑n
* 
li°
) {

1362 
	`MESSAGE
("%-10†%p:", 
œbñ
, 
li°
);

1363 c⁄° 
S∑n
* 
s
 = 
li°
->
√xt
; s !=Üist; s = s->next) {

1364 
	`MESSAGE
(" <%p,%u,%u>", 
s
, s->
°¨t
, s->
Àngth
);

1366 
	`MESSAGE
("\n");

1367 
	}
}

1370 
ölöe
 
	$DLL_Pª≥nd
(
S∑n
* 
li°
, S∑n* 
•™
, 
uöçå_t
 
íå›y
) {

1371 
•™
->
	`£tNext
(
li°
->
	`√xt
(
íå›y
),Éntropy);

1372 
•™
->
	`£tPªv
(
li°
, 
íå›y
);

1373 
li°
->
	`√xt
(
íå›y
)->
	`£tPªv
(
•™
,Éntropy);

1374 
li°
->
	`£tNext
(
•™
, 
íå›y
);

1375 
	}
}

1381 ˛as†
	cTCMÆloc_CíåÆ_FªeLi°
 {

1382 
	gpublic
:

1383 
Inô
(
size_t
 
˛
, 
uöçå_t
 
íå›y
);

1389 
In£πR™ge
(
H¨díedSLL
 
°¨t
, H¨díedSLL 
íd
, 
N
);

1392 
RemoveR™ge
(
H¨díedSLL
* 
°¨t
, H¨díedSLL* 
íd
, *
N
);

1395 
size_t
 
Àngth
() {

1396 
SpöLockHﬁdî
 
h
(&
lock_
);

1397  
	gcou¡î_
;

1401 
tc_Àngth
() {

1402 
SpöLockHﬁdî
 
h
(&
lock_
);

1403  
u£d_¶Ÿs_
 * 
	gnum_obje˘s_to_move
[
size_˛ass_
];

1406 #ifde‡
WTF_CHANGES


1407 
	gãm∂©e
 <
˛ass
 
	gFödî
, cœs†
	gRódî
>

1408 
íumî©eFªeObje˘s
(
Födî
& 
födî
, c⁄° 
Ródî
& 
ªadî
, 
TCMÆloc_CíåÆ_FªeLi°
* 
ªmŸeCíåÆFªeLi°
)

1411 c⁄° 
±rdiff_t
 
	gem±yOff£t
 = 
ªöãΩªt_ˇ°
<c⁄° *>(&
em±y_
Ë-ÑeöãΩªt_ˇ°<c⁄° *>(
this
);

1412 
S∑n
* 
	gªmŸeEm±y
 = 
ªöãΩªt_ˇ°
<S∑n*>‘eöãΩªt_ˇ°<*>(
ªmŸeCíåÆFªeLi°
Ë+ 
em±yOff£t
);

1413 
S∑n
* 
	gªmŸeS∑n
 = 
n⁄em±y_
.
ªmŸeNext
(
ªmŸeEm±y
, 
íå›y_
);

1414 
S∑n
* 
	g•™
 = 
ªadî
(
ªmŸeEm±y
); s∑¿&& s∑¿!&
em±y_
; 
	gªmŸeS∑n
 = 
•™
->
ªmŸeNext
(
ªmŸeS∑n
, 
íå›y_
), span = (remoteSpan ?Ñeader(remoteSpan) : 0))

1415 
ASSERT
(!
•™
->
obje˘s
);

1418 
ASSERT
(!
n⁄em±y_
.
obje˘s
);

1419 c⁄° 
±rdiff_t
 
	gn⁄em±yOff£t
 = 
ªöãΩªt_ˇ°
<c⁄° *>(&
n⁄em±y_
Ë-ÑeöãΩªt_ˇ°<c⁄° *>(
this
);

1421 
S∑n
* 
	gªmŸeN⁄em±y
 = 
ªöãΩªt_ˇ°
<S∑n*>‘eöãΩªt_ˇ°<*>(
ªmŸeCíåÆFªeLi°
Ë+ 
n⁄em±yOff£t
);

1422 
S∑n
* 
	gªmŸeS∑n
 = 
n⁄em±y_
.
ªmŸeNext
(
ªmŸeN⁄em±y
, 
íå›y_
);

1424 
S∑n
* 
	g•™
 = 
ªadî
(
ªmŸeS∑n
); s∑¿&& 
	gªmŸeS∑n
 !
ªmŸeN⁄em±y
;ÑemŸeS∑¿
•™
->
ªmŸeNext
‘emŸeS∑n, 
íå›y_
), span = (remoteSpan ?Ñeader(remoteSpan) : 0)) {

1425 
H¨díedSLL
 
√xtObje˘
 = 
•™
->
obje˘s
; 
	g√xtObje˘
;ÇextObje˘.
£tVÆue
(
ªadî
.
√xtE¡ryInH¨díedLökedLi°
(
ªöãΩªt_ˇ°
<**>“extObje˘.
vÆue
()), 
íå›y_
))) {

1426 
	gfödî
.
visô
(
√xtObje˘
.
vÆue
());

1430 
	g¶Ÿ
 = 0; slŸ < 
	gu£d_¶Ÿs_
; ++slot) {

1431 
H¨díedSLL
 
	gíåy
 = 
tc_¶Ÿs_
[
¶Ÿ
].
hód
;É¡ry;É¡ry.
£tVÆue
(
ªadî
.
√xtE¡ryInH¨díedLökedLi°
(
ªöãΩªt_ˇ°
<**>(
íåy
.
vÆue
()), 
íå›y_
)))

1432 
	gfödî
.
visô
(
íåy
.
vÆue
());

1437 
uöçå_t
 
íå›y
(Ëc⁄° {  
	gíå›y_
; }

1438 
	g¥iv©e
:

1442 
H¨díedSLL
 
FëchFromS∑ns
();

1448 
H¨díedSLL
 
FëchFromS∑nsSa„
();

1453 
Rñó£Li°ToS∑ns
(
H¨díedSLL
 
°¨t
);

1458 
ALWAYS_INLINE
 
Rñó£ToS∑ns
(
H¨díedSLL
 
obje˘
);

1463 
ALWAYS_INLINE
 
P›uœã
();

1469 
boﬁ
 
MakeCacheS∑˚
();

1476 
ALWAYS_INLINE
 
boﬁ
 
Evi˘R™domSizeCœss
(
size_t
 
locked_size_˛ass
, boﬁ 
f‹˚
);

1485 
boﬁ
 
ShrökCache
(
locked_size_˛ass
, boﬁ 
f‹˚
);

1489 
SpöLock
 
	glock_
;

1492 
size_t
 
	gsize_˛ass_
;

1493 
S∑n
 
	gem±y_
;

1494 
S∑n
 
	gn⁄em±y_
;

1495 
size_t
 
	gcou¡î_
;

1500 
TCE¡ry
 
	gtc_¶Ÿs_
[
K_NUM_TRANSFER_ENTRIES_MAX
];

1504 
öt32_t
 
	gu£d_¶Ÿs_
;

1508 
öt32_t
 
	gˇche_size_
;

1509 
uöçå_t
 
	gíå›y_
;

1512 #i‡
COMPILER
(
CLANG
Ë&& 
	$deföed
(
__has_w¨nög
)

1513 #¥agm®
˛™g
 
dügno°ic
 
push


1514 #i‡
	`__has_w¨nög
("-Wunused-private-field")

1515 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wunused-private-field"

1520 
ãm∂©e
 <
size_t
 
SizeToPad
>

1521 ˛as†
	cTCMÆloc_CíåÆ_FªeLi°Padded_Tem∂©e
 : 
public
 
TCMÆloc_CíåÆ_FªeLi°
 {

1522 
¥iv©e
:

1523 
∑d
[64 - 
SizeToPad
];

1524 
	}
};

1528 
	gãm∂©e
 <> 
˛ass
 
	gTCMÆloc_CíåÆ_FªeLi°Padded_Tem∂©e
<0> : 
public
 
TCMÆloc_CíåÆ_FªeLi°
 {

1531 
	gTCMÆloc_CíåÆ_FªeLi°Padded_Tem∂©e
<(
	tTCMÆloc_CíåÆ_FªeLi°
Ë% 64> 
	tTCMÆloc_CíåÆ_FªeLi°Padded
;

1533 #i‡
COMPILER
(
CLANG
Ë&& 
	$deföed
(
__has_w¨nög
)

1534 #¥agm®
˛™g
 
dügno°ic
 
p›


1537 #i‡
	$OS
(
DARWIN
)

1538 
S∑n
;

1539 
˛ass
 
TCMÆloc_PageHóp
;

1540 
˛ass
 
TCMÆloc_ThªadCache
;

1541 
ãm∂©e
 <
ty≥«me
 
T
> 
˛ass
 
PageHópAŒoˇt‹
;

1543 ˛as†
	cFa°MÆlocZ⁄e
 {

1544 
public
:

1545 
	`öô
();

1547 
kîn_ªtu∫_t
 
	`íumî©e
(
èsk_t
, *, 
ty≥Mmask
, 
vm_addªss_t
 
z⁄eAddªss
, 
mem‹y_ªadî_t
, 
vm_ønge_ªc‹dî_t
);

1548 
size_t
 
	`goodSize
(
mÆloc_z⁄e_t
*, size_à
size
) {  size; }

1549 
boﬁón_t
 
	`check
(
mÆloc_z⁄e_t
*Ë{  
åue
; }

1550 
	`¥öt
(
mÆloc_z⁄e_t
*, 
boﬁón_t
) { }

1551 
	`log
(
mÆloc_z⁄e_t
*, *) { }

1552 
	`f‹˚Lock
(
mÆloc_z⁄e_t
*) { }

1553 
	`f‹˚U∆ock
(
mÆloc_z⁄e_t
*) { }

1554 
	`°©i°ics
(
mÆloc_z⁄e_t
*, 
mÆloc_°©i°ics_t
* 
°©s
Ë{ 
	`mem£t
(stats, 0, (malloc_statistics_t)); }

1556 
¥iv©e
:

1557 
	`Fa°MÆlocZ⁄e
(
TCMÆloc_PageHóp
*, 
TCMÆloc_ThªadCache
**, 
TCMÆloc_CíåÆ_FªeLi°Padded
*, 
PageHópAŒoˇt‹
<
S∑n
>*, PageHeapAllocator<TCMalloc_ThreadCache>*);

1558 
size_t
 
	`size
(
mÆloc_z⁄e_t
*, const *);

1559 * 
	`z⁄eMÆloc
(
mÆloc_z⁄e_t
*, 
size_t
);

1560 * 
	`z⁄eCÆloc
(
mÆloc_z⁄e_t
*, 
size_t
 
numIãms
, size_à
size
);

1561 
	`z⁄eFªe
(
mÆloc_z⁄e_t
*, *);

1562 * 
	`z⁄eRóŒoc
(
mÆloc_z⁄e_t
*, *, 
size_t
);

1563 * 
	`z⁄eVÆloc
(
mÆloc_z⁄e_t
*, 
size_t
Ë{ 
	`LOG_ERROR
("valloc isÇot supported");  0; }

1564 
	`z⁄eDe°roy
(
mÆloc_z⁄e_t
*) { }

1566 
mÆloc_z⁄e_t
 
m_z⁄e
;

1567 
TCMÆloc_PageHóp
* 
m_∑geHóp
;

1568 
TCMÆloc_ThªadCache
** 
m_thªadHóps
;

1569 
TCMÆloc_CíåÆ_FªeLi°Padded
* 
m_˚¡ølCaches
;

1570 
PageHópAŒoˇt‹
<
S∑n
>* 
m_•™AŒoˇt‹
;

1571 
PageHópAŒoˇt‹
<
TCMÆloc_ThªadCache
>* 
m_∑geHópAŒoˇt‹
;

1572 
	}
};

1575 "C" (*
mÆloc_loggî
)(
uöt32_t
 
ty≥Fœgs
, 
uöçå_t
 
z⁄e
, uöçå_à
size
, uöçå_à
poöãr
, uöçå_à
ªtu∫VÆue
, uöt32_à
numbîOfFømesToSkù
);

1579 ˛as†
	cMÆlocHook
 {

1580 
boﬁ
 
°ackLoggögE«bÀd
;

1582 #i‡
	`OS
(
DARWIN
)

1584 
	eSèckLoggögTy≥
 {

1585 
SèckLoggögTy≥AŒoc
 = 2,

1586 
SèckLoggögTy≥DóŒoc
 = 4,

1589 
	`ªc‹d
(
uöt32_t
 
ty≥Fœgs
, 
uöçå_t
 
z⁄e
, uöçå_à
size
, * 
poöãr
, * 
ªtu∫VÆue
, uöt32_à
numbîOfFømesToSkù
)

1591 
	`mÆloc_loggî
(
ty≥Fœgs
, 
z⁄e
, 
size
, 
ªöãΩªt_ˇ°
<
uöçå_t
>(
poöãr
),ÑeöãΩªt_ˇ°<uöçå_t>(
ªtu∫VÆue
), 
numbîOfFømesToSkù
);

1594 
NEVER_INLINE
 
	`ªc‹dAŒoˇti⁄
(* 
poöãr
, 
size_t
 
size
)

1598 
	`ªc‹d
(
SèckLoggögTy≥AŒoc
, 0, 
size
, 0, 
poöãr
, 0);

1601 
NEVER_INLINE
 
	`ªc‹dDóŒoˇti⁄
(* 
poöãr
)

1604 
	`ªc‹d
(
SèckLoggögTy≥DóŒoc
, 0, 
ªöãΩªt_ˇ°
<
uöçå_t
>(
poöãr
), 0, 0, 0);

1609 
public
:

1610 
	`öô
()

1612 #i‡
	`OS
(
DARWIN
)

1614 
°ackLoggögE«bÀd
 = 
mÆloc_loggî
;

1618 #i‡
	`OS
(
DARWIN
)

1619 
ALWAYS_INLINE
 
	`InvokeNewHook
(* 
poöãr
, 
size_t
 
size
)

1621 i‡(
	`UNLIKELY
(
°ackLoggögE«bÀd
))

1622 
	`ªc‹dAŒoˇti⁄
(
poöãr
, 
size
);

1625 
ALWAYS_INLINE
 
	`InvokeDñëeHook
(* 
poöãr
)

1628 i‡(
	`UNLIKELY
(
°ackLoggögE«bÀd
))

1629 
	`ªc‹dDóŒoˇti⁄
(
poöãr
);

1632 
ALWAYS_INLINE
 
	`InvokeNewHook
(*, 
size_t
) { }

1633 
ALWAYS_INLINE
 
	`InvokeDñëeHook
(*) { }

1635 
	}
};

1636 
boﬁ
 
	gMÆlocHook
::
°ackLoggögE«bÀd
 = 
Ál£
;

1640 #i‚de‡
WTF_CHANGES


1643 #ifde‡
NO_TCMALLOC_SAMPLES


1645 
	#GëSèckTø˚
(
°ack
, 
dïth
, 
skù
Ë(0)

	)

1647 
	~<googÀ/°ackåa˚.h
>

1654 #i‡
	$deföed
(
HAVE_TLS
)

1655 
boﬁ
 
kî√l_suµ‹ts_és
 = 
Ál£
;

1656 
ölöe
 
boﬁ
 
	$Kî√lSuµ‹tsTLS
() {

1657  
kî√l_suµ‹ts_és
;

1658 
	}
}

1659 #i‡!
HAVE_DECL_UNAME


1660 
	$CheckIfKî√lSuµ‹tsTLS
() {

1661 
kî√l_suµ‹ts_és
 = 
Ál£
;

1662 
	}
}

1664 
	~<sys/ut¢ame.h
>

1665 
	$CheckIfKî√lSuµ‹tsTLS
() {

1666 
ut¢ame
 
buf
;

1667 i‡(
	`u«me
(&
buf
) != 0) {

1668 
	`MESSAGE
("u«mêÁûedássumögÇÿTLS suµ‹à”ºno=%d)\n", 
î∫o
);

1669 
kî√l_suµ‹ts_és
 = 
Ál£
;

1670 } i‡(
	`°rˇ£cmp
(
buf
.
sy¢ame
, "linux") == 0) {

1672 i‡(
buf
.
ªÀa£
[0] < '2' && buf.release[1] == '.')

1673 
kî√l_suµ‹ts_és
 = 
Ál£
;

1674 i‡(
buf
.
ªÀa£
[0] == '2' && buf.release[1] == '.' &&

1675 
buf
.
ªÀa£
[2] >= '0' && buf.release[2] < '6' &&

1676 
buf
.
ªÀa£
[3] == '.')

1677 
kî√l_suµ‹ts_és
 = 
Ál£
;

1679 
kî√l_suµ‹ts_és
 = 
åue
;

1681 
kî√l_suµ‹ts_és
 = 
åue
;

1684 
	}
}

1691 #i‚de‡
__THROW


1692 
	#__THROW


1694 

	)

1702 c⁄° 
	gkMaxSèckDïth
 = 31;

1703 
	sSèckTø˚
 {

1704 
uöçå_t
 
	gsize
;

1705 
uöçå_t
 
	gdïth
;

1706 * 
	g°ack
[
kMaxSèckDïth
];

1708 
	gPageHópAŒoˇt‹
<
	gSèckTø˚
> 
	g°ackåa˚_Æloˇt‹
;

1709 
S∑n
 
	gßm∂ed_obje˘s
;

1720 
	gãm∂©e
 <
	gBITS
> cœs†
	cM≠Sñe˘‹
 {

1721 
	gpublic
:

1722 
TCMÆloc_PageM≠3
<
	tBITS
-
	tK_PAGE_SHIFT_MIN
> 
	tTy≥
;

1723 
	gPackedCache
<
	tBITS
, 
	tuöt64_t
> 
	tCacheTy≥
;

1726 #i‡
	$deföed
(
WTF_CHANGES
)

1727 #i‡
	`CPU
(
X86_64
Ë|| 
	$CPU
(
ARM64
)

1732 c⁄° 
size_t
 
kBôsUnu£dOn64Bô
 = 16;

1734 c⁄° 
size_t
 
kBôsUnu£dOn64Bô
 = 0;

1738 
ãm∂©e
 <> 
˛ass
 
M≠Sñe˘‹
<64> {

1739 
public
:

1740 
TCMÆloc_PageM≠3
<64 - 
	tK_PAGE_SHIFT_MIN
 - 
	tkBôsUnu£dOn64Bô
> 
	tTy≥
;

1741 
PackedCache
<64, 
	tuöt64_t
> 
	tCacheTy≥
;

1742 
	}
};

1746 
	gãm∂©e
 <> 
˛ass
 
	gM≠Sñe˘‹
<32> {

1747 
	gpublic
:

1748 
TCMÆloc_PageM≠2
<32 - 
	tK_PAGE_SHIFT_MIN
> 
	tTy≥
;

1749 
	gPackedCache
<32 - 
	tK_PAGE_SHIFT_MIN
, 
	tuöt16_t
> 
	tCacheTy≥
;

1760 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


1776 c⁄° 
	gkSˇvígeDñayInSec⁄ds
 = 2;

1780 c⁄° 
	gkSˇvígePî˚¡age
 = .5f;

1783 c⁄° 
	gkMöS∑nLi°sWôhS∑ns
 = 32;

1787 c⁄° 
size_t
 
	gkMöimumFªeCommôãdPageCou¡
 = 
kMöS∑nLi°sWôhS∑ns
 * ((1.0f+kMinSpanListsWithSpans) / 2.0f);

1791 
SpöLock
 
	g∑gehóp_lock
 = 
SPINLOCK_INITIALIZER
;

1793 ˛as†
	cTCMÆloc_PageHóp
 {

1794 
	gpublic
:

1795 
öô
();

1798 
S∑n
* 
New
(
Lígth
 
n
);

1803 
Dñëe
(
S∑n
* 
•™
);

1809 
Regi°îSizeCœss
(
S∑n
* 
•™
, 
size_t
 
sc
);

1819 
S∑n
* 
S∂ô
(S∑n* 
•™
, 
Lígth
 
n
);

1822 
ölöe
 
S∑n
* 
GëDes¸ùt‹
(
PageID
 
p
) const {

1823  
	gªöãΩªt_ˇ°
<
	gS∑n
*>(
	g∑gem≠_
.
gë
(
p
));

1826 #ifde‡
WTF_CHANGES


1827 
ölöe
 
S∑n
* 
GëDes¸ùt‹EnsuªSa„
(
PageID
 
p
)

1829 
	g∑gem≠_
.
Ensuª
(
p
, 1);

1830  
GëDes¸ùt‹
(
p
);

1833 
size_t
 
Rëu∫edByãs
() const;

1837 #i‚de‡
WTF_CHANGES


1838 
Dump
(
TCMÆloc_Pröãr
* 
out
);

1842 
ölöe
 
uöt64_t
 
Sy°emByãs
(Ëc⁄° {  
	gsy°em_byãs_
; }

1845 
uöt64_t
 
FªeByãs
() const {

1846 
ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

1847  (
	g°©ic_ˇ°
<
	guöt64_t
>(
	g‰ì_∑ges_
Ë<< 
	gkPageShi·
);

1850 
boﬁ
 
Check
();

1851 
size_t
 
CheckLi°
(
S∑n
* 
li°
, 
Lígth
 
mö_∑ges
, Lígth 
max_∑ges
, 
boﬁ
 
decommôãd
);

1854 
Rñó£FªePages
();

1855 
Rñó£FªeLi°
(
S∑n
*, Span*);

1862 
size_t
 
GëSizeCœssIfCached
(
PageID
 
p
) const {

1863  
	g∑gem≠_ˇche_
.
GëOrDeÁu…
(
p
, 0);

1865 
CacheSizeCœss
(
PageID
 
p
, 
size_t
 
˛
Ëc⁄° { 
	g∑gem≠_ˇche_
.
Put
(p, cl); }

1867 
	g¥iv©e
:

1869 
M≠Sñe˘‹
<8*(
	tuöçå_t
)>::
	tTy≥
 
	tPageM≠
;

1870 
	gM≠Sñe˘‹
<8*(
	tuöçå_t
)>::
	tCacheTy≥
 
	tPageM≠Cache
;

1871 
PageM≠
 
	g∑gem≠_
;

1872 
muèbÀ
 
PageM≠Cache
 
	g∑gem≠_ˇche_
;

1877 
	sS∑nLi°
 {

1878 
S∑n
 
	gn‹mÆ
;

1879 
S∑n
 
	gªtu∫ed
;

1883 
S∑nLi°
 
	gœrge_
;

1886 
S∑nLi°
 
	g‰ì_
[
kMaxPages
];

1889 
uöçå_t
 
	g‰ì_∑ges_
;

1892 
uöçå_t
 
	gíå›y_
;

1895 
uöt64_t
 
	gsy°em_byãs_
;

1897 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


1899 
Lígth
 
	g‰ì_commôãd_∑ges_
;

1903 
Lígth
 
	gmö_‰ì_commôãd_∑ges_sö˚_œ°_sˇvíge_
;

1906 
boﬁ
 
GrowHóp
(
Lígth
 
n
);

1915 
C¨ve
(
S∑n
* 
•™
, 
Lígth
 
n
, 
boﬁ
 
ªÀa£d
);

1917 
Rec‹dS∑n
(
S∑n
* 
•™
) {

1918 
	g∑gem≠_
.
£t
(
•™
->
°¨t
, span);

1919 i‡(
	g•™
->
	gÀngth
 > 1) {

1920 
	g∑gem≠_
.
£t
(
•™
->
°¨t
 + s∑n->
Àngth
 - 1, span);

1926 
S∑n
* 
AŒocL¨ge
(
Lígth
 
n
);

1928 #i‡!
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


1931 
In¸emíèlSˇvíge
(
Lígth
 
n
);

1935 
öt64_t
 
	gsˇvíge_cou¡î_
;

1938 
size_t
 
	gsˇvíge_ödex_
;

1940 #i‡
deföed
(
WTF_CHANGES
Ë&& 
OS
(
DARWIN
)

1941 
‰õnd
 
˛ass
 
	gFa°MÆlocZ⁄e
;

1944 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


1945 
öôülizeSˇvígî
();

1946 
ALWAYS_INLINE
 
sig«lSˇvígî
();

1947 
sˇvíge
();

1948 
ALWAYS_INLINE
 
boﬁ
 
shouldSˇvíge
() const;

1950 #i‡
HAVE
(
DISPATCH_H
Ë|| 
OS
(
WINDOWS
)

1951 
≥riodicSˇvíge
();

1952 
ALWAYS_INLINE
 
boﬁ
 
isSˇvígîSu•íded
();

1953 
ALWAYS_INLINE
 
scheduÀSˇvígî
();

1954 
ALWAYS_INLINE
 
ªscheduÀSˇvígî
();

1955 
ALWAYS_INLINE
 
su•ídSˇvígî
();

1958 #i‡
HAVE
(
DISPATCH_H
)

1959 
di•©ch_queue_t
 
	gm_sˇvígeQueue
;

1960 
di•©ch_sour˚_t
 
	gm_sˇvígeTimî
;

1961 
boﬁ
 
	gm_sˇvígögSu•íded
;

1962 #ñi‡
OS
(
WINDOWS
)

1963 
CALLBACK
 
sˇvígîTimîFúed
(*, 
BOOLEAN
);

1964 
HANDLE
 
	gm_sˇvígeQueueTimî
;

1966 
NO_RETURN_WITH_VALUE
 * 
runSˇvígîThªad
(*);

1967 
NO_RETURN
 
sˇvígîThªad
();

1971 
boﬁ
 
	gm_sˇvígeThªadA˘ive
;

1973 
±hªad_muãx_t
 
	gm_sˇvígeMuãx
;

1974 
±hªad_c⁄d_t
 
	gm_sˇvígeC⁄dôi⁄
;

1980 
	gTCMÆloc_PageHóp
::
	$öô
()

1982 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

1984 
∑gem≠_
.
	`öô
(
MëaD©aAŒoc
);

1985 
∑gem≠_ˇche_
 = 
	`PageM≠Cache
(0);

1986 
‰ì_∑ges_
 = 0;

1987 
sy°em_byãs_
 = 0;

1988 
íå›y_
 = 
HARDENING_ENTROPY
;

1990 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


1991 
‰ì_commôãd_∑ges_
 = 0;

1992 
mö_‰ì_commôãd_∑ges_sö˚_œ°_sˇvíge_
 = 0;

1995 
sˇvíge_cou¡î_
 = 0;

1997 
sˇvíge_ödex_
 = 
kMaxPages
-1;

1998 
	`ASSERT
(
kNumCœs£s
 <(1 << 
PageM≠Cache
::
kVÆuebôs
));

1999 
	`DLL_Inô
(&
œrge_
.
n‹mÆ
, 
íå›y_
);

2000 
	`DLL_Inô
(&
œrge_
.
ªtu∫ed
, 
íå›y_
);

2001 
size_t
 
i
 = 0; i < 
kMaxPages
; i++) {

2002 
	`DLL_Inô
(&
‰ì_
[
i
].
n‹mÆ
, 
íå›y_
);

2003 
	`DLL_Inô
(&
‰ì_
[
i
].
ªtu∫ed
, 
íå›y_
);

2006 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2007 
	`öôülizeSˇvígî
();

2009 
	}
}

2011 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2013 #i‡
	$HAVE
(
DISPATCH_H
)

2015 
TCMÆloc_PageHóp
::
	$öôülizeSˇvígî
()

2017 
m_sˇvígeQueue
 = 
	`di•©ch_queue_¸óã
("com.≠∂e.JavaS¸ùtC‹e.Fa°MÆlocSavígî", 
NULL
);

2018 
m_sˇvígeTimî
 = 
	`di•©ch_sour˚_¸óã
(
DISPATCH_SOURCE_TYPE_TIMER
, 0, 0, 
m_sˇvígeQueue
);

2019 
uöt64_t
 
sˇvígeDñayInN™o£c⁄ds
 = 
kSˇvígeDñayInSec⁄ds
 * 
NSEC_PER_SEC
;

2020 
di•©ch_time_t
 
°¨tTime
 = 
	`di•©ch_time
(
DISPATCH_TIME_NOW
, 
sˇvígeDñayInN™o£c⁄ds
);

2021 
	`di•©ch_sour˚_£t_timî
(
m_sˇvígeTimî
, 
°¨tTime
, 
sˇvígeDñayInN™o£c⁄ds
, scavengeDelayInNanoseconds / 10);

2022 
	`di•©ch_sour˚_£t_evít_h™dÀr
(
m_sˇvígeTimî
, ^{ 
	`≥riodicSˇvíge
(); });

2023 
m_sˇvígögSu•íded
 = 
åue
;

2024 
	}
}

2026 
ALWAYS_INLINE
 
boﬁ
 
	gTCMÆloc_PageHóp
::
	$isSˇvígîSu•íded
()

2028 
	`ASSERT
(
∑gehóp_lock
.
	`IsHñd
());

2029  
m_sˇvígögSu•íded
;

2030 
	}
}

2032 
ALWAYS_INLINE
 
	gTCMÆloc_PageHóp
::
	$scheduÀSˇvígî
()

2034 
	`ASSERT
(
∑gehóp_lock
.
	`IsHñd
());

2035 
m_sˇvígögSu•íded
 = 
Ál£
;

2036 
	`di•©ch_ªsume
(
m_sˇvígeTimî
);

2037 
	}
}

2039 
ALWAYS_INLINE
 
	gTCMÆloc_PageHóp
::
	$ªscheduÀSˇvígî
()

2042 
	}
}

2044 
ALWAYS_INLINE
 
TCMÆloc_PageHóp
::
	$su•ídSˇvígî
()

2046 
	`ASSERT
(
∑gehóp_lock
.
	`IsHñd
());

2047 
m_sˇvígögSu•íded
 = 
åue
;

2048 
	`di•©ch_su•íd
(
m_sˇvígeTimî
);

2049 
	}
}

2051 #ñi‡
	$OS
(
WINDOWS
)

2053 
TCMÆloc_PageHóp
::
	$sˇvígîTimîFúed
(* 
c⁄ãxt
, 
BOOLEAN
)

2055 
°©ic_ˇ°
<
TCMÆloc_PageHóp
*>(
c⁄ãxt
)->
	`≥riodicSˇvíge
();

2056 
	}
}

2058 
	gTCMÆloc_PageHóp
::
	$öôülizeSˇvígî
()

2060 
m_sˇvígeQueueTimî
 = 0;

2061 
	}
}

2063 
ALWAYS_INLINE
 
boﬁ
 
	gTCMÆloc_PageHóp
::
	$isSˇvígîSu•íded
()

2065 
	`ASSERT
(
∑gehóp_lock
.
	`IsHñd
());

2066  !
m_sˇvígeQueueTimî
;

2067 
	}
}

2069 
ALWAYS_INLINE
 
	gTCMÆloc_PageHóp
::
	$scheduÀSˇvígî
()

2073 
	`ASSERT
(
∑gehóp_lock
.
	`IsHñd
());

2074 
	`Cª©eTimîQueueTimî
(&
m_sˇvígeQueueTimî
, 0, 
sˇvígîTimîFúed
, 
this
, 
kSˇvígeDñayInSec⁄ds
 * 1000, 0, 
WT_EXECUTEONLYONCE
);

2075 
	}
}

2077 
ALWAYS_INLINE
 
	gTCMÆloc_PageHóp
::
	$ªscheduÀSˇvígî
()

2080 
	`su•ídSˇvígî
();

2081 
	`scheduÀSˇvígî
();

2082 
	}
}

2084 
ALWAYS_INLINE
 
	gTCMÆloc_PageHóp
::
	$su•ídSˇvígî
()

2086 
	`ASSERT
(
∑gehóp_lock
.
	`IsHñd
());

2087 
HANDLE
 
sˇvígeQueueTimî
 = 
m_sˇvígeQueueTimî
;

2088 
m_sˇvígeQueueTimî
 = 0;

2089 
	`DñëeTimîQueueTimî
(0, 
sˇvígeQueueTimî
, 0);

2090 
	}
}

2094 
	gTCMÆloc_PageHóp
::
	$öôülizeSˇvígî
()

2097 #i‡!
	`deföed
(
PTHREAD_MUTEX_NORMAL
Ë|| PTHREAD_MUTEX_NORMAL =
PTHREAD_MUTEX_DEFAULT


2098 
	`±hªad_muãx_öô
(&
m_sˇvígeMuãx
, 0);

2100 
±hªad_muãx©å_t
 
©å
;

2101 
	`±hªad_muãx©å_öô
(&
©å
);

2102 
	`±hªad_muãx©å_£ây≥
(&
©å
, 
PTHREAD_MUTEX_NORMAL
);

2104 
	`±hªad_muãx_öô
(&
m_sˇvígeMuãx
, &
©å
);

2106 
	`±hªad_muãx©å_de°roy
(&
©å
);

2109 
	`±hªad_c⁄d_öô
(&
m_sˇvígeC⁄dôi⁄
, 0);

2110 
m_sˇvígeThªadA˘ive
 = 
åue
;

2111 
±hªad_t
 
thªad
;

2112 
	`±hªad_¸óã
(&
thªad
, 0, 
runSˇvígîThªad
, 
this
);

2113 
	}
}

2115 * 
	gTCMÆloc_PageHóp
::
	$runSˇvígîThªad
(* 
c⁄ãxt
)

2117 
°©ic_ˇ°
<
TCMÆloc_PageHóp
*>(
c⁄ãxt
)->
	`sˇvígîThªad
();

2118 #i‡(
	`COMPILER
(
MSVC
Ë|| COMPILER(
SUNCC
))

2122 
	}
}

2124 
ALWAYS_INLINE
 
	gTCMÆloc_PageHóp
::
	$sig«lSˇvígî
()

2130 
	`ASSERT
(
∑gehóp_lock
.
	`IsHñd
());

2131 i‡(!
m_sˇvígeThªadA˘ive
 && 
	`shouldSˇvíge
())

2132 
	`±hªad_c⁄d_sig«l
(&
m_sˇvígeC⁄dôi⁄
);

2133 
	}
}

2137 
	gTCMÆloc_PageHóp
::
	$sˇvíge
()

2139 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

2140 
size_t
 
∑gesToRñó£
 = 
mö_‰ì_commôãd_∑ges_sö˚_œ°_sˇvíge_
 * 
kSˇvígePî˚¡age
;

2141 
size_t
 
èrgëPageCou¡
 = 
°d
::
max
<size_t>(
kMöimumFªeCommôãdPageCou¡
, 
‰ì_commôãd_∑ges_
 - 
∑gesToRñó£
);

2143 
Lígth
 
œ°FªeCommôãdPages
 = 
‰ì_commôãd_∑ges_
;

2144 
‰ì_commôãd_∑ges_
 > 
èrgëPageCou¡
) {

2145 
	`ASSERT
(
	`Check
());

2146 
i
 = 
kMaxPages
; i > 0 && 
‰ì_commôãd_∑ges_
 >
èrgëPageCou¡
; i--) {

2147 
S∑nLi°
* 
¶i°
 = (
°©ic_ˇ°
<
size_t
>(
i
Ë=
kMaxPages
Ë? &
œrge_
 : &
‰ì_
[i];

2150 
size_t
 
Àngth
 = 
	`DLL_Lígth
(&
¶i°
->
n‹mÆ
, 
íå›y_
);

2151 
size_t
 
numS∑nsToRëu∫
 = (
i
 > 
kMöS∑nLi°sWôhS∑ns
Ë? 
Àngth
 :Üength / 2;

2152 
j
 = 0; 
°©ic_ˇ°
<
size_t
>(jË< 
numS∑nsToRëu∫
 && !
	`DLL_IsEm±y
(&
¶i°
->
n‹mÆ
, 
íå›y_
Ë&& 
‰ì_commôãd_∑ges_
 > 
èrgëPageCou¡
; j++) {

2153 
S∑n
* 
s
 = 
¶i°
->
n‹mÆ
.
	`¥ev
(
íå›y_
);

2154 
	`DLL_Remove
(
s
, 
íå›y_
);

2155 
	`ASSERT
(!
s
->
decommôãd
);

2156 i‡(!
s
->
decommôãd
) {

2157 
	`TCMÆloc_Sy°emRñó£
(
ªöãΩªt_ˇ°
<*>(
s
->
°¨t
 << 
kPageShi·
),

2158 
°©ic_ˇ°
<
size_t
>(
s
->
Àngth
 << 
kPageShi·
));

2159 
	`ASSERT
(
‰ì_commôãd_∑ges_
 >
s
->
Àngth
);

2160 
‰ì_commôãd_∑ges_
 -
s
->
Àngth
;

2161 
s
->
decommôãd
 = 
åue
;

2163 
	`DLL_Pª≥nd
(&
¶i°
->
ªtu∫ed
, 
s
, 
íå›y_
);

2167 i‡(
œ°FªeCommôãdPages
 =
‰ì_commôãd_∑ges_
)

2169 
œ°FªeCommôãdPages
 = 
‰ì_commôãd_∑ges_
;

2172 
mö_‰ì_commôãd_∑ges_sö˚_œ°_sˇvíge_
 = 
‰ì_commôãd_∑ges_
;

2173 
	}
}

2175 
ALWAYS_INLINE
 
boﬁ
 
	gTCMÆloc_PageHóp
::
	$shouldSˇvíge
() const

2177  
‰ì_commôãd_∑ges_
 > 
kMöimumFªeCommôãdPageCou¡
;

2178 
	}
}

2182 
ölöe
 
S∑n
* 
	gTCMÆloc_PageHóp
::
	$New
(
Lígth
 
n
) {

2183 
	`ASSERT
(
	`Check
());

2184 
	`ASSERT
(
n
 > 0);

2187 
Lígth
 
s
 = 
n
; s < 
kMaxPages
; s++) {

2188 
S∑n
* 
Œ
 = 
NULL
;

2189 
boﬁ
 
ªÀa£d
 = 
Ál£
;

2190 i‡(!
	`DLL_IsEm±y
(&
‰ì_
[
s
].
n‹mÆ
, 
íå›y_
)) {

2192 
Œ
 = &
‰ì_
[
s
].
n‹mÆ
;

2193 } i‡(!
	`DLL_IsEm±y
(&
‰ì_
[
s
].
ªtu∫ed
, 
íå›y_
)) {

2195 
Œ
 = &
‰ì_
[
s
].
ªtu∫ed
;

2196 
ªÀa£d
 = 
åue
;

2202 
S∑n
* 
ªsu…
 = 
Œ
->
	`√xt
(
íå›y_
);

2203 
	`C¨ve
(
ªsu…
, 
n
, 
ªÀa£d
);

2204 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2207 
	`ASSERT
(
‰ì_commôãd_∑ges_
 >
n
);

2208 
‰ì_commôãd_∑ges_
 -
n
;

2209 i‡(
‰ì_commôãd_∑ges_
 < 
mö_‰ì_commôãd_∑ges_sö˚_œ°_sˇvíge_
)

2210 
mö_‰ì_commôãd_∑ges_sö˚_œ°_sˇvíge_
 = 
‰ì_commôãd_∑ges_
;

2212 
	`ASSERT
(
	`Check
());

2213 
‰ì_∑ges_
 -
n
;

2214  
ªsu…
;

2217 
S∑n
* 
ªsu…
 = 
	`AŒocL¨ge
(
n
);

2218 i‡(
ªsu…
 !
NULL
) {

2219 
	`ASSERT_SPAN_COMMITTED
(
ªsu…
);

2220  
ªsu…
;

2224 i‡(!
	`GrowHóp
(
n
)) {

2225 
	`ASSERT
(
	`Check
());

2226  
NULL
;

2229  
	`New
(
n
);

2230 
	}
}

2232 
S∑n
* 
	gTCMÆloc_PageHóp
::
	$AŒocL¨ge
(
Lígth
 
n
) {

2235 
boﬁ
 
‰om_ªÀa£d
 = 
Ál£
;

2236 
S∑n
 *
be°
 = 
NULL
;

2239 
S∑n
* 
•™
 = 
œrge_
.
n‹mÆ
.
	`√xt
(
íå›y_
);

2240 
•™
 !&
œrge_
.
n‹mÆ
;

2241 
•™
 = s∑n->
	`√xt
(
íå›y_
)) {

2242 i‡(
•™
->
Àngth
 >
n
) {

2243 i‡((
be°
 =
NULL
)

2244 || (
•™
->
Àngth
 < 
be°
->length)

2245 || ((
•™
->
Àngth
 =
be°
->ÀngthË&& (•™->
°¨t
 < best->start))) {

2246 
be°
 = 
•™
;

2247 
‰om_ªÀa£d
 = 
Ál£
;

2253 
S∑n
* 
•™
 = 
œrge_
.
ªtu∫ed
.
	`√xt
(
íå›y_
);

2254 
•™
 !&
œrge_
.
ªtu∫ed
;

2255 
•™
 = s∑n->
	`√xt
(
íå›y_
)) {

2256 i‡(
•™
->
Àngth
 >
n
) {

2257 i‡((
be°
 =
NULL
)

2258 || (
•™
->
Àngth
 < 
be°
->length)

2259 || ((
•™
->
Àngth
 =
be°
->ÀngthË&& (•™->
°¨t
 < best->start))) {

2260 
be°
 = 
•™
;

2261 
‰om_ªÀa£d
 = 
åue
;

2266 i‡(
be°
 !
NULL
) {

2267 
	`C¨ve
(
be°
, 
n
, 
‰om_ªÀa£d
);

2268 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2271 
	`ASSERT
(
‰ì_commôãd_∑ges_
 >
n
);

2272 
‰ì_commôãd_∑ges_
 -
n
;

2273 i‡(
‰ì_commôãd_∑ges_
 < 
mö_‰ì_commôãd_∑ges_sö˚_œ°_sˇvíge_
)

2274 
mö_‰ì_commôãd_∑ges_sö˚_œ°_sˇvíge_
 = 
‰ì_commôãd_∑ges_
;

2276 
	`ASSERT
(
	`Check
());

2277 
‰ì_∑ges_
 -
n
;

2278  
be°
;

2280  
NULL
;

2281 
	}
}

2283 
S∑n
* 
	gTCMÆloc_PageHóp
::
	$S∂ô
(
S∑n
* 
•™
, 
Lígth
 
n
) {

2284 
	`ASSERT
(0 < 
n
);

2285 
	`ASSERT
(
n
 < 
•™
->
Àngth
);

2286 
	`ASSERT
(!
•™
->
‰ì
);

2287 
	`ASSERT
(
•™
->
size˛ass
 == 0);

2288 
	`Evít
(
•™
, 'T', 
n
);

2290 c⁄° 
Lígth
 
exåa
 = 
•™
->
Àngth
 - 
n
;

2291 
S∑n
* 
À·ovî
 = 
	`NewS∑n
(
•™
->
°¨t
 + 
n
, 
exåa
);

2292 
	`Evít
(
À·ovî
, 'U', 
exåa
);

2293 
	`Rec‹dS∑n
(
À·ovî
);

2294 
∑gem≠_
.
	`£t
(
•™
->
°¨t
 + 
n
 - 1, span);

2295 
•™
->
Àngth
 = 
n
;

2297  
À·ovî
;

2298 
	}
}

2300 
ölöe
 
	gTCMÆloc_PageHóp
::
	$C¨ve
(
S∑n
* 
•™
, 
Lígth
 
n
, 
boﬁ
 
ªÀa£d
) {

2301 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

2302 
	`ASSERT
(
n
 > 0);

2303 
	`DLL_Remove
(
•™
, 
íå›y_
);

2304 
•™
->
‰ì
 = 0;

2305 
	`Evít
(
•™
, 'A', 
n
);

2307 i‡(
ªÀa£d
) {

2309 
	`ASSERT
(
•™
->
decommôãd
);

2310 
	`TCMÆloc_Sy°emCommô
(
ªöãΩªt_ˇ°
<*>(
•™
->
°¨t
 << 
kPageShi·
), 
°©ic_ˇ°
<
size_t
>(•™->
Àngth
 << kPageShift));

2311 
•™
->
decommôãd
 = 
Ál£
;

2312 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2313 
‰ì_commôãd_∑ges_
 +
•™
->
Àngth
;

2317 c⁄° 
exåa
 = 
°©ic_ˇ°
<>(
•™
->
Àngth
 - 
n
);

2318 
	`ASSERT
(
exåa
 >= 0);

2319 i‡(
exåa
 > 0) {

2320 
S∑n
* 
À·ovî
 = 
	`NewS∑n
(
•™
->
°¨t
 + 
n
, 
exåa
);

2321 
À·ovî
->
‰ì
 = 1;

2322 
À·ovî
->
decommôãd
 = 
Ál£
;

2323 
	`Evít
(
À·ovî
, 'S', 
exåa
);

2324 
	`Rec‹dS∑n
(
À·ovî
);

2327 
S∑nLi°
* 
li°∑ú
 = (
°©ic_ˇ°
<
size_t
>(
exåa
Ë< 
kMaxPages
Ë? &
‰ì_
[exåa] : &
œrge_
;

2328 
S∑n
* 
d°
 = &
li°∑ú
->
n‹mÆ
;

2329 
	`DLL_Pª≥nd
(
d°
, 
À·ovî
, 
íå›y_
);

2331 
•™
->
Àngth
 = 
n
;

2332 
∑gem≠_
.
	`£t
(
•™
->
°¨t
 + 
n
 - 1, span);

2334 
	}
}

2336 
ALWAYS_INLINE
 
	$mîgeDecommôãdSèãs
(
S∑n
* 
de°ö©i⁄
, S∑n* 
Ÿhî
)

2338 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

2339 i‡(
de°ö©i⁄
->
decommôãd
 && !
Ÿhî
->decommitted) {

2340 
	`TCMÆloc_Sy°emRñó£
(
ªöãΩªt_ˇ°
<*>(
Ÿhî
->
°¨t
 << 
kPageShi·
),

2341 
°©ic_ˇ°
<
size_t
>(
Ÿhî
->
Àngth
 << 
kPageShi·
));

2342 } i‡(
Ÿhî
->
decommôãd
 && !
de°ö©i⁄
->decommitted) {

2343 
	`TCMÆloc_Sy°emRñó£
(
ªöãΩªt_ˇ°
<*>(
de°ö©i⁄
->
°¨t
 << 
kPageShi·
),

2344 
°©ic_ˇ°
<
size_t
>(
de°ö©i⁄
->
Àngth
 << 
kPageShi·
));

2345 
de°ö©i⁄
->
decommôãd
 = 
åue
;

2347 
	}
}

2349 
ölöe
 
	gTCMÆloc_PageHóp
::
	$Dñëe
(
S∑n
* 
•™
) {

2350 
	`ASSERT
(
	`Check
());

2351 
	`ASSERT
(!
•™
->
‰ì
);

2352 
	`ASSERT
(
•™
->
Àngth
 > 0);

2353 
	`ASSERT
(
	`GëDes¸ùt‹
(
•™
->
°¨t
) == span);

2354 
	`ASSERT
(
	`GëDes¸ùt‹
(
•™
->
°¨t
 + s∑n->
Àngth
 - 1) == span);

2355 
•™
->
size˛ass
 = 0;

2356 #i‚de‡
NO_TCMALLOC_SAMPLES


2357 
•™
->
ßm∂e
 = 0;

2364 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2366 
Lígth
 
√ighb‹ögCommôãdS∑nsLígth
 = 0;

2368 c⁄° 
PageID
 
p
 = 
•™
->
°¨t
;

2369 c⁄° 
Lígth
 
n
 = 
•™
->
Àngth
;

2370 
S∑n
* 
¥ev
 = 
	`GëDes¸ùt‹
(
p
-1);

2371 i‡(
¥ev
 !
NULL
 &&Öªv->
‰ì
) {

2373 
	`ASSERT
(
¥ev
->
°¨t
 +Öªv->
Àngth
 =
p
);

2374 c⁄° 
Lígth
 
Àn
 = 
¥ev
->
Àngth
;

2375 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2376 i‡(!
¥ev
->
decommôãd
)

2377 
√ighb‹ögCommôãdS∑nsLígth
 +
Àn
;

2379 
	`mîgeDecommôãdSèãs
(
•™
, 
¥ev
);

2380 
	`DLL_Remove
(
¥ev
, 
íå›y_
);

2381 
	`DñëeS∑n
(
¥ev
);

2382 
•™
->
°¨t
 -
Àn
;

2383 
•™
->
Àngth
 +
Àn
;

2384 
∑gem≠_
.
	`£t
(
•™
->
°¨t
, span);

2385 
	`Evít
(
•™
, 'L', 
Àn
);

2387 
S∑n
* 
√xt
 = 
	`GëDes¸ùt‹
(
p
+
n
);

2388 i‡(
√xt
 !
NULL
 &&Çext->
‰ì
) {

2390 
	`ASSERT
(
√xt
->
°¨t
 =
p
+
n
);

2391 c⁄° 
Lígth
 
Àn
 = 
√xt
->
Àngth
;

2392 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2393 i‡(!
√xt
->
decommôãd
)

2394 
√ighb‹ögCommôãdS∑nsLígth
 +
Àn
;

2396 
	`mîgeDecommôãdSèãs
(
•™
, 
√xt
);

2397 
	`DLL_Remove
(
√xt
, 
íå›y_
);

2398 
	`DñëeS∑n
(
√xt
);

2399 
•™
->
Àngth
 +
Àn
;

2400 
∑gem≠_
.
	`£t
(
•™
->
°¨t
 + s∑n->
Àngth
 - 1, span);

2401 
	`Evít
(
•™
, 'R', 
Àn
);

2404 
	`Evít
(
•™
, 'D', s∑n->
Àngth
);

2405 
•™
->
‰ì
 = 1;

2406 i‡(
•™
->
decommôãd
) {

2407 i‡(
•™
->
Àngth
 < 
kMaxPages
)

2408 
	`DLL_Pª≥nd
(&
‰ì_
[
•™
->
Àngth
].
ªtu∫ed
, s∑n, 
íå›y_
);

2410 
	`DLL_Pª≥nd
(&
œrge_
.
ªtu∫ed
, 
•™
, 
íå›y_
);

2412 i‡(
•™
->
Àngth
 < 
kMaxPages
)

2413 
	`DLL_Pª≥nd
(&
‰ì_
[
•™
->
Àngth
].
n‹mÆ
, s∑n, 
íå›y_
);

2415 
	`DLL_Pª≥nd
(&
œrge_
.
n‹mÆ
, 
•™
, 
íå›y_
);

2417 
‰ì_∑ges_
 +
n
;

2419 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2420 i‡(
•™
->
decommôãd
) {

2423 
‰ì_commôãd_∑ges_
 -
√ighb‹ögCommôãdS∑nsLígth
;

2424 i‡(
‰ì_commôãd_∑ges_
 < 
mö_‰ì_commôãd_∑ges_sö˚_œ°_sˇvíge_
)

2425 
mö_‰ì_commôãd_∑ges_sö˚_œ°_sˇvíge_
 = 
‰ì_commôãd_∑ges_
;

2428 
‰ì_commôãd_∑ges_
 +
n
;

2432 
	`sig«lSˇvígî
();

2434 
	`In¸emíèlSˇvíge
(
n
);

2437 
	`ASSERT
(
	`Check
());

2438 
	}
}

2440 #i‡!
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2441 
	gTCMÆloc_PageHóp
::
	$In¸emíèlSˇvíge
(
Lígth
 
n
) {

2442 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

2444 
sˇvíge_cou¡î_
 -
n
;

2445 i‡(
sˇvíge_cou¡î_
 >= 0) ;

2447 #i‡
	`PLATFORM
(
IOS
)

2448 c⁄° 
size_t
 
kDeÁu…Rñó£Dñay
 = 64;

2452 c⁄° 
size_t
 
kDeÁu…Rñó£Dñay
 = 1 << 8;

2456 
size_t
 
ödex
 = 
sˇvíge_ödex_
 + 1;

2457 
uöçå_t
 
íå›y
 = 
íå›y_
;

2458 
size_t
 
i
 = 0; i < 
kMaxPages
+1; i++) {

2459 i‡(
ödex
 > 
kMaxPages
) index = 0;

2460 
S∑nLi°
* 
¶i°
 = (
ödex
 =
kMaxPages
Ë? &
œrge_
 : &
‰ì_
[index];

2461 i‡(!
	`DLL_IsEm±y
(&
¶i°
->
n‹mÆ
, 
íå›y
)) {

2463 
S∑n
* 
s
 = 
¶i°
->
n‹mÆ
.
	`¥ev
(
íå›y
);

2464 
	`DLL_Remove
(
s
, 
íå›y_
);

2465 
	`TCMÆloc_Sy°emRñó£
(
ªöãΩªt_ˇ°
<*>(
s
->
°¨t
 << 
kPageShi·
),

2466 
°©ic_ˇ°
<
size_t
>(
s
->
Àngth
 << 
kPageShi·
));

2467 
s
->
decommôãd
 = 
åue
;

2468 
	`DLL_Pª≥nd
(&
¶i°
->
ªtu∫ed
, 
s
, 
íå›y
);

2470 #i‡
	`PLATFORM
(
IOS
)

2471 
sˇvíge_cou¡î_
 = 
°d
::
max
<
size_t
>(16UL, std::
mö
<size_t>(
kDeÁu…Rñó£Dñay
, kDeÁu…Rñó£Dñay - (
‰ì_∑ges_
 / kDefaultReleaseDelay)));

2473 
sˇvíge_cou¡î_
 = 
°d
::
max
<
size_t
>(64UL, std::
mö
<size_t>(
kDeÁu…Rñó£Dñay
, kDeÁu…Rñó£Dñay - (
‰ì_∑ges_
 / kDefaultReleaseDelay)));

2476 i‡(
ödex
 =
kMaxPages
 && !
	`DLL_IsEm±y
(&
¶i°
->
n‹mÆ
, 
íå›y
))

2477 
sˇvíge_ödex_
 = 
ödex
 - 1;

2479 
sˇvíge_ödex_
 = 
ödex
;

2482 
ödex
++;

2486 
sˇvíge_cou¡î_
 = 
kDeÁu…Rñó£Dñay
;

2487 
	}
}

2490 
	gTCMÆloc_PageHóp
::
	$Regi°îSizeCœss
(
S∑n
* 
•™
, 
size_t
 
sc
) {

2492 
	`ASSERT
(!
•™
->
‰ì
);

2493 
	`ASSERT
(
	`GëDes¸ùt‹
(
•™
->
°¨t
) == span);

2494 
	`ASSERT
(
	`GëDes¸ùt‹
(
•™
->
°¨t
+•™->
Àngth
-1) == span);

2495 
	`Evít
(
•™
, 'C', 
sc
);

2496 
•™
->
size˛ass
 = 
°©ic_ˇ°
<>(
sc
);

2497 
Lígth
 
i
 = 1; i < 
•™
->
Àngth
-1; i++) {

2498 
∑gem≠_
.
	`£t
(
•™
->
°¨t
+
i
, span);

2500 
	}
}

2502 #ifde‡
WTF_CHANGES


2503 
size_t
 
	gTCMÆloc_PageHóp
::
	$Rëu∫edByãs
() const {

2504 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

2505 
size_t
 
ªsu…
 = 0;

2506 
s
 = 0; s < 
kMaxPages
; s++) {

2507 c⁄° 
r_Àngth
 = 
	`DLL_Lígth
(&
‰ì_
[
s
].
ªtu∫ed
, 
íå›y_
);

2508 
r_∑ges
 = 
s
 * 
r_Àngth
;

2509 
ªsu…
 +
r_∑ges
 << 
kPageShi·
;

2512 
S∑n
* 
s
 = 
œrge_
.
ªtu∫ed
.
	`√xt
(
íå›y_
); s != &large_.returned; s = s->next(entropy_))

2513 
ªsu…
 +
s
->
Àngth
 << 
kPageShi·
;

2514  
ªsu…
;

2515 
	}
}

2518 #i‚de‡
WTF_CHANGES


2519 
	$PagesToMB
(
uöt64_t
 
∑ges
) {

2520 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

2521  (
∑ges
 << 
kPageShi·
) / 1048576.0;

2522 
	}
}

2524 
	gTCMÆloc_PageHóp
::
	$Dump
(
TCMÆloc_Pröãr
* 
out
) {

2525 
n⁄em±y_sizes
 = 0;

2526 
s
 = 0; s < 
kMaxPages
; s++) {

2527 i‡(!
	`DLL_IsEm±y
(&
‰ì_
[
s
].
n‹mÆ
Ë|| !DLL_IsEm±y(&‰ì_[s].
ªtu∫ed
)) {

2528 
n⁄em±y_sizes
++;

2531 
out
->
	`¥ötf
("------------------------------------------------\n");

2532 
out
->
	`¥ötf
("PageHeap: %d sizes; %6.1f MB free\n",

2533 
n⁄em±y_sizes
, 
	`PagesToMB
(
‰ì_∑ges_
));

2534 
out
->
	`¥ötf
("------------------------------------------------\n");

2535 
uöt64_t
 
tŸÆ_n‹mÆ
 = 0;

2536 
uöt64_t
 
tŸÆ_ªtu∫ed
 = 0;

2537 
s
 = 0; s < 
kMaxPages
; s++) {

2538 c⁄° 
n_Àngth
 = 
	`DLL_Lígth
(&
‰ì_
[
s
].
n‹mÆ
);

2539 c⁄° 
r_Àngth
 = 
	`DLL_Lígth
(&
‰ì_
[
s
].
ªtu∫ed
);

2540 i‡(
n_Àngth
 + 
r_Àngth
 > 0) {

2541 
uöt64_t
 
n_∑ges
 = 
s
 * 
n_Àngth
;

2542 
uöt64_t
 
r_∑ges
 = 
s
 * 
r_Àngth
;

2543 
tŸÆ_n‹mÆ
 +
n_∑ges
;

2544 
tŸÆ_ªtu∫ed
 +
r_∑ges
;

2545 
out
->
	`¥ötf
("%6uÖages * %6u spans ~ %6.1f MB; %6.1f MB cum"

2547 
s
,

2548 (
n_Àngth
 + 
r_Àngth
),

2549 
	`PagesToMB
(
n_∑ges
 + 
r_∑ges
),

2550 
	`PagesToMB
(
tŸÆ_n‹mÆ
 + 
tŸÆ_ªtu∫ed
),

2551 
	`PagesToMB
(
r_∑ges
),

2552 
	`PagesToMB
(
tŸÆ_ªtu∫ed
));

2556 
uöt64_t
 
n_∑ges
 = 0;

2557 
uöt64_t
 
r_∑ges
 = 0;

2558 
n_•™s
 = 0;

2559 
r_•™s
 = 0;

2560 
out
->
	`¥ötf
("NormalÜarge spans:\n");

2561 
S∑n
* 
s
 = 
œrge_
.
n‹mÆ
.
√xt
; s != &large_.normal; s = s->next) {

2562 
out
->
	`¥ötf
(" [ %6" 
PRIuS
 "Öages ] %6.1f MB\n",

2563 
s
->
Àngth
, 
	`PagesToMB
(s->length));

2564 
n_∑ges
 +
s
->
Àngth
;

2565 
n_•™s
++;

2567 
out
->
	`¥ötf
("UnmappedÜarge spans:\n");

2568 
S∑n
* 
s
 = 
œrge_
.
ªtu∫ed
.
√xt
; s != &large_.returned; s = s->next) {

2569 
out
->
	`¥ötf
(" [ %6" 
PRIuS
 "Öages ] %6.1f MB\n",

2570 
s
->
Àngth
, 
	`PagesToMB
(s->length));

2571 
r_∑ges
 +
s
->
Àngth
;

2572 
r_•™s
++;

2574 
tŸÆ_n‹mÆ
 +
n_∑ges
;

2575 
tŸÆ_ªtu∫ed
 +
r_∑ges
;

2576 
out
->
	`¥ötf
(">255Üarge * %6u spans ~ %6.1f MB; %6.1f MB cum"

2578 (
n_•™s
 + 
r_•™s
),

2579 
	`PagesToMB
(
n_∑ges
 + 
r_∑ges
),

2580 
	`PagesToMB
(
tŸÆ_n‹mÆ
 + 
tŸÆ_ªtu∫ed
),

2581 
	`PagesToMB
(
r_∑ges
),

2582 
	`PagesToMB
(
tŸÆ_ªtu∫ed
));

2583 
	}
}

2586 
boﬁ
 
	gTCMÆloc_PageHóp
::
	$GrowHóp
(
Lígth
 
n
) {

2587 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

2588 
	`ASSERT
(
kMaxPages
 >
kMöSy°emAŒoc
);

2589 i‡(
n
 > 
kMaxVÆidPages
Ë 
Ál£
;

2590 
Lígth
 
ask
 = (
n
>
kMöSy°emAŒoc
Ë?Ç : 
°©ic_ˇ°
<Length>(kMinSystemAlloc);

2591 
size_t
 
a˘uÆ_size
;

2592 * 
±r
 = 
	`TCMÆloc_Sy°emAŒoc
(
ask
 << 
kPageShi·
, &
a˘uÆ_size
, 
kPageSize
);

2593 i‡(
±r
 =
NULL
) {

2594 i‡(
n
 < 
ask
) {

2596 
ask
 = 
n
;

2597 
±r
 = 
	`TCMÆloc_Sy°emAŒoc
(
ask
 << 
kPageShi·
, &
a˘uÆ_size
, 
kPageSize
);

2599 i‡(
±r
 =
NULL
Ë 
Ál£
;

2601 
ask
 = 
a˘uÆ_size
 >> 
kPageShi·
;

2603 
uöt64_t
 
ﬁd_sy°em_byãs
 = 
sy°em_byãs_
;

2604 
sy°em_byãs_
 +(
ask
 << 
kPageShi·
);

2605 c⁄° 
PageID
 
p
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
±r
Ë>> 
kPageShi·
;

2606 
	`ASSERT
(
p
 > 0);

2612 i‡(
ﬁd_sy°em_byãs
 < 
kPageM≠BigAŒoˇti⁄Thªshﬁd


2613 && 
sy°em_byãs_
 >
kPageM≠BigAŒoˇti⁄Thªshﬁd
) {

2614 
∑gem≠_
.
	`PªÆloˇãM‹eMem‹y
();

2620 i‡(
∑gem≠_
.
	`Ensuª
(
p
-1, 
ask
+2)) {

2625 
S∑n
* 
•™
 = 
	`NewS∑n
(
p
, 
ask
);

2626 
	`Rec‹dS∑n
(
•™
);

2627 
	`Dñëe
(
•™
);

2628 
	`ASSERT
(
	`Check
());

2629  
åue
;

2633  
Ál£
;

2635 
	}
}

2637 
boﬁ
 
	gTCMÆloc_PageHóp
::
	$Check
() {

2638 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2639 
size_t
 
tŸÆFªeCommôãd
 = 0;

2641 
	`ASSERT
(
‰ì_
[0].
n‹mÆ
.
	`√xt
(
íå›y_
) == &free_[0].normal);

2642 
	`ASSERT
(
‰ì_
[0].
ªtu∫ed
.
	`√xt
(
íå›y_
) == &free_[0].returned);

2643 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2644 
tŸÆFªeCommôãd
 = 
	`CheckLi°
(&
œrge_
.
n‹mÆ
, 
kMaxPages
, 1000000000, 
Ál£
);

2646 
	`CheckLi°
(&
œrge_
.
n‹mÆ
, 
kMaxPages
, 1000000000, 
Ál£
);

2648 
	`CheckLi°
(&
œrge_
.
ªtu∫ed
, 
kMaxPages
, 1000000000, 
åue
);

2649 
Lígth
 
s
 = 1; s < 
kMaxPages
; s++) {

2650 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2651 
tŸÆFªeCommôãd
 +
	`CheckLi°
(&
‰ì_
[
s
].
n‹mÆ
, s, s, 
Ál£
);

2653 
	`CheckLi°
(&
‰ì_
[
s
].
n‹mÆ
, s, s, 
Ál£
);

2655 
	`CheckLi°
(&
‰ì_
[
s
].
ªtu∫ed
, s, s, 
åue
);

2657 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2658 
	`ASSERT
(
tŸÆFªeCommôãd
 =
‰ì_commôãd_∑ges_
);

2660  
åue
;

2661 
	}
}

2663 #i‡
ASSERT_DISABLED


2664 
size_t
 
	gTCMÆloc_PageHóp
::
	$CheckLi°
(
S∑n
*, 
Lígth
, Lígth, 
boﬁ
) {

2666 
	}
}

2668 
size_t
 
	gTCMÆloc_PageHóp
::
	$CheckLi°
(
S∑n
* 
li°
, 
Lígth
 
mö_∑ges
, Lígth 
max_∑ges
, 
boﬁ
 
decommôãd
) {

2669 
size_t
 
‰ìCou¡
 = 0;

2670 
S∑n
* 
s
 = 
li°
->
	`√xt
(
íå›y_
); s !=Üist; s = s->next(entropy_)) {

2671 
	`CHECK_CONDITION
(
s
->
‰ì
);

2672 
	`CHECK_CONDITION
(
s
->
Àngth
 >
mö_∑ges
);

2673 
	`CHECK_CONDITION
(
s
->
Àngth
 <
max_∑ges
);

2674 
	`CHECK_CONDITION
(
	`GëDes¸ùt‹
(
s
->
°¨t
) == s);

2675 
	`CHECK_CONDITION
(
	`GëDes¸ùt‹
(
s
->
°¨t
+s->
Àngth
-1) == s);

2676 
	`CHECK_CONDITION
(
s
->
decommôãd
 == decommitted);

2677 
‰ìCou¡
 +
s
->
Àngth
;

2679  
‰ìCou¡
;

2680 
	}
}

2683 
	gTCMÆloc_PageHóp
::
	$Rñó£FªeLi°
(
S∑n
* 
li°
, S∑n* 
ªtu∫ed
) {

2684 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

2687 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2688 
size_t
 
‰ìPageRedu˘i⁄
 = 0;

2691 !
	`DLL_IsEm±y
(
li°
, 
íå›y_
)) {

2692 
S∑n
* 
s
 = 
li°
->
	`¥ev
(
íå›y_
);

2694 
	`DLL_Remove
(
s
, 
íå›y_
);

2695 
s
->
decommôãd
 = 
åue
;

2696 
	`DLL_Pª≥nd
(
ªtu∫ed
, 
s
, 
íå›y_
);

2697 
	`TCMÆloc_Sy°emRñó£
(
ªöãΩªt_ˇ°
<*>(
s
->
°¨t
 << 
kPageShi·
),

2698 
°©ic_ˇ°
<
size_t
>(
s
->
Àngth
 << 
kPageShi·
));

2699 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2700 
‰ìPageRedu˘i⁄
 +
s
->
Àngth
;

2704 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2705 
‰ì_commôãd_∑ges_
 -
‰ìPageRedu˘i⁄
;

2706 i‡(
‰ì_commôãd_∑ges_
 < 
mö_‰ì_commôãd_∑ges_sö˚_œ°_sˇvíge_
)

2707 
mö_‰ì_commôãd_∑ges_sö˚_œ°_sˇvíge_
 = 
‰ì_commôãd_∑ges_
;

2709 
	}
}

2711 
	gTCMÆloc_PageHóp
::
	$Rñó£FªePages
() {

2712 
Lígth
 
s
 = 0; s < 
kMaxPages
; s++) {

2713 
	`Rñó£FªeLi°
(&
‰ì_
[
s
].
n‹mÆ
, &‰ì_[s].
ªtu∫ed
);

2715 
	`Rñó£FªeLi°
(&
œrge_
.
n‹mÆ
, &œrge_.
ªtu∫ed
);

2716 
	`ASSERT
(
	`Check
());

2717 
	}
}

2723 ˛as†
	cTCMÆloc_ThªadCache_FªeLi°
 {

2724 
	g¥iv©e
:

2725 
H¨díedSLL
 
li°_
;

2726 
uöt16_t
 
	gÀngth_
;

2727 
uöt16_t
 
	glow©î_
;

2728 
uöçå_t
 
	gíå›y_
;

2730 
	gpublic
:

2731 
Inô
(
uöçå_t
 
íå›y
) {

2732 
li°_
.
£tVÆue
(
NULL
);

2733 
	gÀngth_
 = 0;

2734 
	glow©î_
 = 0;

2735 
	gíå›y_
 = 
íå›y
;

2736 #i‡
ENABLE
(
TCMALLOC_HARDENING
)

2737 
ASSERT
(
íå›y_
);

2742 
Àngth
() const {

2743  
	gÀngth_
;

2747 
boﬁ
 
em±y
() const {

2748  !
	gli°_
;

2752 
loww©îm¨k
(Ëc⁄° {  
	glow©î_
; }

2753 
˛ór_loww©îm¨k
(Ë{ 
	glow©î_
 = 
Àngth_
; }

2755 
ALWAYS_INLINE
 
Push
(
H¨díedSLL
 
±r
) {

2756 
SLL_Push
(&
li°_
, 
±r
, 
íå›y_
);

2757 
	gÀngth_
++;

2760 
PushR™ge
(
N
, 
H¨díedSLL
 
°¨t
, H¨díedSLL 
íd
) {

2761 
SLL_PushR™ge
(&
li°_
, 
°¨t
, 
íd
, 
íå›y_
);

2762 
	gÀngth_
 = 
Àngth_
 + 
°©ic_ˇ°
<
uöt16_t
>(
N
);

2765 
P›R™ge
(
N
, 
H¨díedSLL
* 
°¨t
, H¨díedSLL* 
íd
) {

2766 
SLL_P›R™ge
(&
li°_
, 
N
, 
°¨t
, 
íd
, 
íå›y_
);

2767 
ASSERT
(
Àngth_
 >
N
);

2768 
	gÀngth_
 = 
Àngth_
 - 
°©ic_ˇ°
<
uöt16_t
>(
N
);

2769 i‡(
	gÀngth_
 < 
	glow©î_
Ëlow©î_ = 
Àngth_
;

2772 
ALWAYS_INLINE
 * 
P›
() {

2773 
ASSERT
(
li°_
);

2774 
	gÀngth_
--;

2775 i‡(
	gÀngth_
 < 
	glow©î_
Ëlow©î_ = 
Àngth_
;

2776  
SLL_P›
(&
li°_
, 
íå›y_
).
vÆue
();

2782 
NEVER_INLINE
 
VÆid©e
(
H¨díedSLL
 
missög
, 
size_t
 
size
) {

2783 
H¨díedSLL
 
	gnode
 = 
li°_
;

2784 
UNUSED_PARAM
(
size
);

2785 
	gnode
) {

2786 
RELEASE_ASSERT
(
node
 !
missög
);

2787 
RELEASE_ASSERT
(
IS_DEFINITELY_POISONED
(
node
.
vÆue
(), 
size
));

2788 
	gnode
 = 
SLL_Next
(
node
, 
íå›y_
);

2792 #ifde‡
WTF_CHANGES


2793 
	gãm∂©e
 <
˛ass
 
	gFödî
, cœs†
	gRódî
>

2794 
íumî©eFªeObje˘s
(
Födî
& 
födî
, c⁄° 
Ródî
& 
ªadî
)

2796 
H¨díedSLL
 
	g√xtObje˘
 = 
li°_
;ÇextObje˘;ÇextObje˘.
£tVÆue
(
ªadî
.
√xtE¡ryInH¨díedLökedLi°
(
ªöãΩªt_ˇ°
<**>(
√xtObje˘
.
vÆue
()), 
íå›y_
)))

2797 
	gfödî
.
visô
(
√xtObje˘
.
vÆue
());

2806 ˛as†
	cTCMÆloc_ThªadCache
 {

2807 
	g¥iv©e
:

2808 
TCMÆloc_ThªadCache_FªeLi°
 
	tFªeLi°
;

2809 #i‡
OS
(
WINDOWS
)

2810 
DWORD
 
	tThªadIdítifõr
;

2812 
±hªad_t
 
	tThªadIdítifõr
;

2815 
size_t
 
	gsize_
;

2816 
ThªadIdítifõr
 
	gtid_
;

2817 
boﬁ
 
	gö_£t•ecific_
;

2818 
FªeLi°
 
	gli°_
[
K_NUM_CLASSES_MAX
];

2821 
uöt32_t
 
	g∫d_
;

2822 
size_t
 
	gbyãs_u¡û_ßm∂e_
;

2824 
uöçå_t
 
	gíå›y_
;

2827 
ölöe
 
TCMÆloc_ThªadCache
* 
NewHóp
(
ThªadIdítifõr
 
tid
, 
uöçå_t
 
íå›y
);

2830 
De°royThªadCache
(* 
±r
);

2831 
	gpublic
:

2833 
TCMÆloc_ThªadCache
* 
√xt_
;

2834 
TCMÆloc_ThªadCache
* 
	g¥ev_
;

2836 
Inô
(
ThªadIdítifõr
 
tid
, 
uöçå_t
 
íå›y
);

2837 
CÀ™up
();

2840 
‰ìli°_Àngth
(
size_t
 
˛
Ëc⁄° {  
	gli°_
[˛].
Àngth
(); }

2843 
size_t
 
Size
(Ëc⁄° {  
	gsize_
; }

2845 
ALWAYS_INLINE
 * 
AŒoˇã
(
size_t
 
size
);

2846 
DóŒoˇã
(
H¨díedSLL
 
±r
, 
size_t
 
size_˛ass
);

2848 
ALWAYS_INLINE
 
FëchFromCíåÆCache
(
size_t
 
˛
, size_à
Æloˇti⁄Size
);

2849 
Rñó£ToCíåÆCache
(
size_t
 
˛
, 
N
);

2850 
Sˇvíge
();

2851 
Pröt
() const;

2855 
boﬁ
 
Sam∂eAŒoˇti⁄
(
size_t
 
k
);

2858 
PickNextSam∂e
(
size_t
 
k
);

2860 
InôModuÀ
();

2861 
InôTSD
();

2862 
TCMÆloc_ThªadCache
* 
GëThªadHóp
();

2863 
TCMÆloc_ThªadCache
* 
GëCache
();

2864 
TCMÆloc_ThªadCache
* 
GëCacheIfPª£¡
();

2865 
TCMÆloc_ThªadCache
* 
Cª©eCacheIfNe˚sßry
();

2866 
DñëeCache
(
TCMÆloc_ThªadCache
* 
hóp
);

2867 
BecomeIdÀ
();

2868 
RecompuãThªadCacheSize
();

2870 #ifde‡
WTF_CHANGES


2871 
	gãm∂©e
 <
˛ass
 
	gFödî
, cœs†
	gRódî
>

2872 
íumî©eFªeObje˘s
(
Födî
& 
födî
, c⁄° 
Ródî
& 
ªadî
)

2874 
ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

2875 
	gsizeCœss
 = 0; sizeCœs†< 
	gkNumCœs£s
; sizeClass++)

2876 
	gli°_
[
sizeCœss
].
íumî©eFªeObje˘s
(
födî
, 
ªadî
);

2887 
TCMÆloc_CíåÆ_FªeLi°Padded
 
	g˚¡øl_ˇche
[
K_NUM_CLASSES_MAX
];

2890 
AŒocAlignmítI¡egî
 
	g∑gehóp_mem‹y
[((
TCMÆloc_PageHóp
) + (AllocAlignmentInteger) - 1) / (AllocAlignmentInteger)];

2891 
boﬁ
 
	gphöôed
 = 
Ál£
;

2896 * 
	gm_mem‹y
;

2897 
TCMÆloc_PageHóp
* 
	gm_∑geHóp
;

2898 } 
	tPageHópUni⁄
;

2900 
ölöe
 
TCMÆloc_PageHóp
* 
	$gëPageHóp
()

2902 
PageHópUni⁄
 
u
 = { &
∑gehóp_mem‹y
[0] };

2903  
u
.
m_∑geHóp
;

2904 
	}
}

2906 
	#∑gehóp
 
	$gëPageHóp
()

	)

2908 
size_t
 
	$Á°MÆlocGoodSize
(
size_t
 
byãs
)

2910 i‡(!
phöôed
)

2911 
TCMÆloc_ThªadCache
::
	`InôModuÀ
();

2912  
	`AŒoˇti⁄Size
(
byãs
);

2913 
	}
}

2915 #i‡
USE_BACKGROUND_THREAD_TO_SCAVENGE_MEMORY


2917 #i‡
HAVE
(
DISPATCH_H
Ë|| 
	$OS
(
WINDOWS
)

2919 
TCMÆloc_PageHóp
::
	$≥riodicSˇvíge
()

2921 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

2922 
∑gehóp
->
	`sˇvíge
();

2924 i‡(
	`shouldSˇvíge
()) {

2925 
	`ªscheduÀSˇvígî
();

2929 
	`su•ídSˇvígî
();

2930 
	}
}

2932 
ALWAYS_INLINE
 
	gTCMÆloc_PageHóp
::
	$sig«lSˇvígî
()

2934 
	`ASSERT
(
∑gehóp_lock
.
	`IsHñd
());

2935 i‡(
	`isSˇvígîSu•íded
(Ë&& 
	`shouldSˇvíge
())

2936 
	`scheduÀSˇvígî
();

2937 
	}
}

2941 
	gTCMÆloc_PageHóp
::
	$sˇvígîThªad
()

2943 #i‡
	`HAVE
(
PTHREAD_SETNAME_NP
)

2944 
	`±hªad_£äame_≈
("JavaScriptCore: FastMalloc scavenger");

2948 
∑gehóp_lock
.
	`Lock
();

2949 i‡(!
	`shouldSˇvíge
()) {

2951 
m_sˇvígeThªadA˘ive
 = 
Ál£
;

2954 
∑gehóp_lock
.
	`U∆ock
();

2957 
	`±hªad_muãx_lock
(&
m_sˇvígeMuãx
);

2958 
	`±hªad_c⁄d_waô
(&
m_sˇvígeC⁄dôi⁄
, &
m_sˇvígeMuãx
);

2961 
	`±hªad_muãx_u∆ock
(&
m_sˇvígeMuãx
);

2964 
m_sˇvígeThªadA˘ive
 = 
åue
;

2966 
∑gehóp_lock
.
	`U∆ock
();

2969 
	`¶ìp
(
kSˇvígeDñayInSec⁄ds
);

2972 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

2973 
∑gehóp
->
	`sˇvíge
();

2976 
	}
}

2989 #ifde‡
HAVE_TLS


2990 
__thªad
 
TCMÆloc_ThªadCache
 *
	gthªadloˇl_hóp
;

2997 
boﬁ
 
	gtsd_öôed
 = 
Ál£
;

2998 #i‡
	$USE
(
PTHREAD_GETSPECIFIC_DIRECT
)

2999 c⁄° 
±hªad_key_t
 
hóp_key
 = 
__PTK_FRAMEWORK_JAVASCRIPTCORE_KEY0
;

3001 
ThªadS≥cificKey
 
hóp_key
;

3004 
ALWAYS_INLINE
 
	$£tThªadHóp
(
TCMÆloc_ThªadCache
* 
hóp
)

3006 #i‡
	`USE
(
PTHREAD_GETSPECIFIC_DIRECT
)

3009 i‡(
	`±hªad_gë•ecific
(
hóp_key
))

3010 
	`CRASH
();

3013 #i‡
	`OS
(
DARWIN
)

3016 
	`±hªad_£t•ecific
(
hóp_key
, 
hóp
);

3018 
	`thªadS≥cificSë
(
hóp_key
, 
hóp
);

3020 
	}
}

3023 
	gPageHópAŒoˇt‹
<
	gTCMÆloc_ThªadCache
> 
	gthªadhóp_Æloˇt‹
;

3026 
TCMÆloc_ThªadCache
* 
	gthªad_hóps
 = 
NULL
;

3027 
	gthªad_hóp_cou¡
 = 0;

3030 
size_t
 
	govîÆl_thªad_ˇche_size
 = 
kDeÁu…OvîÆlThªadCacheSize
;

3036 vﬁ©ûê
size_t
 
	g≥r_thªad_ˇche_size
 = 
kMaxThªadCacheSize
;

3042 
	gTCMÆloc_CíåÆ_FªeLi°
::
	$Inô
(
size_t
 
˛
, 
uöçå_t
 
íå›y
) {

3043 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

3044 
lock_
.
	`Inô
();

3045 
size_˛ass_
 = 
˛
;

3046 
íå›y_
 = 
íå›y
;

3047 #i‡
	`ENABLE
(
TCMALLOC_HARDENING
)

3048 
	`ASSERT
(
íå›y_
);

3050 
	`DLL_Inô
(&
em±y_
, 
íå›y_
);

3051 
	`DLL_Inô
(&
n⁄em±y_
, 
íå›y_
);

3052 
cou¡î_
 = 0;

3054 
ˇche_size_
 = 1;

3055 
u£d_¶Ÿs_
 = 0;

3056 
	`ASSERT
(
ˇche_size_
 <
kNumTøns„rE¡rõs
);

3057 
	}
}

3059 
	gTCMÆloc_CíåÆ_FªeLi°
::
	$Rñó£Li°ToS∑ns
(
H¨díedSLL
 
°¨t
) {

3060 
°¨t
) {

3061 
H¨díedSLL
 
√xt
 = 
	`SLL_Next
(
°¨t
, 
íå›y_
);

3062 
	`Rñó£ToS∑ns
(
°¨t
);

3063 
°¨t
 = 
√xt
;

3065 
	}
}

3067 
ALWAYS_INLINE
 
	gTCMÆloc_CíåÆ_FªeLi°
::
	$Rñó£ToS∑ns
(
H¨díedSLL
 
obje˘
) {

3068 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

3069 c⁄° 
PageID
 
p
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
obje˘
.
	`vÆue
()Ë>> 
kPageShi·
;

3070 
S∑n
* 
•™
 = 
∑gehóp
->
	`GëDes¸ùt‹
(
p
);

3071 
	`ASSERT
(
•™
 !
NULL
);

3072 
	`ASSERT
(
•™
->
ªfcou¡
 > 0);

3075 i‡(!
•™
->
obje˘s
) {

3076 
	`DLL_Remove
(
•™
, 
íå›y_
);

3077 
	`DLL_Pª≥nd
(&
n⁄em±y_
, 
•™
, 
íå›y_
);

3078 
	`Evít
(
•™
, 'N', 0);

3082 i‡(
Ál£
) {

3084 
gŸ
 = 0;

3085 
H¨díedSLL
 
p
 = 
•™
->
obje˘s
; !p; 
	`SLL_Next
’, 
íå›y_
)) {

3086 
	`ASSERT
(
p
.
	`vÆue
(Ë!
obje˘
.value());

3087 
gŸ
++;

3089 
	`ASSERT
(
gŸ
 + 
•™
->
ªfcou¡
 ==

3090 (
•™
->
Àngth
<<
kPageShi·
)/
	`ByãSizeF‹Cœss
(•™->
size˛ass
));

3093 
cou¡î_
++;

3094 
•™
->
ªfcou¡
--;

3095 i‡(
•™
->
ªfcou¡
 == 0) {

3096 
	`Evít
(
•™
, '#', 0);

3097 
cou¡î_
 -(
•™
->
Àngth
<<
kPageShi·
Ë/ 
	`ByãSizeF‹Cœss
(•™->
size˛ass
);

3098 
	`DLL_Remove
(
•™
, 
íå›y_
);

3101 
lock_
.
	`U∆ock
();

3103 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

3104 
∑gehóp
->
	`Dñëe
(
•™
);

3106 
lock_
.
	`Lock
();

3108 
	`SLL_SëNext
(
obje˘
, 
•™
->
obje˘s
, 
íå›y_
);

3109 
•™
->
obje˘s
.
	`£tVÆue
(
obje˘
.
	`vÆue
());

3111 
	}
}

3113 
ALWAYS_INLINE
 
boﬁ
 
	gTCMÆloc_CíåÆ_FªeLi°
::
	$Evi˘R™domSizeCœss
(

3114 
size_t
 
locked_size_˛ass
, 
boﬁ
 
f‹˚
) {

3115 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

3116 
ø˚_cou¡î
 = 0;

3117 
t
 = 
ø˚_cou¡î
++;

3118 i‡(
t
 >
°©ic_ˇ°
<>(
kNumCœs£s
)) {

3119 
t
 >
°©ic_ˇ°
<>(
kNumCœs£s
)) {

3120 
t
 -
kNumCœs£s
;

3122 
ø˚_cou¡î
 = 
t
;

3124 
	`ASSERT
(
t
 >= 0);

3125 
	`ASSERT
(
t
 < 
°©ic_ˇ°
<>(
kNumCœs£s
));

3126 i‡(
t
 =
°©ic_ˇ°
<>(
locked_size_˛ass
)Ë 
Ál£
;

3127  
˚¡øl_ˇche
[
t
].
	`ShrökCache
(
°©ic_ˇ°
<>(
locked_size_˛ass
), 
f‹˚
);

3128 
	}
}

3130 
boﬁ
 
	gTCMÆloc_CíåÆ_FªeLi°
::
	$MakeCacheS∑˚
() {

3131 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

3133 i‡(
u£d_¶Ÿs_
 < 
ˇche_size_
Ë 
åue
;

3135 i‡(
ˇche_size_
 =
kNumTøns„rE¡rõs
Ë 
Ál£
;

3137 i‡(
	`Evi˘R™domSizeCœss
(
size_˛ass_
, 
Ál£
) ||

3138 
	`Evi˘R™domSizeCœss
(
size_˛ass_
, 
åue
)) {

3140 
ˇche_size_
++;

3141  
åue
;

3143  
Ál£
;

3144 
	}
}

3147 
	g«me•a˚
 {

3148 ˛as†
	cLockInvîãr
 {

3149 
	g¥iv©e
:

3150 
SpöLock
 *
hñd_
, *
	gãmp_
;

3151 
	gpublic
:

3152 
ölöe
 
ex∂icô
 
LockInvîãr
(
SpöLock
* 
hñd
, SpöLock *
ãmp
)

3153 : 
hñd_
(
hñd
), 
ãmp_
(
ãmp
Ë{ 
	ghñd_
->
U∆ock
(); 
	gãmp_
->
Lock
(); }

3154 
	gölöe
 ~
LockInvîãr
(Ë{ 
	gãmp_
->
U∆ock
(); 
	ghñd_
->
Lock
(); }

3158 
boﬁ
 
	gTCMÆloc_CíåÆ_FªeLi°
::
	$ShrökCache
(
locked_size_˛ass
, 
boﬁ
 
f‹˚
) {

3160 i‡(
ˇche_size_
 =0Ë 
Ál£
;

3162 i‡(
f‹˚
 =
Ál£
 && 
u£d_¶Ÿs_
 =
ˇche_size_
)  false;

3168 
LockInvîãr
 
	`li
(&
˚¡øl_ˇche
[
locked_size_˛ass
].
lock_
, &lock_);

3169 
	`ASSERT
(
u£d_¶Ÿs_
 <
ˇche_size_
);

3170 
	`ASSERT
(0 <
ˇche_size_
);

3171 i‡(
ˇche_size_
 =0Ë 
Ál£
;

3172 i‡(
u£d_¶Ÿs_
 =
ˇche_size_
) {

3173 i‡(
f‹˚
 =
Ál£
)  false;

3176 
ˇche_size_
--;

3177 
u£d_¶Ÿs_
--;

3178 
	`Rñó£Li°ToS∑ns
(
tc_¶Ÿs_
[
u£d_¶Ÿs_
].
hód
);

3179  
åue
;

3181 
ˇche_size_
--;

3182  
åue
;

3183 
	}
}

3185 
	gTCMÆloc_CíåÆ_FªeLi°
::
	$In£πR™ge
(
H¨díedSLL
 
°¨t
, H¨díedSLL 
íd
, 
N
) {

3186 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

3187 
SpöLockHﬁdî
 
	`h
(&
lock_
);

3188 i‡(
N
 =
num_obje˘s_to_move
[
size_˛ass_
] &&

3189 
	`MakeCacheS∑˚
()) {

3190 
¶Ÿ
 = 
u£d_¶Ÿs_
++;

3191 
	`ASSERT
(
¶Ÿ
 >=0);

3192 
	`ASSERT
(
¶Ÿ
 < 
kNumTøns„rE¡rõs
);

3193 
TCE¡ry
 *
íåy
 = &
tc_¶Ÿs_
[
¶Ÿ
];

3194 
íåy
->
hód
 = 
°¨t
;

3195 
íåy
->
èû
 = 
íd
;

3198 
	`Rñó£Li°ToS∑ns
(
°¨t
);

3199 
	}
}

3201 
ALWAYS_INLINE
 
	gTCMÆloc_CíåÆ_FªeLi°
::
	$RemoveR™ge
(
H¨díedSLL
* 
°¨t
, H¨díedSLL* 
íd
, *
N
) {

3202 
num
 = *
N
;

3203 
	`ASSERT
(
num
 > 0);

3205 
SpöLockHﬁdî
 
	`h
(&
lock_
);

3206 i‡(
num
 =
num_obje˘s_to_move
[
size_˛ass_
] && 
u£d_¶Ÿs_
 > 0) {

3207 
¶Ÿ
 = --
u£d_¶Ÿs_
;

3208 
	`ASSERT
(
¶Ÿ
 >= 0);

3209 
TCE¡ry
 *
íåy
 = &
tc_¶Ÿs_
[
¶Ÿ
];

3210 *
°¨t
 = 
íåy
->
hód
;

3211 *
íd
 = 
íåy
->
èû
;

3216 
H¨díedSLL
 
èû
 = 
	`FëchFromS∑nsSa„
();

3217 i‡(!
èû
) {

3219 *
°¨t
 = *
íd
 = 
H¨díedSLL
::
	`nuŒ
();

3220 *
N
 = 0;

3224 
	`SLL_SëNext
(
èû
, 
H¨díedSLL
::
	`nuŒ
(), 
íå›y_
);

3225 
H¨díedSLL
 
hód
 = 
èû
;

3226 
cou¡
 = 1;

3227 
cou¡
 < 
num
) {

3228 
H¨díedSLL
 
t
 = 
	`FëchFromS∑ns
();

3229 i‡(!
t
) ;

3230 
	`SLL_Push
(&
hód
, 
t
, 
íå›y_
);

3231 
cou¡
++;

3233 *
°¨t
 = 
hód
;

3234 *
íd
 = 
èû
;

3235 *
N
 = 
cou¡
;

3236 
	}
}

3239 
ALWAYS_INLINE
 
H¨díedSLL
 
	gTCMÆloc_CíåÆ_FªeLi°
::
	$FëchFromS∑nsSa„
() {

3240 
H¨díedSLL
 
t
 = 
	`FëchFromS∑ns
();

3241 i‡(!
t
) {

3242 
	`P›uœã
();

3243 
t
 = 
	`FëchFromS∑ns
();

3245  
t
;

3246 
	}
}

3248 
H¨díedSLL
 
	gTCMÆloc_CíåÆ_FªeLi°
::
	$FëchFromS∑ns
() {

3249 i‡(
	`DLL_IsEm±y
(&
n⁄em±y_
, 
íå›y_
)Ë 
H¨díedSLL
::
	`nuŒ
();

3250 
S∑n
* 
•™
 = 
n⁄em±y_
.
	`√xt
(
íå›y_
);

3252 
	`ASSERT
(
•™
->
obje˘s
);

3253 
	`ASSERT_SPAN_COMMITTED
(
•™
);

3254 
•™
->
ªfcou¡
++;

3255 
H¨díedSLL
 
ªsu…
 = 
•™
->
obje˘s
;

3256 
•™
->
obje˘s
 = 
	`SLL_Next
(
ªsu…
, 
íå›y_
);

3257 i‡(!
•™
->
obje˘s
) {

3259 
	`DLL_Remove
(
•™
, 
íå›y_
);

3260 
	`DLL_Pª≥nd
(&
em±y_
, 
•™
, 
íå›y_
);

3261 
	`Evít
(
•™
, 'E', 0);

3263 
cou¡î_
--;

3264  
ªsu…
;

3265 
	}
}

3268 
ALWAYS_INLINE
 
	gTCMÆloc_CíåÆ_FªeLi°
::
	$P›uœã
() {

3269 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

3271 
lock_
.
	`U∆ock
();

3272 c⁄° 
size_t
 
≈ages
 = 
˛ass_to_∑ges
[
size_˛ass_
];

3274 
S∑n
* 
•™
;

3276 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

3277 
•™
 = 
∑gehóp
->
	`New
(
≈ages
);

3278 i‡(
•™
Ë
∑gehóp
->
	`Regi°îSizeCœss
(•™, 
size_˛ass_
);

3280 i‡(
•™
 =
NULL
) {

3281 #i‡
	`HAVE
(
ERRNO_H
)

3282 
	`MESSAGE
("Æloˇti⁄ faûed: %d\n", 
î∫o
);

3283 #ñi‡
	`OS
(
WINDOWS
)

3284 
	`MESSAGE
("Æloˇti⁄ faûed: %d\n", ::
	`GëLa°Eº‹
());

3286 
	`MESSAGE
("allocation failed\n");

3288 
lock_
.
	`Lock
();

3291 
	`ASSERT_SPAN_COMMITTED
(
•™
);

3292 
	`ASSERT
(
•™
->
Àngth
 =
≈ages
);

3296 
size_t
 
i
 = 0; i < 
≈ages
; i++) {

3297 
∑gehóp
->
	`CacheSizeCœss
(
•™
->
°¨t
 + 
i
, 
size_˛ass_
);

3302 
H¨díedSLL
 
hód
 = H¨díedSLL::
	`nuŒ
();

3303 * 
°¨t
 = 
ªöãΩªt_ˇ°
<*>(
•™
->°¨à<< 
kPageShi·
);

3304 c⁄° 
size_t
 
size
 = 
	`ByãSizeF‹Cœss
(
size_˛ass_
);

3305 * 
±r
 = 
°¨t
 + (
≈ages
 << 
kPageShi·
Ë- (“∑ge†<< kPageShi·Ë% 
size
);

3306 
num
 = 0;

3307 #i‡
	`ENABLE
(
TCMALLOC_HARDENING
)

3308 
uöt32_t
 
°¨tPois⁄
 = 
	`‰ìdObje˘SèπPois⁄
();

3309 
uöt32_t
 
ídPois⁄
 = 
	`‰ìdObje˘EndPois⁄
();

3312 
±r
 > 
°¨t
) {

3313 
±r
 -
size
;

3314 
H¨díedSLL
 
node
 = H¨díedSLL::
	`¸óã
(
±r
);

3315 
	`POISON_DEALLOCATION_EXPLICIT
(
±r
, 
size
, 
°¨tPois⁄
, 
ídPois⁄
);

3316 
	`SLL_SëNext
(
node
, 
hód
, 
íå›y_
);

3317 
hód
 = 
node
;

3318 
num
++;

3320 
	`ASSERT
(
±r
 =
°¨t
);

3321 
	`ASSERT
(
±r
 =
hód
.
	`vÆue
());

3322 #i‚de‡
NDEBUG


3324 
H¨díedSLL
 
node
 = 
hód
;

3325 
node
) {

3326 
	`ASSERT
(
	`IS_DEFINITELY_POISONED
(
node
.
	`vÆue
(), 
size
));

3327 
node
 = 
	`SLL_Next
“ode, 
íå›y_
);

3331 
•™
->
obje˘s
 = 
hód
;

3332 
	`ASSERT
(
•™
->
obje˘s
.
	`vÆue
(Ë=
hód
.value());

3333 
•™
->
ªfcou¡
 = 0;

3336 
lock_
.
	`Lock
();

3337 
	`DLL_Pª≥nd
(&
n⁄em±y_
, 
•™
, 
íå›y_
);

3338 
cou¡î_
 +
num
;

3339 
	}
}

3345 
ölöe
 
boﬁ
 
	gTCMÆloc_ThªadCache
::
	$Sam∂eAŒoˇti⁄
(
size_t
 
k
) {

3346 i‡(
byãs_u¡û_ßm∂e_
 < 
k
) {

3347 
	`PickNextSam∂e
(
k
);

3348  
åue
;

3350 
byãs_u¡û_ßm∂e_
 -
k
;

3351  
Ál£
;

3353 
	}
}

3355 
	gTCMÆloc_ThªadCache
::
	$Inô
(
ThªadIdítifõr
 
tid
, 
uöçå_t
 
íå›y
) {

3356 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

3357 
size_
 = 0;

3358 
√xt_
 = 
NULL
;

3359 
¥ev_
 = 
NULL
;

3360 
tid_
 = 
tid
;

3361 
ö_£t•ecific_
 = 
Ál£
;

3362 
íå›y_
 = 
íå›y
;

3363 #i‡
	`ENABLE
(
TCMALLOC_HARDENING
)

3364 
	`ASSERT
(
íå›y_
);

3366 
size_t
 
˛
 = 0; c»< 
kNumCœs£s
; ++cl) {

3367 
li°_
[
˛
].
	`Inô
(
íå›y_
);

3371 
byãs_u¡û_ßm∂e_
 = 0;

3372 
∫d_
 = 
°©ic_ˇ°
<
uöt32_t
>(
ªöãΩªt_ˇ°
<
uöçå_t
>(
this
));

3373 
i
 = 0; i < 100; i++) {

3374 
	`PickNextSam∂e
(
°©ic_ˇ°
<
size_t
>(
FLAGS_tcmÆloc_ßm∂e_∑ømëî
 * 2));

3376 
	}
}

3378 
	gTCMÆloc_ThªadCache
::
	$CÀ™up
() {

3379 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

3381 
size_t
 
˛
 = 0; c»< 
kNumCœs£s
; ++cl) {

3382 i‡(
li°_
[
˛
].
	`Àngth
() > 0) {

3383 
	`Rñó£ToCíåÆCache
(
˛
, 
li°_
[˛].
	`Àngth
());

3386 
	}
}

3388 
ALWAYS_INLINE
 * 
	gTCMÆloc_ThªadCache
::
	$AŒoˇã
(
size_t
 
size
) {

3389 
	`ASSERT
(
size
 <
kMaxSize
);

3390 c⁄° 
size_t
 
˛
 = 
	`SizeCœss
(
size
);

3391 
FªeLi°
* 
li°
 = &
li°_
[
˛
];

3392 
size_t
 
Æloˇti⁄Size
 = 
	`ByãSizeF‹Cœss
(
˛
);

3393 i‡(
li°
->
	`em±y
()) {

3394 
	`FëchFromCíåÆCache
(
˛
, 
Æloˇti⁄Size
);

3395 i‡(
li°
->
	`em±y
()Ë 
NULL
;

3397 
size_
 -
Æloˇti⁄Size
;

3398 * 
ªsu…
 = 
li°
->
	`P›
();

3399 i‡(!
ªsu…
)

3401 
	`RELEASE_ASSERT
(
	`IS_DEFINITELY_POISONED
(
ªsu…
, 
Æloˇti⁄Size
));

3402 
	`POISON_ALLOCATION
(
ªsu…
, 
Æloˇti⁄Size
);

3403  
ªsu…
;

3404 
	}
}

3406 
ölöe
 
	gTCMÆloc_ThªadCache
::
	$DóŒoˇã
(
H¨díedSLL
 
±r
, 
size_t
 
˛
) {

3407 
size_t
 
Æloˇti⁄Size
 = 
	`ByãSizeF‹Cœss
(
˛
);

3408 
size_
 +
Æloˇti⁄Size
;

3409 
FªeLi°
* 
li°
 = &
li°_
[
˛
];

3410 i‡(
	`MAY_BE_POISONED
(
±r
.
	`vÆue
(), 
Æloˇti⁄Size
))

3411 
li°
->
	`VÆid©e
(
±r
, 
Æloˇti⁄Size
);

3413 
	`POISON_DEALLOCATION
(
±r
.
	`vÆue
(), 
Æloˇti⁄Size
);

3414 
li°
->
	`Push
(
±r
);

3416 i‡(
li°
->
	`Àngth
(Ë> 
kMaxFªeLi°Lígth
) {

3417 
	`Rñó£ToCíåÆCache
(
˛
, 
num_obje˘s_to_move
[cl]);

3419 i‡(
size_
 >
≥r_thªad_ˇche_size
Ë
	`Sˇvíge
();

3420 
	}
}

3423 
ALWAYS_INLINE
 
	gTCMÆloc_ThªadCache
::
	$FëchFromCíåÆCache
(
size_t
 
˛
, size_à
Æloˇti⁄Size
) {

3424 
„tch_cou¡
 = 
num_obje˘s_to_move
[
˛
];

3425 
H¨díedSLL
 
°¨t
, 
íd
;

3426 
˚¡øl_ˇche
[
˛
].
	`RemoveR™ge
(&
°¨t
, &
íd
, &
„tch_cou¡
);

3427 
li°_
[
˛
].
	`PushR™ge
(
„tch_cou¡
, 
°¨t
, 
íd
);

3428 
size_
 +
Æloˇti⁄Size
 * 
„tch_cou¡
;

3429 
	}
}

3432 
ölöe
 
	gTCMÆloc_ThªadCache
::
	$Rñó£ToCíåÆCache
(
size_t
 
˛
, 
N
) {

3433 
	`ASSERT
(
N
 > 0);

3434 
FªeLi°
* 
§c
 = &
li°_
[
˛
];

3435 i‡(
N
 > 
§c
->
	`Àngth
()) N = src->length();

3436 
size_
 -
N
*
	`ByãSizeF‹Cœss
(
˛
);

3440 
b©ch_size
 = 
num_obje˘s_to_move
[
˛
];

3441 
N
 > 
b©ch_size
) {

3442 
H¨díedSLL
 
èû
, 
hód
;

3443 
§c
->
	`P›R™ge
(
b©ch_size
, &
hód
, &
èû
);

3444 
˚¡øl_ˇche
[
˛
].
	`In£πR™ge
(
hód
, 
èû
, 
b©ch_size
);

3445 
N
 -
b©ch_size
;

3447 
H¨díedSLL
 
èû
, 
hód
;

3448 
§c
->
	`P›R™ge
(
N
, &
hód
, &
èû
);

3449 
˚¡øl_ˇche
[
˛
].
	`In£πR™ge
(
hód
, 
èû
, 
N
);

3450 
	}
}

3453 
ölöe
 
	gTCMÆloc_ThªadCache
::
	$Sˇvíge
() {

3454 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

3463 
size_t
 
˛
 = 0; c»< 
kNumCœs£s
; cl++) {

3464 
FªeLi°
* 
li°
 = &
li°_
[
˛
];

3465 c⁄° 
lowm¨k
 = 
li°
->
	`loww©îm¨k
();

3466 i‡(
lowm¨k
 > 0) {

3467 c⁄° 
dr›
 = (
lowm¨k
 > 1) ?Üowmark/2 : 1;

3468 
	`Rñó£ToCíåÆCache
(
˛
, 
dr›
);

3470 
li°
->
	`˛ór_loww©îm¨k
();

3476 
	}
}

3478 
	gTCMÆloc_ThªadCache
::
	$PickNextSam∂e
(
size_t
 
k
) {

3481 c⁄° 
uöt32_t
 
kPﬁy
 = (1 << 22) | (1 << 2) | (1 << 1) | (1 << 0);

3482 
uöt32_t
 
r
 = 
∫d_
;

3483 
∫d_
 = (
r
 << 1Ë^ ((
°©ic_ˇ°
<
öt32_t
>‘Ë>> 31Ë& 
kPﬁy
);

3487 c⁄° 
Êag_vÆue
 = 
°©ic_ˇ°
<>(
FLAGS_tcmÆloc_ßm∂e_∑ømëî
);

3488 
œ°_Êag_vÆue
 = -1;

3490 i‡(
Êag_vÆue
 !
œ°_Êag_vÆue
) {

3491 
SpöLockHﬁdî
 
	`h
(&
ßm∂e_≥riod_lock
);

3492 
i
;

3493 
i
 = 0; i < (
°©ic_ˇ°
<>((
¥imes_li°
)/(primes_list[0])) - 1); i++) {

3494 i‡(
¥imes_li°
[
i
] >
Êag_vÆue
) {

3498 
ßm∂e_≥riod
 = 
¥imes_li°
[
i
];

3499 
œ°_Êag_vÆue
 = 
Êag_vÆue
;

3502 
byãs_u¡û_ßm∂e_
 +
∫d_
 % 
ßm∂e_≥riod
;

3504 i‡(
k
 > (
°©ic_ˇ°
<
size_t
>(-1) >> 2)) {

3514 
byãs_u¡û_ßm∂e_
 < 
k
) {

3518 
byãs_u¡û_ßm∂e_
 +(
ßm∂e_≥riod
 >> 1);

3521 
byãs_u¡û_ßm∂e_
 -
k
;

3522 
	}
}

3524 
	gTCMÆloc_ThªadCache
::
	$InôModuÀ
() {

3531 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

3532 i‡(!
phöôed
) {

3533 
uöçå_t
 
íå›y
 = 
HARDENING_ENTROPY
;

3534 #ifde‡
WTF_CHANGES


3535 
	`InôTSD
();

3537 
	`InôSizeCœs£s
();

3538 
thªadhóp_Æloˇt‹
.
	`Inô
(
íå›y
);

3539 
•™_Æloˇt‹
.
	`Inô
(
íå›y
);

3540 
•™_Æloˇt‹
.
	`New
();

3541 
•™_Æloˇt‹
.
	`New
();

3542 
°ackåa˚_Æloˇt‹
.
	`Inô
(
íå›y
);

3543 
	`DLL_Inô
(&
ßm∂ed_obje˘s
, 
íå›y
);

3544 
size_t
 
i
 = 0; i < 
kNumCœs£s
; ++i) {

3545 
˚¡øl_ˇche
[
i
].
	`Inô
(i, 
íå›y
);

3547 
∑gehóp
->
	`öô
();

3548 
phöôed
 = 1;

3549 #i‡
	`deföed
(
WTF_CHANGES
Ë&& 
	`OS
(
DARWIN
)

3550 
MÆlocHook
::
	`öô
();

3551 
Fa°MÆlocZ⁄e
::
	`öô
();

3554 
	}
}

3556 
ölöe
 
TCMÆloc_ThªadCache
* 
	gTCMÆloc_ThªadCache
::
	$NewHóp
(
ThªadIdítifõr
 
tid
, 
uöçå_t
 
íå›y
) {

3558 
TCMÆloc_ThªadCache
 *
hóp
 = 
thªadhóp_Æloˇt‹
.
	`New
();

3559 
hóp
->
	`Inô
(
tid
, 
íå›y
);

3560 
hóp
->
√xt_
 = 
thªad_hóps
;

3561 
hóp
->
¥ev_
 = 
NULL
;

3562 i‡(
thªad_hóps
 !
NULL
Ëthªad_hóps->
¥ev_
 = 
hóp
;

3563 
thªad_hóps
 = 
hóp
;

3564 
thªad_hóp_cou¡
++;

3565 
	`RecompuãThªadCacheSize
();

3566  
hóp
;

3567 
	}
}

3569 
ölöe
 
TCMÆloc_ThªadCache
* 
	gTCMÆloc_ThªadCache
::
	$GëThªadHóp
() {

3570 #ifde‡
HAVE_TLS


3572 i‡(
	`Kî√lSuµ‹tsTLS
())

3573  
thªadloˇl_hóp
;

3574 #ñi‡
	`OS
(
DARWIN
)

3575  
°©ic_ˇ°
<
TCMÆloc_ThªadCache
*>(
	`±hªad_gë•ecific
(
hóp_key
));

3577  
°©ic_ˇ°
<
TCMÆloc_ThªadCache
*>(
	`thªadS≥cificGë
(
hóp_key
));

3579 
	}
}

3581 
ölöe
 
TCMÆloc_ThªadCache
* 
	gTCMÆloc_ThªadCache
::
	$GëCache
() {

3582 
TCMÆloc_ThªadCache
* 
±r
 = 
NULL
;

3583 i‡(!
tsd_öôed
) {

3584 
	`InôModuÀ
();

3586 
±r
 = 
	`GëThªadHóp
();

3588 i‡(
±r
 =
NULL
Ë±∏
	`Cª©eCacheIfNe˚sßry
();

3589  
±r
;

3590 
	}
}

3595 
ölöe
 
TCMÆloc_ThªadCache
* 
	gTCMÆloc_ThªadCache
::
	$GëCacheIfPª£¡
() {

3596 i‡(!
tsd_öôed
Ë 
NULL
;

3597 * c⁄° 
p
 = 
	`GëThªadHóp
();

3598  
ªöãΩªt_ˇ°
<
TCMÆloc_ThªadCache
*>(
p
);

3599 
	}
}

3601 
	gTCMÆloc_ThªadCache
::
	$InôTSD
() {

3602 
	`ASSERT
(!
tsd_öôed
);

3603 #i‡
	`USE
(
PTHREAD_GETSPECIFIC_DIRECT
)

3604 
	`±hªad_key_öô_≈
(
hóp_key
, 
De°royThªadCache
);

3606 
	`thªadS≥cificKeyCª©e
(&
hóp_key
, 
De°royThªadCache
);

3608 
tsd_öôed
 = 
åue
;

3610 #i‡!
	`OS
(
WINDOWS
)

3612 
±hªad_t
 
zîo
;

3613 
	`mem£t
(&
zîo
, 0, (zero));

3615 #i‚de‡
WTF_CHANGES


3616 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

3618 
	`ASSERT
(
∑gehóp_lock
.
	`IsHñd
());

3620 
TCMÆloc_ThªadCache
* 
h
 = 
thªad_hóps
; h !
NULL
; h = h->
√xt_
) {

3621 #i‡
	`OS
(
WINDOWS
)

3622 i‡(
h
->
tid_
 == 0) {

3623 
h
->
tid_
 = 
	`GëCuºítThªadId
();

3626 i‡(
	`±hªad_equÆ
(
h
->
tid_
, 
zîo
)) {

3627 
h
->
tid_
 = 
	`±hªad_£lf
();

3631 
	}
}

3633 
TCMÆloc_ThªadCache
* 
	gTCMÆloc_ThªadCache
::
	$Cª©eCacheIfNe˚sßry
() {

3635 
TCMÆloc_ThªadCache
* 
hóp
 = 
NULL
;

3637 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

3639 #i‡
	`OS
(
WINDOWS
)

3640 
DWORD
 
me
;

3641 i‡(!
tsd_öôed
) {

3642 
me
 = 0;

3644 
me
 = 
	`GëCuºítThªadId
();

3648 
±hªad_t
 
me
;

3649 i‡(!
tsd_öôed
) {

3650 
	`mem£t
(&
me
, 0, (me));

3652 
me
 = 
	`±hªad_£lf
();

3659 
TCMÆloc_ThªadCache
* 
h
 = 
thªad_hóps
; h !
NULL
; h = h->
√xt_
) {

3660 #i‡
	`OS
(
WINDOWS
)

3661 i‡(
h
->
tid_
 =
me
) {

3663 i‡(
	`±hªad_equÆ
(
h
->
tid_
, 
me
)) {

3665 
hóp
 = 
h
;

3670 i‡(
hóp
 =
NULL
Ëhó∞
	`NewHóp
(
me
, 
HARDENING_ENTROPY
);

3677 i‡(!
hóp
->
ö_£t•ecific_
 && 
tsd_öôed
) {

3678 
hóp
->
ö_£t•ecific_
 = 
åue
;

3679 
	`£tThªadHóp
(
hóp
);

3681  
hóp
;

3682 
	}
}

3684 
	gTCMÆloc_ThªadCache
::
	$BecomeIdÀ
() {

3685 i‡(!
tsd_öôed
) ;

3686 
TCMÆloc_ThªadCache
* 
hóp
 = 
	`GëThªadHóp
();

3687 i‡(
hóp
 =
NULL
) ;

3688 i‡(
hóp
->
ö_£t•ecific_
) ;

3690 
hóp
->
ö_£t•ecific_
 = 
åue
;

3691 
	`£tThªadHóp
(
NULL
);

3692 #ifde‡
HAVE_TLS


3694 
thªadloˇl_hóp
 = 
NULL
;

3696 
hóp
->
ö_£t•ecific_
 = 
Ál£
;

3697 i‡(
	`GëThªadHóp
(Ë=
hóp
) {

3704 
	`DñëeCache
(
hóp
);

3705 
	}
}

3707 
	gTCMÆloc_ThªadCache
::
	$De°royThªadCache
(* 
±r
) {

3711 i‡(
±r
 =
NULL
) ;

3712 #ifde‡
HAVE_TLS


3714 
thªadloˇl_hóp
 = 
NULL
;

3716 
	`DñëeCache
(
ªöãΩªt_ˇ°
<
TCMÆloc_ThªadCache
*>(
±r
));

3717 
	}
}

3719 
	gTCMÆloc_ThªadCache
::
	$DñëeCache
(
TCMÆloc_ThªadCache
* 
hóp
) {

3721 
hóp
->
	`CÀ™up
();

3724 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

3725 i‡(
hóp
->
√xt_
 !
NULL
Ëhóp->√xt_->
¥ev_
 = heap->prev_;

3726 i‡(
hóp
->
¥ev_
 !
NULL
Ëhóp->¥ev_->
√xt_
 = heap->next_;

3727 i‡(
thªad_hóps
 =
hóp
Ëthªad_hóp†hóp->
√xt_
;

3728 
thªad_hóp_cou¡
--;

3729 
	`RecompuãThªadCacheSize
();

3731 
thªadhóp_Æloˇt‹
.
	`Dñëe
(
hóp
);

3732 
	}
}

3734 
	gTCMÆloc_ThªadCache
::
	$RecompuãThªadCacheSize
() {

3736 
n
 = 
thªad_hóp_cou¡
 > 0 ?Åhread_heap_count : 1;

3737 
size_t
 
•a˚
 = 
ovîÆl_thªad_ˇche_size
 / 
n
;

3740 i‡(
•a˚
 < 
kMöThªadCacheSize
) space = kMinThreadCacheSize;

3741 i‡(
•a˚
 > 
kMaxThªadCacheSize
) space = kMaxThreadCacheSize;

3743 
≥r_thªad_ˇche_size
 = 
•a˚
;

3744 
	}
}

3746 
	gTCMÆloc_ThªadCache
::
	$Pröt
() const {

3747 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

3748 
size_t
 
˛
 = 0; c»< 
kNumCœs£s
; ++cl) {

3749 
	`MESSAGE
(" %5" 
PRIuS
 " : %4dÜen; %4dÜo\n",

3750 
	`ByãSizeF‹Cœss
(
˛
),

3751 
li°_
[
˛
].
	`Àngth
(),

3752 
li°_
[
˛
].
	`loww©îm¨k
());

3754 
	}
}

3757 
	sTCMÆlocSèts
 {

3758 
uöt64_t
 
	gsy°em_byãs
;

3759 
uöt64_t
 
	gthªad_byãs
;

3760 
uöt64_t
 
	g˚¡øl_byãs
;

3761 
uöt64_t
 
	gå™s„r_byãs
;

3762 
uöt64_t
 
	g∑gehóp_byãs
;

3763 
uöt64_t
 
	gmëad©a_byãs
;

3766 #i‚de‡
WTF_CHANGES


3768 
	$Exåa˘Sèts
(
TCMÆlocSèts
* 
r
, 
uöt64_t
* 
˛ass_cou¡
) {

3769 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

3770 
r
->
˚¡øl_byãs
 = 0;

3771 
r
->
å™s„r_byãs
 = 0;

3772 
˛
 = 0; c»< 
kNumCœs£s
; ++cl) {

3773 c⁄° 
Àngth
 = 
˚¡øl_ˇche
[
˛
].
	`Àngth
();

3774 c⁄° 
tc_Àngth
 = 
˚¡øl_ˇche
[
˛
].
	`tc_Àngth
();

3775 
r
->
˚¡øl_byãs
 +
°©ic_ˇ°
<
uöt64_t
>(
	`ByãSizeF‹Cœss
(
˛
)Ë* 
Àngth
;

3776 
r
->
å™s„r_byãs
 +=

3777 
°©ic_ˇ°
<
uöt64_t
>(
	`ByãSizeF‹Cœss
(
˛
)Ë* 
tc_Àngth
;

3778 i‡(
˛ass_cou¡
Ë˛ass_cou¡[
˛
] = 
Àngth
 + 
tc_Àngth
;

3782 
r
->
thªad_byãs
 = 0;

3784 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

3785 
TCMÆloc_ThªadCache
* 
h
 = 
thªad_hóps
; h !
NULL
; h = h->
√xt_
) {

3786 
r
->
thªad_byãs
 +
h
->
	`Size
();

3787 i‡(
˛ass_cou¡
) {

3788 
size_t
 
˛
 = 0; c»< 
kNumCœs£s
; ++cl) {

3789 
˛ass_cou¡
[
˛
] +
h
->
	`‰ìli°_Àngth
(cl);

3796 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

3797 
r
->
sy°em_byãs
 = 
∑gehóp
->
	`Sy°emByãs
();

3798 
r
->
mëad©a_byãs
 = 
mëad©a_sy°em_byãs
;

3799 
r
->
∑gehóp_byãs
 = 
∑gehóp
->
	`FªeByãs
();

3801 
	}
}

3804 #i‚de‡
WTF_CHANGES


3806 
	$DumpSèts
(
TCMÆloc_Pröãr
* 
out
, 
Àvñ
) {

3807 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

3808 
TCMÆlocSèts
 
°©s
;

3809 
uöt64_t
 
˛ass_cou¡
[
kNumCœs£s
];

3810 
	`Exåa˘Sèts
(&
°©s
, (
Àvñ
 >2 ? 
˛ass_cou¡
 : 
NULL
));

3812 i‡(
Àvñ
 >= 2) {

3813 
out
->
	`¥ötf
("------------------------------------------------\n");

3814 
uöt64_t
 
cumuœtive
 = 0;

3815 
˛
 = 0; c»< 
kNumCœs£s
; ++cl) {

3816 i‡(
˛ass_cou¡
[
˛
] > 0) {

3817 
uöt64_t
 
˛ass_byãs
 = 
˛ass_cou¡
[
˛
] * 
	`ByãSizeF‹Cœss
(cl);

3818 
cumuœtive
 +
˛ass_byãs
;

3819 
out
->
	`¥ötf
("˛as†%3d [ %8" 
PRIuS
 " bytes ] : "

3820 "%8" 
PRIu64
 " objs; %5.1f MB; %5.1f cum MB\n",

3821 
˛
, 
	`ByãSizeF‹Cœss
(cl),

3822 
˛ass_cou¡
[
˛
],

3823 
˛ass_byãs
 / 1048576.0,

3824 
cumuœtive
 / 1048576.0);

3828 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

3829 
∑gehóp
->
	`Dump
(
out
);

3832 c⁄° 
uöt64_t
 
byãs_ö_u£
 = 
°©s
.
sy°em_byãs


3833 - 
°©s
.
∑gehóp_byãs


3834 - 
°©s
.
˚¡øl_byãs


3835 - 
°©s
.
å™s„r_byãs


3836 - 
°©s
.
thªad_byãs
;

3838 
out
->
	`¥ötf
("------------------------------------------------\n"

3839 "MALLOC: %12" 
PRIu64
 " Heap size\n"

3840 "MALLOC: %12" 
PRIu64
 " Bytes in use byápplication\n"

3841 "MALLOC: %12" 
PRIu64
 " Bytes free inÖage heap\n"

3842 "MALLOC: %12" 
PRIu64
 " Bytes free in central cache\n"

3843 "MALLOC: %12" 
PRIu64
 " Bytes free inÅransfer cache\n"

3844 "MALLOC: %12" 
PRIu64
 " Bytes free inÅhread caches\n"

3845 "MALLOC: %12" 
PRIu64
 " Spans in use\n"

3846 "MALLOC: %12" 
PRIu64
 " Thread heaps in use\n"

3847 "MALLOC: %12" 
PRIu64
 " Metadataállocated\n"

3849 
°©s
.
sy°em_byãs
,

3850 
byãs_ö_u£
,

3851 
°©s
.
∑gehóp_byãs
,

3852 
°©s
.
˚¡øl_byãs
,

3853 
°©s
.
å™s„r_byãs
,

3854 
°©s
.
thªad_byãs
,

3855 
	`uöt64_t
(
•™_Æloˇt‹
.
	`öu£
()),

3856 
	`uöt64_t
(
thªadhóp_Æloˇt‹
.
	`öu£
()),

3857 
°©s
.
mëad©a_byãs
);

3858 
	}
}

3860 
	$PrötSèts
(
Àvñ
) {

3861 c⁄° 
kBuf„rSize
 = 16 << 10;

3862 * 
buf„r
 = 
√w
 [
kBuf„rSize
];

3863 
TCMÆloc_Pröãr
 
	`¥öãr
(
buf„r
, 
kBuf„rSize
);

3864 
	`DumpSèts
(&
¥öãr
, 
Àvñ
);

3865 
	`wrôe
(
STDERR_FILENO
, 
buf„r
, 
	`°æí
(buffer));

3866 
dñëe
[] 
buf„r
;

3867 
	}
}

3869 ** 
	$DumpSèckTø˚s
() {

3871 
√eded_¶Ÿs
 = 0;

3873 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

3874 
S∑n
* 
s
 = 
ßm∂ed_obje˘s
.
√xt
; s != &sampled_objects; s = s->next) {

3875 
SèckTø˚
* 
°ack
 = 
ªöãΩªt_ˇ°
<SèckTø˚*>(
s
->
obje˘s
);

3876 
√eded_¶Ÿs
 +3 + 
°ack
->
dïth
;

3878 
√eded_¶Ÿs
 += 100;

3879 
√eded_¶Ÿs
 +=Çeeded_slots/8;

3882 ** 
ªsu…
 = 
√w
 *[
√eded_¶Ÿs
];

3883 i‡(
ªsu…
 =
NULL
) {

3884 
	`MESSAGE
("tcmalloc: couldÇotállocate %d slots for stackÅraces\n",

3885 
√eded_¶Ÿs
);

3886  
NULL
;

3889 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

3890 
u£d_¶Ÿs
 = 0;

3891 
S∑n
* 
s
 = 
ßm∂ed_obje˘s
.
√xt
; s != &sampled_objects; s = s->next) {

3892 
	`ASSERT_WITH_SECURITY_IMPLICATION
(
u£d_¶Ÿs
 < 
√eded_¶Ÿs
);

3893 
SèckTø˚
* 
°ack
 = 
ªöãΩªt_ˇ°
<SèckTø˚*>(
s
->
obje˘s
);

3894 i‡(
u£d_¶Ÿs
 + 3 + 
°ack
->
dïth
 >
√eded_¶Ÿs
) {

3899 
ªsu…
[
u£d_¶Ÿs
+0] = 
ªöãΩªt_ˇ°
<*>(
°©ic_ˇ°
<
uöçå_t
>(1));

3900 
ªsu…
[
u£d_¶Ÿs
+1] = 
ªöãΩªt_ˇ°
<*>(
°ack
->
size
);

3901 
ªsu…
[
u£d_¶Ÿs
+2] = 
ªöãΩªt_ˇ°
<*>(
°ack
->
dïth
);

3902 
d
 = 0; d < 
°ack
->
dïth
; d++) {

3903 
ªsu…
[
u£d_¶Ÿs
+3+
d
] = 
°ack
->stack[d];

3905 
u£d_¶Ÿs
 +3 + 
°ack
->
dïth
;

3907 
ªsu…
[
u£d_¶Ÿs
] = 
ªöãΩªt_ˇ°
<*>(
°©ic_ˇ°
<
uöçå_t
>(0));

3908  
ªsu…
;

3909 
	}
}

3912 #i‚de‡
WTF_CHANGES


3915 ˛as†
	cTCMÆlocIm∂emíèti⁄
 : 
public
 
MÆlocExãnsi⁄
 {

3916 
public
:

3917 
vútuÆ
 
GëSèts
(* 
buf„r
, 
buf„r_Àngth
) {

3918 
ASSERT
(
buf„r_Àngth
 > 0);

3919 
TCMÆloc_Pröãr
 
¥öãr
(
buf„r
, 
buf„r_Àngth
);

3922 i‡(
	gbuf„r_Àngth
 < 10000) {

3923 
DumpSèts
(&
¥öãr
, 1);

3925 
DumpSèts
(&
¥öãr
, 2);

3929 
vútuÆ
 ** 
RódSèckTø˚s
() {

3930  
DumpSèckTø˚s
();

3933 
vútuÆ
 
boﬁ
 
GëNumîicPr›îty
(c⁄° * 
«me
, 
size_t
* 
vÆue
) {

3934 
ASSERT
(
«me
 !
NULL
);

3936 i‡(
°rcmp
(
«me
, "generic.current_allocated_bytes") == 0) {

3937 
TCMÆlocSèts
 
°©s
;

3938 
Exåa˘Sèts
(&
°©s
, 
NULL
);

3939 *
	gvÆue
 = 
°©s
.
sy°em_byãs


3940 - 
°©s
.
thªad_byãs


3941 - 
°©s
.
˚¡øl_byãs


3942 - 
°©s
.
∑gehóp_byãs
;

3943  
	gåue
;

3946 i‡(
°rcmp
(
«me
, "generic.heap_size") == 0) {

3947 
TCMÆlocSèts
 
°©s
;

3948 
Exåa˘Sèts
(&
°©s
, 
NULL
);

3949 *
	gvÆue
 = 
°©s
.
sy°em_byãs
;

3950  
	gåue
;

3953 i‡(
°rcmp
(
«me
, "tcmalloc.slack_bytes") == 0) {

3956 
SpöLockHﬁdî
 
l
(&
∑gehóp_lock
);

3957 *
	gvÆue
 = 
∑gehóp
->
FªeByãs
();

3958  
	gåue
;

3961 i‡(
°rcmp
(
«me
, "tcmalloc.max_total_thread_cache_bytes") == 0) {

3962 
SpöLockHﬁdî
 
l
(&
∑gehóp_lock
);

3963 *
	gvÆue
 = 
ovîÆl_thªad_ˇche_size
;

3964  
	gåue
;

3967 i‡(
°rcmp
(
«me
, "tcmalloc.current_total_thread_cache_bytes") == 0) {

3968 
TCMÆlocSèts
 
°©s
;

3969 
Exåa˘Sèts
(&
°©s
, 
NULL
);

3970 *
	gvÆue
 = 
°©s
.
thªad_byãs
;

3971  
	gåue
;

3974  
	gÁl£
;

3977 
vútuÆ
 
boﬁ
 
SëNumîicPr›îty
(c⁄° * 
«me
, 
size_t
 
vÆue
) {

3978 
ASSERT
(
«me
 !
NULL
);

3980 i‡(
°rcmp
(
«me
, "tcmalloc.max_total_thread_cache_bytes") == 0) {

3982 i‡(
vÆue
 < 
kMöThªadCacheSize
) value = kMinThreadCacheSize;

3983 i‡(
	gvÆue
 > (1<<30)) value = (1<<30);

3985 
SpöLockHﬁdî
 
l
(&
∑gehóp_lock
);

3986 
	govîÆl_thªad_ˇche_size
 = 
°©ic_ˇ°
<
size_t
>(
vÆue
);

3987 
	gTCMÆloc_ThªadCache
::
RecompuãThªadCacheSize
();

3988  
	gåue
;

3991  
	gÁl£
;

3994 
vútuÆ
 
M¨kThªadIdÀ
() {

3995 
	gTCMÆloc_ThªadCache
::
BecomeIdÀ
();

3998 
vútuÆ
 
Rñó£FªeMem‹y
() {

3999 
SpöLockHﬁdî
 
h
(&
∑gehóp_lock
);

4000 
	g∑gehóp
->
Rñó£FªePages
();

4017 ˛as†
	cTCMÆlocGu¨d
 {

4018 
	gpublic
:

4020 
TCMÆlocGu¨d
() {

4021 #ifde‡
HAVE_TLS


4023 
CheckIfKî√lSuµ‹tsTLS
();

4025 #i‚de‡
WTF_CHANGES


4026 #ifde‡
WIN32


4027 
P©chWödowsFun˘i⁄s
();

4030 
‰ì
(
mÆloc
(1));

4031 
	gTCMÆloc_ThªadCache
::
InôTSD
();

4032 
‰ì
(
mÆloc
(1));

4033 #i‚de‡
WTF_CHANGES


4034 
	gMÆlocExãnsi⁄
::
Regi°î
(
√w
 
TCMÆlocIm∂emíèti⁄
);

4038 #i‚de‡
WTF_CHANGES


4039 ~
TCMÆlocGu¨d
() {

4040 c⁄° * 
	gív
 = 
gëív
("MALLOCSTATS");

4041 i‡(
	gív
 !
NULL
) {

4042 
Àvñ
 = 
©oi
(
ív
);

4043 i‡(
	gÀvñ
 < 1)Üevel = 1;

4044 
PrötSèts
(
Àvñ
);

4046 #ifde‡
WIN32


4047 
U≈©chWödowsFun˘i⁄s
();

4053 #i‚de‡
WTF_CHANGES


4054 
TCMÆlocGu¨d
 
	gmoduÀ_íãr_exô_hook
;

4062 #i‚de‡
WTF_CHANGES


4064 
S∑n
* 
	$DoSam∂edAŒoˇti⁄
(
size_t
 
size
) {

4067 
SèckTø˚
 
tmp
;

4068 
tmp
.
dïth
 = 
	`GëSèckTø˚
—mp.
°ack
, 
kMaxSèckDïth
, 1);

4069 
tmp
.
size
 = size;

4071 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

4073 
S∑n
 *
•™
 = 
∑gehóp
->
	`New
(
	`∑ges
(
size
 == 0 ? 1 : size));

4074 i‡(
•™
 =
NULL
) {

4075  
NULL
;

4079 
SèckTø˚
 *
°ack
 = 
°ackåa˚_Æloˇt‹
.
	`New
();

4080 i‡(
°ack
 =
NULL
) {

4082  
•™
;

4085 *
°ack
 = 
tmp
;

4086 
•™
->
ßm∂e
 = 1;

4087 
•™
->
obje˘s
 = 
°ack
;

4088 
	`DLL_Pª≥nd
(&
ßm∂ed_obje˘s
, 
•™
);

4090  
•™
;

4091 
	}
}

4094 #i‡!
ASSERT_DISABLED


4095 
ölöe
 
boﬁ
 
	$CheckCachedSizeCœss
(*
±r
) {

4096 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

4097 
PageID
 
p
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
±r
Ë>> 
kPageShi·
;

4098 
size_t
 
ˇched_vÆue
 = 
∑gehóp
->
	`GëSizeCœssIfCached
(
p
);

4099  
ˇched_vÆue
 == 0 ||

4100 
ˇched_vÆue
 =
∑gehóp
->
	`GëDes¸ùt‹
(
p
)->
size˛ass
;

4101 
	}
}

4104 
ölöe
 * 
	$CheckedMÆlocResu…
(*
ªsu…
)

4106 
	`ASSERT
(
ªsu…
 =0 || 
	`CheckCachedSizeCœss
(result));

4107  
ªsu…
;

4108 
	}
}

4110 
ölöe
 * 
	$S∑nToMÆlocResu…
(
S∑n
 *
•™
) {

4111 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

4112 
	`ASSERT_SPAN_COMMITTED
(
•™
);

4113 
∑gehóp
->
	`CacheSizeCœss
(
•™
->
°¨t
, 0);

4114 * 
ªsu…
 = 
ªöãΩªt_ˇ°
<*>(
•™
->
°¨t
 << 
kPageShi·
);

4115 
	`POISON_ALLOCATION
(
ªsu…
, 
•™
->
Àngth
 << 
kPageShi·
);

4116  
	`CheckedMÆlocResu…
(
ªsu…
);

4117 
	}
}

4119 #ifde‡
WTF_CHANGES


4120 
	gãm∂©e
 <
boﬁ
 
	g¸ashOnFaûuª
>

4122 
ALWAYS_INLINE
 * 
	$do_mÆloc
(
size_t
 
size
) {

4123 * 
ªt
 = 
NULL
;

4125 #ifde‡
WTF_CHANGES


4126 
	`ASSERT
(!
	`isF‹biddí
());

4130 
TCMÆloc_ThªadCache
* 
hóp
 = TCMÆloc_ThªadCache::
	`GëCache
();

4131 #i‚de‡
WTF_CHANGES


4132 i‡((
FLAGS_tcmÆloc_ßm∂e_∑ømëî
 > 0Ë&& 
hóp
->
	`Sam∂eAŒoˇti⁄
(
size
)) {

4133 
S∑n
* 
•™
 = 
	`DoSam∂edAŒoˇti⁄
(
size
);

4134 i‡(
•™
 !
NULL
) {

4135 
ªt
 = 
	`S∑nToMÆlocResu…
(
•™
);

4139 i‡(
size
 > 
kMaxSize
) {

4141 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

4142 
S∑n
* 
•™
 = 
∑gehóp
->
	`New
(
	`∑ges
(
size
));

4143 i‡(
•™
 !
NULL
) {

4144 
ªt
 = 
	`S∑nToMÆlocResu…
(
•™
);

4149 
ªt
 = 
	`CheckedMÆlocResu…
(
hóp
->
	`AŒoˇã
(
size
));

4151 i‡(!
ªt
) {

4152 #ifde‡
WTF_CHANGES


4153 i‡(
¸ashOnFaûuª
)

4154 
	`CRASH
();

4156 
î∫o
 = 
ENOMEM
;

4159  
ªt
;

4160 
	}
}

4162 
ALWAYS_INLINE
 
	$do_‰ì
(* 
±r
) {

4163 i‡(
±r
 =
NULL
) ;

4164 
	`ASSERT
(
∑gehóp
 !
NULL
);

4165 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

4166 c⁄° 
PageID
 
p
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
±r
Ë>> 
kPageShi·
;

4167 
S∑n
* 
•™
 = 
∑gehóp
->
	`GëDes¸ùt‹
(
p
);

4168 
	`RELEASE_ASSERT
(
•™
->
	`isVÆid
());

4169 
size_t
 
˛
 = 
•™
->
size˛ass
;

4171 i‡(
˛
) {

4172 
size_t
 
byãSizeF‹Cœss
 = 
	`ByãSizeF‹Cœss
(
˛
);

4173 #i‡!(
	`CPU
(
ARM_THUMB2
Ë&& !CPU(
APPLE_ARMV7S
))

4174 
	`RELEASE_ASSERT
(!((
ªöãΩªt_ˇ°
<*>(
±r
Ë-ÑeöãΩªt_ˇ°<*>(
•™
->
°¨t
 << 
kPageShi·
)Ë% 
byãSizeF‹Cœss
));

4176 
∑gehóp
->
	`CacheSizeCœss
(
p
, 
˛
);

4178 #i‚de‡
NO_TCMALLOC_SAMPLES


4179 
	`ASSERT
(!
∑gehóp
->
	`GëDes¸ùt‹
(
p
)->
ßm∂e
);

4181 
TCMÆloc_ThªadCache
* 
hóp
 = TCMÆloc_ThªadCache::
	`GëCacheIfPª£¡
();

4182 i‡(
hóp
 !
NULL
) {

4183 
hóp
->
	`DóŒoˇã
(
H¨díedSLL
::
	`¸óã
(
±r
), 
˛
);

4186 
	`POISON_DEALLOCATION
(
±r
, 
byãSizeF‹Cœss
);

4187 
	`SLL_SëNext
(
H¨díedSLL
::
	`¸óã
(
±r
), H¨díedSLL::
	`nuŒ
(), 
˚¡øl_ˇche
[
˛
].
	`íå›y
());

4188 
˚¡øl_ˇche
[
˛
].
	`In£πR™ge
(
H¨díedSLL
::
	`¸óã
(
±r
), HardenedSLL::create(ptr), 1);

4191 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

4192 
	`ASSERT
(
ªöãΩªt_ˇ°
<
uöçå_t
>(
±r
Ë% 
kPageSize
 == 0);

4193 
	`ASSERT
(
•™
 !
NULL
 && s∑n->
°¨t
 =
p
);

4194 #i‚de‡
NO_TCMALLOC_SAMPLES


4195 i‡(
•™
->
ßm∂e
) {

4196 
	`DLL_Remove
(
•™
);

4197 
°ackåa˚_Æloˇt‹
.
	`Dñëe
(
ªöãΩªt_ˇ°
<
SèckTø˚
*>(
•™
->
obje˘s
));

4198 
•™
->
obje˘s
 = 
NULL
;

4201 
	`RELEASE_ASSERT
(
ªöãΩªt_ˇ°
<*>(
•™
->
°¨t
 << 
kPageShi·
Ë=
±r
);

4202 
	`POISON_DEALLOCATION
(
±r
, 
•™
->
Àngth
 << 
kPageShi·
);

4203 
∑gehóp
->
	`Dñëe
(
•™
);

4205 
	}
}

4207 #i‚de‡
WTF_CHANGES


4215 * 
	$do_memÆign
(
size_t
 
Æign
, size_à
size
) {

4216 
	`ASSERT
((
Æign
 & (align - 1)) == 0);

4217 
	`ASSERT
(
Æign
 > 0);

4218 i‡(
∑gehóp
 =
NULL
Ë
TCMÆloc_ThªadCache
::
	`InôModuÀ
();

4219 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

4222 i‡(
size
 == 0) size = 1;

4224 i‡(
size
 <
kMaxSize
 && 
Æign
 < 
kPageSize
) {

4231 
size_t
 
˛
 = 
	`SizeCœss
(
size
);

4232 
˛
 < 
kNumCœs£s
 && ((
˛ass_to_size
[˛] & (
Æign
 - 1)) != 0)) {

4233 
˛
++;

4235 i‡(
˛
 < 
kNumCœs£s
) {

4236 
TCMÆloc_ThªadCache
* 
hóp
 = TCMÆloc_ThªadCache::
	`GëCache
();

4237  
	`CheckedMÆlocResu…
(
hóp
->
	`AŒoˇã
(
˛ass_to_size
[
˛
]));

4242 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

4244 i‡(
Æign
 <
kPageSize
) {

4248 
S∑n
* 
•™
 = 
∑gehóp
->
	`New
(
	`∑ges
(
size
));

4249  
•™
 =
NULL
 ? NULL : 
	`S∑nToMÆlocResu…
(span);

4253 c⁄° 
Lígth
 
Æloc
 = 
	`∑ges
(
size
 + 
Æign
);

4254 
S∑n
* 
•™
 = 
∑gehóp
->
	`New
(
Æloc
);

4255 i‡(
•™
 =
NULL
)  NULL;

4258 
Lígth
 
skù
 = 0;

4259 (((
•™
->
°¨t
+
skù
Ë<< 
kPageShi·
Ë& (
Æign
 - 1)) != 0) {

4260 
skù
++;

4262 
	`ASSERT_WITH_SECURITY_IMPLICATION
(
skù
 < 
Æloc
);

4263 i‡(
skù
 > 0) {

4264 
S∑n
* 
ª°
 = 
∑gehóp
->
	`S∂ô
(
•™
, 
skù
);

4265 
∑gehóp
->
	`Dñëe
(
•™
);

4266 
•™
 = 
ª°
;

4270 c⁄° 
Lígth
 
√eded
 = 
	`∑ges
(
size
);

4271 
	`ASSERT
(
•™
->
Àngth
 >
√eded
);

4272 i‡(
•™
->
Àngth
 > 
√eded
) {

4273 
S∑n
* 
åaûî
 = 
∑gehóp
->
	`S∂ô
(
•™
, 
√eded
);

4274 
∑gehóp
->
	`Dñëe
(
åaûî
);

4276  
	`S∑nToMÆlocResu…
(
•™
);

4277 
	}
}

4282 #i‚de‡
WTF_CHANGES


4283 
ölöe
 
	$do_mÆloc_°©s
() {

4284 
	`PrötSèts
(1);

4285 
	}
}

4287 
ölöe
 
	$do_mÆl›t
(, ) {

4289 
	}
}

4292 #ifde‡
HAVE_STRUCT_MALLINFO


4293 
ölöe
 
mÆlöfo
 
	$do_mÆlöfo
() {

4294 
TCMÆlocSèts
 
°©s
;

4295 
	`Exåa˘Sèts
(&
°©s
, 
NULL
);

4298 
mÆlöfo
 
öfo
;

4299 
	`mem£t
(&
öfo
, 0, (info));

4303 
öfo
.
¨ía
 = 
°©ic_ˇ°
<>(
°©s
.
sy°em_byãs
);

4304 
öfo
.
fsmblks
 = 
°©ic_ˇ°
<>(
°©s
.
thªad_byãs


4305 + 
°©s
.
˚¡øl_byãs


4306 + 
°©s
.
å™s„r_byãs
);

4307 
öfo
.
f‹dblks
 = 
°©ic_ˇ°
<>(
°©s
.
∑gehóp_byãs
);

4308 
öfo
.
u‹dblks
 = 
°©ic_ˇ°
<>(
°©s
.
sy°em_byãs


4309 - 
°©s
.
thªad_byãs


4310 - 
°©s
.
˚¡øl_byãs


4311 - 
°©s
.
å™s„r_byãs


4312 - 
°©s
.
∑gehóp_byãs
);

4314  
öfo
;

4315 
	}
}

4327 #i‚de‡
WTF_CHANGES


4330 
	#do_mÆloc
 
do_mÆloc
<
¸ashOnFaûuª
>

	)

4332 
ãm∂©e
 <
boﬁ
 
¸ashOnFaûuª
>

4333 
ALWAYS_INLINE
 * 
mÆloc
(
size_t
);

4335 * 
	$Á°MÆloc
(
size_t
 
size
)

4337 * 
ªsu…
 = 
mÆloc
<
åue
>(
size
);

4338 #i‡
	`ENABLE
(
ALLOCATION_LOGGING
)

4339 
	`d©aLogF
("Á°MÆlo¯Æloˇtög %lu byã†(Á°MÆloc): %p.\n", 
size
, 
ªsu…
);

4341  
ªsu…
;

4342 
	}
}

4344 
TryMÆlocRëu∫VÆue
 
	$åyFa°MÆloc
(
size_t
 
size
)

4346 
TryMÆlocRëu∫VÆue
 
ªsu…
 = 
mÆloc
<
Ál£
>(
size
);

4347 #i‡
	`ENABLE
(
ALLOCATION_LOGGING
)

4348 * 
poöãr
;

4349 ()
ªsu…
.
	`gëVÆue
(
poöãr
);

4350 
	`d©aLogF
("Á°MÆlo¯Æloˇtög %lu byã†—ryFa°MÆloc): %p.\n", 
size
, 
poöãr
);

4352  
ªsu…
;

4353 
	}
}

4355 
	gãm∂©e
 <
boﬁ
 
	g¸ashOnFaûuª
>

4356 
	gALWAYS_INLINE


4358 * 
	$mÆloc
(
size_t
 
size
) {

4359 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4360 i‡(
°d
::
numîic_limôs
<
size_t
>::
	`max
(Ë- 
I¡î«l
::
VÆid©i⁄Buf„rSize
 <
size
)

4362 * 
ªsu…
 = 
	`do_mÆloc
(
size
 + 
I¡î«l
::
VÆid©i⁄Buf„rSize
);

4363 i‡(!
ªsu…
)

4366 
I¡î«l
::
VÆid©i⁄Hódî
* 
hódî
 = 
°©ic_ˇ°
<I¡î«l::VÆid©i⁄Hódî*>(
ªsu…
);

4367 
hódî
->
m_size
 = 
size
;

4368 
hódî
->
m_ty≥
 = 
I¡î«l
::
AŒocTy≥MÆloc
;

4369 
hódî
->
m_¥efix
 = 
°©ic_ˇ°
<>(
I¡î«l
::
VÆid©i⁄Pªfix
);

4370 
ªsu…
 = 
hódî
 + 1;

4371 *
I¡î«l
::
	`Á°MÆlocVÆid©i⁄Suffix
(
ªsu…
ËI¡î«l::
VÆid©i⁄Suffix
;

4372 
	`Á°MÆlocVÆid©e
(
ªsu…
);

4374 * 
ªsu…
 = 
	`do_mÆloc
(
size
);

4377 
MÆlocHook
::
	`InvokeNewHook
(
ªsu…
, 
size
);

4378  
ªsu…
;

4379 
	}
}

4381 #i‚de‡
WTF_CHANGES


4384 
	$‰ì
(* 
±r
) {

4385 #i‡
	`ENABLE
(
ALLOCATION_LOGGING
)

4386 
	`d©aLogF
("Á°Fªê‰ìög %p.\n", 
±r
);

4389 
MÆlocHook
::
	`InvokeDñëeHook
(
±r
);

4391 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4392 i‡(!
±r
)

4395 
	`Á°MÆlocVÆid©e
(
±r
);

4396 
I¡î«l
::
VÆid©i⁄Hódî
* 
hódî
 = I¡î«l::
	`Á°MÆlocVÆid©i⁄Hódî
(
±r
);

4397 
	`mem£t
(
±r
, 0xCC, 
hódî
->
m_size
);

4398 
	`do_‰ì
(
hódî
);

4400 
	`do_‰ì
(
±r
);

4402 
	}
}

4404 #i‚de‡
WTF_CHANGES


4407 
ãm∂©e
 <
boﬁ
 
¸ashOnFaûuª
>

4408 
ALWAYS_INLINE
 * 
ˇŒoc
(
size_t
, size_t);

4410 * 
	$Á°CÆloc
(
size_t
 
n
, size_à
ñem_size
)

4412 * 
ªsu…
 = 
ˇŒoc
<
åue
>(
n
, 
ñem_size
);

4413 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4414 
	`Á°MÆlocVÆid©e
(
ªsu…
);

4416 #i‡
	`ENABLE
(
ALLOCATION_LOGGING
)

4417 
	`d©aLogF
("Á°MÆlo¯c⁄tiguou¶yáŒoˇtög %lu * %lu byã†(Á°CÆloc): %p.\n", 
n
, 
ñem_size
, 
ªsu…
);

4419  
ªsu…
;

4420 
	}
}

4422 
TryMÆlocRëu∫VÆue
 
	$åyFa°CÆloc
(
size_t
 
n
, size_à
ñem_size
)

4424 * 
ªsu…
 = 
ˇŒoc
<
Ál£
>(
n
, 
ñem_size
);

4425 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4426 
	`Á°MÆlocVÆid©e
(
ªsu…
);

4428 #i‡
	`ENABLE
(
ALLOCATION_LOGGING
)

4429 
	`d©aLogF
("Á°MÆlo¯c⁄tiguou¶yáŒoˇtög %lu * %lu byã†—ryFa°CÆloc): %p.\n", 
n
, 
ñem_size
, 
ªsu…
);

4431  
ªsu…
;

4432 
	}
}

4434 
	gãm∂©e
 <
boﬁ
 
	g¸ashOnFaûuª
>

4435 
	gALWAYS_INLINE


4437 * 
	$ˇŒoc
(
size_t
 
n
, size_à
ñem_size
) {

4438 
size_t
 
tŸÆByãs
 = 
n
 * 
ñem_size
;

4441 i‡(
n
 > 1 && 
ñem_size
 && (
tŸÆByãs
 /Élem_size) !=Ç)

4444 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4445 * 
ªsu…
 = 
mÆloc
<
¸ashOnFaûuª
>(
tŸÆByãs
);

4446 i‡(!
ªsu…
)

4449 
	`mem£t
(
ªsu…
, 0, 
tŸÆByãs
);

4450 
	`Á°MÆlocVÆid©e
(
ªsu…
);

4452 * 
ªsu…
 = 
	`do_mÆloc
(
tŸÆByãs
);

4453 i‡(
ªsu…
 !
NULL
) {

4454 
	`mem£t
(
ªsu…
, 0, 
tŸÆByãs
);

4458 
MÆlocHook
::
	`InvokeNewHook
(
ªsu…
, 
tŸÆByãs
);

4459  
ªsu…
;

4460 
	}
}

4463 #i‚de‡
WTF_CHANGES


4464 #i‚de‡
WTF_CHANGES


4467 
	$c‰ì
(* 
±r
) {

4468 #i‚de‡
WTF_CHANGES


4469 
MÆlocHook
::
	`InvokeDñëeHook
(
±r
);

4471 
	`do_‰ì
(
±r
);

4472 
	}
}

4475 #i‚de‡
WTF_CHANGES


4478 
ãm∂©e
 <
boﬁ
 
¸ashOnFaûuª
>

4479 
ALWAYS_INLINE
 * 
ªÆloc
(*, 
size_t
);

4481 * 
	$Á°RóŒoc
(* 
ﬁd_±r
, 
size_t
 
√w_size
)

4483 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4484 
	`Á°MÆlocVÆid©e
(
ﬁd_±r
);

4486 * 
ªsu…
 = 
ªÆloc
<
åue
>(
ﬁd_±r
, 
√w_size
);

4487 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4488 
	`Á°MÆlocVÆid©e
(
ªsu…
);

4490 #i‡
	`ENABLE
(
ALLOCATION_LOGGING
)

4491 
	`d©aLogF
("Á°MÆlo¯ªÆloˇtög %lu byã†(Á°RóŒoc): %∞-> %p.\n", 
√w_size
, 
ﬁd_±r
, 
ªsu…
);

4493  
ªsu…
;

4494 
	}
}

4496 
TryMÆlocRëu∫VÆue
 
	$åyFa°RóŒoc
(* 
ﬁd_±r
, 
size_t
 
√w_size
)

4498 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4499 
	`Á°MÆlocVÆid©e
(
ﬁd_±r
);

4501 * 
ªsu…
 = 
ªÆloc
<
Ál£
>(
ﬁd_±r
, 
√w_size
);

4502 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4503 
	`Á°MÆlocVÆid©e
(
ªsu…
);

4505 #i‡
	`ENABLE
(
ALLOCATION_LOGGING
)

4506 
	`d©aLogF
("Á°MÆlo¯ªÆloˇtög %lu byã†—ryFa°RóŒoc): %∞-> %p.\n", 
√w_size
, 
ﬁd_±r
, 
ªsu…
);

4508  
ªsu…
;

4509 
	}
}

4511 
	gãm∂©e
 <
boﬁ
 
	g¸ashOnFaûuª
>

4512 
	gALWAYS_INLINE


4514 * 
	$ªÆloc
(* 
ﬁd_±r
, 
size_t
 
√w_size
) {

4515 i‡(
ﬁd_±r
 =
NULL
) {

4516 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4517 * 
ªsu…
 = 
mÆloc
<
¸ashOnFaûuª
>(
√w_size
);

4519 * 
ªsu…
 = 
	`do_mÆloc
(
√w_size
);

4520 
MÆlocHook
::
	`InvokeNewHook
(
ªsu…
, 
√w_size
);

4522  
ªsu…
;

4524 i‡(
√w_size
 == 0) {

4525 
MÆlocHook
::
	`InvokeDñëeHook
(
ﬁd_±r
);

4526 
	`‰ì
(
ﬁd_±r
);

4527  
NULL
;

4530 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4531 i‡(
°d
::
numîic_limôs
<
size_t
>::
	`max
(Ë- 
I¡î«l
::
VÆid©i⁄Buf„rSize
 <
√w_size
)

4533 
I¡î«l
::
VÆid©i⁄Hódî
* 
hódî
 = I¡î«l::
	`Á°MÆlocVÆid©i⁄Hódî
(
ﬁd_±r
);

4534 
	`Á°MÆlocVÆid©e
(
ﬁd_±r
);

4535 
ﬁd_±r
 = 
hódî
;

4536 
hódî
->
m_size
 = 
√w_size
;

4537 
√w_size
 +
I¡î«l
::
VÆid©i⁄Buf„rSize
;

4540 
	`ASSERT
(
∑gehóp
 !
NULL
);

4541 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

4544 c⁄° 
PageID
 
p
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
ﬁd_±r
Ë>> 
kPageShi·
;

4545 
size_t
 
˛
 = 
∑gehóp
->
	`GëSizeCœssIfCached
(
p
);

4546 
S∑n
 *
•™
 = 
NULL
;

4547 
size_t
 
ﬁd_size
;

4548 i‡(
˛
 == 0) {

4549 
•™
 = 
∑gehóp
->
	`GëDes¸ùt‹
(
p
);

4550 
˛
 = 
•™
->
size˛ass
;

4551 
∑gehóp
->
	`CacheSizeCœss
(
p
, 
˛
);

4553 i‡(
˛
 != 0) {

4554 
ﬁd_size
 = 
	`ByãSizeF‹Cœss
(
˛
);

4556 
	`ASSERT
(
•™
 !
NULL
);

4557 
ﬁd_size
 = 
•™
->
Àngth
 << 
kPageShi·
;

4562 i‡((
√w_size
 > 
ﬁd_size
Ë|| (
	`AŒoˇti⁄Size
(new_size) < old_size)) {

4564 * 
√w_±r
 = 
	`do_mÆloc
(
√w_size
);

4565 i‡(
√w_±r
 =
NULL
) {

4566  
NULL
;

4568 
MÆlocHook
::
	`InvokeNewHook
(
√w_±r
, 
√w_size
);

4569 
	`mem˝y
(
√w_±r
, 
ﬁd_±r
, ((
ﬁd_size
 < 
√w_size
) ? old_size :Çew_size));

4570 
MÆlocHook
::
	`InvokeDñëeHook
(
ﬁd_±r
);

4574 
	`do_‰ì
(
ﬁd_±r
);

4575 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4576 
√w_±r
 = 
°©ic_ˇ°
<
I¡î«l
::
VÆid©i⁄Hódî
*>(new_ptr) + 1;

4577 *
I¡î«l
::
	`Á°MÆlocVÆid©i⁄Suffix
(
√w_±r
ËI¡î«l::
VÆid©i⁄Suffix
;

4579  
√w_±r
;

4581 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4582 
ﬁd_±r
 = 
°©ic_ˇ°
<
I¡î«l
::
VÆid©i⁄Hódî
*>(old_ptr) + 1;

4583 *
I¡î«l
::
	`Á°MÆlocVÆid©i⁄Suffix
(
ﬁd_±r
ËI¡î«l::
VÆid©i⁄Suffix
;

4585  
ﬁd_±r
;

4587 
	}
}

4589 #ifde‡
WTF_CHANGES


4590 #unde‡
do_mÆloc


4593 
SpöLock
 
	g£t_√w_h™dÀr_lock
 = 
SPINLOCK_INITIALIZER
;

4595 
ölöe
 * 
	$˝p_Æloc
(
size_t
 
size
, 
boﬁ
 
nŸhrow
) {

4597 * 
p
 = 
	`do_mÆloc
(
size
);

4598 #ifde‡
PREANSINEW


4599  
p
;

4601 i‡(
p
 =
NULL
) {

4606 
°d
::
√w_h™dÀr
 
nh
;

4608 
SpöLockHﬁdî
 
	`h
(&
£t_√w_h™dÀr_lock
);

4609 
nh
 = 
°d
::
	`£t_√w_h™dÀr
(0);

4610 (Ë
°d
::
	`£t_√w_h™dÀr
(
nh
);

4613 i‡(!
nh
) {

4614 i‡(
nŸhrow
)  0;

4615 
throw
 
°d
::
	`bad_Æloc
();

4620 
åy
 {

4621 (*
nh
)();

4622 } 
	`ˇtch
 (c⁄° 
°d
::
bad_Æloc
&) {

4623 i‡(!
nŸhrow
Ë
throw
;

4624  
p
;

4627  
p
;

4631 
	}
}

4633 "C" * 
	$memÆign
(
size_t
 
Æign
, size_à
size
Ë
__THROW
 {

4634 * 
ªsu…
 = 
	`do_memÆign
(
Æign
, 
size
);

4635 
MÆlocHook
::
	`InvokeNewHook
(
ªsu…
, 
size
);

4636  
ªsu…
;

4637 
	}
}

4639 "C" 
	$posix_memÆign
(** 
ªsu…_±r
, 
size_t
 
Æign
, size_à
size
)

4640 
__THROW
 {

4641 i‡(((
Æign
 % (*)) != 0) ||

4642 ((
Æign
 & (align - 1)) != 0) ||

4643 (
Æign
 == 0)) {

4644  
EINVAL
;

4647 * 
ªsu…
 = 
	`do_memÆign
(
Æign
, 
size
);

4648 
MÆlocHook
::
	`InvokeNewHook
(
ªsu…
, 
size
);

4649 i‡(
ªsu…
 =
NULL
) {

4650  
ENOMEM
;

4652 *
ªsu…_±r
 = 
ªsu…
;

4655 
	}
}

4657 
size_t
 
∑gesize
 = 0;

4659 "C" * 
	$vÆloc
(
size_t
 
size
Ë
__THROW
 {

4661 i‡(
∑gesize
 =0Ë∑gesizê
	`gë∑gesize
();

4662 * 
ªsu…
 = 
	`do_memÆign
(
∑gesize
, 
size
);

4663 
MÆlocHook
::
	`InvokeNewHook
(
ªsu…
, 
size
);

4664  
ªsu…
;

4665 
	}
}

4667 "C" * 
	$pvÆloc
(
size_t
 
size
Ë
__THROW
 {

4669 i‡(
∑gesize
 =0Ë∑gesizê
	`gë∑gesize
();

4670 
size
 = (sizê+ 
∑gesize
 - 1) & ~(pagesize - 1);

4671 * 
ªsu…
 = 
	`do_memÆign
(
∑gesize
, 
size
);

4672 
MÆlocHook
::
	`InvokeNewHook
(
ªsu…
, 
size
);

4673  
ªsu…
;

4674 
	}
}

4676 "C" 
	$mÆloc_°©s
() {

4677 
	`do_mÆloc_°©s
();

4678 
	}
}

4680 "C" 
	$mÆl›t
(
cmd
, 
vÆue
) {

4681  
	`do_mÆl›t
(
cmd
, 
vÆue
);

4682 
	}
}

4684 #ifde‡
HAVE_STRUCT_MALLINFO


4685 "C" 
mÆlöfo
 
	$mÆlöfo
() {

4686  
	`do_mÆlöfo
();

4687 
	}
}

4698 #i‡
	$deföed
(
__GLIBC__
)

4700 #i‡
	`COMPILER
(
GCC
Ë&& !
	`deföed
(
__MACH__
Ë&& deföed(
HAVE___ATTRIBUTE__
)

4703 
	#ALIAS
(
x
Ë
	`__©åibuã__
 ((
wók
, 
	`Æüs
 (x)))

	)

4704 * 
	`__libc_mÆloc
(
size_t
 
size
Ë
	`ALIAS
("malloc");

4705 
	`__libc_‰ì
(* 
±r
Ë
	`ALIAS
("free");

4706 * 
	`__libc_ªÆloc
(* 
±r
, 
size_t
 
size
Ë
	`ALIAS
("realloc");

4707 * 
	`__libc_ˇŒoc
(
size_t
 
n
, size_à
size
Ë
	`ALIAS
("calloc");

4708 
	`__libc_c‰ì
(* 
±r
Ë
	`ALIAS
("cfree");

4709 * 
	`__libc_memÆign
(
size_t
 
Æign
, size_à
s
Ë
	`ALIAS
("memalign");

4710 * 
	`__libc_vÆloc
(
size_t
 
size
Ë
	`ALIAS
("valloc");

4711 * 
	`__libc_pvÆloc
(
size_t
 
size
Ë
	`ALIAS
("pvalloc");

4712 
	`__posix_memÆign
(** 
r
, 
size_t
 
a
, size_à
s
Ë
	`ALIAS
("posix_memalign");

4713 #unde‡
ALIAS


4716 * 
	`__libc_mÆloc
(
size_t
 
size
Ë{  
	`mÆloc
(size); }

4717 
	`__libc_‰ì
(* 
±r
Ë{ 
	`‰ì
(ptr); }

4718 * 
	`__libc_ªÆloc
(* 
±r
, 
size_t
 
size
Ë{  
	`ªÆloc
(ptr, size); }

4719 * 
	`__libc_ˇŒoc
(
size_t
 
n
, size_à
size
Ë{  
	`ˇŒoc
(n, size); }

4720 
	`__libc_c‰ì
(* 
±r
Ë{ 
	`c‰ì
(ptr); }

4721 * 
	`__libc_memÆign
(
size_t
 
Æign
, size_à
s
Ë{  
	`memÆign
(align, s); }

4722 * 
	`__libc_vÆloc
(
size_t
 
size
Ë{  
	`vÆloc
(size); }

4723 * 
	`__libc_pvÆloc
(
size_t
 
size
Ë{  
	`pvÆloc
(size); }

4724 
	`__posix_memÆign
(** 
r
, 
size_t
 
a
, size_à
s
) {

4725  
	`posix_memÆign
(
r
, 
a
, 
s
);

4728 
	}
}

4738 *
	$MemÆignOvîride
(
size_t
 
Æign
, size_à
size
, c⁄° *
ˇŒî
)

4739 
__THROW
 {

4740 * 
ªsu…
 = 
	`do_memÆign
(
Æign
, 
size
);

4741 
MÆlocHook
::
	`InvokeNewHook
(
ªsu…
, 
size
);

4742  
ªsu…
;

4743 
	}
}

4744 *(*
__memÆign_hook
)(
size_t
, size_t, c⁄° *Ë
MemÆignOvîride
;

4748 #ifde‡
WTF_CHANGES


4749 
	$ªÀa£Fa°MÆlocFªeMem‹y
()

4752 i‡(
TCMÆloc_ThªadCache
* 
thªadCache
 = TCMÆloc_ThªadCache::
	`GëCacheIfPª£¡
())

4753 
thªadCache
->
	`CÀ™up
();

4755 
SpöLockHﬁdî
 
	`h
(&
∑gehóp_lock
);

4756 
∑gehóp
->
	`Rñó£FªePages
();

4757 
	}
}

4759 
Fa°MÆlocSèti°ics
 
	$Á°MÆlocSèti°ics
()

4761 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

4762 
Fa°MÆlocSèti°ics
 
°©i°ics
;

4764 
SpöLockHﬁdî
 
	`lockHﬁdî
(&
∑gehóp_lock
);

4765 
°©i°ics
.
ª£rvedVMByãs
 = 
°©ic_ˇ°
<
size_t
>(
∑gehóp
->
	`Sy°emByãs
());

4766 
°©i°ics
.
commôãdVMByãs
 = sèti°ics.
ª£rvedVMByãs
 - 
∑gehóp
->
	`Rëu∫edByãs
();

4768 
°©i°ics
.
‰ìLi°Byãs
 = 0;

4769 
˛
 = 0; c»< 
kNumCœs£s
; ++cl) {

4770 c⁄° 
Àngth
 = 
˚¡øl_ˇche
[
˛
].
	`Àngth
();

4771 c⁄° 
tc_Àngth
 = 
˚¡øl_ˇche
[
˛
].
	`tc_Àngth
();

4773 
°©i°ics
.
‰ìLi°Byãs
 +
	`ByãSizeF‹Cœss
(
˛
Ë* (
Àngth
 + 
tc_Àngth
);

4775 
TCMÆloc_ThªadCache
* 
thªadCache
 = 
thªad_hóps
;ÅhªadCachê;ÅhªadCachêthªadCache->
√xt_
)

4776 
°©i°ics
.
‰ìLi°Byãs
 +
thªadCache
->
	`Size
();

4778  
°©i°ics
;

4779 
	}
}

4781 
size_t
 
	$Á°MÆlocSize
(c⁄° * 
±r
)

4783 i‡(
∑gehóp
 =
NULL
Ë
TCMÆloc_ThªadCache
::
	`InôModuÀ
();

4784 
	`ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

4786 #i‡
	`ENABLE
(
WTF_MALLOC_VALIDATION
)

4787  
I¡î«l
::
	`Á°MÆlocVÆid©i⁄Hódî
(
c⁄°_ˇ°
<*>(
±r
))->
m_size
;

4789 c⁄° 
PageID
 
p
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
±r
Ë>> 
kPageShi·
;

4790 
S∑n
* 
•™
 = 
∑gehóp
->
	`GëDes¸ùt‹EnsuªSa„
(
p
);

4792 i‡(!
•™
 || s∑n->
‰ì
)

4795 
H¨díedSLL
 
‰ì
 = 
•™
->
obje˘s
; fªe; fªê
	`SLL_Next
(‰ì, 
HARDENING_ENTROPY
)) {

4796 i‡(
±r
 =
‰ì
.
	`vÆue
())

4800 i‡(
size_t
 
˛
 = 
•™
->
size˛ass
)

4801  
	`ByãSizeF‹Cœss
(
˛
);

4803  
•™
->
Àngth
 << 
kPageShi·
;

4805 
	}
}

4807 #i‡
	$OS
(
DARWIN
)

4808 ˛as†
	cRemŸeMem‹yRódî
 {

4809 
èsk_t
 
m_èsk
;

4810 
mem‹y_ªadî_t
* 
m_ªadî
;

4812 
public
:

4813 
	`RemŸeMem‹yRódî
(
èsk_t
 
èsk
, 
mem‹y_ªadî_t
* 
ªadî
)

4814 : 
	`m_èsk
(
èsk
)

4815 , 
	`m_ªadî
(
ªadî
)

4818 * 
	`›î©‹
()(
vm_addªss_t
 
addªss
, 
size_t
 
size
) const

4820 * 
ouçut
;

4821 
kîn_ªtu∫_t
 
îr
 = (*
m_ªadî
)(
m_èsk
, 
addªss
, 
size
, 
°©ic_ˇ°
<**>(&
ouçut
));

4822 i‡(
îr
)

4823 
ouçut
 = 0;

4824  
ouçut
;

4827 
ãm∂©e
 <
ty≥«me
 
T
>

4828 
T
* 
	`›î©‹
()(T* 
addªss
, 
size_t
 
size
 = (T)) const

4830  
°©ic_ˇ°
<
T
*>((*
this
)(
ªöãΩªt_ˇ°
<
vm_addªss_t
>(
addªss
), 
size
));

4833 
ãm∂©e
 <
ty≥«me
 
T
>

4834 
T
* 
	`√xtE¡ryInH¨díedLökedLi°
(T** 
ªmŸeAddªss
, 
uöçå_t
 
íå›y
) const

4836 
T
** 
loˇlAddªss
 = (*
this
)(
ªmŸeAddªss
);

4837 i‡(!
loˇlAddªss
)

4839 
T
* 
h¨díedNext
 = *
loˇlAddªss
;

4840 i‡(!
h¨díedNext
 || h¨díedNexà=(*)
íå›y
)

4842  
	`XOR_MASK_PTR_WITH_KEY
(
h¨díedNext
, 
ªmŸeAddªss
, 
íå›y
);

4844 
	}
};

4846 
	gãm∂©e
 <
ty≥«me
 
	gT
>

4847 
	gãm∂©e
 <
ty≥«me
 
	gRec‹dî
>

4848 
	gPageHópAŒoˇt‹
<
	gT
>::
	$ªc‹dAdmöi°øtiveRegi⁄s
(
Rec‹dî
& 
ªc‹dî
, c⁄° 
RemŸeMem‹yRódî
& 
ªadî
)

4850 
H¨díedSLL
 
admöAŒoˇti⁄
 = 
Æloˇãd_ªgi⁄s_
;ádmöAŒoˇti⁄;ádmöAŒoˇti⁄.
	`£tVÆue
(
ªadî
.
	`√xtE¡ryInH¨díedLökedLi°
(
ªöãΩªt_ˇ°
<**>◊dmöAŒoˇti⁄.
	`vÆue
()), 
íå›y_
)))

4851 
ªc‹dî
.
	`ªc‹dRegi⁄
(
ªöãΩªt_ˇ°
<
vm_addªss_t
>(
admöAŒoˇti⁄
.
	`vÆue
()), 
kAŒocIn¸emít
);

4852 
	}
}

4854 ˛as†
	cFªeObje˘Födî
 {

4855 c⁄° 
	gRemŸeMem‹yRódî
& 
	gm_ªadî
;

4856 
	gHashSë
<*> 
	gm_‰ìObje˘s
;

4858 
	gpublic
:

4859 
FªeObje˘Födî
(c⁄° 
RemŸeMem‹yRódî
& 
ªadî
Ë: 
m_ªadî
(reader) { }

4861 
visô
(* 
±r
Ë{ 
m_‰ìObje˘s
.
add
(ptr); }

4862 
boﬁ
 
isFªeObje˘
(* 
±r
Ëc⁄° {  
	gm_‰ìObje˘s
.
c⁄èös
(ptr); }

4863 
boﬁ
 
isFªeObje˘
(
vm_addªss_t
 
±r
Ëc⁄° {  isFªeObje˘(
ªöãΩªt_ˇ°
<*>(ptr)); }

4864 
size_t
 
‰ìObje˘Cou¡
(Ëc⁄° {  
	gm_‰ìObje˘s
.
size
(); }

4866 
födFªeObje˘s
(
TCMÆloc_ThªadCache
* 
thªadCache
)

4868 ; 
	gthªadCache
;ÅhªadCachê(
thªadCache
->
√xt_
 ? 
m_ªadî
(threadCache->next_) : 0))

4869 
thªadCache
->
íumî©eFªeObje˘s
(*
this
, 
m_ªadî
);

4872 
födFªeObje˘s
(
TCMÆloc_CíåÆ_FªeLi°Padded
* 
˚¡ølFªeLi°
, 
size_t
 
numSizes
, TCMÆloc_CíåÆ_FªeLi°Padded* 
ªmŸeCíåÆFªeLi°
)

4874 
	gi
 = 0; i < 
	gnumSizes
; i++)

4875 
	g˚¡ølFªeLi°
[
i
].
íumî©eFªeObje˘s
(*
this
, 
m_ªadî
, 
ªmŸeCíåÆFªeLi°
 + i);

4879 ˛as†
	cPageM≠FªeObje˘Födî
 {

4880 c⁄° 
	gRemŸeMem‹yRódî
& 
	gm_ªadî
;

4881 
	gFªeObje˘Födî
& 
	gm_‰ìObje˘Födî
;

4882 
uöçå_t
 
	gm_íå›y
;

4884 
	gpublic
:

4885 
PageM≠FªeObje˘Födî
(c⁄° 
RemŸeMem‹yRódî
& 
ªadî
, 
FªeObje˘Födî
& 
‰ìObje˘Födî
, 
uöçå_t
 
íå›y
)

4886 : 
m_ªadî
(
ªadî
)

4887 , 
m_‰ìObje˘Födî
(
‰ìObje˘Födî
)

4888 , 
m_íå›y
(
íå›y
)

4890 #i‡
ENABLE
(
TCMALLOC_HARDENING
)

4891 
ASSERT
(
m_íå›y
);

4895 
visô
(* 
±r
) const

4897 
ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

4898 i‡(!
	g±r
)

4901 
S∑n
* 
	g•™
 = 
m_ªadî
(
ªöãΩªt_ˇ°
<S∑n*>(
±r
));

4902 i‡(!
	g•™
)

4905 i‡(
	g•™
->
	g‰ì
) {

4906 * 
	g±r
 = 
ªöãΩªt_ˇ°
<*>(
•™
->
°¨t
 << 
kPageShi·
);

4907 
	gm_‰ìObje˘Födî
.
visô
(
±r
);

4908 } i‡(
	g•™
->
	gsize˛ass
) {

4910 
H¨díedSLL
 
	g√xtObje˘
 = 
•™
->
obje˘s
;ÇextObje˘;ÇextObje˘.
£tVÆue
(
m_ªadî
.
√xtE¡ryInH¨díedLökedLi°
(
ªöãΩªt_ˇ°
<**>(
√xtObje˘
.
vÆue
()), 
m_íå›y
)))

4911 
	gm_‰ìObje˘Födî
.
visô
(
√xtObje˘
.
vÆue
());

4913  
	g•™
->
	gÀngth
;

4917 ˛as†
	cPageM≠Mem‹yUßgeRec‹dî
 {

4918 
èsk_t
 
	gm_èsk
;

4919 * 
	gm_c⁄ãxt
;

4920 
	gm_ty≥Mask
;

4921 
vm_ønge_ªc‹dî_t
* 
	gm_ªc‹dî
;

4922 c⁄° 
	gRemŸeMem‹yRódî
& 
	gm_ªadî
;

4923 c⁄° 
	gFªeObje˘Födî
& 
	gm_‰ìObje˘Födî
;

4925 
	gHashSë
<*> 
	gm_£íPoöãrs
;

4926 
	gVe˘‹
<
	gS∑n
*> 
	gm_cﬂÀs˚dS∑ns
;

4928 
	gpublic
:

4929 
PageM≠Mem‹yUßgeRec‹dî
(
èsk_t
 
èsk
, * 
c⁄ãxt
, 
ty≥Mask
, 
vm_ønge_ªc‹dî_t
* 
ªc‹dî
, c⁄° 
RemŸeMem‹yRódî
& 
ªadî
, c⁄° 
FªeObje˘Födî
& 
‰ìObje˘Födî
)

4930 : 
m_èsk
(
èsk
)

4931 , 
m_c⁄ãxt
(
c⁄ãxt
)

4932 , 
m_ty≥Mask
(
ty≥Mask
)

4933 , 
m_ªc‹dî
(
ªc‹dî
)

4934 , 
m_ªadî
(
ªadî
)

4935 , 
m_‰ìObje˘Födî
(
‰ìObje˘Födî
)

4938 ~
PageM≠Mem‹yUßgeRec‹dî
()

4940 
ASSERT
(!
m_cﬂÀs˚dS∑ns
.
size
());

4943 
ªc‹dPídögRegi⁄s
()

4945 
ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

4947 
boﬁ
 
	gªc‹dRegi⁄sC⁄èöögPoöãrs
 = 
m_ty≥Mask
 & 
MALLOC_PTR_REGION_RANGE_TYPE
;

4948 
boﬁ
 
	gªc‹dAŒoˇti⁄s
 = 
m_ty≥Mask
 & 
MALLOC_PTR_IN_USE_RANGE_TYPE
;

4950 i‡(!
	gªc‹dRegi⁄sC⁄èöögPoöãrs
 && !
	gªc‹dAŒoˇti⁄s
) {

4951 
	gm_cﬂÀs˚dS∑ns
.
˛ór
();

4955 
	gVe˘‹
<
	gvm_ønge_t
, 256> 
	gpoöãrRegi⁄s
;

4956 
	gVe˘‹
<
	gvm_ønge_t
, 1024> 
	gÆloˇãdPoöãrs
;

4957 
size_t
 
	gi
 = 0; i < 
	gm_cﬂÀs˚dS∑ns
.
size
(); ++i) {

4958 
S∑n
 *
	gtheS∑n
 = 
m_cﬂÀs˚dS∑ns
[
i
];

4959 
vm_addªss_t
 
	g•™SèπAddªss
 = 
theS∑n
->
°¨t
 << 
kPageShi·
;

4960 
vm_size_t
 
	g•™SizeInByãs
 = 
theS∑n
->
Àngth
 * 
kPageSize
;

4962 i‡(
	gªc‹dRegi⁄sC⁄èöögPoöãrs
)

4963 
	gpoöãrRegi⁄s
.
≠≥nd
((
vm_ønge_t
){
•™SèπAddªss
, 
•™SizeInByãs
});

4965 i‡(
	gtheS∑n
->
	g‰ì
 || !
	gªc‹dAŒoˇti⁄s
)

4968 i‡(!
	gtheS∑n
->
	gsize˛ass
) {

4970 i‡(!
	gm_‰ìObje˘Födî
.
isFªeObje˘
(
•™SèπAddªss
))

4971 
	gÆloˇãdPoöãrs
.
≠≥nd
((
vm_ønge_t
){
•™SèπAddªss
, 
•™SizeInByãs
});

4973 c⁄° 
size_t
 
	gobje˘Size
 = 
ByãSizeF‹Cœss
(
theS∑n
->
size˛ass
);

4976 c⁄° 
vm_addªss_t
 
	gídOfS∑n
 = 
•™SèπAddªss
 + 
•™SizeInByãs
;

4977 
vm_addªss_t
 
	gobje˘
 = 
•™SèπAddªss
; obje˘ + 
	gobje˘Size
 <
ídOfS∑n
; obje˘ +
obje˘Size
) {

4978 i‡(!
m_‰ìObje˘Födî
.
isFªeObje˘
(
obje˘
))

4979 
ÆloˇãdPoöãrs
.
≠≥nd
((
vm_ønge_t
){
obje˘
, 
obje˘Size
});

4984 i‡(
	gªc‹dRegi⁄sC⁄èöögPoöãrs
)

4985 (*
	gm_ªc‹dî
)(
	gm_èsk
, 
	gm_c⁄ãxt
, 
	gMALLOC_PTR_REGION_RANGE_TYPE
, 
	gpoöãrRegi⁄s
.
d©a
(),ÖoöãrRegi⁄s.
size
());

4987 i‡(
	gªc‹dAŒoˇti⁄s
)

4988 (*
	gm_ªc‹dî
)(
	gm_èsk
, 
	gm_c⁄ãxt
, 
	gMALLOC_PTR_IN_USE_RANGE_TYPE
, 
	gÆloˇãdPoöãrs
.
d©a
(),áŒoˇãdPoöãrs.
size
());

4990 
	gm_cﬂÀs˚dS∑ns
.
˛ór
();

4993 
visô
(* 
±r
)

4995 
ASSERT
(
kPageShi·
 && 
kNumCœs£s
 && 
kPageSize
);

4996 i‡(!
	g±r
)

4999 
S∑n
* 
	g•™
 = 
m_ªadî
(
ªöãΩªt_ˇ°
<S∑n*>(
±r
));

5000 i‡(!
	g•™
 || !•™->
	g°¨t
)

5003 i‡(!
	gm_£íPoöãrs
.
add
(
±r
).
	gisNewE¡ry
)

5004  
	g•™
->
	gÀngth
;

5006 i‡(!
	gm_cﬂÀs˚dS∑ns
.
size
()) {

5007 
	gm_cﬂÀs˚dS∑ns
.
≠≥nd
(
•™
);

5008  
	g•™
->
	gÀngth
;

5011 
S∑n
* 
	g¥eviousS∑n
 = 
m_cﬂÀs˚dS∑ns
[m_cﬂÀs˚dS∑ns.
size
() - 1];

5012 
vm_addªss_t
 
	g¥eviousS∑nSèπAddªss
 = 
¥eviousS∑n
->
°¨t
 << 
kPageShi·
;

5013 
vm_size_t
 
	g¥eviousS∑nSizeInByãs
 = 
¥eviousS∑n
->
Àngth
 * 
kPageSize
;

5016 
vm_addªss_t
 
	g•™SèπAddªss
 = 
•™
->
°¨t
 << 
kPageShi·
;

5017 i‡(
	g•™SèπAddªss
 =
¥eviousS∑nSèπAddªss
 + 
¥eviousS∑nSizeInByãs
) {

5018 
m_cﬂÀs˚dS∑ns
.
≠≥nd
(
•™
);

5019  
	g•™
->
	gÀngth
;

5023 
ªc‹dPídögRegi⁄s
();

5024 
	gm_cﬂÀs˚dS∑ns
.
≠≥nd
(
•™
);

5026  
	g•™
->
	gÀngth
;

5030 ˛as†
	cAdmöRegi⁄Rec‹dî
 {

5031 
èsk_t
 
	gm_èsk
;

5032 * 
	gm_c⁄ãxt
;

5033 
	gm_ty≥Mask
;

5034 
vm_ønge_ªc‹dî_t
* 
	gm_ªc‹dî
;

5036 
	gVe˘‹
<
	gvm_ønge_t
, 1024> 
	gm_≥ndögRegi⁄s
;

5038 
	gpublic
:

5039 
AdmöRegi⁄Rec‹dî
(
èsk_t
 
èsk
, * 
c⁄ãxt
, 
ty≥Mask
, 
vm_ønge_ªc‹dî_t
* 
ªc‹dî
)

5040 : 
m_èsk
(
èsk
)

5041 , 
m_c⁄ãxt
(
c⁄ãxt
)

5042 , 
m_ty≥Mask
(
ty≥Mask
)

5043 , 
m_ªc‹dî
(
ªc‹dî
)

5046 
ªc‹dRegi⁄
(
vm_addªss_t
 
±r
, 
size_t
 
size
)

5048 i‡(
	gm_ty≥Mask
 & 
	gMALLOC_ADMIN_REGION_RANGE_TYPE
)

5049 
	gm_≥ndögRegi⁄s
.
≠≥nd
((
vm_ønge_t
){ 
±r
, 
size
 });

5052 
visô
(*
±r
, 
size_t
 
size
)

5054 
ªc‹dRegi⁄
(
ªöãΩªt_ˇ°
<
vm_addªss_t
>(
±r
), 
size
);

5057 
ªc‹dPídögRegi⁄s
()

5059 i‡(
	gm_≥ndögRegi⁄s
.
size
()) {

5060 (*
	gm_ªc‹dî
)(
	gm_èsk
, 
	gm_c⁄ãxt
, 
	gMALLOC_ADMIN_REGION_RANGE_TYPE
, 
	gm_≥ndögRegi⁄s
.
d©a
(), m_≥ndögRegi⁄s.
size
());

5061 
	gm_≥ndögRegi⁄s
.
˛ór
();

5065 ~
AdmöRegi⁄Rec‹dî
()

5067 
ASSERT
(!
m_≥ndögRegi⁄s
.
size
());

5071 
kîn_ªtu∫_t
 
	gFa°MÆlocZ⁄e
::
	$íumî©e
(
èsk_t
 
èsk
, * 
c⁄ãxt
, 
ty≥Mask
, 
vm_addªss_t
 
z⁄eAddªss
, 
mem‹y_ªadî_t
 
ªadî
, 
vm_ønge_ªc‹dî_t
 
ªc‹dî
)

5073 
RemŸeMem‹yRódî
 
	`mem‹yRódî
(
èsk
, 
ªadî
);

5075 
	`InôSizeCœs£s
();

5077 
Fa°MÆlocZ⁄e
* 
mz⁄e
 = 
	`mem‹yRódî
(
ªöãΩªt_ˇ°
<Fa°MÆlocZ⁄e*>(
z⁄eAddªss
));

5078 
TCMÆloc_PageHóp
* 
∑geHóp
 = 
	`mem‹yRódî
(
mz⁄e
->
m_∑geHóp
);

5079 
TCMÆloc_ThªadCache
** 
thªadHópsPoöãr
 = 
	`mem‹yRódî
(
mz⁄e
->
m_thªadHóps
);

5080 
TCMÆloc_ThªadCache
* 
thªadHóps
 = 
	`mem‹yRódî
(*
thªadHópsPoöãr
);

5082 
TCMÆloc_CíåÆ_FªeLi°Padded
* 
˚¡ølCaches
 = 
	`mem‹yRódî
(
mz⁄e
->
m_˚¡ølCaches
, (TCMÆloc_CíåÆ_FªeLi°PaddedË* 
kNumCœs£s
);

5084 
FªeObje˘Födî
 
	`födî
(
mem‹yRódî
);

5085 
födî
.
	`födFªeObje˘s
(
thªadHóps
);

5086 
födî
.
	`födFªeObje˘s
(
˚¡ølCaches
, 
kNumCœs£s
, 
mz⁄e
->
m_˚¡ølCaches
);

5088 
TCMÆloc_PageHóp
::
PageM≠
* 
∑geM≠
 = &
∑geHóp
->
∑gem≠_
;

5089 
PageM≠FªeObje˘Födî
 
	`∑geM≠Födî
(
mem‹yRódî
, 
födî
, 
∑geHóp
->
íå›y_
);

5090 
∑geM≠
->
	`visôVÆues
(
∑geM≠Födî
, 
mem‹yRódî
);

5092 
PageM≠Mem‹yUßgeRec‹dî
 
	`ußgeRec‹dî
(
èsk
, 
c⁄ãxt
, 
ty≥Mask
, 
ªc‹dî
, 
mem‹yRódî
, 
födî
);

5093 
∑geM≠
->
	`visôVÆues
(
ußgeRec‹dî
, 
mem‹yRódî
);

5094 
ußgeRec‹dî
.
	`ªc‹dPídögRegi⁄s
();

5096 
AdmöRegi⁄Rec‹dî
 
	`admöRegi⁄Rec‹dî
(
èsk
, 
c⁄ãxt
, 
ty≥Mask
, 
ªc‹dî
);

5097 
∑geM≠
->
	`visôAŒoˇti⁄s
(
admöRegi⁄Rec‹dî
, 
mem‹yRódî
);

5099 
PageHópAŒoˇt‹
<
S∑n
>* 
•™AŒoˇt‹
 = 
	`mem‹yRódî
(
mz⁄e
->
m_•™AŒoˇt‹
);

5100 
PageHópAŒoˇt‹
<
TCMÆloc_ThªadCache
>* 
∑geHópAŒoˇt‹
 = 
	`mem‹yRódî
(
mz⁄e
->
m_∑geHópAŒoˇt‹
);

5102 
•™AŒoˇt‹
->
	`ªc‹dAdmöi°øtiveRegi⁄s
(
admöRegi⁄Rec‹dî
, 
mem‹yRódî
);

5103 
∑geHópAŒoˇt‹
->
	`ªc‹dAdmöi°øtiveRegi⁄s
(
admöRegi⁄Rec‹dî
, 
mem‹yRódî
);

5105 
admöRegi⁄Rec‹dî
.
	`ªc‹dPídögRegi⁄s
();

5108 
	}
}

5110 
size_t
 
	gFa°MÆlocZ⁄e
::
	$size
(
mÆloc_z⁄e_t
*, const *)

5113 
	}
}

5115 * 
	gFa°MÆlocZ⁄e
::
	$z⁄eMÆloc
(
mÆloc_z⁄e_t
*, 
size_t
)

5118 
	}
}

5120 * 
	gFa°MÆlocZ⁄e
::
	$z⁄eCÆloc
(
mÆloc_z⁄e_t
*, 
size_t
, size_t)

5123 
	}
}

5125 
	gFa°MÆlocZ⁄e
::
	$z⁄eFªe
(
mÆloc_z⁄e_t
*, * 
±r
)

5130 
	`mÆloc_¥ötf
("***Éº‹ f‹ obje˘ %p:Öoöã∏beög fªed wa†nŸáŒoˇãd\n", 
±r
);

5131 
	}
}

5133 * 
	gFa°MÆlocZ⁄e
::
	$z⁄eRóŒoc
(
mÆloc_z⁄e_t
*, *, 
size_t
)

5136 
	}
}

5139 #unde‡
mÆloc


5140 #unde‡
‰ì


5141 #unde‡
ªÆloc


5142 #unde‡
ˇŒoc


5145 
mÆloc_öåo•e˘i⁄_t
 
jsc‹e_Á°mÆloc_öåo•e˘i⁄
 = { &
Fa°MÆlocZ⁄e
::
íumî©e
, &Fa°MÆlocZ⁄e::
goodSize
, &Fa°MÆlocZ⁄e::
check
, &Fa°MÆlocZ⁄e::
¥öt
,

5146 &
Fa°MÆlocZ⁄e
::
log
, &Fa°MÆlocZ⁄e::
f‹˚Lock
, &Fa°MÆlocZ⁄e::
f‹˚U∆ock
, &Fa°MÆlocZ⁄e::
°©i°ics


5153 
Fa°MÆlocZ⁄e
::Fa°MÆlocZ⁄e(
TCMÆloc_PageHóp
* 
∑geHóp
, 
TCMÆloc_ThªadCache
** 
thªadHóps
, 
TCMÆloc_CíåÆ_FªeLi°Padded
* 
˚¡ølCaches
, 
PageHópAŒoˇt‹
<
S∑n
>* 
•™AŒoˇt‹
, PageHópAŒoˇt‹<TCMÆloc_ThªadCache>* 
∑geHópAŒoˇt‹
)

5154 : 
m_∑geHóp
(
∑geHóp
)

5155 , 
m_thªadHóps
(
thªadHóps
)

5156 , 
m_˚¡ølCaches
(
˚¡ølCaches
)

5157 , 
m_•™AŒoˇt‹
(
•™AŒoˇt‹
)

5158 , 
	$m_∑geHópAŒoˇt‹
(
∑geHópAŒoˇt‹
)

5160 
	`mem£t
(&
m_z⁄e
, 0, (m_zone));

5161 
m_z⁄e
.
vîsi⁄
 = 4;

5162 
m_z⁄e
.
z⁄e_«me
 = "JavaScriptCore FastMalloc";

5163 
m_z⁄e
.
size
 = &
Fa°MÆlocZ⁄e
::size;

5164 
m_z⁄e
.
mÆloc
 = &
Fa°MÆlocZ⁄e
::
z⁄eMÆloc
;

5165 
m_z⁄e
.
ˇŒoc
 = &
Fa°MÆlocZ⁄e
::
z⁄eCÆloc
;

5166 
m_z⁄e
.
ªÆloc
 = &
Fa°MÆlocZ⁄e
::
z⁄eRóŒoc
;

5167 
m_z⁄e
.
‰ì
 = &
Fa°MÆlocZ⁄e
::
z⁄eFªe
;

5168 
m_z⁄e
.
vÆloc
 = &
Fa°MÆlocZ⁄e
::
z⁄eVÆloc
;

5169 
m_z⁄e
.
de°roy
 = &
Fa°MÆlocZ⁄e
::
z⁄eDe°roy
;

5170 
m_z⁄e
.
öåo•e˘
 = &
jsc‹e_Á°mÆloc_öåo•e˘i⁄
;

5171 
	`mÆloc_z⁄e_ªgi°î
(&
m_z⁄e
);

5172 
	}
}

5175 
Fa°MÆlocZ⁄e
::
	$öô
()

5177 
Fa°MÆlocZ⁄e
 
	`z⁄e
(
∑gehóp
, &
thªad_hóps
, 
°©ic_ˇ°
<
TCMÆloc_CíåÆ_FªeLi°Padded
*>(
˚¡øl_ˇche
), &
•™_Æloˇt‹
, &
thªadhóp_Æloˇt‹
);

5178 
	}
}

	@FastMalloc.h

21 #i‚de‡
WTF_Fa°MÆloc_h


22 
	#WTF_Fa°MÆloc_h


	)

24 
	~<√w
>

25 
	~<°dlib.h
>

26 
	~<wtf/PossiblyNuŒ.h
>

27 
	~<wtf/StdLibExåas.h
>

29 
«me•a˚
 
	gWTF
 {

32 
WTF_EXPORT_PRIVATE
 * 
Á°MÆloc
(
size_t
);

33 
WTF_EXPORT_PRIVATE
 * 
Á°Zî€dMÆloc
(
size_t
);

34 
WTF_EXPORT_PRIVATE
 * 
Á°CÆloc
(
size_t
 
numEÀmíts
, size_à
ñemítSize
);

35 
WTF_EXPORT_PRIVATE
 * 
Á°RóŒoc
(*, 
size_t
);

36 
WTF_EXPORT_PRIVATE
 * 
Á°SåDup
(const *);

37 
WTF_EXPORT_PRIVATE
 
size_t
 
Á°MÆlocSize
(const *);

38 
WTF_EXPORT_PRIVATE
 
size_t
 
Á°MÆlocGoodSize
(size_t);

40 
	sTryMÆlocRëu∫VÆue
 {

41 
TryMÆlocRëu∫VÆue
(* 
d©a
)

42 : 
m_d©a
(
d©a
)

45 
TryMÆlocRëu∫VÆue
(c⁄° TryMÆlocRëu∫VÆue& 
sour˚
)

46 : 
m_d©a
(
sour˚
.m_data)

48 
sour˚
.
m_d©a
 = 0;

50 ~
TryMÆlocRëu∫VÆue
(Ë{ 
ASSERT
(!
m_d©a
); }

51 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
boﬁ
 
gëVÆue
(
T
& 
d©a
Ë
	gWARN_UNUSED_RETURN
;

52 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
›î©‹
 
	gPossiblyNuŒ
<T>()

54 
T
 
	gvÆue
;

55 
gëVÆue
(
vÆue
);

56  
	gPossiblyNuŒ
<
	gT
>(
	gvÆue
);

58 
	g¥iv©e
:

59 
muèbÀ
 * 
m_d©a
;

62 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
boﬁ
 
	gTryMÆlocRëu∫VÆue
::
gëVÆue
(
T
& 
d©a
)

64 
	uu
 { * 
d©a
; 
T
 
	gèrgë
; } 
	gªs
;

65 
	gªs
.
	gd©a
 = 
m_d©a
;

66 
	gd©a
 = 
ªs
.
èrgë
;

67 
boﬁ
 
	gªtu∫VÆue
 = !!
m_d©a
;

68 
	gm_d©a
 = 0;

69  
	gªtu∫VÆue
;

72 
WTF_EXPORT_PRIVATE
 
TryMÆlocRëu∫VÆue
 
åyFa°MÆloc
(
size_t
 
n
);

73 
TryMÆlocRëu∫VÆue
 
åyFa°Zî€dMÆloc
(
size_t
 
n
);

74 
WTF_EXPORT_PRIVATE
 
TryMÆlocRëu∫VÆue
 
åyFa°CÆloc
(
size_t
 
n_ñemíts
, size_à
ñemít_size
);

75 
WTF_EXPORT_PRIVATE
 
TryMÆlocRëu∫VÆue
 
åyFa°RóŒoc
(* 
p
, 
size_t
 
n
);

77 
WTF_EXPORT_PRIVATE
 
Á°Fªe
(*);

79 #i‚de‡
NDEBUG


80 
WTF_EXPORT_PRIVATE
 
Á°MÆlocF‹bid
();

81 
WTF_EXPORT_PRIVATE
 
Á°MÆlocAŒow
();

84 
WTF_EXPORT_PRIVATE
 
ªÀa£Fa°MÆlocFªeMem‹y
();

86 
	sFa°MÆlocSèti°ics
 {

87 
size_t
 
	gª£rvedVMByãs
;

88 
size_t
 
	gcommôãdVMByãs
;

89 
size_t
 
	g‰ìLi°Byãs
;

91 
WTF_EXPORT_PRIVATE
 
Fa°MÆlocSèti°ics
 
Á°MÆlocSèti°ics
();

95 
	tAŒocAlignmítI¡egî
;

97 
«me•a˚
 
	gI¡î«l
 {

98 
	eAŒocTy≥
 {

99 
	gAŒocTy≥MÆloc
 = 0x375d6750,

100 
	gAŒocTy≥CœssNew
,

101 
	gAŒocTy≥CœssNewAºay
,

102 
	gAŒocTy≥New
,

103 
	gAŒocTy≥NewAºay


107 
	gVÆid©i⁄Pªfix
 = 0xf00df00d,

108 
	gVÆid©i⁄Suffix
 = 0x0badf00d

111 
	tVÆid©i⁄Tag
;

113 
	sVÆid©i⁄Hódî
 {

114 
AŒocTy≥
 
	gm_ty≥
;

115 
	gm_size
;

116 
VÆid©i⁄Tag
 
	gm_¥efix
;

117 
	gm_Æignmít
;

120 c⁄° 
	gVÆid©i⁄Buf„rSize
 = (
VÆid©i⁄Hódî
Ë+ (
VÆid©i⁄Tag
);

123 #i‡
ENABLE
(
WTF_MALLOC_VALIDATION
)

137 
«me•a˚
 
	gI¡î«l
 {

140 
Á°MÆlocM©chFaûed
(* 
p
);

142 
ölöe
 
VÆid©i⁄Hódî
* 
Á°MÆlocVÆid©i⁄Hódî
(* 
p
)

144  
	gªöãΩªt_ˇ°
<
	gVÆid©i⁄Hódî
*>(
	g°©ic_ˇ°
<*>(
	gp
) - (ValidationHeader));

147 
ölöe
 
VÆid©i⁄Tag
* 
Á°MÆlocVÆid©i⁄Suffix
(* 
p
)

149 
VÆid©i⁄Hódî
* 
	ghódî
 = 
Á°MÆlocVÆid©i⁄Hódî
(
p
);

150 i‡(
	ghódî
->
	gm_¥efix
 !
°©ic_ˇ°
<>(
VÆid©i⁄Pªfix
))

151 
Á°MÆlocM©chFaûed
(
p
);

153  
	gªöãΩªt_ˇ°
<
	gVÆid©i⁄Tag
*>(
	g°©ic_ˇ°
<*>(
	gp
Ë+ 
	ghódî
->
	gm_size
);

157 
ölöe
 
AŒocTy≥
 
Á°MÆlocM©chVÆid©i⁄Ty≥
(* 
p
)

159  
Á°MÆlocVÆid©i⁄Hódî
(
p
)->
	gm_ty≥
;

163 
ölöe
 
£tFa°MÆlocM©chVÆid©i⁄Ty≥
(* 
p
, 
AŒocTy≥
 
ÆlocTy≥
)

165 
Á°MÆlocVÆid©i⁄Hódî
(
p
)->
	gm_ty≥
 = 
ÆlocTy≥
;

171 
ölöe
 
Á°MÆlocM©chVÆid©eMÆloc
(* 
p
, 
I¡î«l
::
AŒocTy≥
 
ÆlocTy≥
)

173 i‡(!
p
)

176 
	gI¡î«l
::
£tFa°MÆlocM©chVÆid©i⁄Ty≥
(
p
, 
ÆlocTy≥
);

180 
ölöe
 
Á°MÆlocM©chVÆid©eFªe
(* 
p
, 
I¡î«l
::
AŒocTy≥
)

182 i‡(!
p
)

185 
	gI¡î«l
::
VÆid©i⁄Hódî
* 
hódî
 = 
I¡î«l
::
Á°MÆlocVÆid©i⁄Hódî
(
p
);

186 i‡(
	ghódî
->
	gm_¥efix
 !
°©ic_ˇ°
<>(
I¡î«l
::
VÆid©i⁄Pªfix
))

187 
I¡î«l
::
Á°MÆlocM©chFaûed
(
p
);

189 i‡(*
	gI¡î«l
::
Á°MÆlocVÆid©i⁄Suffix
(
p
Ë!
I¡î«l
::
VÆid©i⁄Suffix
)

190 
I¡î«l
::
Á°MÆlocM©chFaûed
(
p
);

192 
	gI¡î«l
::
£tFa°MÆlocM©chVÆid©i⁄Ty≥
(
p
, 
I¡î«l
::
AŒocTy≥MÆloc
);

195 
ölöe
 
Á°MÆlocVÆid©e
(* 
p
)

197 i‡(!
	gp
)

200 
	gI¡î«l
::
VÆid©i⁄Hódî
* 
hódî
 = 
I¡î«l
::
Á°MÆlocVÆid©i⁄Hódî
(
p
);

201 i‡(
	ghódî
->
	gm_¥efix
 !
°©ic_ˇ°
<>(
I¡î«l
::
VÆid©i⁄Pªfix
))

202 
I¡î«l
::
Á°MÆlocM©chFaûed
(
p
);

204 i‡(*
	gI¡î«l
::
Á°MÆlocVÆid©i⁄Suffix
(
p
Ë!
I¡î«l
::
VÆid©i⁄Suffix
)

205 
I¡î«l
::
Á°MÆlocM©chFaûed
(
p
);

210 
ölöe
 
Á°MÆlocM©chVÆid©eMÆloc
(*, 
I¡î«l
::
AŒocTy≥
)

214 
ölöe
 
Á°MÆlocM©chVÆid©eFªe
(*, 
I¡î«l
::
AŒocTy≥
)

222 
usög
 
WTF
::
Á°CÆloc
;

223 
usög
 
	gWTF
::
Á°Fªe
;

224 
usög
 
	gWTF
::
Á°MÆloc
;

225 
usög
 
	gWTF
::
Á°MÆlocGoodSize
;

226 
usög
 
	gWTF
::
Á°MÆlocSize
;

227 
usög
 
	gWTF
::
Á°RóŒoc
;

228 
usög
 
	gWTF
::
Á°SåDup
;

229 
usög
 
	gWTF
::
Á°Zî€dMÆloc
;

230 
usög
 
	gWTF
::
åyFa°CÆloc
;

231 
usög
 
	gWTF
::
åyFa°MÆloc
;

232 
usög
 
	gWTF
::
åyFa°RóŒoc
;

233 
usög
 
	gWTF
::
åyFa°Zî€dMÆloc
;

235 #i‚de‡
NDEBUG


236 
usög
 
	gWTF
::
Á°MÆlocF‹bid
;

237 
usög
 
	gWTF
::
Á°MÆlocAŒow
;

240 #i‡
COMPILER
(
GCC
Ë&& 
OS
(
DARWIN
)

241 
	#WTF_PRIVATE_INLINE
 
__¥iv©e_exã∫__
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

242 #ñi‡
COMPILER
(
GCC
)

243 
	#WTF_PRIVATE_INLINE
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

244 #ñi‡
COMPILER
(
MSVC
)

245 
	#WTF_PRIVATE_INLINE
 
__f‹˚ölöe


	)

247 
	#WTF_PRIVATE_INLINE
 
ölöe


	)

250 
	#WTF_MAKE_FAST_ALLOCATED
 \

251 
public
: \

252 * 
›î©‹
 
	`√w
(
size_t
, * 
p
) { Ö; } \

253 * 
›î©‹
 
√w
[](
size_t
, * 
p
) { Ö; } \

255 * 
›î©‹
 
	`√w
(
size_t
 
size
) \

257 * 
p
 = ::
WTF
::
	`Á°MÆloc
(
size
); \

258 ::
WTF
::
	`Á°MÆlocM©chVÆid©eMÆloc
(
p
, ::WTF::
I¡î«l
::
AŒocTy≥CœssNew
); \

259  
p
; \

262 
›î©‹
 
	`dñëe
(* 
p
) \

264 ::
WTF
::
	`Á°MÆlocM©chVÆid©eFªe
(
p
, ::WTF::
I¡î«l
::
AŒocTy≥CœssNew
); \

265 ::
WTF
::
	`Á°Fªe
(
p
); \

268 * 
›î©‹
 
√w
[](
size_t
 
size
) \

270 * 
p
 = ::
WTF
::
	`Á°MÆloc
(
size
); \

271 ::
WTF
::
	`Á°MÆlocM©chVÆid©eMÆloc
(
p
, ::WTF::
I¡î«l
::
AŒocTy≥CœssNewAºay
); \

272  
p
; \

275 
›î©‹
 
dñëe
[](* 
p
) \

277 ::
WTF
::
	`Á°MÆlocM©chVÆid©eFªe
(
p
, ::WTF::
I¡î«l
::
AŒocTy≥CœssNewAºay
); \

278 ::
WTF
::
	`Á°Fªe
(
p
); \

280 * 
›î©‹
 
	`√w
(
size_t
, 
NŸNuŒTag
, * 
loˇti⁄
) \

282 
	`ASSERT
(
loˇti⁄
); \

283  
loˇti⁄
; \

285 
¥iv©e
: \

286 
	t__thisIsHîeToF‹˚ASemicﬁ⁄A·îThisMa¸o


	)

	@FeatureDefines.h

29 #i‚de‡
WTF_FótuªDeföes_h


30 
	#WTF_FótuªDeföes_h


	)

55 #i‡
PLATFORM
(
IOS
)

57 #i‡!
deföed
(
ENABLE_ASYNC_SCROLLING
)

58 
	#ENABLE_ASYNC_SCROLLING
 1

	)

61 #i‡!
deföed
(
ENABLE_CONTEXT_MENUS
)

62 
	#ENABLE_CONTEXT_MENUS
 0

	)

65 #i‡!
deföed
(
ENABLE_CSS_IMAGE_SET
)

66 
	#ENABLE_CSS_IMAGE_SET
 1

	)

69 #i‡!
deföed
(
ENABLE_CURSOR_SUPPORT
)

70 
	#ENABLE_CURSOR_SUPPORT
 0

	)

73 #i‡!
deföed
(
ENABLE_DRAG_SUPPORT
)

74 
	#ENABLE_DRAG_SUPPORT
 0

	)

77 #i‡!
deföed
(
ENABLE_GEOLOCATION
)

78 
	#ENABLE_GEOLOCATION
 1

	)

81 #i‡!
deföed
(
ENABLE_ICONDATABASE
)

82 
	#ENABLE_ICONDATABASE
 0

	)

85 #i‡!
deföed
(
ENABLE_LETTERPRESS
)

86 
	#ENABLE_LETTERPRESS
 1

	)

89 #i‡!
deföed
(
ENABLE_IOS_AUTOCORRECT_AND_AUTOCAPITALIZE
)

90 
	#ENABLE_IOS_AUTOCORRECT_AND_AUTOCAPITALIZE
 1

	)

93 #i‡!
deföed
(
ENABLE_IOS_GESTURE_EVENTS
Ë&& 
USE
(
APPLE_INTERNAL_SDK
)

94 
	#ENABLE_IOS_GESTURE_EVENTS
 1

	)

97 #i‡!
deföed
(
ENABLE_IOS_TEXT_AUTOSIZING
)

98 
	#ENABLE_IOS_TEXT_AUTOSIZING
 1

	)

101 #i‡!
deföed
(
ENABLE_IOS_TOUCH_EVENTS
Ë&& 
USE
(
APPLE_INTERNAL_SDK
)

102 
	#ENABLE_IOS_TOUCH_EVENTS
 1

	)

105 #i‡!
deföed
(
ENABLE_METER_ELEMENT
)

106 
	#ENABLE_METER_ELEMENT
 0

	)

109 #i‡!
deföed
(
ENABLE_NETSCAPE_PLUGIN_API
)

110 
	#ENABLE_NETSCAPE_PLUGIN_API
 0

	)

113 #i‡!
deföed
(
ENABLE_ORIENTATION_EVENTS
)

114 
	#ENABLE_ORIENTATION_EVENTS
 1

	)

117 #i‡!
deföed
(
ENABLE_POINTER_LOCK
)

118 
	#ENABLE_POINTER_LOCK
 0

	)

121 #i‡!
deföed
(
ENABLE_REMOTE_INSPECTOR
)

122 
	#ENABLE_REMOTE_INSPECTOR
 1

	)

125 #i‡!
deföed
(
ENABLE_RESPECT_EXIF_ORIENTATION
)

126 
	#ENABLE_RESPECT_EXIF_ORIENTATION
 1

	)

129 #i‡!
deföed
(
ENABLE_TEXT_CARET
)

130 
	#ENABLE_TEXT_CARET
 0

	)

133 #i‡!
deföed
(
ENABLE_TEXT_SELECTION
)

134 
	#ENABLE_TEXT_SELECTION
 0

	)

139 #i‡!
deföed
(
ENABLE_TOUCH_EVENTS
Ë&& 
USE
(
APPLE_INTERNAL_SDK
)

140 
	#ENABLE_TOUCH_EVENTS
 1

	)

143 #i‡!
deföed
(
ENABLE_WEB_ARCHIVE
)

144 
	#ENABLE_WEB_ARCHIVE
 1

	)

147 #i‡!
deföed
(
ENABLE_VIEW_MODE_CSS_MEDIA
)

148 
	#ENABLE_VIEW_MODE_CSS_MEDIA
 0

	)

151 #i‡!
deföed
(
ENABLE_WEBGL
)

152 
	#ENABLE_WEBGL
 1

	)

157 #i‡!
deföed
(
ENABLE_XSLT
Ë&& !
USE
(
APPLE_INTERNAL_SDK
)

158 
	#ENABLE_XSLT
 0

	)

164 #i‡
PLATFORM
(
MAC
)

166 #i‡!
deföed
(
ENABLE_CSS_IMAGE_SET
)

167 
	#ENABLE_CSS_IMAGE_SET
 1

	)

170 #i‡!
deföed
(
ENABLE_DASHBOARD_SUPPORT
)

171 
	#ENABLE_DASHBOARD_SUPPORT
 1

	)

174 #i‡!
deföed
(
ENABLE_DELETION_UI
)

175 
	#ENABLE_DELETION_UI
 1

	)

178 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1090

179 #i‡!
deföed
(
ENABLE_ENCRYPTED_MEDIA
)

180 
	#ENABLE_ENCRYPTED_MEDIA
 1

	)

182 #i‡!
deföed
(
ENABLE_ENCRYPTED_MEDIA_V2
)

183 
	#ENABLE_ENCRYPTED_MEDIA_V2
 1

	)

187 #i‡!
deföed
(
ENABLE_FULLSCREEN_API
)

188 
	#ENABLE_FULLSCREEN_API
 1

	)

191 #i‡
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 101000

192 #i‡!
deföed
(
ENABLE_REMOTE_INSPECTOR
)

193 
	#ENABLE_REMOTE_INSPECTOR
 1

	)

197 #i‡!
deföed
(
ENABLE_SMOOTH_SCROLLING
)

198 
	#ENABLE_SMOOTH_SCROLLING
 1

	)

201 #i‡!
deföed
(
ENABLE_ASYNC_SCROLLING
)

202 
	#ENABLE_ASYNC_SCROLLING
 1

	)

205 #i‡
ENABLE
(
VIDEO
)

206 #i‡!
deföed
(
ENABLE_VIDEO_TRACK
)

207 
	#ENABLE_VIDEO_TRACK
 1

	)

211 #i‡!
deföed
(
ENABLE_VIEW_MODE_CSS_MEDIA
)

212 
	#ENABLE_VIEW_MODE_CSS_MEDIA
 0

	)

215 #i‡!
deföed
(
ENABLE_WEB_ARCHIVE
)

216 
	#ENABLE_WEB_ARCHIVE
 1

	)

219 #i‡!
deföed
(
ENABLE_WEB_AUDIO
)

220 
	#ENABLE_WEB_AUDIO
 1

	)

223 #i‡!
deföed
(
ENABLE_CURSOR_VISIBILITY
)

224 
	#ENABLE_CURSOR_VISIBILITY
 1

	)

227 #i‡!
deföed
(
ENABLE_INPUT_TYPE_COLOR
)

228 
	#ENABLE_INPUT_TYPE_COLOR
 1

	)

231 #i‡!
deföed
(
ENABLE_INPUT_TYPE_COLOR_POPOVER
)

232 
	#ENABLE_INPUT_TYPE_COLOR_POPOVER
 1

	)

235 #i‡!
deföed
(
ENABLE_FILE_REPLACEMENT
)

236 
	#ENABLE_FILE_REPLACEMENT
 1

	)

242 #i‡
PLATFORM
(
WIN
Ë&& !PLATFORM(
WIN_CAIRO
)

244 #i‡!
deföed
(
ENABLE_FULLSCREEN_API
)

245 
	#ENABLE_FULLSCREEN_API
 1

	)

248 #i‡!
deföed
(
ENABLE_WEB_ARCHIVE
)

249 
	#ENABLE_WEB_ARCHIVE
 1

	)

252 #i‡!
deföed
(
ENABLE_WEBGL
)

253 
	#ENABLE_WEBGL
 1

	)

261 #i‡
PLATFORM
(
WIN_CAIRO
)

263 #i‡!
deföed
(
ENABLE_WEB_ARCHIVE
)

264 
	#ENABLE_WEB_ARCHIVE
 1

	)

267 #i‡!
deföed
(
ENABLE_VIEW_MODE_CSS_MEDIA
)

268 
	#ENABLE_VIEW_MODE_CSS_MEDIA
 0

	)

271 #i‡!
deföed
(
ENABLE_WEBGL
)

272 
	#ENABLE_WEBGL
 1

	)

278 #i‡
PLATFORM
(
EFL
)

280 #i‡!
deföed
(
ENABLE_PLUGIN_PACKAGE_SIMPLE_HASH
)

281 
	#ENABLE_PLUGIN_PACKAGE_SIMPLE_HASH
 1

	)

287 #i‡
PLATFORM
(
GTK
)

289 #i‡
OS
(
UNIX
)

290 #i‡!
deföed
(
ENABLE_PLUGIN_PACKAGE_SIMPLE_HASH
)

291 
	#ENABLE_PLUGIN_PACKAGE_SIMPLE_HASH
 1

	)

300 #i‡!
deföed
(
ENABLE_3D_RENDERING
)

301 
	#ENABLE_3D_RENDERING
 0

	)

304 #i‡!
deföed
(
ENABLE_ACCELERATED_2D_CANVAS
)

305 
	#ENABLE_ACCELERATED_2D_CANVAS
 0

	)

308 #i‡!
deföed
(
ENABLE_ACCELERATED_OVERFLOW_SCROLLING
)

309 
	#ENABLE_ACCELERATED_OVERFLOW_SCROLLING
 0

	)

312 #i‡!
deföed
(
ENABLE_BATTERY_STATUS
)

313 
	#ENABLE_BATTERY_STATUS
 0

	)

316 #i‡!
deföed
(
ENABLE_CANVAS_PATH
)

317 
	#ENABLE_CANVAS_PATH
 1

	)

320 #i‡!
deföed
(
ENABLE_CANVAS_PROXY
)

321 
	#ENABLE_CANVAS_PROXY
 0

	)

324 #i‡!
deföed
(
ENABLE_CHANNEL_MESSAGING
)

325 
	#ENABLE_CHANNEL_MESSAGING
 1

	)

328 #i‡!
deföed
(
ENABLE_CONTEXT_MENUS
)

329 
	#ENABLE_CONTEXT_MENUS
 1

	)

332 #i‡!
deföed
(
ENABLE_CSP_NEXT
)

333 
	#ENABLE_CSP_NEXT
 0

	)

336 #i‡!
deföed
(
ENABLE_CSS3_CONDITIONAL_RULES
)

337 
	#ENABLE_CSS3_CONDITIONAL_RULES
 0

	)

340 #i‡!
deföed
(
ENABLE_CSS3_TEXT
)

341 
	#ENABLE_CSS3_TEXT
 0

	)

344 #i‡!
deföed
(
ENABLE_CSS_BOX_DECORATION_BREAK
)

345 
	#ENABLE_CSS_BOX_DECORATION_BREAK
 1

	)

348 #i‡!
deföed
(
ENABLE_CSS_DEVICE_ADAPTATION
)

349 
	#ENABLE_CSS_DEVICE_ADAPTATION
 0

	)

352 #i‡!
deföed
(
ENABLE_CSS_COMPOSITING
)

353 
	#ENABLE_CSS_COMPOSITING
 0

	)

356 #i‡!
deföed
(
ENABLE_CSS_IMAGE_ORIENTATION
)

357 
	#ENABLE_CSS_IMAGE_ORIENTATION
 0

	)

360 #i‡!
deföed
(
ENABLE_CSS_IMAGE_RESOLUTION
)

361 
	#ENABLE_CSS_IMAGE_RESOLUTION
 0

	)

364 #i‡!
deföed
(
ENABLE_CSS_IMAGE_SET
)

365 
	#ENABLE_CSS_IMAGE_SET
 0

	)

368 #i‡!
deföed
(
ENABLE_CURSOR_SUPPORT
)

369 
	#ENABLE_CURSOR_SUPPORT
 1

	)

372 #i‡!
deföed
(
ENABLE_CUSTOM_SCHEME_HANDLER
)

373 
	#ENABLE_CUSTOM_SCHEME_HANDLER
 0

	)

376 #i‡!
deföed
(
ENABLE_DASHBOARD_SUPPORT
)

377 
	#ENABLE_DASHBOARD_SUPPORT
 0

	)

380 #i‡!
deföed
(
ENABLE_DATALIST_ELEMENT
)

381 
	#ENABLE_DATALIST_ELEMENT
 0

	)

384 #i‡!
deföed
(
ENABLE_DATA_TRANSFER_ITEMS
)

385 
	#ENABLE_DATA_TRANSFER_ITEMS
 0

	)

388 #i‡!
deföed
(
ENABLE_DELETION_UI
)

389 
	#ENABLE_DELETION_UI
 0

	)

392 #i‡!
deföed
(
ENABLE_DETAILS_ELEMENT
)

393 
	#ENABLE_DETAILS_ELEMENT
 1

	)

396 #i‡!
deföed
(
ENABLE_DEVICE_ORIENTATION
)

397 
	#ENABLE_DEVICE_ORIENTATION
 0

	)

400 #i‡!
deföed
(
ENABLE_DOWNLOAD_ATTRIBUTE
)

401 
	#ENABLE_DOWNLOAD_ATTRIBUTE
 0

	)

404 #i‡!
deföed
(
ENABLE_DRAG_SUPPORT
)

405 
	#ENABLE_DRAG_SUPPORT
 1

	)

408 #i‡!
deföed
(
ENABLE_ENCRYPTED_MEDIA
)

409 
	#ENABLE_ENCRYPTED_MEDIA
 0

	)

412 #i‡!
deföed
(
ENABLE_ENCRYPTED_MEDIA_V2
)

413 
	#ENABLE_ENCRYPTED_MEDIA_V2
 0

	)

416 #i‡!
deföed
(
ENABLE_FONT_LOAD_EVENTS
)

417 
	#ENABLE_FONT_LOAD_EVENTS
 0

	)

420 #i‡!
deföed
(
ENABLE_FTPDIR
)

421 
	#ENABLE_FTPDIR
 1

	)

424 #i‡!
deföed
(
ENABLE_FULLSCREEN_API
)

425 
	#ENABLE_FULLSCREEN_API
 0

	)

428 #i‡!
deföed
(
ENABLE_GAMEPAD
)

429 
	#ENABLE_GAMEPAD
 0

	)

432 #i‡!
deföed
(
ENABLE_GAMEPAD_DEPRECATED
)

433 
	#ENABLE_GAMEPAD_DEPRECATED
 0

	)

436 #i‡!
deföed
(
ENABLE_GEOLOCATION
)

437 
	#ENABLE_GEOLOCATION
 0

	)

440 #i‡!
deföed
(
ENABLE_HIDDEN_PAGE_DOM_TIMER_THROTTLING
)

441 
	#ENABLE_HIDDEN_PAGE_DOM_TIMER_THROTTLING
 0

	)

444 #i‡!
deföed
(
ENABLE_ICONDATABASE
)

445 
	#ENABLE_ICONDATABASE
 1

	)

448 #i‡!
deföed
(
ENABLE_IMAGE_DECODER_DOWN_SAMPLING
)

449 
	#ENABLE_IMAGE_DECODER_DOWN_SAMPLING
 0

	)

452 #i‡!
deföed
(
ENABLE_INDEXED_DATABASE
)

453 
	#ENABLE_INDEXED_DATABASE
 0

	)

456 #i‡!
deföed
(
ENABLE_INDEXED_DATABASE_IN_WORKERS
)

457 
	#ENABLE_INDEXED_DATABASE_IN_WORKERS
 0

	)

460 #i‡!
deföed
(
ENABLE_INPUT_TYPE_COLOR
)

461 
	#ENABLE_INPUT_TYPE_COLOR
 0

	)

464 #i‡!
deföed
(
ENABLE_INPUT_TYPE_COLOR_POPOVER
)

465 
	#ENABLE_INPUT_TYPE_COLOR_POPOVER
 0

	)

468 #i‡!
deföed
(
ENABLE_INPUT_TYPE_DATE
)

469 
	#ENABLE_INPUT_TYPE_DATE
 0

	)

472 #i‡!
deföed
(
ENABLE_INPUT_TYPE_DATETIME_INCOMPLETE
)

473 
	#ENABLE_INPUT_TYPE_DATETIME_INCOMPLETE
 0

	)

476 #i‡!
deföed
(
ENABLE_INPUT_TYPE_DATETIMELOCAL
)

477 
	#ENABLE_INPUT_TYPE_DATETIMELOCAL
 0

	)

480 #i‡!
deföed
(
ENABLE_INPUT_TYPE_MONTH
)

481 
	#ENABLE_INPUT_TYPE_MONTH
 0

	)

484 #i‡!
deföed
(
ENABLE_INPUT_TYPE_TIME
)

485 
	#ENABLE_INPUT_TYPE_TIME
 0

	)

488 #i‡!
deföed
(
ENABLE_INPUT_TYPE_WEEK
)

489 
	#ENABLE_INPUT_TYPE_WEEK
 0

	)

492 #i‡
ENABLE
(
INPUT_TYPE_DATE
Ë|| ENABLE(
INPUT_TYPE_DATETIME_INCOMPLETE
Ë|| ENABLE(
INPUT_TYPE_DATETIMELOCAL
Ë|| ENABLE(
INPUT_TYPE_MONTH
Ë|| ENABLE(
INPUT_TYPE_TIME
Ë|| ENABLE(
INPUT_TYPE_WEEK
)

493 #i‡!
deföed
(
ENABLE_DATE_AND_TIME_INPUT_TYPES
)

494 
	#ENABLE_DATE_AND_TIME_INPUT_TYPES
 1

	)

498 #i‡!
deföed
(
ENABLE_INSPECTOR
)

499 
	#ENABLE_INSPECTOR
 1

	)

502 #i‡!
deföed
(
ENABLE_JAVASCRIPT_I18N_API
)

503 
	#ENABLE_JAVASCRIPT_I18N_API
 0

	)

506 #i‡!
deföed
(
ENABLE_LEGACY_CSS_VENDOR_PREFIXES
)

507 
	#ENABLE_LEGACY_CSS_VENDOR_PREFIXES
 0

	)

510 #i‡!
deföed
(
ENABLE_LEGACY_NOTIFICATIONS
)

511 
	#ENABLE_LEGACY_NOTIFICATIONS
 0

	)

514 #i‡!
deföed
(
ENABLE_LEGACY_VENDOR_PREFIXES
)

515 
	#ENABLE_LEGACY_VENDOR_PREFIXES
 0

	)

518 #i‡!
deföed
(
ENABLE_LETTERPRESS
)

519 
	#ENABLE_LETTERPRESS
 0

	)

522 #i‡!
deföed
(
ENABLE_LINK_PREFETCH
)

523 
	#ENABLE_LINK_PREFETCH
 0

	)

526 #i‡!
deföed
(
ENABLE_MATHML
)

527 
	#ENABLE_MATHML
 1

	)

530 #i‡!
deföed
(
ENABLE_MEDIA_CAPTURE
)

531 
	#ENABLE_MEDIA_CAPTURE
 0

	)

534 #i‡!
deföed
(
ENABLE_MEDIA_CONTROLS_SCRIPT
)

535 
	#ENABLE_MEDIA_CONTROLS_SCRIPT
 0

	)

538 #i‡!
deföed
(
ENABLE_MEDIA_SOURCE
)

539 
	#ENABLE_MEDIA_SOURCE
 0

	)

542 #i‡!
deföed
(
ENABLE_MEDIA_STATISTICS
)

543 
	#ENABLE_MEDIA_STATISTICS
 0

	)

546 #i‡!
deföed
(
ENABLE_MEDIA_STREAM
)

547 
	#ENABLE_MEDIA_STREAM
 0

	)

550 #i‡!
deföed
(
ENABLE_METER_ELEMENT
)

551 
	#ENABLE_METER_ELEMENT
 1

	)

554 #i‡!
deföed
(
ENABLE_MHTML
)

555 
	#ENABLE_MHTML
 0

	)

558 #i‡!
deföed
(
ENABLE_MOUSE_CURSOR_SCALE
)

559 
	#ENABLE_MOUSE_CURSOR_SCALE
 0

	)

562 #i‡!
deföed
(
ENABLE_NAVIGATOR_CONTENT_UTILS
)

563 
	#ENABLE_NAVIGATOR_CONTENT_UTILS
 0

	)

566 #i‡!
deföed
(
ENABLE_NAVIGATOR_HWCONCURRENCY
)

567 
	#ENABLE_NAVIGATOR_HWCONCURRENCY
 1

	)

570 #i‡!
deföed
(
ENABLE_NETSCAPE_PLUGIN_API
)

571 
	#ENABLE_NETSCAPE_PLUGIN_API
 1

	)

574 #i‡!
deföed
(
ENABLE_NETSCAPE_PLUGIN_METADATA_CACHE
)

575 
	#ENABLE_NETSCAPE_PLUGIN_METADATA_CACHE
 0

	)

578 #i‡!
deföed
(
ENABLE_NOTIFICATIONS
)

579 
	#ENABLE_NOTIFICATIONS
 0

	)

582 #i‡!
deföed
(
ENABLE_OPENCL
)

583 
	#ENABLE_OPENCL
 0

	)

586 #i‡!
deföed
(
ENABLE_OPENTYPE_VERTICAL
)

587 
	#ENABLE_OPENTYPE_VERTICAL
 0

	)

590 #i‡!
deföed
(
ENABLE_ORIENTATION_EVENTS
)

591 
	#ENABLE_ORIENTATION_EVENTS
 0

	)

594 #i‡
OS
(
WINDOWS
)

595 #i‡!
deföed
(
ENABLE_PAN_SCROLLING
)

596 
	#ENABLE_PAN_SCROLLING
 1

	)

600 #i‡!
deföed
(
ENABLE_PLUGIN_PACKAGE_SIMPLE_HASH
)

601 
	#ENABLE_PLUGIN_PACKAGE_SIMPLE_HASH
 0

	)

604 #i‡!
deföed
(
ENABLE_POINTER_LOCK
)

605 
	#ENABLE_POINTER_LOCK
 0

	)

608 #i‡!
deföed
(
ENABLE_PROMISES
)

609 
	#ENABLE_PROMISES
 0

	)

612 #i‡!
deföed
(
ENABLE_PROXIMITY_EVENTS
)

613 
	#ENABLE_PROXIMITY_EVENTS
 0

	)

616 #i‡!
deföed
(
ENABLE_QUOTA
)

617 
	#ENABLE_QUOTA
 0

	)

620 #i‡!
deföed
(
ENABLE_REMOTE_INSPECTOR
)

621 
	#ENABLE_REMOTE_INSPECTOR
 0

	)

624 #i‡!
deföed
(
ENABLE_REQUEST_ANIMATION_FRAME
)

625 
	#ENABLE_REQUEST_ANIMATION_FRAME
 0

	)

628 #i‡!
deföed
(
ENABLE_REQUEST_AUTOCOMPLETE
)

629 
	#ENABLE_REQUEST_AUTOCOMPLETE
 0

	)

632 #i‡!
deföed
(
ENABLE_RUBBER_BANDING
)

633 
	#ENABLE_RUBBER_BANDING
 0

	)

636 #i‡!
deföed
(
ENABLE_SATURATED_LAYOUT_ARITHMETIC
)

637 
	#ENABLE_SATURATED_LAYOUT_ARITHMETIC
 1

	)

640 #i‡!
deföed
(
ENABLE_SHARED_WORKERS
)

641 
	#ENABLE_SHARED_WORKERS
 0

	)

644 #i‡!
deföed
(
ENABLE_SMOOTH_SCROLLING
)

645 
	#ENABLE_SMOOTH_SCROLLING
 0

	)

648 #i‡!
deföed
(
ENABLE_SPEECH_SYNTHESIS
)

649 
	#ENABLE_SPEECH_SYNTHESIS
 0

	)

652 #i‡!
deföed
(
ENABLE_SPELLCHECK
)

653 
	#ENABLE_SPELLCHECK
 0

	)

656 #i‡!
deföed
(
ENABLE_SQL_DATABASE
)

657 
	#ENABLE_SQL_DATABASE
 1

	)

660 #i‡!
deföed
(
ENABLE_SVG_FONTS
)

661 
	#ENABLE_SVG_FONTS
 1

	)

664 #i‡!
deföed
(
ENABLE_TEMPLATE_ELEMENT
)

665 
	#ENABLE_TEMPLATE_ELEMENT
 1

	)

668 #i‡!
deföed
(
ENABLE_TEXT_AUTOSIZING
)

669 
	#ENABLE_TEXT_AUTOSIZING
 0

	)

672 #i‡!
deföed
(
ENABLE_TEXT_CARET
)

673 
	#ENABLE_TEXT_CARET
 1

	)

676 #i‡!
deföed
(
ENABLE_TEXT_SELECTION
)

677 
	#ENABLE_TEXT_SELECTION
 1

	)

680 #i‡!
deföed
(
ENABLE_ASYNC_SCROLLING
)

681 
	#ENABLE_ASYNC_SCROLLING
 0

	)

684 #i‡!
deföed
(
ENABLE_TOUCH_EVENTS
)

685 
	#ENABLE_TOUCH_EVENTS
 0

	)

688 #i‡!
deföed
(
ENABLE_TOUCH_ICON_LOADING
)

689 
	#ENABLE_TOUCH_ICON_LOADING
 0

	)

692 #i‡!
deföed
(
ENABLE_VIBRATION
)

693 
	#ENABLE_VIBRATION
 0

	)

696 #i‡!
deföed
(
ENABLE_VIDEO
)

697 
	#ENABLE_VIDEO
 0

	)

700 #i‡!
deföed
(
ENABLE_VIDEO_TRACK
)

701 
	#ENABLE_VIDEO_TRACK
 0

	)

704 #i‡!
deföed
(
ENABLE_DATACUE_VALUE
)

705 
	#ENABLE_DATACUE_VALUE
 0

	)

708 #i‡!
deföed
(
ENABLE_VIEWPORT
)

709 
	#ENABLE_VIEWPORT
 0

	)

712 #i‡!
deföed
(
ENABLE_VIEW_MODE_CSS_MEDIA
)

713 
	#ENABLE_VIEW_MODE_CSS_MEDIA
 1

	)

716 #i‡!
deföed
(
ENABLE_WEBGL
)

717 
	#ENABLE_WEBGL
 0

	)

720 #i‡!
deföed
(
ENABLE_WEB_ARCHIVE
)

721 
	#ENABLE_WEB_ARCHIVE
 0

	)

724 #i‡!
deföed
(
ENABLE_WEB_AUDIO
)

725 
	#ENABLE_WEB_AUDIO
 0

	)

728 #i‡!
deföed
(
ENABLE_WEB_REPLAY
)

729 
	#ENABLE_WEB_REPLAY
 0

	)

732 #i‡!
deföed
(
ENABLE_WEB_SOCKETS
)

733 
	#ENABLE_WEB_SOCKETS
 1

	)

736 #i‡!
deföed
(
ENABLE_PICTURE_SIZES
)

737 
	#ENABLE_PICTURE_SIZES
 1

	)

740 #i‡!
deföed
(
ENABLE_WEB_TIMING
)

741 
	#ENABLE_WEB_TIMING
 0

	)

744 #i‡!
deföed
(
ENABLE_WILL_REVEAL_EDGE_EVENTS
)

745 
	#ENABLE_WILL_REVEAL_EDGE_EVENTS
 1

	)

748 #i‡!
deföed
(
ENABLE_XHR_TIMEOUT
)

749 
	#ENABLE_XHR_TIMEOUT
 0

	)

752 #i‡!
deföed
(
ENABLE_XSLT
)

753 
	#ENABLE_XSLT
 1

	)

758 #i‡
ENABLE
(
VIDEO_TRACK
Ë&& !ENABLE(
VIDEO
)

762 #i‡
ENABLE
(
MEDIA_CONTROLS_SCRIPT
Ë&& !ENABLE(
VIDEO
)

766 #i‡
ENABLE
(
REMOTE_INSPECTOR
Ë&& !ENABLE(
INSPECTOR
)

770 #i‡
ENABLE
(
IOS_TOUCH_EVENTS
Ë&& !ENABLE(
TOUCH_EVENTS
)

	@FilePrintStream.cpp

26 
	~"c⁄fig.h
"

27 
	~"FûePrötSåóm.h
"

29 
«me•a˚
 
	gWTF
 {

31 
	gFûePrötSåóm
::
FûePrötSåóm
(
FILE
* 
fûe
, 
Ad›ti⁄Mode
 
ad›ti⁄Mode
)

32 : 
m_fûe
(
fûe
)

33 , 
m_ad›ti⁄Mode
(
ad›ti⁄Mode
)

37 
	gFûePrötSåóm
::~
FûePrötSåóm
()

39 i‡(
m_ad›ti⁄Mode
 =
B‹row
)

41 
f˛o£
(
m_fûe
);

44 
	g°d
::
unique_±r
<
FûePrötSåóm
> FûePrötSåóm::
›í
(c⁄° * 
fûíame
, c⁄° * 
mode
)

46 
FILE
* 
	gfûe
 = 
f›í
(
fûíame
, 
mode
);

47 i‡(!
	gfûe
)

48  
	gnuŒ±r
;

50  
	g°d
::
make_unique
<
FûePrötSåóm
>(
fûe
);

53 
	gFûePrötSåóm
::
v¥ötf
(c⁄° * 
f‹m©
, 
va_li°
 
¨gLi°
)

55 
vÂrötf
(
m_fûe
, 
f‹m©
, 
¨gLi°
);

58 
	gFûePrötSåóm
::
Êush
()

60 
fÊush
(
m_fûe
);

	@FilePrintStream.h

26 #i‚de‡
FûePrötSåóm_h


27 
	#FûePrötSåóm_h


	)

29 
	~<°dio.h
>

30 
	~<wtf/PrötSåóm.h
>

31 
	~<wtf/OwnPå.h
>

33 
«me•a˚
 
	gWTF
 {

35 ˛as†
	cFûePrötSåóm
 : 
public
 
PrötSåóm
 {

36 
public
:

37 
	eAd›ti⁄Mode
 {

38 
Ad›t
,

39 
	gB‹row


42 
FûePrötSåóm
(
FILE
*, 
Ad›ti⁄Mode
 = 
Ad›t
);

43 
	gvútuÆ
 ~
FûePrötSåóm
();

45 
WTF_EXPORT_PRIVATE
 
	g°d
::
unique_±r
<
FûePrötSåóm
> 
›í
(c⁄° * 
fûíame
, c⁄° * 
mode
);

47 
FILE
* 
fûe
(Ë{  
	gm_fûe
; }

49 
vútuÆ
 
v¥ötf
(c⁄° * 
f‹m©
, 
va_li°
Ë
ovîride
 
WTF_ATTRIBUTE_PRINTF
(2, 0);

50 
vútuÆ
 
Êush
(Ë
	govîride
;

52 
	g¥iv©e
:

53 
FILE
* 
m_fûe
;

54 
Ad›ti⁄Mode
 
	gm_ad›ti⁄Mode
;

59 
usög
 
	gWTF
::
FûePrötSåóm
;

	@FlipBytes.h

26 #i‚de‡
FlùByãs_h


27 
	#FlùByãs_h


	)

29 
«me•a˚
 
	gWTF
 {

31 
ölöe
 
boﬁ
 
√edToFlùByãsIfLôéeEndün
(boﬁ 
lôéeEndün
)

33 #i‡
CPU
(
BIG_ENDIAN
)

34  
	glôéeEndün
;

36  !
	glôéeEndün
;

40 
ölöe
 
uöt16_t
 
ÊùByãs
(uöt16_à
vÆue
)

42  ((
	gvÆue
 & 0x00ff) << 8)

43 | ((
	gvÆue
 & 0xff00) >> 8);

46 
ölöe
 
uöt32_t
 
ÊùByãs
(uöt32_à
vÆue
)

48  ((
	gvÆue
 & 0x000000ff) << 24)

49 | ((
	gvÆue
 & 0x0000ff00) << 8)

50 | ((
	gvÆue
 & 0x00ff0000) >> 8)

51 | ((
	gvÆue
 & 0xff000000) >> 24);

54 
ölöe
 
uöt64_t
 
ÊùByãs
(uöt64_à
vÆue
)

56  ((
	gvÆue
 & 0x00000000000000ffull) << 56)

57 | ((
	gvÆue
 & 0x000000000000ff00ull) << 40)

58 | ((
	gvÆue
 & 0x0000000000ff0000ull) << 24)

59 | ((
	gvÆue
 & 0x00000000ff000000ull) << 8)

60 | ((
	gvÆue
 & 0x000000ff00000000ull) >> 8)

61 | ((
	gvÆue
 & 0x0000ff0000000000ull) >> 24)

62 | ((
	gvÆue
 & 0x00ff000000000000ull) >> 40)

63 | ((
	gvÆue
 & 0xff00000000000000ull) >> 56);

66 
	gãm∂©e
<
ty≥«me
 
	gT
>

67 
ölöe
 
T
 
ÊùByãs
(T 
vÆue
)

69 i‡((
	gvÆue
) == 1)

70  
vÆue
;

71 i‡((
	gvÆue
) == 2) {

73 
T
 
‹igöÆ
;

74 
uöt16_t
 
	gw‹d
;

75 } 
	gu
;

76 
	gu
.
	g‹igöÆ
 = 
vÆue
;

77 
	gu
.
	gw‹d
 = 
ÊùByãs
(
u
.
w‹d
);

78  
	gu
.
	g‹igöÆ
;

80 i‡((
	gvÆue
) == 4) {

82 
T
 
‹igöÆ
;

83 
uöt32_t
 
	gw‹d
;

84 } 
	gu
;

85 
	gu
.
	g‹igöÆ
 = 
vÆue
;

86 
	gu
.
	gw‹d
 = 
ÊùByãs
(
u
.
w‹d
);

87  
	gu
.
	g‹igöÆ
;

89 i‡((
	gvÆue
) == 8) {

91 
T
 
‹igöÆ
;

92 
uöt64_t
 
	gw‹d
;

93 } 
	gu
;

94 
	gu
.
	g‹igöÆ
 = 
vÆue
;

95 
	gu
.
	gw‹d
 = 
ÊùByãs
(
u
.
w‹d
);

96  
	gu
.
	g‹igöÆ
;

98 
RELEASE_ASSERT_NOT_REACHED
();

99  
T
();

102 
	gãm∂©e
<
ty≥«me
 
	gT
>

103 
ölöe
 
T
 
ÊùByãsIfLôéeEndün
(T 
vÆue
, 
boﬁ
 
lôéeEndün
)

105 i‡(
√edToFlùByãsIfLôéeEndün
(
lôéeEndün
))

106  
ÊùByãs
(
vÆue
);

107  
	gvÆue
;

112 
usög
 
	gWTF
::
√edToFlùByãsIfLôéeEndün
;

113 
usög
 
	gWTF
::
ÊùByãs
;

114 
usög
 
	gWTF
::
ÊùByãsIfLôéeEndün
;

	@Forward.h

21 #i‚de‡
WTF_F‹w¨d_h


22 
	#WTF_F‹w¨d_h


	)

24 
	~<°ddef.h
>

26 
«me•a˚
 
	gWTF
 {

28 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gFun˘i⁄
;

29 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gLazyNevîDe°royed
;

30 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gNevîDe°royed
;

31 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gOwnPå
;

32 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPassOwnPå
;

33 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPassRef
;

34 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPassRefPå
;

35 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gRefPå
;

36 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gRef
;

37 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gSåögBuf„r
;

39 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
> 
˛ass
 
	gVe˘‹
;

41 
˛ass
 
	gAtomicSåög
;

42 
˛ass
 
	gAtomicSåögIm∂
;

43 
˛ass
 
	gBö¨ySem≠h‹e
;

44 
˛ass
 
	gCSåög
;

45 
˛ass
 
	gDecodî
;

46 
˛ass
 
	gEncodî
;

47 
˛ass
 
	gFun˘i⁄Di•©chî
;

48 
˛ass
 
	gPrötSåóm
;

49 
˛ass
 
	gSåög
;

50 
˛ass
 
	gSåögBuûdî
;

51 
˛ass
 
	gSåögIm∂
;

52 
˛ass
 
	gSåögVõw
;

56 
usög
 
	gWTF
::
AtomicSåög
;

57 
usög
 
	gWTF
::
AtomicSåögIm∂
;

58 
usög
 
	gWTF
::
Bö¨ySem≠h‹e
;

59 
usög
 
	gWTF
::
CSåög
;

60 
usög
 
	gWTF
::
Decodî
;

61 
usög
 
	gWTF
::
Encodî
;

62 
usög
 
	gWTF
::
Fun˘i⁄
;

63 
usög
 
	gWTF
::
Fun˘i⁄Di•©chî
;

64 
usög
 
	gWTF
::
LazyNevîDe°royed
;

65 
usög
 
	gWTF
::
NevîDe°royed
;

66 
usög
 
	gWTF
::
OwnPå
;

67 
usög
 
	gWTF
::
PassOwnPå
;

68 
usög
 
	gWTF
::
PassRef
;

69 
usög
 
	gWTF
::
PassRefPå
;

70 
usög
 
	gWTF
::
PrötSåóm
;

71 
usög
 
	gWTF
::
Ref
;

72 
usög
 
	gWTF
::
RefPå
;

73 
usög
 
	gWTF
::
Såög
;

74 
usög
 
	gWTF
::
SåögBuf„r
;

75 
usög
 
	gWTF
::
SåögBuûdî
;

76 
usög
 
	gWTF
::
SåögIm∂
;

77 
usög
 
	gWTF
::
SåögVõw
;

78 
usög
 
	gWTF
::
Ve˘‹
;

	@FunctionDispatcher.cpp

26 
	~"c⁄fig.h
"

27 
	~"Fun˘i⁄Di•©chî.h
"

29 
«me•a˚
 
	gWTF
 {

31 
	gFun˘i⁄Di•©chî
::
Fun˘i⁄Di•©chî
()

35 
Fun˘i⁄Di•©chî
::~FunctionDispatcher()

	@FunctionDispatcher.h

26 
	~<fun˘i⁄Æ
>

27 
	~<wtf/ThªadSa„RefCou¡ed.h
>

29 
«me•a˚
 
	gWTF
 {

34 
˛ass
 
	gFun˘i⁄Di•©chî
 : 
public
 
ThªadSa„RefCou¡ed
<
Fun˘i⁄Di•©chî
> {

35 
public
:

36 
WTF_EXPORT_PRIVATE
 
vútuÆ
 ~
Fun˘i⁄Di•©chî
();

38 
vútuÆ
 
di•©ch
(
°d
::
fun˘i⁄
<()>) = 0;

40 
	g¥Ÿe˘ed
:

41 
WTF_EXPORT_PRIVATE
 
Fun˘i⁄Di•©chî
();

46 
usög
 
	gWTF
::
Fun˘i⁄Di•©chî
;

	@Functional.h

26 #i‚de‡
WTF_Fun˘i⁄Æ_h


27 
	#WTF_Fun˘i⁄Æ_h


	)

29 
	~<wtf/As£πi⁄s.h
>

30 
	~<wtf/PassRefPå.h
>

31 
	~<wtf/RefPå.h
>

32 
	~<wtf/ThªadSa„RefCou¡ed.h
>

33 
	~<wtf/WókPå.h
>

35 #i‡
OS
(
DARWIN
Ë&& 
COMPILER_SUPPORTS
(
BLOCKS
)

36 
	~<Block.h
>

37 
	~<wtf/ObjcRu¡imeExåas.h
>

40 
«me•a˚
 
	gWTF
 {

47 
	gãm∂©e
<
ty≥«me
 
	gT
>

48 ˛as†
	cHasRefAndDîef
 {

49 
	tYesTy≥
;

50 
	sNoTy≥
 {

51 
	g∑ddög
[8];

54 
	sBa£Mixö
 {

55 
dîef
();

56 
ªf
();

59 
	gBa£
 : 
public
 
T
,Öubli¯
	gBa£Mixö
 { };

61 
	gãm∂©e
<
ty≥«me
 
	gU
, U> 

62 
	sTy≥Checkî
 { };

64 
	gãm∂©e
<
ty≥«me
 
	gU
>

65 
NoTy≥
 
ªfCheck
(
U
*, 
Ty≥Checkî
<(
Ba£Mixö
::*)(), &U::
ªf
>* = 0);

66 
YesTy≥
 
ªfCheck
(...);

68 
	gãm∂©e
<
ty≥«me
 
	gU
>

69 
NoTy≥
 
dîefCheck
(
U
*, 
Ty≥Checkî
<(
Ba£Mixö
::*)(), &U::
dîef
>* = 0);

70 
YesTy≥
 
dîefCheck
(...);

72 
	gpublic
:

73 c⁄° 
boﬁ
 
vÆue
 = (
ªfCheck
(
°©ic_ˇ°
<
Ba£
*>(0))Ë=(
YesTy≥
Ë&& (
dîefCheck
(static_cast<Base*>(0))) == (YesType);

78 
	gãm∂©e
<
	gty≥«me
>

79 
˛ass
 
	gFun˘i⁄Wøµî
;

83 
	gãm∂©e
<
ty≥«me
 
	gR
>

84 
˛ass
 
	gFun˘i⁄Wøµî
<
R
 (*)()> {

85 
	gpublic
:

86 
R
 
	tResu…Ty≥
;

87 c⁄° 
boﬁ
 
	gshouldRefFú°P¨amëî
 = 
Ál£
;

89 
ex∂icô
 
Fun˘i⁄Wøµî
(
R
 (*
fun˘i⁄
)())

90 : 
m_fun˘i⁄
(
fun˘i⁄
)

94 
R
 
›î©‹
()()

96  
m_fun˘i⁄
();

99 
	g¥iv©e
:

100 
R
 (*
m_fun˘i⁄
)();

103 
	gãm∂©e
<
ty≥«me
 
	gR
,Åy≥«mê
	gP1
>

104 
˛ass
 
	gFun˘i⁄Wøµî
<
	$R
 (*)(
P1
)> {

105 
public
:

106 
R
 
	tResu…Ty≥
;

107 c⁄° 
boﬁ
 
shouldRefFú°P¨amëî
 = 
Ál£
;

109 
ex∂icô
 
	`Fun˘i⁄Wøµî
(
	`R
 (*
fun˘i⁄
)(
P1
))

110 : 
	`m_fun˘i⁄
(
fun˘i⁄
)

114 
R
 
	`›î©‹
()(
P1
 
p1
)

116  
	`m_fun˘i⁄
(
p1
);

119 
¥iv©e
:

120 
	`R
 (*
m_fun˘i⁄
)(
P1
);

121 
	}
};

123 
	gãm∂©e
<
ty≥«me
 
	gR
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
>

124 
˛ass
 
	gFun˘i⁄Wøµî
<
	$R
 (*)(
P1
, 
P2
)> {

125 
public
:

126 
R
 
	tResu…Ty≥
;

127 c⁄° 
boﬁ
 
shouldRefFú°P¨amëî
 = 
Ál£
;

129 
ex∂icô
 
	`Fun˘i⁄Wøµî
(
	`R
 (*
fun˘i⁄
)(
P1
, 
P2
))

130 : 
	`m_fun˘i⁄
(
fun˘i⁄
)

134 
R
 
	`›î©‹
()(
P1
 
p1
, 
P2
 
p2
)

136  
	`m_fun˘i⁄
(
p1
, 
p2
);

139 
¥iv©e
:

140 
	`R
 (*
m_fun˘i⁄
)(
P1
, 
P2
);

141 
	}
};

143 
	gãm∂©e
<
ty≥«me
 
	gR
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
>

144 
˛ass
 
	gFun˘i⁄Wøµî
<
	$R
 (*)(
P1
, 
P2
, 
P3
)> {

145 
public
:

146 
R
 
	tResu…Ty≥
;

147 c⁄° 
boﬁ
 
shouldRefFú°P¨amëî
 = 
Ál£
;

149 
ex∂icô
 
	`Fun˘i⁄Wøµî
(
	`R
 (*
fun˘i⁄
)(
P1
, 
P2
, 
P3
))

150 : 
	`m_fun˘i⁄
(
fun˘i⁄
)

154 
R
 
	`›î©‹
()(
P1
 
p1
, 
P2
 
p2
, 
P3
 
p3
)

156  
	`m_fun˘i⁄
(
p1
, 
p2
, 
p3
);

159 
¥iv©e
:

160 
	`R
 (*
m_fun˘i⁄
)(
P1
, 
P2
, 
P3
);

161 
	}
};

163 
	gãm∂©e
<
ty≥«me
 
	gR
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
,Åy≥«mê
	gP4
>

164 
˛ass
 
	gFun˘i⁄Wøµî
<
	$R
 (*)(
P1
, 
P2
, 
P3
, 
P4
)> {

165 
public
:

166 
R
 
	tResu…Ty≥
;

167 c⁄° 
boﬁ
 
shouldRefFú°P¨amëî
 = 
Ál£
;

169 
ex∂icô
 
	`Fun˘i⁄Wøµî
(
	`R
 (*
fun˘i⁄
)(
P1
, 
P2
, 
P3
, 
P4
))

170 : 
	`m_fun˘i⁄
(
fun˘i⁄
)

174 
R
 
	`›î©‹
()(
P1
 
p1
, 
P2
 
p2
, 
P3
 
p3
, 
P4
 
p4
)

176  
	`m_fun˘i⁄
(
p1
, 
p2
, 
p3
, 
p4
);

179 
¥iv©e
:

180 
	`R
 (*
m_fun˘i⁄
)(
P1
, 
P2
, 
P3
, 
P4
);

181 
	}
};

183 
	gãm∂©e
<
ty≥«me
 
	gR
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
,Åy≥«mê
	gP4
,Åy≥«mê
	gP5
>

184 
˛ass
 
	gFun˘i⁄Wøµî
<
	$R
 (*)(
P1
, 
P2
, 
P3
, 
P4
, 
P5
)> {

185 
public
:

186 
R
 
	tResu…Ty≥
;

187 c⁄° 
boﬁ
 
shouldRefFú°P¨amëî
 = 
Ál£
;

189 
ex∂icô
 
	`Fun˘i⁄Wøµî
(
	`R
 (*
fun˘i⁄
)(
P1
, 
P2
, 
P3
, 
P4
, 
P5
))

190 : 
	`m_fun˘i⁄
(
fun˘i⁄
)

194 
R
 
	`›î©‹
()(
P1
 
p1
, 
P2
 
p2
, 
P3
 
p3
, 
P4
 
p4
, 
P5
 
p5
)

196  
	`m_fun˘i⁄
(
p1
, 
p2
, 
p3
, 
p4
, 
p5
);

199 
¥iv©e
:

200 
	`R
 (*
m_fun˘i⁄
)(
P1
, 
P2
, 
P3
, 
P4
, 
P5
);

201 
	}
};

205 
	gãm∂©e
<
ty≥«me
 
	gR
,Åy≥«mê
	gC
>

206 
˛ass
 
	gFun˘i⁄Wøµî
<
R
 (
C
::*)()> {

207 
public
:

208 
R
 
	tResu…Ty≥
;

209 c⁄° 
boﬁ
 
	gshouldRefFú°P¨amëî
 = 
HasRefAndDîef
<
C
>::
vÆue
;

211 
ex∂icô
 
Fun˘i⁄Wøµî
(
R
 (
C
::*
fun˘i⁄
)())

212 : 
m_fun˘i⁄
(
fun˘i⁄
)

216 
R
 
›î©‹
()(
C
* 
c
)

218  (
c
->*
m_fun˘i⁄
)();

221 
R
 
›î©‹
()(c⁄° 
	gWókPå
<
	gC
>& 
	gc
)

223 
C
* 
	gobj
 = 
c
.
gë
();

224 i‡(!
	gobj
)

225  
R
();

226  (
	gobj
->*
	gm_fun˘i⁄
)();

229 
	g¥iv©e
:

230 
R
 (
C
::*
m_fun˘i⁄
)();

233 
	gãm∂©e
<
ty≥«me
 
	gR
,Åy≥«mê
	gC
,Åy≥«mê
	gP1
>

234 
˛ass
 
	gFun˘i⁄Wøµî
<
	$R
 (
C
::*)(
P1
)> {

235 
public
:

236 
R
 
	tResu…Ty≥
;

237 c⁄° 
boﬁ
 
shouldRefFú°P¨amëî
 = 
HasRefAndDîef
<
C
>::
vÆue
;

239 
ex∂icô
 
	`Fun˘i⁄Wøµî
(
	`R
 (
C
::*
fun˘i⁄
)(
P1
))

240 : 
	`m_fun˘i⁄
(
fun˘i⁄
)

244 
R
 
	`›î©‹
()(
C
* 
c
, 
P1
 
p1
)

246  (
c
->*
m_fun˘i⁄
)(
p1
);

249 
R
 
	`›î©‹
()(c⁄° 
WókPå
<
C
>& 
c
, 
P1
 
p1
)

251 
C
* 
obj
 = 
c
.
	`gë
();

252 i‡(!
obj
)

253  
	`R
();

254  (
obj
->*
m_fun˘i⁄
)(
p1
);

257 
¥iv©e
:

258 
	`R
 (
C
::*
m_fun˘i⁄
)(
P1
);

259 
	}
};

261 
	gãm∂©e
<
ty≥«me
 
	gR
,Åy≥«mê
	gC
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
>

262 
˛ass
 
	gFun˘i⁄Wøµî
<
	$R
 (
C
::*)(
P1
, 
P2
)> {

263 
public
:

264 
R
 
	tResu…Ty≥
;

265 c⁄° 
boﬁ
 
shouldRefFú°P¨amëî
 = 
HasRefAndDîef
<
C
>::
vÆue
;

267 
ex∂icô
 
	`Fun˘i⁄Wøµî
(
	`R
 (
C
::*
fun˘i⁄
)(
P1
, 
P2
))

268 : 
	`m_fun˘i⁄
(
fun˘i⁄
)

272 
R
 
	`›î©‹
()(
C
* 
c
, 
P1
 
p1
, 
P2
 
p2
)

274  (
c
->*
m_fun˘i⁄
)(
p1
, 
p2
);

277 
R
 
	`›î©‹
()(c⁄° 
WókPå
<
C
>& 
c
, 
P1
 
p1
, 
P2
 
p2
)

279 
C
* 
obj
 = 
c
.
	`gë
();

280 i‡(!
obj
)

281  
	`R
();

282  (
obj
->*
m_fun˘i⁄
)(
p1
, 
p2
);

285 
¥iv©e
:

286 
	`R
 (
C
::*
m_fun˘i⁄
)(
P1
, 
P2
);

287 
	}
};

289 
	gãm∂©e
<
ty≥«me
 
	gR
,Åy≥«mê
	gC
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
>

290 
˛ass
 
	gFun˘i⁄Wøµî
<
	$R
 (
C
::*)(
P1
, 
P2
, 
P3
)> {

291 
public
:

292 
R
 
	tResu…Ty≥
;

293 c⁄° 
boﬁ
 
shouldRefFú°P¨amëî
 = 
HasRefAndDîef
<
C
>::
vÆue
;

295 
ex∂icô
 
	`Fun˘i⁄Wøµî
(
	`R
 (
C
::*
fun˘i⁄
)(
P1
, 
P2
, 
P3
))

296 : 
	`m_fun˘i⁄
(
fun˘i⁄
)

300 
R
 
	`›î©‹
()(
C
* 
c
, 
P1
 
p1
, 
P2
 
p2
, 
P3
 
p3
)

302  (
c
->*
m_fun˘i⁄
)(
p1
, 
p2
, 
p3
);

305 
R
 
	`›î©‹
()(c⁄° 
WókPå
<
C
>& 
c
, 
P1
 
p1
, 
P2
 
p2
, 
P3
 
p3
)

307 
C
* 
obj
 = 
c
.
	`gë
();

308 i‡(!
obj
)

309  
	`R
();

310  (
obj
->*
m_fun˘i⁄
)(
p1
, 
p2
, 
p3
);

313 
¥iv©e
:

314 
	`R
 (
C
::*
m_fun˘i⁄
)(
P1
, 
P2
, 
P3
);

315 
	}
};

317 
	gãm∂©e
<
ty≥«me
 
	gR
,Åy≥«mê
	gC
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
,Åy≥«mê
	gP4
>

318 
˛ass
 
	gFun˘i⁄Wøµî
<
	$R
 (
C
::*)(
P1
, 
P2
, 
P3
, 
P4
)> {

319 
public
:

320 
R
 
	tResu…Ty≥
;

321 c⁄° 
boﬁ
 
shouldRefFú°P¨amëî
 = 
HasRefAndDîef
<
C
>::
vÆue
;

323 
ex∂icô
 
	`Fun˘i⁄Wøµî
(
	`R
 (
C
::*
fun˘i⁄
)(
P1
, 
P2
, 
P3
, 
P4
))

324 : 
	`m_fun˘i⁄
(
fun˘i⁄
)

328 
R
 
	`›î©‹
()(
C
* 
c
, 
P1
 
p1
, 
P2
 
p2
, 
P3
 
p3
, 
P4
 
p4
)

330  (
c
->*
m_fun˘i⁄
)(
p1
, 
p2
, 
p3
, 
p4
);

333 
R
 
	`›î©‹
()(c⁄° 
WókPå
<
C
>& 
c
, 
P1
 
p1
, 
P2
 
p2
, 
P3
 
p3
, 
P4
 
p4
)

335 
C
* 
obj
 = 
c
.
	`gë
();

336 i‡(!
obj
)

337  
	`R
();

338  (
obj
->*
m_fun˘i⁄
)(
p1
, 
p2
, 
p3
, 
p4
);

341 
¥iv©e
:

342 
	`R
 (
C
::*
m_fun˘i⁄
)(
P1
, 
P2
, 
P3
, 
P4
);

343 
	}
};

345 
	gãm∂©e
<
ty≥«me
 
	gR
,Åy≥«mê
	gC
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
,Åy≥«mê
	gP4
,Åy≥«mê
	gP5
>

346 
˛ass
 
	gFun˘i⁄Wøµî
<
	$R
 (
C
::*)(
P1
, 
P2
, 
P3
, 
P4
, 
P5
)> {

347 
public
:

348 
R
 
	tResu…Ty≥
;

349 c⁄° 
boﬁ
 
shouldRefFú°P¨amëî
 = 
HasRefAndDîef
<
C
>::
vÆue
;

351 
ex∂icô
 
	`Fun˘i⁄Wøµî
(
	`R
 (
C
::*
fun˘i⁄
)(
P1
, 
P2
, 
P3
, 
P4
, 
P5
))

352 : 
	`m_fun˘i⁄
(
fun˘i⁄
)

356 
R
 
	`›î©‹
()(
C
* 
c
, 
P1
 
p1
, 
P2
 
p2
, 
P3
 
p3
, 
P4
 
p4
, 
P5
 
p5
)

358  (
c
->*
m_fun˘i⁄
)(
p1
, 
p2
, 
p3
, 
p4
, 
p5
);

361 
R
 
	`›î©‹
()(c⁄° 
WókPå
<
C
>& 
c
, 
P1
 
p1
, 
P2
 
p2
, 
P3
 
p3
, 
P4
 
p4
, 
P5
 
p5
)

363 
C
* 
obj
 = 
c
.
	`gë
();

364 i‡(!
obj
)

365  
	`R
();

366  (
obj
->*
m_fun˘i⁄
)(
p1
, 
p2
, 
p3
, 
p4
, 
p5
);

369 
¥iv©e
:

370 
	`R
 (
C
::*
m_fun˘i⁄
)(
P1
, 
P2
, 
P3
, 
P4
, 
P5
);

371 
	}
};

373 #i‡
OS
(
DARWIN
Ë&& 
	$COMPILER_SUPPORTS
(
BLOCKS
)

374 
ãm∂©e
<
ty≥«me
 
R
>

375 
˛ass
 
Fun˘i⁄Wøµî
<
	`R
 (^)()> {

376 
public
:

377 
R
 
	tResu…Ty≥
;

378 c⁄° 
boﬁ
 
shouldRefFú°P¨amëî
 = 
Ál£
;

380 
ex∂icô
 
	`Fun˘i⁄Wøµî
(
	`R
 (^
block
)())

381 : 
	`m_block
(
	`Block_c›y
(
block
))

385 
	`Fun˘i⁄Wøµî
(c⁄° 
Fun˘i⁄Wøµî
& 
Ÿhî
)

386 : 
	`m_block
(
	`Block_c›y
(
Ÿhî
.
m_block
))

390 ~
	`Fun˘i⁄Wøµî
()

392 
	`Block_ªÀa£
(
m_block
);

395 
R
 
	`›î©‹
()()

397  
	`m_block
();

400 
¥iv©e
:

401 
	`R
 (^
m_block
)();

402 
	}
};

405 
	gãm∂©e
<
ty≥«me
 
	gT
, 
boﬁ
 
	gshouldRefAndDîef
> 
	sRefAndDîef
 {

406 
ªf
(
T
) { }

407 
dîef
(
T
) { }

410 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gRefAndDîef
<T*, 
	gåue
> {

411 
ªf
(
T
* 
t
Ë{ 
	gt
->ref(); }

412 
dîef
(
T
* 
t
Ë{ 
	gt
->deref(); }

415 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sP¨amSt‹ageTøôs
 {

416 
T
 
	tSt‹ageTy≥
;

418 
St‹ageTy≥
 
wøp
(c⁄° 
T
& 
vÆue
Ë{  
	gvÆue
; }

419 c⁄° 
	gT
& 
unwøp
(c⁄° 
St‹ageTy≥
& 
vÆue
Ë{  
	gvÆue
; }

422 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gP¨amSt‹ageTøôs
<
	gPassRefPå
<T>> {

423 
	gRefPå
<
	tT
> 
	tSt‹ageTy≥
;

425 
St‹ageTy≥
 
wøp
(
PassRefPå
<
T
> 
vÆue
Ë{  
	gvÆue
; }

426 
T
* 
unwøp
(c⁄° 
St‹ageTy≥
& 
vÆue
Ë{  
	gvÆue
.
gë
(); }

429 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gP¨amSt‹ageTøôs
<
	gRefPå
<T>> {

430 
	gRefPå
<
	tT
> 
	tSt‹ageTy≥
;

432 
St‹ageTy≥
 
wøp
(
RefPå
<
T
> 
vÆue
Ë{  
	gvÆue
.
ªÀa£
(); }

433 
T
* 
unwøp
(c⁄° 
St‹ageTy≥
& 
vÆue
Ë{  
	gvÆue
.
gë
(); }

436 
	gãm∂©e
<
	gty≥«me
> 
˛ass
 
	gRëaöPå
;

438 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gP¨amSt‹ageTøôs
<
	gRëaöPå
<T>> {

439 
	gRëaöPå
<
	tT
> 
	tSt‹ageTy≥
;

441 
St‹ageTy≥
 
wøp
(c⁄° 
RëaöPå
<
T
>& 
vÆue
Ë{  
	gvÆue
; }

442 
ty≥«me
 
	gRëaöPå
<
	gT
>::
PåTy≥
 
unwøp
(c⁄° 
St‹ageTy≥
& 
vÆue
Ë{  vÆue.
gë
(); }

445 
˛ass
 
	gFun˘i⁄Im∂Ba£
 : 
public
 
ThªadSa„RefCou¡ed
<
Fun˘i⁄Im∂Ba£
> {

446 
public
:

447 
vútuÆ
 ~
Fun˘i⁄Im∂Ba£
() { }

450 
	gãm∂©e
<
	gty≥«me
>

451 
˛ass
 
	gFun˘i⁄Im∂
;

453 
	gãm∂©e
<
ty≥«me
 
	gR
>

454 
˛ass
 
	gFun˘i⁄Im∂
<
R
 ()> : 
public
 
Fun˘i⁄Im∂Ba£
 {

455 
public
:

456 
vútuÆ
 
R
 
›î©‹
()() = 0;

459 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Wøµî
,Åy≥«mê
	gFun˘i⁄Ty≥
>

460 
˛ass
 
	gBoundFun˘i⁄Im∂
;

462 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Wøµî
,Åy≥«mê
	gR
>

463 
˛ass
 
	gBoundFun˘i⁄Im∂
<
	gFun˘i⁄Wøµî
, 
R
 ()> : 
public
 
Fun˘i⁄Im∂
<
ty≥«me
 
Fun˘i⁄Wøµî
::
Resu…Ty≥
 ()> {

464 
public
:

465 
ex∂icô
 
BoundFun˘i⁄Im∂
(
Fun˘i⁄Wøµî
 
fun˘i⁄Wøµî
)

466 : 
m_fun˘i⁄Wøµî
(
fun˘i⁄Wøµî
)

470 
vútuÆ
 
ty≥«me
 
Fun˘i⁄Wøµî
::
Resu…Ty≥
 
›î©‹
()()

472  
m_fun˘i⁄Wøµî
();

475 
	g¥iv©e
:

476 
Fun˘i⁄Wøµî
 
m_fun˘i⁄Wøµî
;

479 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Wøµî
,Åy≥«mê
	gR
,Åy≥«mê
	gP1
>

480 
˛ass
 
	gBoundFun˘i⁄Im∂
<
	gFun˘i⁄Wøµî
, 
R
 (
P1
)> : 
public
 
Fun˘i⁄Im∂
<
ty≥«me
 
Fun˘i⁄Wøµî
::
Resu…Ty≥
 ()> {

481 
public
:

482 
BoundFun˘i⁄Im∂
(
Fun˘i⁄Wøµî
 
fun˘i⁄Wøµî
, c⁄° 
P1
& 
p1
)

483 : 
m_fun˘i⁄Wøµî
(
fun˘i⁄Wøµî
)

484 , 
m_p1
(
P¨amSt‹ageTøôs
<
P1
>::
wøp
(
p1
))

486 
RefAndDîef
<
P1
, 
	gFun˘i⁄Wøµî
::
shouldRefFú°P¨amëî
>::
ªf
(
m_p1
);

489 ~
BoundFun˘i⁄Im∂
()

491 
	gRefAndDîef
<
	gP1
, 
	gFun˘i⁄Wøµî
::
shouldRefFú°P¨amëî
>::
dîef
(
m_p1
);

494 
vútuÆ
 
ty≥«me
 
	gFun˘i⁄Wøµî
::
Resu…Ty≥
 
›î©‹
()()

496  
m_fun˘i⁄Wøµî
(
P¨amSt‹ageTøôs
<
P1
>::
unwøp
(
m_p1
));

499 
	g¥iv©e
:

500 
Fun˘i⁄Wøµî
 
m_fun˘i⁄Wøµî
;

501 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP1
>::
St‹ageTy≥
 
m_p1
;

504 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Wøµî
,Åy≥«mê
	gR
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
>

505 
˛ass
 
	gBoundFun˘i⁄Im∂
<
	gFun˘i⁄Wøµî
, 
R
 (
P1
, 
P2
)> : 
public
 
Fun˘i⁄Im∂
<
ty≥«me
 
Fun˘i⁄Wøµî
::
Resu…Ty≥
 ()> {

506 
public
:

507 
BoundFun˘i⁄Im∂
(
Fun˘i⁄Wøµî
 
fun˘i⁄Wøµî
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
)

508 : 
m_fun˘i⁄Wøµî
(
fun˘i⁄Wøµî
)

509 , 
m_p1
(
P¨amSt‹ageTøôs
<
P1
>::
wøp
(
p1
))

510 , 
m_p2
(
P¨amSt‹ageTøôs
<
P2
>::
wøp
(
p2
))

512 
RefAndDîef
<
P1
, 
	gFun˘i⁄Wøµî
::
shouldRefFú°P¨amëî
>::
ªf
(
m_p1
);

515 ~
BoundFun˘i⁄Im∂
()

517 
	gRefAndDîef
<
	gP1
, 
	gFun˘i⁄Wøµî
::
shouldRefFú°P¨amëî
>::
dîef
(
m_p1
);

520 
vútuÆ
 
ty≥«me
 
	gFun˘i⁄Wøµî
::
Resu…Ty≥
 
›î©‹
()()

522  
m_fun˘i⁄Wøµî
(
P¨amSt‹ageTøôs
<
P1
>::
unwøp
(
m_p1
), P¨amSt‹ageTøôs<
P2
>::unwøp(
m_p2
));

525 
	g¥iv©e
:

526 
Fun˘i⁄Wøµî
 
m_fun˘i⁄Wøµî
;

527 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP1
>::
St‹ageTy≥
 
m_p1
;

528 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP2
>::
St‹ageTy≥
 
m_p2
;

531 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Wøµî
,Åy≥«mê
	gR
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
>

532 
˛ass
 
	gBoundFun˘i⁄Im∂
<
	gFun˘i⁄Wøµî
, 
R
 (
P1
, 
P2
, 
P3
)> : 
public
 
Fun˘i⁄Im∂
<
ty≥«me
 
Fun˘i⁄Wøµî
::
Resu…Ty≥
 ()> {

533 
public
:

534 
BoundFun˘i⁄Im∂
(
Fun˘i⁄Wøµî
 
fun˘i⁄Wøµî
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
, c⁄° 
P3
& 
p3
)

535 : 
m_fun˘i⁄Wøµî
(
fun˘i⁄Wøµî
)

536 , 
m_p1
(
P¨amSt‹ageTøôs
<
P1
>::
wøp
(
p1
))

537 , 
m_p2
(
P¨amSt‹ageTøôs
<
P2
>::
wøp
(
p2
))

538 , 
m_p3
(
P¨amSt‹ageTøôs
<
P3
>::
wøp
(
p3
))

540 
RefAndDîef
<
P1
, 
	gFun˘i⁄Wøµî
::
shouldRefFú°P¨amëî
>::
ªf
(
m_p1
);

543 ~
BoundFun˘i⁄Im∂
()

545 
	gRefAndDîef
<
	gP1
, 
	gFun˘i⁄Wøµî
::
shouldRefFú°P¨amëî
>::
dîef
(
m_p1
);

548 
vútuÆ
 
ty≥«me
 
	gFun˘i⁄Wøµî
::
Resu…Ty≥
 
›î©‹
()()

550  
m_fun˘i⁄Wøµî
(
P¨amSt‹ageTøôs
<
P1
>::
unwøp
(
m_p1
), P¨amSt‹ageTøôs<
P2
>::unwøp(
m_p2
), P¨amSt‹ageTøôs<
P3
>::unwøp(
m_p3
));

553 
	g¥iv©e
:

554 
Fun˘i⁄Wøµî
 
m_fun˘i⁄Wøµî
;

555 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP1
>::
St‹ageTy≥
 
m_p1
;

556 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP2
>::
St‹ageTy≥
 
m_p2
;

557 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP3
>::
St‹ageTy≥
 
m_p3
;

560 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Wøµî
,Åy≥«mê
	gR
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
,Åy≥«mê
	gP4
>

561 
˛ass
 
	gBoundFun˘i⁄Im∂
<
	gFun˘i⁄Wøµî
, 
R
 (
P1
, 
P2
, 
P3
, 
P4
)> : 
public
 
Fun˘i⁄Im∂
<
ty≥«me
 
Fun˘i⁄Wøµî
::
Resu…Ty≥
 ()> {

562 
public
:

563 
BoundFun˘i⁄Im∂
(
Fun˘i⁄Wøµî
 
fun˘i⁄Wøµî
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
, c⁄° 
P3
& 
p3
, c⁄° 
P4
& 
p4
)

564 : 
m_fun˘i⁄Wøµî
(
fun˘i⁄Wøµî
)

565 , 
m_p1
(
P¨amSt‹ageTøôs
<
P1
>::
wøp
(
p1
))

566 , 
m_p2
(
P¨amSt‹ageTøôs
<
P2
>::
wøp
(
p2
))

567 , 
m_p3
(
P¨amSt‹ageTøôs
<
P3
>::
wøp
(
p3
))

568 , 
m_p4
(
P¨amSt‹ageTøôs
<
P4
>::
wøp
(
p4
))

570 
RefAndDîef
<
P1
, 
	gFun˘i⁄Wøµî
::
shouldRefFú°P¨amëî
>::
ªf
(
m_p1
);

573 ~
BoundFun˘i⁄Im∂
()

575 
	gRefAndDîef
<
	gP1
, 
	gFun˘i⁄Wøµî
::
shouldRefFú°P¨amëî
>::
dîef
(
m_p1
);

578 
vútuÆ
 
ty≥«me
 
	gFun˘i⁄Wøµî
::
Resu…Ty≥
 
›î©‹
()()

580  
m_fun˘i⁄Wøµî
(
P¨amSt‹ageTøôs
<
P1
>::
unwøp
(
m_p1
), P¨amSt‹ageTøôs<
P2
>::unwøp(
m_p2
), P¨amSt‹ageTøôs<
P3
>::unwøp(
m_p3
), P¨amSt‹ageTøôs<
P4
>::unwøp(
m_p4
));

583 
	g¥iv©e
:

584 
Fun˘i⁄Wøµî
 
m_fun˘i⁄Wøµî
;

585 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP1
>::
St‹ageTy≥
 
m_p1
;

586 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP2
>::
St‹ageTy≥
 
m_p2
;

587 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP3
>::
St‹ageTy≥
 
m_p3
;

588 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP4
>::
St‹ageTy≥
 
m_p4
;

591 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Wøµî
,Åy≥«mê
	gR
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
,Åy≥«mê
	gP4
,Åy≥«mê
	gP5
>

592 
˛ass
 
	gBoundFun˘i⁄Im∂
<
	gFun˘i⁄Wøµî
, 
R
 (
P1
, 
P2
, 
P3
, 
P4
, 
P5
)> : 
public
 
Fun˘i⁄Im∂
<
ty≥«me
 
Fun˘i⁄Wøµî
::
Resu…Ty≥
 ()> {

593 
public
:

594 
BoundFun˘i⁄Im∂
(
Fun˘i⁄Wøµî
 
fun˘i⁄Wøµî
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
, c⁄° 
P3
& 
p3
, c⁄° 
P4
& 
p4
, c⁄° 
P5
& 
p5
)

595 : 
m_fun˘i⁄Wøµî
(
fun˘i⁄Wøµî
)

596 , 
m_p1
(
P¨amSt‹ageTøôs
<
P1
>::
wøp
(
p1
))

597 , 
m_p2
(
P¨amSt‹ageTøôs
<
P2
>::
wøp
(
p2
))

598 , 
m_p3
(
P¨amSt‹ageTøôs
<
P3
>::
wøp
(
p3
))

599 , 
m_p4
(
P¨amSt‹ageTøôs
<
P4
>::
wøp
(
p4
))

600 , 
m_p5
(
P¨amSt‹ageTøôs
<
P5
>::
wøp
(
p5
))

602 
RefAndDîef
<
P1
, 
	gFun˘i⁄Wøµî
::
shouldRefFú°P¨amëî
>::
ªf
(
m_p1
);

605 ~
BoundFun˘i⁄Im∂
()

607 
	gRefAndDîef
<
	gP1
, 
	gFun˘i⁄Wøµî
::
shouldRefFú°P¨amëî
>::
dîef
(
m_p1
);

610 
vútuÆ
 
ty≥«me
 
	gFun˘i⁄Wøµî
::
Resu…Ty≥
 
›î©‹
()()

612  
m_fun˘i⁄Wøµî
(
P¨amSt‹ageTøôs
<
P1
>::
unwøp
(
m_p1
), P¨amSt‹ageTøôs<
P2
>::unwøp(
m_p2
), P¨amSt‹ageTøôs<
P3
>::unwøp(
m_p3
), P¨amSt‹ageTøôs<
P4
>::unwøp(
m_p4
), P¨amSt‹ageTøôs<
P5
>::unwøp(
m_p5
));

615 
	g¥iv©e
:

616 
Fun˘i⁄Wøµî
 
m_fun˘i⁄Wøµî
;

617 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP1
>::
St‹ageTy≥
 
m_p1
;

618 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP2
>::
St‹ageTy≥
 
m_p2
;

619 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP3
>::
St‹ageTy≥
 
m_p3
;

620 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP4
>::
St‹ageTy≥
 
m_p4
;

621 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP5
>::
St‹ageTy≥
 
m_p5
;

624 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Wøµî
,Åy≥«mê
	gR
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
,Åy≥«mê
	gP4
,Åy≥«mê
	gP5
,Åy≥«mê
	gP6
>

625 
˛ass
 
	gBoundFun˘i⁄Im∂
<
	gFun˘i⁄Wøµî
, 
R
 (
P1
, 
P2
, 
P3
, 
P4
, 
P5
, 
P6
)> : 
public
 
Fun˘i⁄Im∂
<
ty≥«me
 
Fun˘i⁄Wøµî
::
Resu…Ty≥
 ()> {

626 
public
:

627 
BoundFun˘i⁄Im∂
(
Fun˘i⁄Wøµî
 
fun˘i⁄Wøµî
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
, c⁄° 
P3
& 
p3
, c⁄° 
P4
& 
p4
, c⁄° 
P5
& 
p5
, c⁄° 
P6
& 
p6
)

628 : 
m_fun˘i⁄Wøµî
(
fun˘i⁄Wøµî
)

629 , 
m_p1
(
P¨amSt‹ageTøôs
<
P1
>::
wøp
(
p1
))

630 , 
m_p2
(
P¨amSt‹ageTøôs
<
P2
>::
wøp
(
p2
))

631 , 
m_p3
(
P¨amSt‹ageTøôs
<
P3
>::
wøp
(
p3
))

632 , 
m_p4
(
P¨amSt‹ageTøôs
<
P4
>::
wøp
(
p4
))

633 , 
m_p5
(
P¨amSt‹ageTøôs
<
P5
>::
wøp
(
p5
))

634 , 
m_p6
(
P¨amSt‹ageTøôs
<
P6
>::
wøp
(
p6
))

636 
RefAndDîef
<
P1
, 
	gFun˘i⁄Wøµî
::
shouldRefFú°P¨amëî
>::
ªf
(
m_p1
);

639 ~
BoundFun˘i⁄Im∂
()

641 
	gRefAndDîef
<
	gP1
, 
	gFun˘i⁄Wøµî
::
shouldRefFú°P¨amëî
>::
dîef
(
m_p1
);

644 
vútuÆ
 
ty≥«me
 
	gFun˘i⁄Wøµî
::
Resu…Ty≥
 
›î©‹
()()

646  
m_fun˘i⁄Wøµî
(
P¨amSt‹ageTøôs
<
P1
>::
unwøp
(
m_p1
), P¨amSt‹ageTøôs<
P2
>::unwøp(
m_p2
), P¨amSt‹ageTøôs<
P3
>::unwøp(
m_p3
), P¨amSt‹ageTøôs<
P4
>::unwøp(
m_p4
), P¨amSt‹ageTøôs<
P5
>::unwøp(
m_p5
), P¨amSt‹ageTøôs<
P6
>::unwøp(
m_p6
));

649 
	g¥iv©e
:

650 
Fun˘i⁄Wøµî
 
m_fun˘i⁄Wøµî
;

651 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP1
>::
St‹ageTy≥
 
m_p1
;

652 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP2
>::
St‹ageTy≥
 
m_p2
;

653 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP3
>::
St‹ageTy≥
 
m_p3
;

654 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP4
>::
St‹ageTy≥
 
m_p4
;

655 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP5
>::
St‹ageTy≥
 
m_p5
;

656 
ty≥«me
 
	gP¨amSt‹ageTøôs
<
	gP6
>::
St‹ageTy≥
 
m_p6
;

659 ˛as†
	cFun˘i⁄Ba£
 {

660 
	gpublic
:

661 
boﬁ
 
isNuŒ
() const

663  !
m_im∂
;

666 
	g¥Ÿe˘ed
:

667 
Fun˘i⁄Ba£
()

671 
ex∂icô
 
Fun˘i⁄Ba£
(
PassRefPå
<
Fun˘i⁄Im∂Ba£
> 
im∂
)

672 : 
m_im∂
(
im∂
)

676 
ãm∂©e
<
ty≥«me
 
Fun˘i⁄Ty≥
> 
Fun˘i⁄Im∂
<Fun˘i⁄Ty≥>* 
im∂
() const

678  
°©ic_ˇ°
<
Fun˘i⁄Im∂
<
Fun˘i⁄Ty≥
>*>(
m_im∂
.
gë
());

681 
	g¥iv©e
:

682 
RefPå
<
Fun˘i⁄Im∂Ba£
> 
m_im∂
;

685 
	gãm∂©e
<
	gty≥«me
>

686 
˛ass
 
	gFun˘i⁄
;

688 
	gãm∂©e
<
ty≥«me
 
	gR
>

689 
˛ass
 
	gFun˘i⁄
<
R
 ()> : 
public
 
Fun˘i⁄Ba£
 {

690 
public
:

691 
Fun˘i⁄
()

695 
Fun˘i⁄
(
PassRefPå
<
Fun˘i⁄Im∂
<
R
 ()>> 
im∂
)

696 : 
Fun˘i⁄Ba£
(
im∂
)

700 
R
 
›î©‹
()() const

702 
ASSERT
(!
isNuŒ
());

704  
	gim∂
<
R
 ()>()->
›î©‹
()();

707 #i‡
OS
(
DARWIN
Ë&& 
COMPILER_SUPPORTS
(
BLOCKS
)

708 (^
	gBlockTy≥
)();

709 
›î©‹
 
BlockTy≥
() const

713 
	gRefPå
<
	gFun˘i⁄Im∂
<
R
 ()>> 
	gfun˘i⁄Im∂
 = 
im∂
<R ()>();

714 
BlockTy≥
 
	gblock
 = ^{

715 
fun˘i⁄Im∂
->
›î©‹
()();

728 
id
 
	gc›õdBlock
 = 
wtfObjcMsgSíd
<id>((id)
block
, 
£l_ªgi°îName
("copy"));

729 
id
 
	gaut‹ñó£dBlock
 = 
wtfObjcMsgSíd
<id>(
c›õdBlock
, 
£l_ªgi°îName
("autorelease"));

730  (
	gBlockTy≥
)
	gaut‹ñó£dBlock
;

735 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Ty≥
>

736 
	gFun˘i⁄
<
ty≥«me
 
	gFun˘i⁄Wøµî
<
	gFun˘i⁄Ty≥
>::
Resu…Ty≥
 ()> 
	$böd
(
Fun˘i⁄Ty≥
 
fun˘i⁄
)

738  
Fun˘i⁄
<
ty≥«me
 
Fun˘i⁄Wøµî
<
Fun˘i⁄Ty≥
>::
	`Resu…Ty≥
 ()>(
	`ad›tRef
(
√w
 
BoundFun˘i⁄Im∂
<Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>,Åy≥«mêFun˘i⁄Wøµî<Fun˘i⁄Ty≥>::Resu…Ty≥ ()>(Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>(
fun˘i⁄
))));

739 
	}
}

741 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Ty≥
,Åy≥«mê
	gA1
>

742 
	gFun˘i⁄
<
ty≥«me
 
	gFun˘i⁄Wøµî
<
	gFun˘i⁄Ty≥
>::
Resu…Ty≥
 ()> 
	$böd
(
Fun˘i⁄Ty≥
 
fun˘i⁄
, c⁄° 
A1
& 
a1
)

744  
Fun˘i⁄
<
ty≥«me
 
Fun˘i⁄Wøµî
<
Fun˘i⁄Ty≥
>::
	`Resu…Ty≥
 ()>(
	`ad›tRef
(
√w
 
BoundFun˘i⁄Im∂
<Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>,Åy≥«mêFun˘i⁄Wøµî<Fun˘i⁄Ty≥>::Resu…Ty≥ (
A1
)>(Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>(
fun˘i⁄
), 
a1
)));

745 
	}
}

747 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Ty≥
,Åy≥«mê
	gA1
,Åy≥«mê
	gA2
>

748 
	gFun˘i⁄
<
ty≥«me
 
	gFun˘i⁄Wøµî
<
	gFun˘i⁄Ty≥
>::
Resu…Ty≥
 ()> 
	$böd
(
Fun˘i⁄Ty≥
 
fun˘i⁄
, c⁄° 
A1
& 
a1
, c⁄° 
A2
& 
a2
)

750  
Fun˘i⁄
<
ty≥«me
 
Fun˘i⁄Wøµî
<
Fun˘i⁄Ty≥
>::
	`Resu…Ty≥
 ()>(
	`ad›tRef
(
√w
 
BoundFun˘i⁄Im∂
<Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>,Åy≥«mêFun˘i⁄Wøµî<Fun˘i⁄Ty≥>::Resu…Ty≥ (
A1
, 
A2
)>(Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>(
fun˘i⁄
), 
a1
, 
a2
)));

751 
	}
}

753 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Ty≥
,Åy≥«mê
	gA1
,Åy≥«mê
	gA2
,Åy≥«mê
	gA3
>

754 
	gFun˘i⁄
<
ty≥«me
 
	gFun˘i⁄Wøµî
<
	gFun˘i⁄Ty≥
>::
Resu…Ty≥
 ()> 
	$böd
(
Fun˘i⁄Ty≥
 
fun˘i⁄
, c⁄° 
A1
& 
a1
, c⁄° 
A2
& 
a2
, c⁄° 
A3
& 
a3
)

756  
Fun˘i⁄
<
ty≥«me
 
Fun˘i⁄Wøµî
<
Fun˘i⁄Ty≥
>::
	`Resu…Ty≥
 ()>(
	`ad›tRef
(
√w
 
BoundFun˘i⁄Im∂
<Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>,Åy≥«mêFun˘i⁄Wøµî<Fun˘i⁄Ty≥>::Resu…Ty≥ (
A1
, 
A2
, 
A3
)>(Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>(
fun˘i⁄
), 
a1
, 
a2
, 
a3
)));

757 
	}
}

759 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Ty≥
,Åy≥«mê
	gA1
,Åy≥«mê
	gA2
,Åy≥«mê
	gA3
,Åy≥«mê
	gA4
>

760 
	gFun˘i⁄
<
ty≥«me
 
	gFun˘i⁄Wøµî
<
	gFun˘i⁄Ty≥
>::
Resu…Ty≥
 ()> 
	$böd
(
Fun˘i⁄Ty≥
 
fun˘i⁄
, c⁄° 
A1
& 
a1
, c⁄° 
A2
& 
a2
, c⁄° 
A3
& 
a3
, c⁄° 
A4
& 
a4
)

762  
Fun˘i⁄
<
ty≥«me
 
Fun˘i⁄Wøµî
<
Fun˘i⁄Ty≥
>::
	`Resu…Ty≥
 ()>(
	`ad›tRef
(
√w
 
BoundFun˘i⁄Im∂
<Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>,Åy≥«mêFun˘i⁄Wøµî<Fun˘i⁄Ty≥>::Resu…Ty≥ (
A1
, 
A2
, 
A3
, 
A4
)>(Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>(
fun˘i⁄
), 
a1
, 
a2
, 
a3
, 
a4
)));

763 
	}
}

765 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Ty≥
,Åy≥«mê
	gA1
,Åy≥«mê
	gA2
,Åy≥«mê
	gA3
,Åy≥«mê
	gA4
,Åy≥«mê
	gA5
>

766 
	gFun˘i⁄
<
ty≥«me
 
	gFun˘i⁄Wøµî
<
	gFun˘i⁄Ty≥
>::
Resu…Ty≥
 ()> 
	$böd
(
Fun˘i⁄Ty≥
 
fun˘i⁄
, c⁄° 
A1
& 
a1
, c⁄° 
A2
& 
a2
, c⁄° 
A3
& 
a3
, c⁄° 
A4
& 
a4
, c⁄° 
A5
& 
a5
)

768  
Fun˘i⁄
<
ty≥«me
 
Fun˘i⁄Wøµî
<
Fun˘i⁄Ty≥
>::
	`Resu…Ty≥
 ()>(
	`ad›tRef
(
√w
 
BoundFun˘i⁄Im∂
<Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>,Åy≥«mêFun˘i⁄Wøµî<Fun˘i⁄Ty≥>::Resu…Ty≥ (
A1
, 
A2
, 
A3
, 
A4
, 
A5
)>(Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>(
fun˘i⁄
), 
a1
, 
a2
, 
a3
, 
a4
, 
a5
)));

769 
	}
}

771 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄Ty≥
,Åy≥«mê
	gA1
,Åy≥«mê
	gA2
,Åy≥«mê
	gA3
,Åy≥«mê
	gA4
,Åy≥«mê
	gA5
,Åy≥«mê
	gA6
>

772 
	gFun˘i⁄
<
ty≥«me
 
	gFun˘i⁄Wøµî
<
	gFun˘i⁄Ty≥
>::
Resu…Ty≥
 ()> 
	$böd
(
Fun˘i⁄Ty≥
 
fun˘i⁄
, c⁄° 
A1
& 
a1
, c⁄° 
A2
& 
a2
, c⁄° 
A3
& 
a3
, c⁄° 
A4
& 
a4
, c⁄° 
A5
& 
a5
, c⁄° 
A6
& 
a6
)

774  
Fun˘i⁄
<
ty≥«me
 
Fun˘i⁄Wøµî
<
Fun˘i⁄Ty≥
>::
	`Resu…Ty≥
 ()>(
	`ad›tRef
(
√w
 
BoundFun˘i⁄Im∂
<Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>,Åy≥«mêFun˘i⁄Wøµî<Fun˘i⁄Ty≥>::Resu…Ty≥ (
A1
, 
A2
, 
A3
, 
A4
, 
A5
, 
A6
)>(Fun˘i⁄Wøµî<Fun˘i⁄Ty≥>(
fun˘i⁄
), 
a1
, 
a2
, 
a3
, 
a4
, 
a5
, 
a6
)));

775 
	}
}

779 
usög
 
	gWTF
::
Fun˘i⁄
;

780 
usög
 
	gWTF
::
böd
;

	@GetPtr.h

21 #i‚de‡
WTF_GëPå_h


22 
	#WTF_GëPå_h


	)

24 
	~<mem‹y
>

26 
«me•a˚
 
	gWTF
 {

28 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
T
* 
gëPå
(T* 
p
Ë{  
	gp
; }

30 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	sIsSm¨tPå
 {

31 c⁄° 
boﬁ
 
	gvÆue
 = 
Ál£
;

34 
	gãm∂©e
 <
ty≥«me
 
	gT
, 
boﬁ
 
	gisSm¨tPå
>

35 
	gGëPåHñ≥rBa£
;

37 
	gãm∂©e
 <
ty≥«me
 
	gT
>

38 
	gGëPåHñ≥rBa£
<
	gT
, 
	gÁl£
 > {

39 
T
* 
	tPåTy≥
;

40 
T
* 
gëPå
(T& 
p
Ë{  &
	gp
; }

43 
	gãm∂©e
 <
ty≥«me
 
	gT
>

44 
	gGëPåHñ≥rBa£
<
	gT
, 
	gåue
 > {

45 
ty≥«me
 
	tT
::
	tPåTy≥
 PtrType;

46 
PåTy≥
 
gëPå
(c⁄° 
T
& 
p
Ë{  
	gp
.
gë
(); }

49 
	gãm∂©e
 <
ty≥«me
 
	gT
>

50 
	gGëPåHñ≥r
 : 
GëPåHñ≥rBa£
<
T
, 
	gIsSm¨tPå
<
	gT
>::
vÆue
> {

53 
	gãm∂©e
 <
ty≥«me
 
	gT
>

54 
ölöe
 
ty≥«me
 
	gGëPåHñ≥r
<
	gT
>::
PåTy≥
 
gëPå
(
T
& 
p
)

56  
GëPåHñ≥r
<
T
>::
gëPå
(
p
);

59 
	gãm∂©e
 <
ty≥«me
 
	gT
>

60 
ölöe
 
ty≥«me
 
	gGëPåHñ≥r
<
	gT
>::
PåTy≥
 
gëPå
(c⁄° 
T
& 
p
)

62  
GëPåHñ≥r
<
T
>::
gëPå
(
p
);

67 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gDñëî
> 
	gIsSm¨tPå
<
	g°d
::
unique_±r
<
T
, Deleter>> {

68 c⁄° 
boﬁ
 
	gvÆue
 = 
åue
;

71 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gDñëî
>

72 
	gGëPåHñ≥r
<
	g°d
::
unique_±r
<
T
, 
	gDñëî
>> {

73 
T
* 
	tPåTy≥
;

74 
T
* 
gëPå
(c⁄° 
°d
::
unique_±r
<T, 
Dñëî
>& 
p
Ë{  
	gp
.
gë
(); }

	@GregorianDateTime.cpp

25 
	~"c⁄fig.h
"

26 
	~"Gªg‹ünD©eTime.h
"

28 
	~"D©eM©h.h
"

30 #i‡
OS
(
WINDOWS
)

31 
	~<wödows.h
>

33 
	~<time.h
>

36 
«me•a˚
 
	gWTF
 {

38 
	gGªg‹ünD©eTime
::
£tToCuºítLoˇlTime
()

40 #i‡
OS
(
WINDOWS
)

41 
SYSTEMTIME
 
sy°emTime
;

42 
GëLoˇlTime
(&
sy°emTime
);

43 
TIME_ZONE_INFORMATION
 
	gtimeZ⁄eInf‹m©i⁄
;

44 
DWORD
 
	gtimeZ⁄eId
 = 
GëTimeZ⁄eInf‹m©i⁄
(&
timeZ⁄eInf‹m©i⁄
);

46 
LONG
 
	gbüs
 = 
timeZ⁄eInf‹m©i⁄
.
Büs
;

47 i‡(
	gtimeZ⁄eId
 =
TIME_ZONE_ID_DAYLIGHT
)

48 
büs
 +
timeZ⁄eInf‹m©i⁄
.
DaylightBüs
;

49 i‡(
	gtimeZ⁄eId
 =
TIME_ZONE_ID_STANDARD
)

50 
büs
 +
timeZ⁄eInf‹m©i⁄
.
Sènd¨dBüs
;

52 
ASSERT
(
timeZ⁄eId
 =
TIME_ZONE_ID_UNKNOWN
);

54 
	gm_yór
 = 
sy°emTime
.
wYór
;

55 
	gm_m⁄th
 = 
sy°emTime
.
wM⁄th
 - 1;

56 
	gm_m⁄thDay
 = 
sy°emTime
.
wDay
;

57 
	gm_yórDay
 = 
dayInYór
(
m_yór
, 
m_m⁄th
, 
m_m⁄thDay
);

58 
	gm_wìkDay
 = 
sy°emTime
.
wDayOfWìk
;

59 
	gm_hour
 = 
sy°emTime
.
wHour
;

60 
	gm_möuã
 = 
sy°emTime
.
wMöuã
;

61 
	gm_£c⁄d
 = 
sy°emTime
.
wSec⁄d
;

62 
	gm_utcOff£t
 = -
büs
 * 
£c⁄dsPîMöuã
;

63 
	gm_isDST
 = 
timeZ⁄eId
 =
TIME_ZONE_ID_DAYLIGHT
 ? 1 : 0;

65 
tm
 
	gloˇlTM
;

66 
time_t
 
	gloˇlTime
 = 
time
(0);

67 
loˇ…ime_r
(&
loˇlTime
, &
loˇlTM
);

69 
	gm_yór
 = 
loˇlTM
.
tm_yór
 + 1900;

70 
	gm_m⁄th
 = 
loˇlTM
.
tm_m⁄
;

71 
	gm_m⁄thDay
 = 
loˇlTM
.
tm_mday
;

72 
	gm_yórDay
 = 
loˇlTM
.
tm_yday
;

73 
	gm_wìkDay
 = 
loˇlTM
.
tm_wday
;

74 
	gm_hour
 = 
loˇlTM
.
tm_hour
;

75 
	gm_möuã
 = 
loˇlTM
.
tm_mö
;

76 
	gm_£c⁄d
 = 
loˇlTM
.
tm_£c
;

77 
	gm_isDST
 = 
loˇlTM
.
tm_isd°
;

78 #i‡
HAVE
(
TM_GMTOFF
)

79 
	gm_utcOff£t
 = 
loˇlTM
.
tm_gmtoff
;

81 
	gm_utcOff£t
 = 
ˇlcuœãLoˇlTimeOff£t
(
loˇlTime
 * 
msPîSec⁄d
).
off£t
 / msPerSecond;

	@GregorianDateTime.h

25 #i‚de‡
WTF_Gªg‹ünD©eTime_h


26 
	#WTF_Gªg‹ünD©eTime_h


	)

28 
	~<°rög.h
>

29 
	~<time.h
>

30 
	~<wtf/N⁄c›yabÀ.h
>

32 
«me•a˚
 
	gWTF
 {

34 ˛as†
	cGªg‹ünD©eTime
 {

35 
WTF_MAKE_NONCOPYABLE
(
Gªg‹ünD©eTime
);

36 
	gpublic
:

37 
Gªg‹ünD©eTime
()

38 : 
m_yór
(0)

39 , 
m_m⁄th
(0)

40 , 
m_yórDay
(0)

41 , 
m_m⁄thDay
(0)

42 , 
m_wìkDay
(0)

43 , 
m_hour
(0)

44 , 
m_möuã
(0)

45 , 
m_£c⁄d
(0)

46 , 
m_utcOff£t
(0)

47 , 
m_isDST
(0)

51 
ölöe
 
yór
(Ëc⁄° {  
	gm_yór
; }

52 
ölöe
 
m⁄th
(Ëc⁄° {  
	gm_m⁄th
; }

53 
ölöe
 
yórDay
(Ëc⁄° {  
	gm_yórDay
; }

54 
ölöe
 
m⁄thDay
(Ëc⁄° {  
	gm_m⁄thDay
; }

55 
ölöe
 
wìkDay
(Ëc⁄° {  
	gm_wìkDay
; }

56 
ölöe
 
hour
(Ëc⁄° {  
	gm_hour
; }

57 
ölöe
 
möuã
(Ëc⁄° {  
	gm_möuã
; }

58 
ölöe
 
£c⁄d
(Ëc⁄° {  
	gm_£c⁄d
; }

59 
ölöe
 
utcOff£t
(Ëc⁄° {  
	gm_utcOff£t
; }

60 
ölöe
 
isDST
(Ëc⁄° {  
	gm_isDST
; }

62 
ölöe
 
£tYór
(
yór
Ë{ 
	gm_yór
 = year; }

63 
ölöe
 
£tM⁄th
(
m⁄th
Ë{ 
	gm_m⁄th
 = month; }

64 
ölöe
 
£tYórDay
(
yórDay
Ë{ 
	gm_yórDay
 = yearDay; }

65 
ölöe
 
£tM⁄thDay
(
m⁄thDay
Ë{ 
	gm_m⁄thDay
 = monthDay; }

66 
ölöe
 
£tWìkDay
(
wìkDay
Ë{ 
	gm_wìkDay
 = weekDay; }

67 
ölöe
 
£tHour
(
hour
Ë{ 
	gm_hour
 = hour; }

68 
ölöe
 
£tMöuã
(
möuã
Ë{ 
	gm_möuã
 = minute; }

69 
ölöe
 
£tSec⁄d
(
£c⁄d
Ë{ 
	gm_£c⁄d
 = second; }

70 
ölöe
 
£tUtcOff£t
(
utcOff£t
Ë{ 
	gm_utcOff£t
 = utcOffset; }

71 
ölöe
 
£tIsDST
(
isDST
Ë{ 
	gm_isDST
 = isDST; }

73 
WTF_EXPORT_PRIVATE
 
£tToCuºítLoˇlTime
();

75 
›î©‹
 
tm
() const

77 
tm
 
	gªt
;

78 
mem£t
(&
ªt
, 0, (ret));

80 
	gªt
.
	gtm_yór
 = 
m_yór
 - 1900;

81 
	gªt
.
	gtm_m⁄
 = 
m_m⁄th
;

82 
	gªt
.
	gtm_yday
 = 
m_yórDay
;

83 
	gªt
.
	gtm_mday
 = 
m_m⁄thDay
;

84 
	gªt
.
	gtm_wday
 = 
m_wìkDay
;

85 
	gªt
.
	gtm_hour
 = 
m_hour
;

86 
	gªt
.
	gtm_mö
 = 
m_möuã
;

87 
	gªt
.
	gtm_£c
 = 
m_£c⁄d
;

88 
	gªt
.
	gtm_isd°
 = 
m_isDST
;

90 #i‡
HAVE
(
TM_GMTOFF
)

91 
	gªt
.
	gtm_gmtoff
 = 
°©ic_ˇ°
<>(
m_utcOff£t
);

94  
	gªt
;

97 
c›yFrom
(c⁄° 
Gªg‹ünD©eTime
& 
Ÿhî
)

99 
	gm_yór
 = 
Ÿhî
.
m_yór
;

100 
	gm_m⁄th
 = 
Ÿhî
.
m_m⁄th
;

101 
	gm_yórDay
 = 
Ÿhî
.
m_yórDay
;

102 
	gm_m⁄thDay
 = 
Ÿhî
.
m_m⁄thDay
;

103 
	gm_wìkDay
 = 
Ÿhî
.
m_wìkDay
;

104 
	gm_hour
 = 
Ÿhî
.
m_hour
;

105 
	gm_möuã
 = 
Ÿhî
.
m_möuã
;

106 
	gm_£c⁄d
 = 
Ÿhî
.
m_£c⁄d
;

107 
	gm_utcOff£t
 = 
Ÿhî
.
m_utcOff£t
;

108 
	gm_isDST
 = 
Ÿhî
.
m_isDST
;

111 
	g¥iv©e
:

112 
m_yór
;

113 
	gm_m⁄th
;

114 
	gm_yórDay
;

115 
	gm_m⁄thDay
;

116 
	gm_wìkDay
;

117 
	gm_hour
;

118 
	gm_möuã
;

119 
	gm_£c⁄d
;

120 
	gm_utcOff£t
;

121 
	gm_isDST
;

126 
usög
 
	gWTF
::
Gªg‹ünD©eTime
;

	@HashCountedSet.h

21 #i‚de‡
WTF_HashCou¡edSë_h


22 
	#WTF_HashCou¡edSë_h


	)

24 
	~<wtf/As£πi⁄s.h
>

25 
	~<wtf/HashM≠.h
>

26 
	~<wtf/Ve˘‹.h
>

28 
«me•a˚
 
	gWTF
 {

30 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
 =Åy≥«mê
DeÁu…Hash
<
VÆue
>::
Hash
,Åy≥«mê
	gTøôs
 = 
HashTøôs
<Value>>

31 ˛as†
	cHashCou¡edSë
 
föÆ
 {

32 
WTF_MAKE_FAST_ALLOCATED
;

33 
	g¥iv©e
:

34 
HashM≠
<
	tVÆue
, , 
	tHashFun˘i⁄s
, 
	tTøôs
> 
	tIm∂Ty≥
;

35 
	gpublic
:

36 
VÆue
 
	tVÆueTy≥
;

37 
ty≥«me
 
	tIm∂Ty≥
::
	tôî©‹
 iterator;

38 
ty≥«me
 
	tIm∂Ty≥
::
	tc⁄°_ôî©‹
 const_iterator;

39 
ty≥«me
 
	tIm∂Ty≥
::
	tAddResu…
 AddResult;

41 
sw≠
(
HashCou¡edSë
&);

43 
size
() const;

44 
ˇ∑côy
() const;

45 
boﬁ
 
isEm±y
() const;

48 
ôî©‹
 
begö
();

49 
ôî©‹
 
íd
();

50 
c⁄°_ôî©‹
 
begö
() const;

51 
c⁄°_ôî©‹
 
íd
() const;

53 
ôî©‹
 
föd
(c⁄° 
VÆueTy≥
&);

54 
c⁄°_ôî©‹
 
föd
(c⁄° 
VÆueTy≥
&) const;

55 
boﬁ
 
c⁄èös
(c⁄° 
VÆueTy≥
&) const;

56 
cou¡
(c⁄° 
VÆueTy≥
&) const;

61 
AddResu…
 
add
(c⁄° 
VÆueTy≥
&);

65 
boﬁ
 
ªmove
(c⁄° 
VÆueTy≥
&);

66 
boﬁ
 
ªmove
(
ôî©‹
);

70 
boﬁ
 
ªmoveAŒ
(
ôî©‹
);

71 
boﬁ
 
ªmoveAŒ
(c⁄° 
VÆueTy≥
&);

74 
˛ór
();

76 
	g¥iv©e
:

77 
Im∂Ty≥
 
m_im∂
;

80 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

81 
ölöe
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$sw≠
(
HashCou¡edSë
& 
Ÿhî
)

83 
m_im∂
.
	`sw≠
(
Ÿhî
.m_impl);

84 
	}
}

86 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

87 
ölöe
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$size
() const

89  
m_im∂
.
	`size
();

90 
	}
}

92 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

93 
ölöe
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$ˇ∑côy
() const

95  
m_im∂
.
	`ˇ∑côy
();

96 
	}
}

98 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

99 
ölöe
 
boﬁ
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$isEm±y
() const

101  
	`size
() == 0;

102 
	}
}

104 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

105 
ölöe
 
ty≥«me
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
ôî©‹
 
HashCou¡edSë
<
VÆue
, HashFun˘i⁄s, Tøôs>::
	$begö
()

107  
m_im∂
.
	`begö
();

108 
	}
}

110 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

111 
ölöe
 
ty≥«me
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
ôî©‹
 
HashCou¡edSë
<
VÆue
, HashFun˘i⁄s, Tøôs>::
	$íd
()

113  
m_im∂
.
	`íd
();

114 
	}
}

116 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

117 
ölöe
 
ty≥«me
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
c⁄°_ôî©‹
 
HashCou¡edSë
<
VÆue
, HashFun˘i⁄s, Tøôs>::
	$begö
() const

119  
m_im∂
.
	`begö
();

120 
	}
}

122 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

123 
ölöe
 
ty≥«me
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
c⁄°_ôî©‹
 
HashCou¡edSë
<
VÆue
, HashFun˘i⁄s, Tøôs>::
	$íd
() const

125  
m_im∂
.
	`íd
();

126 
	}
}

128 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

129 
ölöe
 
ty≥«me
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
ôî©‹
 
HashCou¡edSë
<
VÆue
, HashFun˘i⁄s, Tøôs>::
	$föd
(c⁄° 
VÆueTy≥
& 
vÆue
)

131  
m_im∂
.
	`föd
(
vÆue
);

132 
	}
}

134 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

135 
ölöe
 
ty≥«me
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
c⁄°_ôî©‹
 
HashCou¡edSë
<
VÆue
, HashFun˘i⁄s, Tøôs>::
	$föd
(c⁄° 
VÆueTy≥
& 
vÆue
) const

137  
m_im∂
.
	`föd
(
vÆue
);

138 
	}
}

140 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

141 
ölöe
 
boﬁ
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$c⁄èös
(c⁄° 
VÆueTy≥
& 
vÆue
) const

143  
m_im∂
.
	`c⁄èös
(
vÆue
);

144 
	}
}

146 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

147 
ölöe
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$cou¡
(c⁄° 
VÆueTy≥
& 
vÆue
) const

149  
m_im∂
.
	`gë
(
vÆue
);

150 
	}
}

152 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

153 
ölöe
 
ty≥«me
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
AddResu…
 
HashCou¡edSë
<
VÆue
, HashFun˘i⁄s, Tøôs>::
	$add
(c⁄° 
VÆueTy≥
 &
vÆue
)

155 
AddResu…
 
ªsu…
 = 
m_im∂
.
	`add
(
vÆue
, 0);

156 ++
ªsu…
.
ôî©‹
->
vÆue
;

157  
ªsu…
;

158 
	}
}

160 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

161 
ölöe
 
boﬁ
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$ªmove
(c⁄° 
VÆueTy≥
& 
vÆue
)

163  
	`ªmove
(
	`föd
(
vÆue
));

164 
	}
}

166 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

167 
ölöe
 
boﬁ
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$ªmove
(
ôî©‹
 
ô
)

169 i‡(
ô
 =
	`íd
())

170  
Ál£
;

172 
ﬁdVÆ
 = 
ô
->
vÆue
;

173 
	`ASSERT
(
ﬁdVÆ
);

174 
√wVÆ
 = 
ﬁdVÆ
 - 1;

175 i‡(
√wVÆ
) {

176 
ô
->
vÆue
 = 
√wVÆ
;

177  
Ál£
;

180 
m_im∂
.
	`ªmove
(
ô
);

181  
åue
;

182 
	}
}

184 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

185 
ölöe
 
boﬁ
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$ªmoveAŒ
(c⁄° 
VÆueTy≥
& 
vÆue
)

187  
	`ªmoveAŒ
(
	`föd
(
vÆue
));

188 
	}
}

190 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

191 
ölöe
 
boﬁ
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$ªmoveAŒ
(
ôî©‹
 
ô
)

193 i‡(
ô
 =
	`íd
())

194  
Ál£
;

196 
m_im∂
.
	`ªmove
(
ô
);

197  
åue
;

198 
	}
}

200 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

201 
ölöe
 
	gHashCou¡edSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$˛ór
()

203 
m_im∂
.
	`˛ór
();

204 
	}
}

206 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gVe˘‹Ty≥
>

207 
ölöe
 
c›yToVe˘‹
(c⁄° 
HashCou¡edSë
<
VÆue
, 
HashFun˘i⁄s
, 
Tøôs
>& 
cﬁÀ˘i⁄
, 
Ve˘‹Ty≥
& 
ve˘‹
)

209 
ty≥«me
 
	tHashCou¡edSë
<
	tVÆue
, 
	tHashFun˘i⁄s
, 
	tTøôs
>::
	tc⁄°_ôî©‹
 
	tôî©‹
;

211 
	gve˘‹
.
ªsize
(
cﬁÀ˘i⁄
.
size
());

213 
ôî©‹
 
	gô
 = 
cﬁÀ˘i⁄
.
begö
();

214 
ôî©‹
 
	gíd
 = 
cﬁÀ˘i⁄
.
íd
();

215 
	gi
 = 0; 
	gô
 !
íd
; ++it, ++i)

216 
	gve˘‹
[
i
] = *
ô
;

219 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

220 
ölöe
 
c›yToVe˘‹
(c⁄° 
HashCou¡edSë
<
VÆue
, 
HashFun˘i⁄s
, 
Tøôs
>& 
cﬁÀ˘i⁄
, 
Ve˘‹
<VÆue>& 
ve˘‹
)

222 
ty≥«me
 
	tHashCou¡edSë
<
	tVÆue
, 
	tHashFun˘i⁄s
, 
	tTøôs
>::
	tc⁄°_ôî©‹
 
	tôî©‹
;

224 
	gve˘‹
.
ªsize
(
cﬁÀ˘i⁄
.
size
());

226 
ôî©‹
 
	gô
 = 
cﬁÀ˘i⁄
.
begö
();

227 
ôî©‹
 
	gíd
 = 
cﬁÀ˘i⁄
.
íd
();

228 
	gi
 = 0; 
	gô
 !
íd
; ++it, ++i)

229 
	gve˘‹
[
i
] = (*
ô
).
key
;

235 
usög
 
	gWTF
::
HashCou¡edSë
;

	@HashFunctions.h

21 #i‚de‡
WTF_HashFun˘i⁄s_h


22 
	#WTF_HashFun˘i⁄s_h


	)

24 
	~<°döt.h
>

25 
	~<wtf/GëPå.h
>

26 
	~<wtf/RefPå.h
>

28 
«me•a˚
 
	gWTF
 {

30 
	gãm∂©e
<
size_t
 
	gsize
> 
	gI¡Ty≥s
;

31 
	gãm∂©e
<> 
	gI¡Ty≥s
<1> { 
öt8_t
 
	tSig√dTy≥
; 
uöt8_t
 
	tUnsig√dTy≥
; };

32 
	gãm∂©e
<> 
	gI¡Ty≥s
<2> { 
öt16_t
 
	tSig√dTy≥
; 
uöt16_t
 
	tUnsig√dTy≥
; };

33 
	gãm∂©e
<> 
	gI¡Ty≥s
<4> { 
öt32_t
 
	tSig√dTy≥
; 
uöt32_t
 
	tUnsig√dTy≥
; };

34 
	gãm∂©e
<> 
	gI¡Ty≥s
<8> { 
öt64_t
 
	tSig√dTy≥
; 
uöt64_t
 
	tUnsig√dTy≥
; };

39 
ölöe
 
ötHash
(
uöt8_t
 
key8
)

41 
	gkey
 = 
key8
;

42 
	gkey
 +~(
key
 << 15);

43 
	gkey
 ^(
key
 >> 10);

44 
	gkey
 +(
key
 << 3);

45 
	gkey
 ^(
key
 >> 6);

46 
	gkey
 +~(
key
 << 11);

47 
	gkey
 ^(
key
 >> 16);

48  
	gkey
;

52 
ölöe
 
ötHash
(
uöt16_t
 
key16
)

54 
	gkey
 = 
key16
;

55 
	gkey
 +~(
key
 << 15);

56 
	gkey
 ^(
key
 >> 10);

57 
	gkey
 +(
key
 << 3);

58 
	gkey
 ^(
key
 >> 6);

59 
	gkey
 +~(
key
 << 11);

60 
	gkey
 ^(
key
 >> 16);

61  
	gkey
;

65 
ölöe
 
ötHash
(
uöt32_t
 
key
)

67 
	gkey
 +~(
key
 << 15);

68 
	gkey
 ^(
key
 >> 10);

69 
	gkey
 +(
key
 << 3);

70 
	gkey
 ^(
key
 >> 6);

71 
	gkey
 +~(
key
 << 11);

72 
	gkey
 ^(
key
 >> 16);

73  
	gkey
;

77 
ölöe
 
ötHash
(
uöt64_t
 
key
)

79 
	gkey
 +~(
key
 << 32);

80 
	gkey
 ^(
key
 >> 22);

81 
	gkey
 +~(
key
 << 13);

82 
	gkey
 ^(
key
 >> 8);

83 
	gkey
 +(
key
 << 3);

84 
	gkey
 ^(
key
 >> 15);

85 
	gkey
 +~(
key
 << 27);

86 
	gkey
 ^(
key
 >> 31);

87  
	g°©ic_ˇ°
<>(
	gkey
);

91 
ölöe
 
∑úI¡Hash
(
key1
, 
key2
)

93 
	gsh‹tR™dom1
 = 277951225;

94 
	gsh‹tR™dom2
 = 95187966;

95 
uöt64_t
 
	gl⁄gR™dom
 = 19248658165952622LL;

97 
uöt64_t
 
	g¥odu˘
 = 
l⁄gR™dom
 * (
sh‹tR™dom1
 * 
key1
 + 
sh‹tR™dom2
 * 
key2
);

98 
	ghighBôs
 = 
°©ic_ˇ°
<>(
¥odu˘
 >> ((
uöt64_t
) - ()));

99  
	ghighBôs
;

102 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sI¡Hash
 {

103 
hash
(
T
 
key
Ë{  
ötHash
(
°©ic_ˇ°
<
ty≥«me
 
I¡Ty≥s
<(T)>::
Unsig√dTy≥
>(key)); }

104 
boﬁ
 
equÆ
(
T
 
a
, T 
b
Ë{  
	ga
 == b; }

105 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
åue
;

108 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sFlﬂtHash
 {

109 
ty≥«me
 
	tI¡Ty≥s
<(
	tT
)>::
	tUnsig√dTy≥
 
	tBôs
;

110 
hash
(
T
 
key
)

112  
ötHash
(
bôwi£_ˇ°
<
Bôs
>(
key
));

114 
boﬁ
 
equÆ
(
T
 
a
, T 
b
)

116  
	gbôwi£_ˇ°
<
	gBôs
>(
	ga
Ë=
bôwi£_ˇ°
<
Bôs
>(
b
);

118 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
åue
;

123 
	gãm∂©e
<
ty≥«me
 
	gT
, 
boﬁ
 
	gisSm¨tPoöãr
>

124 
	gPåHashBa£
;

126 
	gãm∂©e
 <
ty≥«me
 
	gT
>

127 
	gPåHashBa£
<
	gT
, 
	gÁl£
 > {

128 
T
 
	tPåTy≥
;

130 
hash
(
PåTy≥
 
key
Ë{  
	gI¡Hash
<
	guöçå_t
>::hash(
ªöãΩªt_ˇ°
<
uöçå_t
>(key)); }

131 
boﬁ
 
equÆ
(
PåTy≥
 
a
, PåTy≥ 
b
Ë{  
	ga
 == b; }

132 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
åue
;

135 
	gãm∂©e
 <
ty≥«me
 
	gT
>

136 
	gPåHashBa£
<
	gT
, 
	gåue
 > {

137 
ty≥«me
 
	tGëPåHñ≥r
<
	tT
>::
	tPåTy≥
 PtrType;

139 
hash
(
PåTy≥
 
key
Ë{  
	gI¡Hash
<
	guöçå_t
>::hash(
ªöãΩªt_ˇ°
<
uöçå_t
>(key)); }

140 
boﬁ
 
equÆ
(
PåTy≥
 
a
, PåTy≥ 
b
Ë{  
	ga
 == b; }

141 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
åue
;

143 
hash
(c⁄° 
T
& 
key
Ë{  hash(
gëPå
(key)); }

144 
boﬁ
 
equÆ
(c⁄° 
T
& 
a
, c⁄° T& 
b
Ë{  
gëPå
(a) == getPtr(b); }

145 
boﬁ
 
equÆ
(
PåTy≥
 
a
, c⁄° 
T
& 
b
Ë{  
	ga
 =
gëPå
(b); }

146 
boﬁ
 
equÆ
(c⁄° 
T
& 
a
, 
PåTy≥
 
b
Ë{  
gëPå
(a) == b; }

149 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gPåHash
 : 
PåHashBa£
<
T
, 
	gIsSm¨tPå
<T>::
vÆue
> {

154 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gDeÁu…Hash
;

156 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
	sPaúHash
 {

157 
hash
(c⁄° 
°d
::
∑ú
<
T
, 
U
>& 
p
)

159  
∑úI¡Hash
(
DeÁu…Hash
<
T
>::
Hash
::
hash
(
p
.
fú°
), DeÁu…Hash<
U
>::Hash::hash’.
£c⁄d
));

161 
boﬁ
 
equÆ
(c⁄° 
°d
::
∑ú
<
T
, 
U
>& 
a
, c⁄° std::∑ú<T, U>& 
b
)

163  
	gDeÁu…Hash
<
	gT
>::
Hash
::
equÆ
(
a
.
fú°
, 
b
.fú°Ë&& DeÁu…Hash<
	gU
>::Hash::equÆ◊.
£c⁄d
, b.second);

165 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
DeÁu…Hash
<
T
>::
Hash
::
ß„ToCom∑ªToEm±yOrDñëed
 && DeÁu…Hash<
U
>::Hash::safeToCompareToEmptyOrDeleted;

168 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
	sI¡PaúHash
 {

169 
hash
(c⁄° 
°d
::
∑ú
<
T
, 
U
>& 
p
Ë{  
∑úI¡Hash
’.
fú°
,Ö.
£c⁄d
); }

170 
boﬁ
 
equÆ
(c⁄° 
°d
::
∑ú
<
T
, 
U
>& 
a
, c⁄° std::∑ú<T, U>& 
b
Ë{  
	gPaúHash
<
	gT
, T>::equal(a, b); }

171 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
PaúHash
<
T
, 
	gU
>::
ß„ToCom∑ªToEm±yOrDñëed
;

176 
	gãm∂©e
<> 
	gDeÁu…Hash
<> { 
	gI¡Hash
<> 
	tHash
; };

177 
	gãm∂©e
<> 
	gDeÁu…Hash
<> { 
	gI¡Hash
<> 
	tHash
; };

178 
	gãm∂©e
<> 
	gDeÁu…Hash
<> { 
	gI¡Hash
<> 
	tHash
; };

179 
	gãm∂©e
<> 
	gDeÁu…Hash
<> { 
	gI¡Hash
<> 
	tHash
; };

180 
	gãm∂©e
<> 
	gDeÁu…Hash
<> { 
	gI¡Hash
<> 
	tHash
; };

181 
	gãm∂©e
<> 
	gDeÁu…Hash
<> { 
	gI¡Hash
<> 
	tHash
; };

182 
	gãm∂©e
<> 
	gDeÁu…Hash
<> { 
	gI¡Hash
<> 
	tHash
; };

183 
	gãm∂©e
<> 
	gDeÁu…Hash
<> { 
	gI¡Hash
<> 
	tHash
; };

185 #i‡
deföed
(
_NATIVE_WCHAR_T_DEFINED
)

186 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	gwch¨_t
> { 
	gI¡Hash
<
	twch¨_t
> 
	tHash
; };

189 
	gãm∂©e
<> 
	gDeÁu…Hash
<> { 
	gFlﬂtHash
<> 
	tHash
; };

190 
	gãm∂©e
<> 
	gDeÁu…Hash
<> { 
	gFlﬂtHash
<> 
	tHash
; };

194 
	gãm∂©e
<
ty≥«me
 
	gP
> 
	gDeÁu…Hash
<P*> { 
	gPåHash
<
	tP
*> 
	tHash
; };

195 
	gãm∂©e
<
ty≥«me
 
	gP
> 
	gDeÁu…Hash
<
	gRefPå
<P>> { 
	gPåHash
<
	tRefPå
<
	tP
>> 
	tHash
; };

196 
	gãm∂©e
<
ty≥«me
 
	gP
,Åy≥«mê
	gDñëî
> 
	gDeÁu…Hash
<
	g°d
::
unique_±r
<
P
, Dñëî>> { 
	gPåHash
<
	t°d
::
	tunique_±r
<
	tP
, 
	tDñëî
>> 
	tHash
; };

200 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

201 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

202 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

203 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

204 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

205 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

206 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

207 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

208 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

209 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

210 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

211 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

212 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

213 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

214 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

215 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<, >> { 
	gI¡PaúHash
<, > 
	tHash
; };

219 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
	gDeÁu…Hash
<
	g°d
::
∑ú
<
T
, U>> { 
	gPaúHash
<
	tT
, 
	tU
> 
	tHash
; };

223 
usög
 
	gWTF
::
DeÁu…Hash
;

224 
usög
 
	gWTF
::
I¡Hash
;

225 
usög
 
	gWTF
::
PåHash
;

	@HashIterators.h

26 #i‚de‡
WTF_HashIãøt‹s_h


27 
	#WTF_HashIãøt‹s_h


	)

29 
«me•a˚
 
	gWTF
 {

31 
	gãm∂©e
<
ty≥«me
 
	gHashTabÀTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gM≠≥dTy≥
> 
	gHashTabÀC⁄°KeysIãøt‹
;

32 
	gãm∂©e
<
ty≥«me
 
	gHashTabÀTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gM≠≥dTy≥
> 
	gHashTabÀC⁄°VÆuesIãøt‹
;

33 
	gãm∂©e
<
ty≥«me
 
	gHashTabÀTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gM≠≥dTy≥
> 
	gHashTabÀKeysIãøt‹
;

34 
	gãm∂©e
<
ty≥«me
 
	gHashTabÀTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gM≠≥dTy≥
> 
	gHashTabÀVÆuesIãøt‹
;

36 
	gãm∂©e
<
ty≥«me
 
	gHashTabÀTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gM≠≥dTy≥
> 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
<HashTabÀTy≥, 
	gKeyVÆuePaú
<KeyType, MappedType>> {

37 
	g¥iv©e
:

38 
KeyVÆuePaú
<
	tKeyTy≥
, 
	tM≠≥dTy≥
> 
	tVÆueTy≥
;

39 
	gpublic
:

40 
HashTabÀC⁄°KeysIãøt‹
<
	tHashTabÀTy≥
, 
	tKeyTy≥
, 
	tM≠≥dTy≥
> 
	tKeys
;

41 
	gHashTabÀC⁄°VÆuesIãøt‹
<
	tHashTabÀTy≥
, 
	tKeyTy≥
, 
	tM≠≥dTy≥
> 
	tVÆues
;

43 
HashTabÀC⁄°Iãøt‹Ad≠ãr
() {}

44 
HashTabÀC⁄°Iãøt‹Ad≠ãr
(c⁄° 
ty≥«me
 
HashTabÀTy≥
::
c⁄°_ôî©‹
& 
im∂
Ë: 
m_im∂
(impl) {}

46 c⁄° 
VÆueTy≥
* 
gë
(Ëc⁄° {  (c⁄° VÆueTy≥*)
m_im∂
.get(); }

47 c⁄° 
	gVÆueTy≥
& 
	g›î©‹
*(Ëc⁄° {  *
gë
(); }

48 c⁄° 
VÆueTy≥
* 
	g›î©‹
->(Ëc⁄° {  
gë
(); }

50 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
& 
	g›î©‹
++(Ë{ ++
	gm_im∂
;  *
	gthis
; }

53 
Keys
 
keys
(Ë{  Keys(*
this
); }

54 
VÆues
 
vÆues
(Ë{  VÆues(*
this
); }

56 
ty≥«me
 
	gHashTabÀTy≥
::
c⁄°_ôî©‹
 
m_im∂
;

59 
	gãm∂©e
<
ty≥«me
 
	gHashTabÀTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gM≠≥dTy≥
> 
	gHashTabÀIãøt‹Ad≠ãr
<HashTabÀTy≥, 
	gKeyVÆuePaú
<KeyType, MappedType>> {

60 
	g¥iv©e
:

61 
KeyVÆuePaú
<
	tKeyTy≥
, 
	tM≠≥dTy≥
> 
	tVÆueTy≥
;

62 
	gpublic
:

63 
HashTabÀKeysIãøt‹
<
	tHashTabÀTy≥
, 
	tKeyTy≥
, 
	tM≠≥dTy≥
> 
	tKeys
;

64 
	gHashTabÀVÆuesIãøt‹
<
	tHashTabÀTy≥
, 
	tKeyTy≥
, 
	tM≠≥dTy≥
> 
	tVÆues
;

66 
HashTabÀIãøt‹Ad≠ãr
() {}

67 
HashTabÀIãøt‹Ad≠ãr
(c⁄° 
ty≥«me
 
HashTabÀTy≥
::
ôî©‹
& 
im∂
Ë: 
m_im∂
(impl) {}

69 
VÆueTy≥
* 
gë
(Ëc⁄° {  (VÆueTy≥*)
m_im∂
.get(); }

70 
	gVÆueTy≥
& 
	g›î©‹
*(Ëc⁄° {  *
gë
(); }

71 
VÆueTy≥
* 
	g›î©‹
->(Ëc⁄° {  
gë
(); }

73 
	gHashTabÀIãøt‹Ad≠ãr
& 
	g›î©‹
++(Ë{ ++
	gm_im∂
;  *
	gthis
; }

76 
›î©‹
 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
<
	gHashTabÀTy≥
, 
	gVÆueTy≥
>() {

77 
ty≥«me
 
	gHashTabÀTy≥
::
c⁄°_ôî©‹
 
i
 = 
m_im∂
;

78  
	gi
;

81 
Keys
 
keys
(Ë{  Keys(*
this
); }

82 
VÆues
 
vÆues
(Ë{  VÆues(*
this
); }

84 
ty≥«me
 
	gHashTabÀTy≥
::
ôî©‹
 
m_im∂
;

87 
	gãm∂©e
<
ty≥«me
 
	gHashTabÀTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gM≠≥dTy≥
> 
	sHashTabÀC⁄°KeysIãøt‹
 {

88 
	g¥iv©e
:

89 
HashTabÀC⁄°Iãøt‹Ad≠ãr
<
	tHashTabÀTy≥
, 
	tKeyVÆuePaú
<
	tKeyTy≥
, 
	tM≠≥dTy≥
>> 
	tC⁄°Iãøt‹
;

91 
	gpublic
:

92 
HashTabÀC⁄°KeysIãøt‹
(c⁄° 
C⁄°Iãøt‹
& 
im∂
Ë: 
m_im∂
(impl) {}

94 c⁄° 
KeyTy≥
* 
gë
(Ëc⁄° {  &(
m_im∂
.gë()->
key
); }

95 c⁄° 
	gKeyTy≥
& 
	g›î©‹
*(Ëc⁄° {  *
gë
(); }

96 c⁄° 
KeyTy≥
* 
	g›î©‹
->(Ëc⁄° {  
gë
(); }

98 
	gHashTabÀC⁄°KeysIãøt‹
& 
	g›î©‹
++(Ë{ ++
	gm_im∂
;  *
	gthis
; }

101 
C⁄°Iãøt‹
 
	gm_im∂
;

104 
	gãm∂©e
<
ty≥«me
 
	gHashTabÀTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gM≠≥dTy≥
> 
	sHashTabÀC⁄°VÆuesIãøt‹
 {

105 
	g¥iv©e
:

106 
HashTabÀC⁄°Iãøt‹Ad≠ãr
<
	tHashTabÀTy≥
, 
	tKeyVÆuePaú
<
	tKeyTy≥
, 
	tM≠≥dTy≥
>> 
	tC⁄°Iãøt‹
;

108 
	gpublic
:

109 
HashTabÀC⁄°VÆuesIãøt‹
(c⁄° 
C⁄°Iãøt‹
& 
im∂
Ë: 
m_im∂
(impl) {}

111 c⁄° 
M≠≥dTy≥
* 
gë
(Ëc⁄° {  &(
m_im∂
.gë()->
vÆue
); }

112 c⁄° 
	gM≠≥dTy≥
& 
	g›î©‹
*(Ëc⁄° {  *
gë
(); }

113 c⁄° 
M≠≥dTy≥
* 
	g›î©‹
->(Ëc⁄° {  
gë
(); }

115 
	gHashTabÀC⁄°VÆuesIãøt‹
& 
	g›î©‹
++(Ë{ ++
	gm_im∂
;  *
	gthis
; }

118 
C⁄°Iãøt‹
 
	gm_im∂
;

121 
	gãm∂©e
<
ty≥«me
 
	gHashTabÀTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gM≠≥dTy≥
> 
	sHashTabÀKeysIãøt‹
 {

122 
	g¥iv©e
:

123 
HashTabÀIãøt‹Ad≠ãr
<
	tHashTabÀTy≥
, 
	tKeyVÆuePaú
<
	tKeyTy≥
, 
	tM≠≥dTy≥
>> 
	tIãøt‹
;

124 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
<
	tHashTabÀTy≥
, 
	tKeyVÆuePaú
<
	tKeyTy≥
, 
	tM≠≥dTy≥
>> 
	tC⁄°Iãøt‹
;

126 
	gpublic
:

127 
HashTabÀKeysIãøt‹
(c⁄° 
Iãøt‹
& 
im∂
Ë: 
m_im∂
(impl) {}

129 
KeyTy≥
* 
gë
(Ëc⁄° {  &(
m_im∂
.gë()->
key
); }

130 
	gKeyTy≥
& 
	g›î©‹
*(Ëc⁄° {  *
gë
(); }

131 
KeyTy≥
* 
	g›î©‹
->(Ëc⁄° {  
gë
(); }

133 
	gHashTabÀKeysIãøt‹
& 
	g›î©‹
++(Ë{ ++
	gm_im∂
;  *
	gthis
; }

136 
›î©‹
 
	gHashTabÀC⁄°KeysIãøt‹
<
	gHashTabÀTy≥
, 
	gKeyTy≥
, 
	gM≠≥dTy≥
>() {

137 
C⁄°Iãøt‹
 
	gi
 = 
m_im∂
;

138  
	gi
;

141 
Iãøt‹
 
	gm_im∂
;

144 
	gãm∂©e
<
ty≥«me
 
	gHashTabÀTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gM≠≥dTy≥
> 
	sHashTabÀVÆuesIãøt‹
 {

145 
	g¥iv©e
:

146 
HashTabÀIãøt‹Ad≠ãr
<
	tHashTabÀTy≥
, 
	tKeyVÆuePaú
<
	tKeyTy≥
, 
	tM≠≥dTy≥
>> 
	tIãøt‹
;

147 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
<
	tHashTabÀTy≥
, 
	tKeyVÆuePaú
<
	tKeyTy≥
, 
	tM≠≥dTy≥
>> 
	tC⁄°Iãøt‹
;

149 
	gpublic
:

150 
HashTabÀVÆuesIãøt‹
(c⁄° 
Iãøt‹
& 
im∂
Ë: 
m_im∂
(impl) {}

152 
M≠≥dTy≥
* 
gë
(Ëc⁄° {  &(
m_im∂
.gë()->
vÆue
); }

153 
	gM≠≥dTy≥
& 
	g›î©‹
*(Ëc⁄° {  *
gë
(); }

154 
M≠≥dTy≥
* 
	g›î©‹
->(Ëc⁄° {  
gë
(); }

156 
	gHashTabÀVÆuesIãøt‹
& 
	g›î©‹
++(Ë{ ++
	gm_im∂
;  *
	gthis
; }

159 
›î©‹
 
	gHashTabÀC⁄°VÆuesIãøt‹
<
	gHashTabÀTy≥
, 
	gKeyTy≥
, 
	gM≠≥dTy≥
>() {

160 
C⁄°Iãøt‹
 
	gi
 = 
m_im∂
;

161  
	gi
;

164 
Iãøt‹
 
	gm_im∂
;

167 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

168 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
HashTabÀC⁄°KeysIãøt‹
<
T
, 
	gU
, 
	gV
>& 
	ga
, c⁄° 
	gHashTabÀC⁄°KeysIãøt‹
<
	gT
, U, V>& 
	gb
)

170  
	ga
.
	gm_im∂
 =
b
.
m_im∂
;

173 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

174 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
HashTabÀC⁄°KeysIãøt‹
<
T
, 
	gU
, 
	gV
>& 
	ga
, c⁄° 
	gHashTabÀC⁄°KeysIãøt‹
<
	gT
, U, V>& 
	gb
)

176  
	ga
.
	gm_im∂
 !
b
.
m_im∂
;

179 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

180 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
HashTabÀC⁄°VÆuesIãøt‹
<
T
, 
	gU
, 
	gV
>& 
	ga
, c⁄° 
	gHashTabÀC⁄°VÆuesIãøt‹
<
	gT
, U, V>& 
	gb
)

182  
	ga
.
	gm_im∂
 =
b
.
m_im∂
;

185 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

186 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
HashTabÀC⁄°VÆuesIãøt‹
<
T
, 
	gU
, 
	gV
>& 
	ga
, c⁄° 
	gHashTabÀC⁄°VÆuesIãøt‹
<
	gT
, U, V>& 
	gb
)

188  
	ga
.
	gm_im∂
 !
b
.
m_im∂
;

191 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

192 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
HashTabÀKeysIãøt‹
<
T
, 
	gU
, 
	gV
>& 
	ga
, c⁄° 
	gHashTabÀKeysIãøt‹
<
	gT
, U, V>& 
	gb
)

194  
	ga
.
	gm_im∂
 =
b
.
m_im∂
;

197 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

198 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
HashTabÀKeysIãøt‹
<
T
, 
	gU
, 
	gV
>& 
	ga
, c⁄° 
	gHashTabÀKeysIãøt‹
<
	gT
, U, V>& 
	gb
)

200  
	ga
.
	gm_im∂
 !
b
.
m_im∂
;

203 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

204 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
HashTabÀVÆuesIãøt‹
<
T
, 
	gU
, 
	gV
>& 
	ga
, c⁄° 
	gHashTabÀVÆuesIãøt‹
<
	gT
, U, V>& 
	gb
)

206  
	ga
.
	gm_im∂
 =
b
.
m_im∂
;

209 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

210 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
HashTabÀVÆuesIãøt‹
<
T
, 
	gU
, 
	gV
>& 
	ga
, c⁄° 
	gHashTabÀVÆuesIãøt‹
<
	gT
, U, V>& 
	gb
)

212  
	ga
.
	gm_im∂
 !
b
.
m_im∂
;

	@HashMap.h

21 #i‚de‡
WTF_HashM≠_h


22 
	#WTF_HashM≠_h


	)

24 
	~<öôülizî_li°
>

25 
	~<wtf/HashTabÀ.h
>

26 
	~<wtf/Iãøt‹R™ge.h
>

28 
«me•a˚
 
	gWTF
 {

30 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sKeyVÆuePaúKeyExåa˘‹
 {

31 c⁄° 
ty≥«me
 
	gT
::
KeyTy≥
& 
exåa˘
(c⁄° 
T
& 
p
Ë{ Ö.
key
; }

34 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
 =Åy≥«mê
DeÁu…Hash
<
KeyArg
>::
Hash
,

35 
ty≥«me
 
	gKeyTøôsArg
 = 
HashTøôs
<
KeyArg
>,Åy≥«mê
	gM≠≥dTøôsArg
 = HashTøôs<
M≠≥dArg
>>

36 ˛as†
	cHashM≠
 
föÆ
 {

37 
WTF_MAKE_FAST_ALLOCATED
;

38 
	g¥iv©e
:

39 
KeyTøôsArg
 
	tKeyTøôs
;

40 
M≠≥dTøôsArg
 
	tM≠≥dTøôs
;

42 
	gKeyVÆuePaúTøôs
 : 
KeyVÆuePaúHashTøôs
<
KeyTøôs
, 
	gM≠≥dTøôs
> {

43 c⁄° 
boﬁ
 
	ghasIsEm±yVÆueFun˘i⁄
 = 
åue
;

44 
boﬁ
 
isEm±yVÆue
(c⁄° 
ty≥«me
 
KeyVÆuePaúHashTøôs
<
KeyTøôs
, 
M≠≥dTøôs
>::
TøôTy≥
& 
vÆue
)

46  
isHashTøôsEm±yVÆue
<
KeyTøôs
>(
vÆue
.
key
);

50 
	gpublic
:

51 
ty≥«me
 
	tKeyTøôs
::
	tTøôTy≥
 
	tKeyTy≥
;

52 
ty≥«me
 
	tM≠≥dTøôs
::
	tTøôTy≥
 
	tM≠≥dTy≥
;

53 
ty≥«me
 
	tKeyVÆuePaúTøôs
::
	tTøôTy≥
 
	tKeyVÆuePaúTy≥
;

55 
	g¥iv©e
:

56 
ty≥«me
 
	tM≠≥dTøôs
::
	tPìkTy≥
 
	tM≠≥dPìkTy≥
;

58 
HashArg
 
	tHashFun˘i⁄s
;

60 
	gHashTabÀ
<
	tKeyTy≥
, 
	tKeyVÆuePaúTy≥
, 
	tKeyVÆuePaúKeyExåa˘‹
<KeyValuePairType>,

61 
	tHashFun˘i⁄s
, 
	tKeyVÆuePaúTøôs
, 
	tKeyTøôs
> 
	tHashTabÀTy≥
;

63 
˛ass
 
	gHashM≠KeysProxy
;

64 
˛ass
 
	gHashM≠VÆuesProxy
;

66 
	gpublic
:

67 
HashTabÀIãøt‹Ad≠ãr
<
	tHashTabÀTy≥
, 
	tKeyVÆuePaúTy≥
> 
	tôî©‹
;

68 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
<
	tHashTabÀTy≥
, 
	tKeyVÆuePaúTy≥
> 
	tc⁄°_ôî©‹
;

69 
ty≥«me
 
	tHashTabÀTy≥
::
	tAddResu…
 AddResult;

71 
	gpublic
:

72 
HashM≠
()

76 
HashM≠
(
°d
::
öôülizî_li°
<
KeyVÆuePaúTy≥
> 
öôülizîLi°
)

78 c⁄°áuto& 
keyVÆuePaú
 : 
öôülizîLi°
)

79 
add
(
keyVÆuePaú
.
key
, keyVÆuePaú.
vÆue
);

82 
sw≠
(
HashM≠
&);

84 
size
() const;

85 
ˇ∑côy
() const;

86 
boﬁ
 
isEm±y
() const;

89 
ôî©‹
 
begö
();

90 
ôî©‹
 
íd
();

91 
c⁄°_ôî©‹
 
begö
() const;

92 
c⁄°_ôî©‹
 
íd
() const;

94 
	gIãøt‹R™ge
<
ty≥«me
 
	gôî©‹
::
Keys
> 
keys
(Ë{  
makeIãøt‹R™ge
(
begö
().keys(), 
íd
().keys()); }

95 c⁄° 
	gIãøt‹R™ge
<
ty≥«me
 
	gc⁄°_ôî©‹
::
Keys
> 
keys
(Ëc⁄° {  
makeIãøt‹R™ge
(
begö
().keys(), 
íd
().keys()); }

97 
	gIãøt‹R™ge
<
ty≥«me
 
	gôî©‹
::
VÆues
> 
vÆues
(Ë{  
makeIãøt‹R™ge
(
begö
().vÆues(), 
íd
().values()); }

98 c⁄° 
	gIãøt‹R™ge
<
ty≥«me
 
	gc⁄°_ôî©‹
::
VÆues
> 
vÆues
(Ëc⁄° {  
makeIãøt‹R™ge
(
begö
().vÆues(), 
íd
().values()); }

100 
ôî©‹
 
föd
(c⁄° 
KeyTy≥
&);

101 
c⁄°_ôî©‹
 
föd
(c⁄° 
KeyTy≥
&) const;

102 
boﬁ
 
c⁄èös
(c⁄° 
KeyTy≥
&) const;

103 
M≠≥dPìkTy≥
 
gë
(c⁄° 
KeyTy≥
&) const;

108 
	gãm∂©e
<
ty≥«me
 
	gV
> 
AddResu…
 
£t
(c⁄° 
KeyTy≥
&, 
V
&&);

109 
	gãm∂©e
<
ty≥«me
 
	gV
> 
AddResu…
 
£t
(
KeyTy≥
&&, 
V
&&);

114 
	gãm∂©e
<
ty≥«me
 
	gV
> 
AddResu…
 
add
(c⁄° 
KeyTy≥
&, 
V
&&);

115 
	gãm∂©e
<
ty≥«me
 
	gV
> 
AddResu…
 
add
(
KeyTy≥
&&, 
V
&&);

118 
	gãm∂©e
<
ty≥«me
 
	gV
> 
AddResu…
 
Á°Add
(c⁄° 
KeyTy≥
&, 
V
&&);

119 
	gãm∂©e
<
ty≥«me
 
	gV
> 
AddResu…
 
Á°Add
(
KeyTy≥
&&, 
V
&&);

121 
boﬁ
 
ªmove
(c⁄° 
KeyTy≥
&);

122 
boﬁ
 
ªmove
(
ôî©‹
);

123 
	gãm∂©e
<
ty≥«me
 
	gFun˘‹
>

124 
ªmoveIf
(c⁄° 
Fun˘‹
& 
fun˘‹
);

125 
˛ór
();

127 
M≠≥dTy≥
 
èke
(c⁄° 
KeyTy≥
&);

134 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
ôî©‹
 
föd
(c⁄° 
T
&);

135 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
c⁄°_ôî©‹
 
föd
(c⁄° 
T
&) const;

136 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
boﬁ
 
c⁄èös
(c⁄° 
T
&) const;

144 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gK
,Åy≥«mê
	gV
> 
AddResu…
 
add
(
K
&&, 
V
&&);

147 
	gãm∂©e
<
ty≥«me
 
	gK
 = 
KeyTy≥
>Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<
K
>::
vÆue
, 
	gôî©‹
>::
ty≥
 
föd
—y≥«mê
GëPåHñ≥r
<K>::
PåTy≥
);

148 
	gãm∂©e
<
ty≥«me
 
	gK
 = 
KeyTy≥
>Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<
K
>::
vÆue
, 
	gc⁄°_ôî©‹
>::
ty≥
 
föd
—y≥«mê
GëPåHñ≥r
<K>::
PåTy≥
) const;

149 
	gãm∂©e
<
ty≥«me
 
	gK
 = 
KeyTy≥
>Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<
K
>::
vÆue
, 
	gboﬁ
>::
ty≥
 
c⁄èös
—y≥«mê
GëPåHñ≥r
<K>::
PåTy≥
) const;

150 
	gãm∂©e
<
ty≥«me
 
	gK
 = 
KeyTy≥
>Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<
K
>::
vÆue
, 
	gM≠≥dPìkTy≥
>::
ty≥
 
gë
—y≥«mê
GëPåHñ≥r
<K>::
PåTy≥
) const;

151 
	gãm∂©e
<
ty≥«me
 
	gK
 = 
KeyTy≥
>Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<
K
>::
vÆue
, 
	gboﬁ
>::
ty≥
 
ªmove
—y≥«mê
GëPåHñ≥r
<K>::
PåTy≥
);

152 
	gãm∂©e
<
ty≥«me
 
	gK
 = 
KeyTy≥
>Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<
K
>::
vÆue
, 
	gM≠≥dTy≥
>::
ty≥
 
èke
—y≥«mê
GëPåHñ≥r
<K>::
PåTy≥
);

154 
checkC⁄si°ícy
() const;

156 
boﬁ
 
isVÆidKey
(c⁄° 
KeyTy≥
&);

158 
	g¥iv©e
:

159 
ãm∂©e
<
ty≥«me
 
K
,Åy≥«mê
	gV
>

160 
AddResu…
 
ölöeSë
(
K
&&, 
V
&&);

162 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

163 
AddResu…
 
ölöeAdd
(
K
&&, 
V
&&);

165 
HashTabÀTy≥
 
	gm_im∂
;

168 
	gãm∂©e
<
ty≥«me
 
	gVÆueTøôs
,Åy≥«mê
	gHashFun˘i⁄s
>

169 
	sHashM≠Tøn¶©‹
 {

170 
	gãm∂©e
<
ty≥«me
 
	gT
> 
hash
(c⁄° 
T
& 
key
Ë{  
	gHashFun˘i⁄s
::hash(key); }

171 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
boﬁ
 
equÆ
(c⁄° 
T
& 
a
, c⁄° 
U
& 
b
Ë{  
	gHashFun˘i⁄s
::equal(a, b); }

172 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
> 
å™¶©e
(
T
& 
loˇti⁄
, 
U
&& 
key
, 
V
&& 
m≠≥d
)

174 
	gloˇti⁄
.
	gkey
 = 
°d
::
f‹w¨d
<
U
>(
key
);

175 
	gloˇti⁄
.
	gvÆue
 = 
°d
::
f‹w¨d
<
V
>(
m≠≥d
);

179 
	gãm∂©e
<
ty≥«me
 
	gVÆueTøôs
,Åy≥«mê
	gTøn¶©‹
>

180 
	sHashM≠Tøn¶©‹Ad≠ãr
 {

181 
	gãm∂©e
<
ty≥«me
 
	gT
> 
hash
(c⁄° 
T
& 
key
Ë{  
	gTøn¶©‹
::hash(key); }

182 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
boﬁ
 
equÆ
(c⁄° 
T
& 
a
, c⁄° 
U
& 
b
Ë{  
	gTøn¶©‹
::equal(a, b); }

183 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
> 
å™¶©e
(
T
& 
loˇti⁄
, 
U
&& 
key
, 
V
&& 
m≠≥d
, 
hashCode
)

185 
	gTøn¶©‹
::
å™¶©e
(
loˇti⁄
.
key
, key, 
hashCode
);

186 
	gloˇti⁄
.
	gvÆue
 = 
°d
::
f‹w¨d
<
V
>(
m≠≥d
);

190 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

191 
ölöe
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$sw≠
(
HashM≠
& 
Ÿhî
)

193 
m_im∂
.
	`sw≠
(
Ÿhî
.m_impl);

194 
	}
}

196 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

197 
ölöe
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$size
() const

199  
m_im∂
.
	`size
();

200 
	}
}

202 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

203 
ölöe
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$ˇ∑côy
() const

205  
m_im∂
.
	`ˇ∑côy
();

206 
	}
}

208 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

209 
ölöe
 
boﬁ
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$isEm±y
() const

211  
m_im∂
.
	`isEm±y
();

212 
	}
}

214 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

215 
ölöe
áutÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
begö
(Ë-> 
ôî©‹


217  
m_im∂
.
begö
();

220 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

221 
ölöe
áutÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
íd
(Ë-> 
ôî©‹


223  
m_im∂
.
íd
();

226 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

227 
ölöe
áutÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$begö
(Ëc⁄° -> 
c⁄°_ôî©‹


229  
m_im∂
.
	`begö
();

230 
	}
}

232 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

233 
ölöe
áutÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$íd
(Ëc⁄° -> 
c⁄°_ôî©‹


235  
m_im∂
.
	`íd
();

236 
	}
}

238 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

239 
ölöe
áutÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
föd
(c⁄° 
KeyTy≥
& 
key
Ë-> 
ôî©‹


241  
m_im∂
.
föd
(
key
);

244 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

245 
ölöe
áutÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$föd
(c⁄° 
KeyTy≥
& 
key
Ëc⁄° -> 
c⁄°_ôî©‹


247  
m_im∂
.
	`föd
(
key
);

248 
	}
}

250 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

251 
ölöe
 
boﬁ
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$c⁄èös
(c⁄° 
KeyTy≥
& 
key
) const

253  
m_im∂
.
	`c⁄èös
(
key
);

254 
	}
}

256 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

257 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gTYPE
>

258 
ölöe
 
ty≥«me
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
ôî©‹


259 
HashM≠
<
T
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$föd
(c⁄° 
TYPE
& 
vÆue
)

261  
m_im∂
.
ãm∂©e
 
föd
<
HashM≠Tøn¶©‹Ad≠ãr
<
KeyVÆuePaúTøôs
, 
HashTøn¶©‹
>>(
vÆue
);

262 
	}
}

264 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

265 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gTYPE
>

266 
ölöe
 
ty≥«me
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
c⁄°_ôî©‹


267 
HashM≠
<
T
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$föd
(c⁄° 
TYPE
& 
vÆue
) const

269  
m_im∂
.
ãm∂©e
 
föd
<
HashM≠Tøn¶©‹Ad≠ãr
<
KeyVÆuePaúTøôs
, 
HashTøn¶©‹
>>(
vÆue
);

270 
	}
}

272 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

273 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gTYPE
>

274 
ölöe
 
boﬁ
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$c⁄èös
(c⁄° 
TYPE
& 
vÆue
) const

276  
m_im∂
.
ãm∂©e
 
c⁄èös
<
HashM≠Tøn¶©‹Ad≠ãr
<
KeyVÆuePaúTøôs
, 
HashTøn¶©‹
>>(
vÆue
);

277 
	}
}

279 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

280 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

281 autÿ
	gHashM≠
<
	gKeyArg
, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
ölöeSë
(
K
&& 
key
, 
V
&& 
vÆue
Ë-> 
	gAddResu…


283 
AddResu…
 
	gªsu…
 = 
ölöeAdd
(
°d
::
f‹w¨d
<
K
>(
key
), std::f‹w¨d<
V
>(
vÆue
));

284 i‡(!
	gªsu…
.
	gisNewE¡ry
) {

286 
	gªsu…
.
	gôî©‹
->
	gvÆue
 = 
°d
::
f‹w¨d
<
V
>(
vÆue
);

288  
	gªsu…
;

291 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

292 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

293 
ALWAYS_INLINE
áutÿ
	gHashM≠
<
	gKeyArg
, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
ölöeAdd
(
K
&& 
key
, 
V
&& 
vÆue
Ë-> 
	gAddResu…


295  
	gm_im∂
.
ãm∂©e
 
	gadd
<
	gHashM≠Tøn¶©‹
<
	gKeyVÆuePaúTøôs
, 
	gHashFun˘i⁄s
>>(
	g°d
::
f‹w¨d
<
K
>(
key
), std::f‹w¨d<
V
>(
vÆue
));

298 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

299 
	gãm∂©e
<
ty≥«me
 
	gT
>

300 autÿ
	gHashM≠
<
	gKeyArg
, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
£t
(c⁄° 
KeyTy≥
& 
key
, 
T
&& 
m≠≥d
Ë-> 
	gAddResu…


302  
ölöeSë
(
key
, 
°d
::
f‹w¨d
<
T
>(
m≠≥d
));

305 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

306 
	gãm∂©e
<
ty≥«me
 
	gT
>

307 autÿ
	gHashM≠
<
	gKeyArg
, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
£t
(
KeyTy≥
&& 
key
, 
T
&& 
m≠≥d
Ë-> 
	gAddResu…


309  
ölöeSë
(
WTF
::
move
(
key
), 
°d
::
f‹w¨d
<
T
>(
m≠≥d
));

312 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

313 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gK
,Åy≥«mê
	gV
>

314 autÿ
	gHashM≠
<
	gKeyArg
, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
add
(
K
&& 
key
, 
V
&& 
vÆue
Ë-> 
	gAddResu…


316  
	gm_im∂
.
ãm∂©e
 
	gaddPassögHashCode
<
	gHashM≠Tøn¶©‹Ad≠ãr
<
	gKeyVÆuePaúTøôs
, 
	gHashTøn¶©‹
>>(
	g°d
::
f‹w¨d
<
K
>(
key
), std::f‹w¨d<
V
>(
vÆue
));

319 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

320 
	gãm∂©e
<
ty≥«me
 
	gT
>

321 autÿ
	gHashM≠
<
	gKeyArg
, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
add
(c⁄° 
KeyTy≥
& 
key
, 
T
&& 
m≠≥d
Ë-> 
	gAddResu…


323  
ölöeAdd
(
key
, 
°d
::
f‹w¨d
<
T
>(
m≠≥d
));

326 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

327 
	gãm∂©e
<
ty≥«me
 
	gT
>

328 autÿ
	gHashM≠
<
	gKeyArg
, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
add
(
KeyTy≥
&& 
key
, 
T
&& 
m≠≥d
Ë-> 
	gAddResu…


330  
ölöeAdd
(
WTF
::
move
(
key
), 
°d
::
f‹w¨d
<
T
>(
m≠≥d
));

333 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

334 
	gãm∂©e
<
ty≥«me
 
	gT
>

335 
ALWAYS_INLINE
áutÿ
	gHashM≠
<
	gKeyArg
, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
Á°Add
(c⁄° 
KeyTy≥
& 
key
, 
T
&& 
m≠≥d
Ë-> 
	gAddResu…


337  
ölöeAdd
(
key
, 
°d
::
f‹w¨d
<
T
>(
m≠≥d
));

340 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

341 
	gãm∂©e
<
ty≥«me
 
	gT
>

342 
ALWAYS_INLINE
áutÿ
	gHashM≠
<
	gKeyArg
, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
Á°Add
(
KeyTy≥
&& 
key
, 
T
&& 
m≠≥d
Ë-> 
	gAddResu…


344  
ölöeAdd
(
WTF
::
move
(
key
), 
°d
::
f‹w¨d
<
T
>(
m≠≥d
));

347 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gM≠≥dTøôs
>

348 autÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gM≠≥dTøôs
>::
	$gë
(c⁄° 
KeyTy≥
& 
key
Ëc⁄° -> 
M≠≥dPìkTy≥


350 
KeyVÆuePaúTy≥
* 
íåy
 = 
c⁄°_ˇ°
<
HashTabÀTy≥
&>(
m_im∂
).
	`lookup
(
key
);

351 i‡(!
íåy
)

352  
M≠≥dTøôs
::
	`≥ek
(M≠≥dTøôs::
	`em±yVÆue
());

353  
M≠≥dTøôs
::
	`≥ek
(
íåy
->
vÆue
);

354 
	}
}

356 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

357 
ölöe
 
boﬁ
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$ªmove
(
ôî©‹
 
ô
)

359 i‡(
ô
.
m_im∂
 =m_im∂.
	`íd
())

360  
Ál£
;

361 
m_im∂
.
	`öã∫ÆCheckTabÀC⁄si°ícy
();

362 
m_im∂
.
	`ªmoveWôhoutE¡ryC⁄si°ícyCheck
(
ô
.m_impl);

363  
åue
;

364 
	}
}

366 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

367 
	gãm∂©e
<
ty≥«me
 
	gFun˘‹
>

368 
ölöe
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$ªmoveIf
(c⁄° 
Fun˘‹
& 
fun˘‹
)

370 
m_im∂
.
	`ªmoveIf
(
fun˘‹
);

371 
	}
}

373 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

374 
ölöe
 
boﬁ
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$ªmove
(c⁄° 
KeyTy≥
& 
key
)

376  
	`ªmove
(
	`föd
(
key
));

377 
	}
}

379 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

380 
ölöe
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$˛ór
()

382 
m_im∂
.
	`˛ór
();

383 
	}
}

385 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gM≠≥dTøôs
>

386 autÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gM≠≥dTøôs
>::
èke
(c⁄° 
KeyTy≥
& 
key
Ë-> 
M≠≥dTy≥


388 
ôî©‹
 
ô
 = 
föd
(
key
);

389 i‡(
	gô
 =
íd
())

390  
M≠≥dTøôs
::
em±yVÆue
();

391 
M≠≥dTy≥
 
	gvÆue
 = 
WTF
::
move
(
ô
->
vÆue
);

392 
ªmove
(
ô
);

393  
	gvÆue
;

396 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

397 
	gãm∂©e
<
ty≥«me
 
	gK
>

398 
ölöe
áutÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
föd
(
ty≥«me
 
GëPåHñ≥r
<
K
>::
PåTy≥
 
key
Ë->Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<K>::
vÆue
, 
	gôî©‹
>::
ty≥


400  
m_im∂
.
ãm∂©e
 
föd
<
HashM≠Tøn¶©‹
<
KeyVÆuePaúTøôs
, 
	gHashFun˘i⁄s
>>(
	gkey
);

403 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

404 
	gãm∂©e
<
ty≥«me
 
	gK
>

405 
ölöe
áutÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
föd
(
ty≥«me
 
GëPåHñ≥r
<
K
>::
PåTy≥
 
key
Ëc⁄° ->Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<K>::
vÆue
, 
	gc⁄°_ôî©‹
>::
ty≥


407  
m_im∂
.
ãm∂©e
 
föd
<
HashM≠Tøn¶©‹
<
KeyVÆuePaúTøôs
, 
	gHashFun˘i⁄s
>>(
	gkey
);

410 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

411 
	gãm∂©e
<
ty≥«me
 
	gK
>

412 
ölöe
áutÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
c⁄èös
(
ty≥«me
 
GëPåHñ≥r
<
K
>::
PåTy≥
 
key
Ëc⁄° ->Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<K>::
vÆue
, 
	gboﬁ
>::
ty≥


414  
m_im∂
.
ãm∂©e
 
c⁄èös
<
HashM≠Tøn¶©‹
<
KeyVÆuePaúTøôs
, 
	gHashFun˘i⁄s
>>(
	gkey
);

417 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

418 
	gãm∂©e
<
ty≥«me
 
	gK
>

419 
ölöe
áutÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
gë
(
ty≥«me
 
GëPåHñ≥r
<
K
>::
PåTy≥
 
key
Ëc⁄° ->Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<K>::
vÆue
, 
	gM≠≥dPìkTy≥
>::
ty≥


421 
KeyVÆuePaúTy≥
* 
íåy
 = 
c⁄°_ˇ°
<
HashTabÀTy≥
&>(
m_im∂
).
ãm∂©e
 
lookup
<
HashM≠Tøn¶©‹
<
KeyVÆuePaúTøôs
, 
	gHashFun˘i⁄s
>>(
	gkey
);

422 i‡(!
	gíåy
)

423  
	gM≠≥dTøôs
::
≥ek
(
M≠≥dTøôs
::
em±yVÆue
());

424  
	gM≠≥dTøôs
::
≥ek
(
íåy
->
vÆue
);

427 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

428 
	gãm∂©e
<
ty≥«me
 
	gK
>

429 
ölöe
áutÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
ªmove
(
ty≥«me
 
GëPåHñ≥r
<
K
>::
PåTy≥
 
key
Ë->Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<K>::
vÆue
, 
	gboﬁ
>::
ty≥


431  
ªmove
(
föd
(
key
));

434 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

435 
	gãm∂©e
<
ty≥«me
 
	gK
>

436 
ölöe
áutÿ
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
èke
(
ty≥«me
 
GëPåHñ≥r
<
K
>::
PåTy≥
 
key
Ë->Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<K>::
vÆue
, 
	gM≠≥dTy≥
>::
ty≥


438 
ôî©‹
 
ô
 = 
föd
(
key
);

439 i‡(
	gô
 =
íd
())

440  
M≠≥dTøôs
::
em±yVÆue
();

441 
M≠≥dTy≥
 
	gvÆue
 = 
WTF
::
move
(
ô
->
vÆue
);

442 
ªmove
(
ô
);

443  
	gvÆue
;

446 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

447 
ölöe
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$checkC⁄si°ícy
() const

449 
m_im∂
.
	`checkTabÀC⁄si°ícy
();

450 
	}
}

452 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

453 
ölöe
 
boﬁ
 
	gHashM≠
<
	gT
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
	$isVÆidKey
(c⁄° 
KeyTy≥
& 
key
)

455 i‡(
KeyTøôs
::
	`isDñëedVÆue
(
key
))

456  
Ál£
;

458 i‡(
HashFun˘i⁄s
::
ß„ToCom∑ªToEm±yOrDñëed
) {

459 i‡(
key
 =
KeyTøôs
::
	`em±yVÆue
())

460  
Ál£
;

462 i‡(
isHashTøôsEm±yVÆue
<
KeyTøôs
>(
key
))

463  
Ál£
;

466  
åue
;

467 
	}
}

469 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

470 
boﬁ
 
	g›î©‹
==(c⁄° 
HashM≠
<
T
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>& 
	ga
, c⁄° 
	gHashM≠
<
	gT
, U, V, W, X>& 
	gb
)

472 i‡(
	ga
.
size
(Ë!
b
.size())

473  
Ál£
;

475 
ty≥«me
 
	tHashM≠
<
	tT
, 
	tU
, 
	tV
, 
	tW
, 
	tX
>::
	tc⁄°_ôî©‹
 const_iterator;

477 
c⁄°_ôî©‹
 
	gíd
 = 
a
.
íd
();

478 
c⁄°_ôî©‹
 
	gnŸFound
 = 
b
.
íd
();

479 
c⁄°_ôî©‹
 
	gô
 = 
a
.
begö
(); ià!
íd
; ++it) {

480 
c⁄°_ôî©‹
 
	gbPos
 = 
b
.
föd
(
ô
->
key
);

481 i‡(
	gbPos
 =
nŸFound
 || 
ô
->
vÆue
 !
bPos
->value)

482  
Ál£
;

485  
	gåue
;

488 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

489 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
HashM≠
<
T
, 
	gU
, 
	gV
, 
	gW
, 
	gX
>& 
	ga
, c⁄° 
	gHashM≠
<
	gT
, U, V, W, X>& 
	gb
)

491  !(
	ga
 =
b
);

494 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
,Åy≥«mê
	gY
>

495 
ölöe
 
c›yKeysToVe˘‹
(c⁄° 
HashM≠
<
T
, 
U
, 
V
, 
W
, 
X
>& 
cﬁÀ˘i⁄
, 
Y
& 
ve˘‹
)

497 
ty≥«me
 
	tHashM≠
<
	tT
, 
	tU
, 
	tV
, 
	tW
, 
	tX
>::
	tc⁄°_ôî©‹
::
	tKeys
 
	tôî©‹
;

499 
	gve˘‹
.
ªsize
(
cﬁÀ˘i⁄
.
size
());

501 
ôî©‹
 
	gô
 = 
cﬁÀ˘i⁄
.
begö
().
keys
();

502 
ôî©‹
 
	gíd
 = 
cﬁÀ˘i⁄
.
íd
().
keys
();

503 
	gi
 = 0; 
	gô
 !
íd
; ++it, ++i)

504 
	gve˘‹
[
i
] = *
ô
;

507 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
,Åy≥«mê
	gY
>

508 
ölöe
 
c›yVÆuesToVe˘‹
(c⁄° 
HashM≠
<
T
, 
U
, 
V
, 
W
, 
X
>& 
cﬁÀ˘i⁄
, 
Y
& 
ve˘‹
)

510 
ty≥«me
 
	tHashM≠
<
	tT
, 
	tU
, 
	tV
, 
	tW
, 
	tX
>::
	tc⁄°_ôî©‹
::
	tVÆues
 
	tôî©‹
;

512 
	gve˘‹
.
ªsize
(
cﬁÀ˘i⁄
.
size
());

514 
ôî©‹
 
	gô
 = 
cﬁÀ˘i⁄
.
begö
().
vÆues
();

515 
ôî©‹
 
	gíd
 = 
cﬁÀ˘i⁄
.
íd
().
vÆues
();

516 
	gi
 = 0; 
	gô
 !
íd
; ++it, ++i)

517 
	gve˘‹
[
i
] = *
ô
;

522 
usög
 
	gWTF
::
HashM≠
;

524 
	~<wtf/RefPåHashM≠.h
>

	@HashMethod.h

26 #i‚de‡
HashMëhod_h


27 
	#HashMëhod_h


	)

29 
	~<wtf/StdLibExåas.h
>

31 
«me•a˚
 
	gWTF
 {

33 
	gãm∂©e
<
ty≥«me
 
	gT
>

34 
	sHashMëhod
 {

35 
size_t
 
›î©‹
()(c⁄° 
	gT
& 
	gvÆue
) const

37  
	gvÆue
.
hash
();

43 
usög
 
	gWTF
::
HashMëhod
;

	@HashSet.h

21 #i‚de‡
WTF_HashSë_h


22 
	#WTF_HashSë_h


	)

24 
	~<öôülizî_li°
>

25 
	~<wtf/Fa°MÆloc.h
>

26 
	~<wtf/GëPå.h
>

27 
	~<wtf/HashTabÀ.h
>

29 
«me•a˚
 
	gWTF
 {

31 
	gIdítôyExåa˘‹
;

33 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
> 
˛ass
 
	gHashSë
;

35 
	gãm∂©e
<
ty≥«me
 
	gVÆueArg
,Åy≥«mê
	gHashArg
 =Åy≥«mê
DeÁu…Hash
<
VÆueArg
>::
Hash
,

36 
ty≥«me
 
	gTøôsArg
 = 
HashTøôs
<
VÆueArg
>> cœs†
	cHashSë
 
föÆ
 {

37 
WTF_MAKE_FAST_ALLOCATED
;

38 
	g¥iv©e
:

39 
HashArg
 
	tHashFun˘i⁄s
;

40 
TøôsArg
 
	tVÆueTøôs
;

42 
	gpublic
:

43 
ty≥«me
 
	tVÆueTøôs
::
	tTøôTy≥
 
	tVÆueTy≥
;

45 
	g¥iv©e
:

46 
HashTabÀ
<
	tVÆueTy≥
, VÆueTy≥, 
	tIdítôyExåa˘‹
,

47 
	tHashFun˘i⁄s
, 
	tVÆueTøôs
, VÆueTøôs> 
	tHashTabÀTy≥
;

49 
	gpublic
:

50 
HashTabÀC⁄°Iãøt‹Ad≠ãr
<
	tHashTabÀTy≥
, 
	tVÆueTy≥
> 
	tôî©‹
;

51 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
<
	tHashTabÀTy≥
, 
	tVÆueTy≥
> 
	tc⁄°_ôî©‹
;

52 
ty≥«me
 
	tHashTabÀTy≥
::
	tAddResu…
 AddResult;

54 
HashSë
()

58 
HashSë
(
°d
::
öôülizî_li°
<
VÆueArg
> 
öôülizîLi°
)

60 c⁄°áuto& 
vÆue
 : 
öôülizîLi°
)

61 
add
(
vÆue
);

64 
sw≠
(
HashSë
&);

66 
size
() const;

67 
ˇ∑côy
() const;

68 
boﬁ
 
isEm±y
() const;

70 
ôî©‹
 
begö
() const;

71 
ôî©‹
 
íd
() const;

73 
ôî©‹
 
föd
(c⁄° 
VÆueTy≥
&) const;

74 
boﬁ
 
c⁄èös
(c⁄° 
VÆueTy≥
&) const;

81 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
ôî©‹
 
föd
(c⁄° 
T
&) const;

82 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
boﬁ
 
c⁄èös
(c⁄° 
T
&) const;

86 
AddResu…
 
add
(c⁄° 
VÆueTy≥
&);

87 
AddResu…
 
add
(
VÆueTy≥
&&);

95 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
AddResu…
 
add
(c⁄° 
T
&);

99 
	gãm∂©e
<
ty≥«me
 
	gIãøt‹Ty≥
>

100 
boﬁ
 
add
(
Iãøt‹Ty≥
 
begö
, Iãøt‹Ty≥ 
íd
);

102 
boﬁ
 
ªmove
(c⁄° 
VÆueTy≥
&);

103 
boﬁ
 
ªmove
(
ôî©‹
);

104 
˛ór
();

106 
VÆueTy≥
 
èke
(const ValueType&);

107 
VÆueTy≥
 
èke
(
ôî©‹
);

108 
VÆueTy≥
 
èkeAny
();

111 
	gãm∂©e
<
ty≥«me
 
	gV
 = 
VÆueTy≥
>Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<
V
>::
vÆue
, 
	gôî©‹
>::
ty≥
 
föd
—y≥«mê
GëPåHñ≥r
<V>::
PåTy≥
) const;

112 
	gãm∂©e
<
ty≥«me
 
	gV
 = 
VÆueTy≥
>Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<
V
>::
vÆue
, 
	gboﬁ
>::
ty≥
 
c⁄èös
—y≥«mê
GëPåHñ≥r
<V>::
PåTy≥
) const;

113 
	gãm∂©e
<
ty≥«me
 
	gV
 = 
VÆueTy≥
>Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<
V
>::
vÆue
, 
	gboﬁ
>::
ty≥
 
ªmove
—y≥«mê
GëPåHñ≥r
<V>::
PåTy≥
);

114 
	gãm∂©e
<
ty≥«me
 
	gV
 = 
VÆueTy≥
>Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<
V
>::
vÆue
, 
	gVÆueTy≥
>::
ty≥
 
èke
—y≥«mê
GëPåHñ≥r
<V>::
PåTy≥
);

116 
boﬁ
 
isVÆidVÆue
(c⁄° 
VÆueTy≥
&);

118 
boﬁ
 
	g›î©‹
==(c⁄° 
HashSë
&) const;

120 
	g¥iv©e
:

121 
HashTabÀTy≥
 
m_im∂
;

124 
	sIdítôyExåa˘‹
 {

125 
	gãm∂©e
<
ty≥«me
 
	gT
> c⁄° T& 
exåa˘
(c⁄° 
T
& 
t
Ë{  
	gt
; }

128 
	gãm∂©e
<
ty≥«me
 
	gHashFun˘i⁄s
>

129 
	sHashSëTøn¶©‹
 {

130 
	gãm∂©e
<
ty≥«me
 
	gT
> 
hash
(c⁄° 
T
& 
key
Ë{  
	gHashFun˘i⁄s
::hash(key); }

131 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
boﬁ
 
equÆ
(c⁄° 
T
& 
a
, c⁄° 
U
& 
b
Ë{  
	gHashFun˘i⁄s
::equal(a, b); }

132 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
> 
å™¶©e
(
T
& 
loˇti⁄
, 
U
&&, 
V
&& 
vÆue
Ë{ 
	gloˇti⁄
 = 
°d
::
f‹w¨d
<V>(value); }

135 
	gãm∂©e
<
ty≥«me
 
	gTøn¶©‹
>

136 
	sHashSëTøn¶©‹Ad≠ãr
 {

137 
	gãm∂©e
<
ty≥«me
 
	gT
> 
hash
(c⁄° 
T
& 
key
Ë{  
	gTøn¶©‹
::hash(key); }

138 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
boﬁ
 
equÆ
(c⁄° 
T
& 
a
, c⁄° 
U
& 
b
Ë{  
	gTøn¶©‹
::equal(a, b); }

139 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
å™¶©e
(
T
& 
loˇti⁄
, c⁄° 
U
& 
key
, c⁄° U&, 
hashCode
)

141 
	gTøn¶©‹
::
å™¶©e
(
loˇti⁄
, 
key
, 
hashCode
);

145 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

146 
ölöe
 
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$sw≠
(
HashSë
& 
Ÿhî
)

148 
m_im∂
.
	`sw≠
(
Ÿhî
.m_impl);

149 
	}
}

151 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

152 
ölöe
 
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$size
() const

154  
m_im∂
.
	`size
();

155 
	}
}

157 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

158 
ölöe
 
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$ˇ∑côy
() const

160  
m_im∂
.
	`ˇ∑côy
();

161 
	}
}

163 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

164 
ölöe
 
boﬁ
 
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$isEm±y
() const

166  
m_im∂
.
	`isEm±y
();

167 
	}
}

169 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

170 
ölöe
áutÿ
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$begö
(Ëc⁄° -> 
ôî©‹


172  
m_im∂
.
	`begö
();

173 
	}
}

175 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

176 
ölöe
áutÿ
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$íd
(Ëc⁄° -> 
ôî©‹


178  
m_im∂
.
	`íd
();

179 
	}
}

181 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

182 
ölöe
áutÿ
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$föd
(c⁄° 
VÆueTy≥
& 
vÆue
Ëc⁄° -> 
ôî©‹


184  
m_im∂
.
	`föd
(
vÆue
);

185 
	}
}

187 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

188 
ölöe
 
boﬁ
 
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$c⁄èös
(c⁄° 
VÆueTy≥
& 
vÆue
) const

190  
m_im∂
.
	`c⁄èös
(
vÆue
);

191 
	}
}

193 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

194 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
>

195 
ölöe
áutÿ
	gHashSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$föd
(c⁄° 
T
& 
vÆue
Ëc⁄° -> 
ôî©‹


197  
m_im∂
.
ãm∂©e
 
föd
<
HashSëTøn¶©‹Ad≠ãr
<
HashTøn¶©‹
>>(
vÆue
);

198 
	}
}

200 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

201 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
>

202 
ölöe
 
boﬁ
 
	gHashSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
	$c⁄èös
(c⁄° 
T
& 
vÆue
) const

204  
m_im∂
.
ãm∂©e
 
c⁄èös
<
HashSëTøn¶©‹Ad≠ãr
<
HashTøn¶©‹
>>(
vÆue
);

205 
	}
}

207 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

208 
ölöe
áutÿ
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
add
(c⁄° 
VÆueTy≥
& 
vÆue
Ë-> 
AddResu…


210  
m_im∂
.
add
(
vÆue
);

213 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

214 
ölöe
áutÿ
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
add
(
VÆueTy≥
&& 
vÆue
Ë-> 
AddResu…


216  
m_im∂
.
add
(
WTF
::
move
(
vÆue
));

219 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

220 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
>

221 
ölöe
áutÿ
	gHashSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
add
(c⁄° 
T
& 
vÆue
Ë-> 
AddResu…


223  
m_im∂
.
ãm∂©e
 
addPassögHashCode
<
HashSëTøn¶©‹Ad≠ãr
<
HashTøn¶©‹
>>(
vÆue
, 
	gvÆue
);

226 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

227 
	gãm∂©e
<
ty≥«me
 
	gIãøt‹Ty≥
>

228 
ölöe
 
boﬁ
 
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$add
(
Iãøt‹Ty≥
 
begö
, Iãøt‹Ty≥ 
íd
)

230 
boﬁ
 
ch™ged
 = 
Ál£
;

231 
Iãøt‹Ty≥
 
ôî
 = 
begö
; iã∏!
íd
; ++iter)

232 
ch™ged
 |
	`add
(*
ôî
).
isNewE¡ry
;

233  
ch™ged
;

234 
	}
}

236 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

237 
ölöe
 
boﬁ
 
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$ªmove
(
ôî©‹
 
ô
)

239 i‡(
ô
.
m_im∂
 =m_im∂.
	`íd
())

240  
Ál£
;

241 
m_im∂
.
	`öã∫ÆCheckTabÀC⁄si°ícy
();

242 
m_im∂
.
	`ªmoveWôhoutE¡ryC⁄si°ícyCheck
(
ô
.m_impl);

243  
åue
;

244 
	}
}

246 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

247 
ölöe
 
boﬁ
 
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$ªmove
(c⁄° 
VÆueTy≥
& 
vÆue
)

249  
	`ªmove
(
	`föd
(
vÆue
));

250 
	}
}

252 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

253 
ölöe
 
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$˛ór
()

255 
m_im∂
.
	`˛ór
();

256 
	}
}

258 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

259 
ölöe
áutÿ
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
èke
(
ôî©‹
 
ô
Ë-> 
VÆueTy≥


261 i‡(
ô
 =
íd
())

262  
VÆueTøôs
::
em±yVÆue
();

264 
VÆueTy≥
 
	gªsu…
 = 
WTF
::
move
(
c⁄°_ˇ°
<VÆueTy≥&>(*
ô
));

265 
ªmove
(
ô
);

266  
	gªsu…
;

269 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

270 
ölöe
áutÿ
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
èke
(c⁄° 
VÆueTy≥
& 
vÆue
) -> ValueType

272  
èke
(
föd
(
vÆue
));

275 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

276 
ölöe
áutÿ
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
èkeAny
(Ë-> 
VÆueTy≥


278  
èke
(
begö
());

281 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

282 
	gãm∂©e
<
ty≥«me
 
	gV
>

283 
ölöe
áutÿ
	gHashSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
föd
(
ty≥«me
 
GëPåHñ≥r
<
V
>::
PåTy≥
 
vÆue
Ëc⁄° ->Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<V>::vÆue, 
	gôî©‹
>::
ty≥


285  
m_im∂
.
ãm∂©e
 
föd
<
HashSëTøn¶©‹
<
HashFun˘i⁄s
>>(
vÆue
);

288 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

289 
	gãm∂©e
<
ty≥«me
 
	gV
>

290 
ölöe
áutÿ
	gHashSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
c⁄èös
(
ty≥«me
 
GëPåHñ≥r
<
V
>::
PåTy≥
 
vÆue
Ëc⁄° ->Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<V>::vÆue, 
	gboﬁ
>::
ty≥


292  
m_im∂
.
ãm∂©e
 
c⁄èös
<
HashSëTøn¶©‹
<
HashFun˘i⁄s
>>(
vÆue
);

295 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

296 
	gãm∂©e
<
ty≥«me
 
	gV
>

297 
ölöe
áutÿ
	gHashSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
ªmove
(
ty≥«me
 
GëPåHñ≥r
<
V
>::
PåTy≥
 
vÆue
Ë->Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<V>::vÆue, 
	gboﬁ
>::
ty≥


299  
ªmove
(
föd
(
vÆue
));

302 
	gãm∂©e
<
ty≥«me
 
	gVÆue
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
>

303 
	gãm∂©e
<
ty≥«me
 
	gV
>

304 
ölöe
áutÿ
	gHashSë
<
	gVÆue
, 
	gHashFun˘i⁄s
, 
	gTøôs
>::
èke
(
ty≥«me
 
GëPåHñ≥r
<
V
>::
PåTy≥
 
vÆue
Ë->Åy≥«mê
°d
::
íabÀ_if
<
IsSm¨tPå
<V>::vÆue, 
	gVÆueTy≥
>::
ty≥


306  
èke
(
föd
(
vÆue
));

309 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

310 
ölöe
 
boﬁ
 
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
	$isVÆidVÆue
(c⁄° 
VÆueTy≥
& 
vÆue
)

312 i‡(
VÆueTøôs
::
	`isDñëedVÆue
(
vÆue
))

313  
Ál£
;

315 i‡(
HashFun˘i⁄s
::
ß„ToCom∑ªToEm±yOrDñëed
) {

316 i‡(
vÆue
 =
VÆueTøôs
::
	`em±yVÆue
())

317  
Ál£
;

319 i‡(
isHashTøôsEm±yVÆue
<
VÆueTøôs
>(
vÆue
))

320  
Ál£
;

323  
åue
;

324 
	}
}

326 
	gãm∂©e
<
ty≥«me
 
	gC
,Åy≥«mê
	gW
>

327 
ölöe
 
	$c›yToVe˘‹
(c⁄° 
C
& 
cﬁÀ˘i⁄
, 
W
& 
ve˘‹
)

329 
ty≥«me
 
	tC
::
	tc⁄°_ôî©‹
 
	tôî©‹
;

331 
ve˘‹
.
	`ªsize
(
cﬁÀ˘i⁄
.
	`size
());

333 
ôî©‹
 
ô
 = 
cﬁÀ˘i⁄
.
	`begö
();

334 
ôî©‹
 
íd
 = 
cﬁÀ˘i⁄
.
	`íd
();

335 
i
 = 0; 
ô
 !
íd
; ++it, ++i)

336 
ve˘‹
[
i
] = *
ô
;

337 
	}
}

339 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
>

340 
ölöe
 
boﬁ
 
	gHashSë
<
	gT
, 
	gU
, 
	gV
>::
›î©‹
==(c⁄° 
HashSë
& 
Ÿhî
) const

342 i‡(
size
(Ë!
Ÿhî
.size())

343  
Ál£
;

344 
c⁄°_ôî©‹
 
	gôî
 = 
begö
(); iã∏!
íd
(); ++iter) {

345 i‡(!
	gŸhî
.
c⁄èös
(*
ôî
))

346  
	gÁl£
;

348  
	gåue
;

353 
usög
 
	gWTF
::
HashSë
;

	@HashTable.cpp

20 
	~"c⁄fig.h
"

21 
	~"HashTabÀ.h
"

23 
	~"D©aLog.h
"

24 
	~<muãx
>

26 
«me•a˚
 
	gWTF
 {

28 #i‡
DUMP_HASHTABLE_STATS


30 
	g°d
::
©omic
<> 
HashTabÀSèts
::
numAc˚s£s
;

31 
	g°d
::
©omic
<> 
HashTabÀSèts
::
numRehashes
;

32 
	g°d
::
©omic
<> 
HashTabÀSèts
::
numRemoves
;

33 
	g°d
::
©omic
<> 
HashTabÀSèts
::
numReö£πs
;

35 
	gHashTabÀSèts
::
numCﬁlisi⁄s
;

36 
	gHashTabÀSèts
::
cﬁlisi⁄Gøph
[4096];

37 
	gHashTabÀSèts
::
maxCﬁlisi⁄s
;

39 
	g°d
::
muãx
& 
hashTabÀSètsMuãx
()

41 
°d
::
⁄˚_Êag
 
⁄˚Fœg
;

42 
	g°d
::
muãx
* mutex;

43 
	g°d
::
ˇŒ_⁄˚
(
⁄˚Fœg
, []{

44 
muãx
 = 
°d
::
make_unique
<°d::muãx>().
ªÀa£
();

47  *
	gmuãx
;

50 
	gHashTabÀSèts
::
ªc‹dCﬁlisi⁄AtCou¡
(
cou¡
)

52 
°d
::
lock_gu¨d
<°d::
muãx
> 
lock
(
hashTabÀSètsMuãx
());

54 i‡(
	gcou¡
 > 
	gmaxCﬁlisi⁄s
)

55 
	gmaxCﬁlisi⁄s
 = 
cou¡
;

56 
	gnumCﬁlisi⁄s
++;

57 
	gcﬁlisi⁄Gøph
[
cou¡
]++;

60 
	gHashTabÀSèts
::
dumpSèts
()

62 
°d
::
lock_gu¨d
<°d::
muãx
> 
lock
(
hashTabÀSètsMuãx
());

64 
d©aLogF
("\nWTF::HashTable statistics\n\n");

65 
d©aLogF
("%uác˚s£s\n", 
numAc˚s£s
.
lﬂd
());

66 
d©aLogF
("%dÅŸÆ cﬁlisi⁄s,ávîagê%.2‡¥obe†≥∏ac˚ss\n", 
numCﬁlisi⁄s
, 1.0 * (
numAc˚s£s
 +ÇumCollisions) /ÇumAccesses);

67 
d©aLogF
("l⁄ge° cﬁlisi⁄ chaö: %d\n", 
maxCﬁlisi⁄s
);

68 
	gi
 = 1; i <
maxCﬁlisi⁄s
; i++) {

69 
d©aLogF
(" %uÜookup†wôhÉxa˘ly %u cﬁlisi⁄†(%.2f%% , %.2f%% wôhÅhi†m™y o∏m‹e)\n", 
cﬁlisi⁄Gøph
[
i
], i, 100.0 * (cﬁlisi⁄Gøph[i] - cﬁlisi⁄Gøph[i+1]Ë/ 
numAc˚s£s
, 100.0 * collisionGraph[i] /ÇumAccesses);

71 
d©aLogF
("%dÑehashes\n", 
numRehashes
.
lﬂd
());

72 
d©aLogF
("%dÑeö£πs\n", 
numReö£πs
.
lﬂd
());

	@HashTable.h

22 #i‚de‡
WTF_HashTabÀ_h


23 
	#WTF_HashTabÀ_h


	)

25 
	~<©omic
>

26 
	~<muãx
>

27 
	~<°rög.h
>

28 
	~<ty≥_åaôs
>

29 
	~<utûôy
>

30 
	~<wtf/As£πi⁄s.h
>

31 
	~<wtf/Fa°MÆloc.h
>

32 
	~<wtf/HashTøôs.h
>

33 
	~<wtf/StdLibExåas.h
>

34 
	~<wtf/VÆueCheck.h
>

36 
	#DUMP_HASHTABLE_STATS
 0

	)

37 
	#DUMP_HASHTABLE_STATS_PER_TABLE
 0

	)

39 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


40 
	~<wtf/D©aLog.h
>

43 
«me•a˚
 
	gWTF
 {

46 
	#CHECK_HASHTABLE_CONSISTENCY
 0

	)

48 #ifde‡
NDEBUG


49 
	#CHECK_HASHTABLE_ITERATORS
 0

	)

50 
	#CHECK_HASHTABLE_USE_AFTER_DESTRUCTION
 0

	)

52 
	#CHECK_HASHTABLE_ITERATORS
 1

	)

53 
	#CHECK_HASHTABLE_USE_AFTER_DESTRUCTION
 1

	)

56 #i‡
DUMP_HASHTABLE_STATS


58 
	sHashTabÀSèts
 {

60 
WTF_EXPORTDATA
 
	g°d
::
©omic
<> 
numAc˚s£s
;

61 
WTF_EXPORTDATA
 
	g°d
::
©omic
<> 
numRehashes
;

62 
WTF_EXPORTDATA
 
	g°d
::
©omic
<> 
numRemoves
;

63 
WTF_EXPORTDATA
 
	g°d
::
©omic
<> 
numReö£πs
;

66 
WTF_EXPORTDATA
 
	gmaxCﬁlisi⁄s
;

67 
WTF_EXPORTDATA
 
	gnumCﬁlisi⁄s
;

68 
WTF_EXPORTDATA
 
	gcﬁlisi⁄Gøph
[4096];

70 
WTF_EXPORT_PRIVATE
 
ªc‹dCﬁlisi⁄AtCou¡
(
cou¡
);

71 
WTF_EXPORT_PRIVATE
 
dumpSèts
();

76 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

77 
˛ass
 
	gHashTabÀ
;

78 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

79 
˛ass
 
	gHashTabÀIãøt‹
;

80 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

81 
˛ass
 
	gHashTabÀC⁄°Iãøt‹
;

83 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

84 
addIãøt‹
(c⁄° 
HashTabÀ
<
Key
, 
VÆue
, 
Exåa˘‹
, 
HashFun˘i⁄s
, 
Tøôs
, 
KeyTøôs
>*,

85 
HashTabÀC⁄°Iãøt‹
<
Key
, 
VÆue
, 
Exåa˘‹
, 
HashFun˘i⁄s
, 
Tøôs
, 
KeyTøôs
>*);

87 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

88 
ªmoveIãøt‹
(
HashTabÀC⁄°Iãøt‹
<
Key
, 
VÆue
, 
Exåa˘‹
, 
HashFun˘i⁄s
, 
Tøôs
, 
KeyTøôs
>*);

90 #i‡!
CHECK_HASHTABLE_ITERATORS


92 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

93 
ölöe
 
addIãøt‹
(c⁄° 
HashTabÀ
<
Key
, 
VÆue
, 
Exåa˘‹
, 
HashFun˘i⁄s
, 
Tøôs
, 
KeyTøôs
>*,

94 
HashTabÀC⁄°Iãøt‹
<
Key
, 
VÆue
, 
Exåa˘‹
, 
HashFun˘i⁄s
, 
Tøôs
, 
KeyTøôs
>*) { }

96 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

97 
ölöe
 
ªmoveIãøt‹
(
HashTabÀC⁄°Iãøt‹
<
Key
, 
VÆue
, 
Exåa˘‹
, 
HashFun˘i⁄s
, 
Tøôs
, 
KeyTøôs
>*) { }

101 íum { 
	gHashIãmKnownGood
 } 
	tHashIãmKnownGoodTag
;

103 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

104 ˛as†
	cHashTabÀC⁄°Iãøt‹
 {

105 
	g¥iv©e
:

106 
HashTabÀ
<
	tKey
, 
	tVÆue
, 
	tExåa˘‹
, 
	tHashFun˘i⁄s
, 
	tTøôs
, 
	tKeyTøôs
> 
	tHashTabÀTy≥
;

107 
	gHashTabÀIãøt‹
<
	tKey
, 
	tVÆue
, 
	tExåa˘‹
, 
	tHashFun˘i⁄s
, 
	tTøôs
, 
	tKeyTøôs
> 
	tôî©‹
;

108 
	gHashTabÀC⁄°Iãøt‹
<
	tKey
, 
	tVÆue
, 
	tExåa˘‹
, 
	tHashFun˘i⁄s
, 
	tTøôs
, 
	tKeyTøôs
> 
	tc⁄°_ôî©‹
;

109 
VÆue
 
	tVÆueTy≥
;

110 c⁄° 
	tVÆueTy≥
& 
	tRe„ªn˚Ty≥
;

111 c⁄° 
	tVÆueTy≥
* 
	tPoöãrTy≥
;

113 
‰õnd
 
˛ass
 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>;

114 
‰õnd
 
˛ass
 
	gHashTabÀIãøt‹
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>;

116 
skùEm±yBuckës
()

118 
	gm_posôi⁄
 !
m_ídPosôi⁄
 && 
HashTabÀTy≥
::
isEm±yOrDñëedBuckë
(*
m_posôi⁄
))

119 ++
m_posôi⁄
;

122 
HashTabÀC⁄°Iãøt‹
(c⁄° 
HashTabÀTy≥
* 
èbÀ
, 
PoöãrTy≥
 
posôi⁄
, PoöãrTy≥ 
ídPosôi⁄
)

123 : 
m_posôi⁄
(
posôi⁄
), 
m_ídPosôi⁄
(
ídPosôi⁄
)

125 
addIãøt‹
(
èbÀ
, 
this
);

126 
skùEm±yBuckës
();

129 
HashTabÀC⁄°Iãøt‹
(c⁄° 
HashTabÀTy≥
* 
èbÀ
, 
PoöãrTy≥
 
posôi⁄
, PoöãrTy≥ 
ídPosôi⁄
, 
HashIãmKnownGoodTag
)

130 : 
m_posôi⁄
(
posôi⁄
), 
m_ídPosôi⁄
(
ídPosôi⁄
)

132 
addIãøt‹
(
èbÀ
, 
this
);

135 
	gpublic
:

136 
HashTabÀC⁄°Iãøt‹
()

138 
addIãøt‹
(
°©ic_ˇ°
<c⁄° 
HashTabÀTy≥
*>(0), 
this
);

143 #i‡
CHECK_HASHTABLE_ITERATORS


144 ~
HashTabÀC⁄°Iãøt‹
()

146 
ªmoveIãøt‹
(
this
);

149 
HashTabÀC⁄°Iãøt‹
(c⁄° 
c⁄°_ôî©‹
& 
Ÿhî
)

150 : 
m_posôi⁄
(
Ÿhî
.m_posôi⁄), 
m_ídPosôi⁄
(other.m_endPosition)

152 
addIãøt‹
(
Ÿhî
.
m_èbÀ
, 
this
);

155 
	gc⁄°_ôî©‹
& 
	g›î©‹
=(c⁄° 
c⁄°_ôî©‹
& 
Ÿhî
)

157 
m_posôi⁄
 = 
Ÿhî
.m_position;

158 
	gm_ídPosôi⁄
 = 
Ÿhî
.
m_ídPosôi⁄
;

160 
ªmoveIãøt‹
(
this
);

161 
addIãøt‹
(
Ÿhî
.
m_èbÀ
, 
this
);

163  *
	gthis
;

167 
PoöãrTy≥
 
gë
() const

169 
checkVÆidôy
();

170  
	gm_posôi⁄
;

172 
Re„ªn˚Ty≥
 
	g›î©‹
*(Ëc⁄° {  *
gë
(); }

173 
PoöãrTy≥
 
	g›î©‹
->(Ëc⁄° {  
gë
(); }

175 
	gc⁄°_ôî©‹
& 
	g›î©‹
++()

177 
checkVÆidôy
();

178 
ASSERT
(
m_posôi⁄
 !
m_ídPosôi⁄
);

179 ++
	gm_posôi⁄
;

180 
skùEm±yBuckës
();

181  *
	gthis
;

187 
boﬁ
 
	g›î©‹
==(c⁄° 
c⁄°_ôî©‹
& 
Ÿhî
) const

189 
checkVÆidôy
(
Ÿhî
);

190  
	gm_posôi⁄
 =
Ÿhî
.
m_posôi⁄
;

192 
boﬁ
 
	g›î©‹
!=(c⁄° 
c⁄°_ôî©‹
& 
Ÿhî
) const

194 
checkVÆidôy
(
Ÿhî
);

195  
	gm_posôi⁄
 !
Ÿhî
.
m_posôi⁄
;

197 
boﬁ
 
	g›î©‹
==(c⁄° 
ôî©‹
& 
Ÿhî
) const

199  *
this
 =
°©ic_ˇ°
<
c⁄°_ôî©‹
>(
Ÿhî
);

201 
boﬁ
 
	g›î©‹
!=(c⁄° 
ôî©‹
& 
Ÿhî
) const

203  *
this
 !
°©ic_ˇ°
<
c⁄°_ôî©‹
>(
Ÿhî
);

206 
	g¥iv©e
:

207 
checkVÆidôy
() const

209 #i‡
CHECK_HASHTABLE_ITERATORS


210 
ASSERT
(
m_èbÀ
);

215 #i‡
CHECK_HASHTABLE_ITERATORS


216 
checkVÆidôy
(c⁄° 
c⁄°_ôî©‹
& 
Ÿhî
) const

218 
ASSERT
(
m_èbÀ
);

219 
ASSERT_UNUSED
(
Ÿhî
, othî.
m_èbÀ
);

220 
ASSERT
(
m_èbÀ
 =
Ÿhî
.m_table);

223 
checkVÆidôy
(c⁄° 
c⁄°_ôî©‹
&) const { }

226 
PoöãrTy≥
 
	gm_posôi⁄
;

227 
PoöãrTy≥
 
	gm_ídPosôi⁄
;

229 #i‡
CHECK_HASHTABLE_ITERATORS


230 
	gpublic
:

233 
muèbÀ
 c⁄° 
HashTabÀTy≥
* 
m_èbÀ
;

234 
muèbÀ
 
c⁄°_ôî©‹
* 
	gm_√xt
;

235 
muèbÀ
 
c⁄°_ôî©‹
* 
	gm_¥evious
;

239 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

240 ˛as†
	cHashTabÀIãøt‹
 {

241 
	g¥iv©e
:

242 
HashTabÀ
<
	tKey
, 
	tVÆue
, 
	tExåa˘‹
, 
	tHashFun˘i⁄s
, 
	tTøôs
, 
	tKeyTøôs
> 
	tHashTabÀTy≥
;

243 
	gHashTabÀIãøt‹
<
	tKey
, 
	tVÆue
, 
	tExåa˘‹
, 
	tHashFun˘i⁄s
, 
	tTøôs
, 
	tKeyTøôs
> 
	tôî©‹
;

244 
	gHashTabÀC⁄°Iãøt‹
<
	tKey
, 
	tVÆue
, 
	tExåa˘‹
, 
	tHashFun˘i⁄s
, 
	tTøôs
, 
	tKeyTøôs
> 
	tc⁄°_ôî©‹
;

245 
VÆue
 
	tVÆueTy≥
;

246 
	gVÆueTy≥
& 
	tRe„ªn˚Ty≥
;

247 
VÆueTy≥
* 
	tPoöãrTy≥
;

249 
‰õnd
 
˛ass
 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>;

251 
HashTabÀIãøt‹
(
HashTabÀTy≥
* 
èbÀ
, 
PoöãrTy≥
 
pos
, PoöãrTy≥ 
íd
Ë: 
m_ôî©‹
(table,Öos,Énd) { }

252 
HashTabÀIãøt‹
(
HashTabÀTy≥
* 
èbÀ
, 
PoöãrTy≥
 
pos
, PoöãrTy≥ 
íd
, 
HashIãmKnownGoodTag
 
èg
Ë: 
m_ôî©‹
(table,Öos,Énd,Åag) { }

254 
	gpublic
:

255 
HashTabÀIãøt‹
() { }

259 
PoöãrTy≥
 
gë
(Ëc⁄° {  
c⁄°_ˇ°
<PoöãrTy≥>(
m_ôî©‹
.get()); }

260 
Re„ªn˚Ty≥
 
	g›î©‹
*(Ëc⁄° {  *
gë
(); }

261 
PoöãrTy≥
 
	g›î©‹
->(Ëc⁄° {  
gë
(); }

263 
	gôî©‹
& 
	g›î©‹
++(Ë{ ++
	gm_ôî©‹
;  *
	gthis
; }

268 
boﬁ
 
	g›î©‹
==(c⁄° 
ôî©‹
& 
Ÿhî
Ëc⁄° {  
m_ôî©‹
 == other.m_iterator; }

269 
boﬁ
 
	g›î©‹
!=(c⁄° 
ôî©‹
& 
Ÿhî
Ëc⁄° {  
m_ôî©‹
 != other.m_iterator; }

270 
boﬁ
 
	g›î©‹
==(c⁄° 
c⁄°_ôî©‹
& 
Ÿhî
Ëc⁄° {  
m_ôî©‹
 == other; }

271 
boﬁ
 
	g›î©‹
!=(c⁄° 
c⁄°_ôî©‹
& 
Ÿhî
Ëc⁄° {  
m_ôî©‹
 != other; }

273 
›î©‹
 
c⁄°_ôî©‹
(Ëc⁄° {  
	gm_ôî©‹
; }

275 
	g¥iv©e
:

276 
c⁄°_ôî©‹
 
m_ôî©‹
;

279 
	gãm∂©e
<
ty≥«me
 
	gHashFun˘i⁄s
> cœs†
	cIdítôyHashTøn¶©‹
 {

280 
	gpublic
:

281 
ãm∂©e
<
ty≥«me
 
T
> 
hash
(c⁄° T& 
key
Ë{  
HashFun˘i⁄s
::hash(key); }

282 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
boﬁ
 
equÆ
(c⁄° 
T
& 
a
, c⁄° 
U
& 
b
Ë{  
	gHashFun˘i⁄s
::equal(a, b); }

283 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
> 
å™¶©e
(
T
& 
loˇti⁄
, c⁄° 
U
&, 
V
&& 
vÆue
Ë{ 
	gloˇti⁄
 = 
°d
::
f‹w¨d
<V>(value); }

286 
	gãm∂©e
<
ty≥«me
 
	gIãøt‹Ty≥
> 
	sHashTabÀAddResu…
 {

287 
HashTabÀAddResu…
(
Iãøt‹Ty≥
 
ôî
, 
boﬁ
 
isNewE¡ry
Ë: 
ôî©‹
(iter), isNewEntry(isNewEntry) { }

288 
Iãøt‹Ty≥
 
	gôî©‹
;

289 
boﬁ
 
	gisNewE¡ry
;

292 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

293 ˛as†
	cHashTabÀ
 {

294 
	gpublic
:

295 
HashTabÀIãøt‹
<
	tKey
, 
	tVÆue
, 
	tExåa˘‹
, 
	tHashFun˘i⁄s
, 
	tTøôs
, 
	tKeyTøôs
> 
	tôî©‹
;

296 
	gHashTabÀC⁄°Iãøt‹
<
	tKey
, 
	tVÆue
, 
	tExåa˘‹
, 
	tHashFun˘i⁄s
, 
	tTøôs
, 
	tKeyTøôs
> 
	tc⁄°_ôî©‹
;

297 
Tøôs
 
	tVÆueTøôs
;

298 
Key
 
	tKeyTy≥
;

299 
VÆue
 
	tVÆueTy≥
;

300 
	gIdítôyHashTøn¶©‹
<
	tHashFun˘i⁄s
> 
	tIdítôyTøn¶©‹Ty≥
;

301 
	gHashTabÀAddResu…
<
	tôî©‹
> 
	tAddResu…
;

303 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


304 
	sSèts
 {

305 
Sèts
()

306 : 
numAc˚s£s
(0)

307 , 
numRehashes
(0)

308 , 
numRemoves
(0)

309 , 
numReö£πs
(0)

310 , 
maxCﬁlisi⁄s
(0)

311 , 
numCﬁlisi⁄s
(0)

312 , 
cﬁlisi⁄Gøph
()

316 
	gnumAc˚s£s
;

317 
	gnumRehashes
;

318 
	gnumRemoves
;

319 
	gnumReö£πs
;

321 
	gmaxCﬁlisi⁄s
;

322 
	gnumCﬁlisi⁄s
;

323 
	gcﬁlisi⁄Gøph
[4096];

325 
ªc‹dCﬁlisi⁄AtCou¡
(
cou¡
)

327 i‡(
	gcou¡
 > 
	gmaxCﬁlisi⁄s
)

328 
	gmaxCﬁlisi⁄s
 = 
cou¡
;

329 
	gnumCﬁlisi⁄s
++;

330 
	gcﬁlisi⁄Gøph
[
cou¡
]++;

333 
dumpSèts
()

335 
d©aLogF
("\nWTF::HashTable::Stats dump\n\n");

336 
d©aLogF
("%dác˚s£s\n", 
numAc˚s£s
);

337 
d©aLogF
("%dÅŸÆ cﬁlisi⁄s,ávîagê%.2‡¥obe†≥∏ac˚ss\n", 
numCﬁlisi⁄s
, 1.0 * (
numAc˚s£s
 +ÇumCollisions) /ÇumAccesses);

338 
d©aLogF
("l⁄ge° cﬁlisi⁄ chaö: %d\n", 
maxCﬁlisi⁄s
);

339 
	gi
 = 1; i <
maxCﬁlisi⁄s
; i++) {

340 
d©aLogF
(" %dÜookup†wôhÉxa˘ly %d cﬁlisi⁄†(%.2f%% , %.2f%% wôhÅhi†m™y o∏m‹e)\n", 
cﬁlisi⁄Gøph
[
i
], i, 100.0 * (cﬁlisi⁄Gøph[i] - cﬁlisi⁄Gøph[i+1]Ë/ 
numAc˚s£s
, 100.0 * collisionGraph[i] /ÇumAccesses);

342 
d©aLogF
("%dÑehashes\n", 
numRehashes
);

343 
d©aLogF
("%dÑeö£πs\n", 
numReö£πs
);

348 
HashTabÀ
();

349 ~
HashTabÀ
()

351 
övÆid©eIãøt‹s
();

352 i‡(
	gm_èbÀ
)

353 
dóŒoˇãTabÀ
(
m_èbÀ
, 
m_èbÀSize
);

354 #i‡
CHECK_HASHTABLE_USE_AFTER_DESTRUCTION


355 
	gm_èbÀ
 = (
VÆueTy≥
*)(
uöçå_t
)0xbbadbeef;

359 
HashTabÀ
(const HashTable&);

360 
sw≠
(
HashTabÀ
&);

361 
	gHashTabÀ
& 
	g›î©‹
=(c⁄° 
HashTabÀ
&);

363 
HashTabÀ
(HashTable&&);

364 
	gHashTabÀ
& 
	g›î©‹
=(
HashTabÀ
&&);

369 
ôî©‹
 
begö
(Ë{  
isEm±y
(Ë? 
íd
(Ë: 
makeIãøt‹
(
m_èbÀ
); }

370 
ôî©‹
 
íd
(Ë{  
makeKnownGoodIãøt‹
(
m_èbÀ
 + 
m_èbÀSize
); }

371 
c⁄°_ôî©‹
 
begö
(Ëc⁄° {  
isEm±y
(Ë? 
íd
(Ë: 
makeC⁄°Iãøt‹
(
m_èbÀ
); }

372 
c⁄°_ôî©‹
 
íd
(Ëc⁄° {  
makeKnownGoodC⁄°Iãøt‹
(
m_èbÀ
 + 
m_èbÀSize
); }

374 
size
(Ëc⁄° {  
	gm_keyCou¡
; }

375 
ˇ∑côy
(Ëc⁄° {  
	gm_èbÀSize
; }

376 
boﬁ
 
isEm±y
(Ëc⁄° {  !
	gm_keyCou¡
; }

378 
AddResu…
 
add
(c⁄° 
VÆueTy≥
& 
vÆue
Ë{  
	gadd
<
	gIdítôyTøn¶©‹Ty≥
>(
	gExåa˘‹
::
exåa˘
(vÆue), 
	gvÆue
); }

379 
AddResu…
 
add
(
VÆueTy≥
&& 
vÆue
Ë{  
	gadd
<
	gIdítôyTøn¶©‹Ty≥
>(
	gExåa˘‹
::
exåa˘
(vÆue), 
	gWTF
::
move
(value)); }

384 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
,Åy≥«mê
	gExåa
> 
AddResu…
 
add
(
T
&& 
key
, 
Exåa
&&);

385 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
,Åy≥«mê
	gExåa
> 
AddResu…
 
addPassögHashCode
(
T
&& 
key
, 
Exåa
&&);

387 
ôî©‹
 
föd
(c⁄° 
KeyTy≥
& 
key
Ë{  
	gföd
<
	gIdítôyTøn¶©‹Ty≥
>(
	gkey
); }

388 
c⁄°_ôî©‹
 
föd
(c⁄° 
KeyTy≥
& 
key
Ëc⁄° {  
	gföd
<
	gIdítôyTøn¶©‹Ty≥
>(
	gkey
); }

389 
boﬁ
 
c⁄èös
(c⁄° 
KeyTy≥
& 
key
Ëc⁄° {  
	gc⁄èös
<
	gIdítôyTøn¶©‹Ty≥
>(
	gkey
); }

391 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
ôî©‹
 
föd
(c⁄° 
T
&);

392 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
c⁄°_ôî©‹
 
föd
(c⁄° 
T
&) const;

393 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
boﬁ
 
c⁄èös
(c⁄° 
T
&) const;

395 
ªmove
(c⁄° 
KeyTy≥
&);

396 
ªmove
(
ôî©‹
);

397 
ªmoveWôhoutE¡ryC⁄si°ícyCheck
(
ôî©‹
);

398 
ªmoveWôhoutE¡ryC⁄si°ícyCheck
(
c⁄°_ôî©‹
);

399 
	gãm∂©e
<
ty≥«me
 
	gFun˘‹
>

400 
ªmoveIf
(c⁄° 
Fun˘‹
&);

401 
˛ór
();

403 
boﬁ
 
isEm±yBuckë
(c⁄° 
VÆueTy≥
& 
vÆue
Ë{  
	gisHashTøôsEm±yVÆue
<
	gKeyTøôs
>(
	gExåa˘‹
::
exåa˘
(value)); }

404 
boﬁ
 
isDñëedBuckë
(c⁄° 
VÆueTy≥
& 
vÆue
Ë{  
	gKeyTøôs
::
isDñëedVÆue
(
Exåa˘‹
::
exåa˘
(value)); }

405 
boﬁ
 
isEm±yOrDñëedBuckë
(c⁄° 
VÆueTy≥
& 
vÆue
Ë{  
isEm±yBuckë
(vÆueË|| 
isDñëedBuckë
(value); }

407 
VÆueTy≥
* 
lookup
(c⁄° 
Key
& 
key
Ë{  
	glookup
<
	gIdítôyTøn¶©‹Ty≥
>(
	gkey
); }

408 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
VÆueTy≥
* 
lookup
(c⁄° 
T
&);

410 #i‡!
ASSERT_DISABLED


411 
checkTabÀC⁄si°ícy
() const;

413 
checkTabÀC⁄si°ícy
() { }

415 #i‡
CHECK_HASHTABLE_CONSISTENCY


416 
öã∫ÆCheckTabÀC⁄si°ícy
(Ëc⁄° { 
checkTabÀC⁄si°ícy
(); }

417 
öã∫ÆCheckTabÀC⁄si°ícyEx˚±Size
(Ëc⁄° { 
checkTabÀC⁄si°ícyEx˚±Size
(); }

419 
öã∫ÆCheckTabÀC⁄si°ícyEx˚±Size
() { }

420 
öã∫ÆCheckTabÀC⁄si°ícy
() { }

423 
	g¥iv©e
:

424 
VÆueTy≥
* 
ÆloˇãTabÀ
(
size
);

425 
dóŒoˇãTabÀ
(
VÆueTy≥
* 
èbÀ
, 
size
);

427 
	g°d
::
	t∑ú
<
	tVÆueTy≥
*, 
	tboﬁ
> 
	tLookupTy≥
;

428 
	g°d
::
	t∑ú
<
	tLookupTy≥
, > 
	tFuŒLookupTy≥
;

430 
LookupTy≥
 
lookupF‹Wrôög
(c⁄° 
Key
& 
key
Ë{  
	glookupF‹Wrôög
<
	gIdítôyTøn¶©‹Ty≥
>(
	gkey
); };

431 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
FuŒLookupTy≥
 
fuŒLookupF‹Wrôög
(c⁄° 
T
&);

432 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
LookupTy≥
 
lookupF‹Wrôög
(c⁄° 
T
&);

434 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
> 
checkKey
(c⁄° 
T
&);

436 
ªmoveAndInvÆid©eWôhoutE¡ryC⁄si°ícyCheck
(
VÆueTy≥
*);

437 
ªmoveAndInvÆid©e
(
VÆueTy≥
*);

438 
ªmove
(
VÆueTy≥
*);

440 
boﬁ
 
shouldEx∑nd
(Ëc⁄° {  (
	gm_keyCou¡
 + 
	gm_dñëedCou¡
Ë* 
	gm_maxLﬂd
 >
m_èbÀSize
; }

441 
boﬁ
 
mu°RehashInPœ˚
(Ëc⁄° {  
m_keyCou¡
 * 
	gm_möLﬂd
 < 
	gm_èbÀSize
 * 2; }

442 
boﬁ
 
shouldShrök
(Ëc⁄° {  
m_keyCou¡
 * 
	gm_möLﬂd
 < 
	gm_èbÀSize
 && m_èbÀSizê> 
	gKeyTøôs
::
möimumTabÀSize
; }

443 
VÆueTy≥
* 
ex∑nd
(VÆueTy≥* 
íåy
 = 
nuŒ±r
);

444 
shrök
(Ë{ 
ªhash
(
m_èbÀSize
 / 2, 
nuŒ±r
); }

446 
VÆueTy≥
* 
ªhash
(
√wTabÀSize
, VÆueTy≥* 
íåy
);

447 
VÆueTy≥
* 
ªö£π
(ValueType&&);

449 
öôülizeBuckë
(
VÆueTy≥
& 
buckë
);

450 
dñëeBuckë
(
VÆueTy≥
& 
buckë
Ë{ 
	gbuckë
.~VÆueTy≥(); 
	gTøôs
::
c⁄°ru˘DñëedVÆue
(bucket); }

452 
FuŒLookupTy≥
 
makeLookupResu…
(
VÆueTy≥
* 
posôi⁄
, 
boﬁ
 
found
, 
hash
)

453 {  
FuŒLookupTy≥
(
LookupTy≥
(
posôi⁄
, 
found
), 
hash
); }

455 
ôî©‹
 
makeIãøt‹
(
VÆueTy≥
* 
pos
Ë{  iãøt‹(
this
,Öos, 
m_èbÀ
 + 
m_èbÀSize
); }

456 
c⁄°_ôî©‹
 
makeC⁄°Iãøt‹
(
VÆueTy≥
* 
pos
Ëc⁄° {  c⁄°_ôî©‹(
this
,Öos, 
m_èbÀ
 + 
m_èbÀSize
); }

457 
ôî©‹
 
makeKnownGoodIãøt‹
(
VÆueTy≥
* 
pos
Ë{  iãøt‹(
this
,Öos, 
m_èbÀ
 + 
m_èbÀSize
, 
HashIãmKnownGood
); }

458 
c⁄°_ôî©‹
 
makeKnownGoodC⁄°Iãøt‹
(
VÆueTy≥
* 
pos
Ëc⁄° {  c⁄°_ôî©‹(
this
,Öos, 
m_èbÀ
 + 
m_èbÀSize
, 
HashIãmKnownGood
); }

460 #i‡!
ASSERT_DISABLED


461 
checkTabÀC⁄si°ícyEx˚±Size
() const;

463 
checkTabÀC⁄si°ícyEx˚±Size
() { }

466 #i‡
CHECK_HASHTABLE_ITERATORS


467 
övÆid©eIãøt‹s
();

469 
övÆid©eIãøt‹s
() { }

472 c⁄° 
	gm_maxLﬂd
 = 2;

473 c⁄° 
	gm_möLﬂd
 = 6;

475 
VÆueTy≥
* 
	gm_èbÀ
;

476 
	gm_èbÀSize
;

477 
	gm_èbÀSizeMask
;

478 
	gm_keyCou¡
;

479 
	gm_dñëedCou¡
;

481 #i‡
CHECK_HASHTABLE_ITERATORS


482 
	gpublic
:

484 
muèbÀ
 
c⁄°_ôî©‹
* 
m_ôî©‹s
;

486 
muèbÀ
 
	g°d
::
unique_±r
<
°d
::
muãx
> 
m_muãx
;

489 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


490 
	gpublic
:

491 
muèbÀ
 
°d
::
unique_±r
<
Sèts
> 
m_°©s
;

496 
	gãm∂©e
<
	gsize
> 
	gO√ifyLowBôs
;

497 
	gãm∂©e
<>

498 
	gO√ifyLowBôs
<0> {

499 c⁄° 
	gvÆue
 = 0;

501 
	gãm∂©e
<
	gnumbî
>

502 
	sO√ifyLowBôs
 {

503 c⁄° 
	gvÆue
 = 
numbî
 | 
O√ifyLowBôs
<“umbî >> 1)>::
vÆue
;

506 
	gãm∂©e
<
	gnumbî
>

507 
	sUµîPowîOfTwoBound
 {

508 c⁄° 
	gvÆue
 = (
O√ifyLowBôs
<
numbî
 - 1>::
vÆue
 + 1) * 2;

513 
	gãm∂©e
<
	gsize
, 
boﬁ
 
	gisPowîOfTwo
> 
	gHashTabÀC≠acôyF‹SizeS∂ôãr
;

514 
	gãm∂©e
<
	gsize
>

515 
	gHashTabÀC≠acôyF‹SizeS∂ôãr
<
	gsize
, 
	gåue
> {

516 c⁄° 
	gvÆue
 = 
size
 * 4;

518 
	gãm∂©e
<
	gsize
>

519 
	gHashTabÀC≠acôyF‹SizeS∂ôãr
<
	gsize
, 
	gÁl£
> {

520 c⁄° 
	gvÆue
 = 
UµîPowîOfTwoBound
<
size
>::
vÆue
;

525 
	gãm∂©e
<
	gsize
>

526 
	sHashTabÀC≠acôyF‹Size
 {

527 c⁄° 
	gvÆue
 = 
HashTabÀC≠acôyF‹SizeS∂ôãr
<
size
, !(
	gsize
 & (sizê- 1))>::
vÆue
;

528 
COMPILE_ASSERT
(
size
 > 0, 
HashTabÀN⁄ZîoMöimumC≠acôy
);

529 
COMPILE_ASSERT
(!
°©ic_ˇ°
<>(
vÆue
 >> 31), 
HashTabÀNoC≠acôyOvîÊow
);

530 
COMPILE_ASSERT
(
vÆue
 > (2 * 
size
), 
HashTabÀC≠acôyHﬁdsC⁄ã¡Size
);

533 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

534 
ölöe
 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$HashTabÀ
()

535 : 
	`m_èbÀ
(0)

536 , 
	`m_èbÀSize
(0)

537 , 
	`m_èbÀSizeMask
(0)

538 , 
	`m_keyCou¡
(0)

539 , 
	$m_dñëedCou¡
(0)

540 #i‡
CHECK_HASHTABLE_ITERATORS


541 , 
	`m_ôî©‹s
(0)

542 , 
	`m_muãx
(
°d
::
make_unique
<°d::
muãx
>())

544 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


545 , 
	`m_°©s
(
°d
::
make_unique
<
Sèts
>())

548 
	}
}

550 
ölöe
 
	$doubÀHash
(
key
)

552 
key
 = ~key + (key >> 23);

553 
key
 ^= (key << 12);

554 
key
 ^= (key >> 7);

555 
key
 ^= (key << 2);

556 
key
 ^= (key >> 20);

557  
key
;

558 
	}
}

560 #i‡
ASSERT_DISABLED


562 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

563 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
>

564 
ölöe
 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$checkKey
(c⁄° 
T
&)

566 
	}
}

570 
ãm∂©e
<
ty≥«me
 
Key
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

571 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
>

572 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$checkKey
(c⁄° 
T
& 
key
)

574 i‡(!
HashFun˘i⁄s
::
ß„ToCom∑ªToEm±yOrDñëed
)

576 
	`ASSERT
(!
HashTøn¶©‹
::
	`equÆ
(
KeyTøôs
::
	`em±yVÆue
(), 
key
));

577 
ty≥«me
 
°d
::
Æig√d_°‹age
<(
VÆueTy≥
), std::
Æignmít_of
<VÆueTy≥>::
vÆue
>::
ty≥
 
dñëedVÆueBuf„r
;

578 
VÆueTy≥
* 
dñëedVÆuePå
 = 
ªöãΩªt_ˇ°_±r
<VÆueTy≥*>(&
dñëedVÆueBuf„r
);

579 
VÆueTy≥
& 
dñëedVÆue
 = *
dñëedVÆuePå
;

580 
Tøôs
::
	`c⁄°ru˘DñëedVÆue
(
dñëedVÆue
);

581 
	`ASSERT
(!
HashTøn¶©‹
::
	`equÆ
(
Exåa˘‹
::
	`exåa˘
(
dñëedVÆue
), 
key
));

582 
	}
}

586 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

587 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
>

588 
ölöe
áutÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
lookup
(c⁄° 
T
& 
key
Ë-> 
VÆueTy≥
*

590 
checkKey
<
HashTøn¶©‹
>(
key
);

592 
	gk
 = 0;

593 
	gsizeMask
 = 
m_èbÀSizeMask
;

594 
VÆueTy≥
* 
	gèbÀ
 = 
m_èbÀ
;

595 
	gh
 = 
HashTøn¶©‹
::
hash
(
key
);

596 
	gi
 = 
h
 & 
sizeMask
;

598 i‡(!
	gèbÀ
)

601 #i‡
DUMP_HASHTABLE_STATS


602 ++
	gHashTabÀSèts
::
numAc˚s£s
;

603 
	g¥obeCou¡
 = 0;

606 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


607 ++
	gm_°©s
->
	gnumAc˚s£s
;

611 
VÆueTy≥
* 
	gíåy
 = 
èbÀ
 + 
i
;

614 i‡(
	gHashFun˘i⁄s
::
ß„ToCom∑ªToEm±yOrDñëed
) {

615 i‡(
HashTøn¶©‹
::
equÆ
(
Exåa˘‹
::
exåa˘
(*
íåy
), 
key
))

616  
	gíåy
;

618 i‡(
isEm±yBuckë
(*
íåy
))

621 i‡(
isEm±yBuckë
(*
íåy
))

624 i‡(!
isDñëedBuckë
(*
íåy
Ë&& 
	gHashTøn¶©‹
::
equÆ
(
Exåa˘‹
::
exåa˘
(*íåy), 
key
))

625  
	gíåy
;

627 #i‡
DUMP_HASHTABLE_STATS


628 ++
	g¥obeCou¡
;

629 
	gHashTabÀSèts
::
ªc‹dCﬁlisi⁄AtCou¡
(
¥obeCou¡
);

632 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


633 
	gm_°©s
->
ªc‹dCﬁlisi⁄AtCou¡
(
¥obeCou¡
);

636 i‡(
	gk
 == 0)

637 
k
 = 1 | 
doubÀHash
(
h
);

638 
	gi
 = (
i
 + 
k
Ë& 
sizeMask
;

642 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

643 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
>

644 
ölöe
áutÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
lookupF‹Wrôög
(c⁄° 
T
& 
key
Ë-> 
LookupTy≥


646 
ASSERT
(
m_èbÀ
);

647 
	gcheckKey
<
	gHashTøn¶©‹
>(
	gkey
);

649 
	gk
 = 0;

650 
VÆueTy≥
* 
	gèbÀ
 = 
m_èbÀ
;

651 
	gsizeMask
 = 
m_èbÀSizeMask
;

652 
	gh
 = 
HashTøn¶©‹
::
hash
(
key
);

653 
	gi
 = 
h
 & 
sizeMask
;

655 #i‡
DUMP_HASHTABLE_STATS


656 ++
	gHashTabÀSèts
::
numAc˚s£s
;

657 
	g¥obeCou¡
 = 0;

660 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


661 ++
	gm_°©s
->
	gnumAc˚s£s
;

664 
VÆueTy≥
* 
	gdñëedE¡ry
 = 0;

667 
VÆueTy≥
* 
	gíåy
 = 
èbÀ
 + 
i
;

670 i‡(
	gHashFun˘i⁄s
::
ß„ToCom∑ªToEm±yOrDñëed
) {

671 i‡(
isEm±yBuckë
(*
íåy
))

672  
LookupTy≥
(
dñëedE¡ry
 ? dñëedE¡ry : 
íåy
, 
Ál£
);

674 i‡(
	gHashTøn¶©‹
::
equÆ
(
Exåa˘‹
::
exåa˘
(*
íåy
), 
key
))

675  
LookupTy≥
(
íåy
, 
åue
);

677 i‡(
isDñëedBuckë
(*
íåy
))

678 
	gdñëedE¡ry
 = 
íåy
;

680 i‡(
isEm±yBuckë
(*
íåy
))

681  
LookupTy≥
(
dñëedE¡ry
 ? dñëedE¡ry : 
íåy
, 
Ál£
);

683 i‡(
isDñëedBuckë
(*
íåy
))

684 
	gdñëedE¡ry
 = 
íåy
;

685 i‡(
	gHashTøn¶©‹
::
equÆ
(
Exåa˘‹
::
exåa˘
(*
íåy
), 
key
))

686  
LookupTy≥
(
íåy
, 
åue
);

688 #i‡
DUMP_HASHTABLE_STATS


689 ++
	g¥obeCou¡
;

690 
	gHashTabÀSèts
::
ªc‹dCﬁlisi⁄AtCou¡
(
¥obeCou¡
);

693 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


694 
	gm_°©s
->
ªc‹dCﬁlisi⁄AtCou¡
(
¥obeCou¡
);

697 i‡(
	gk
 == 0)

698 
k
 = 1 | 
doubÀHash
(
h
);

699 
	gi
 = (
i
 + 
k
Ë& 
sizeMask
;

703 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

704 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
>

705 
ölöe
áutÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
fuŒLookupF‹Wrôög
(c⁄° 
T
& 
key
Ë-> 
FuŒLookupTy≥


707 
ASSERT
(
m_èbÀ
);

708 
	gcheckKey
<
	gHashTøn¶©‹
>(
	gkey
);

710 
	gk
 = 0;

711 
VÆueTy≥
* 
	gèbÀ
 = 
m_èbÀ
;

712 
	gsizeMask
 = 
m_èbÀSizeMask
;

713 
	gh
 = 
HashTøn¶©‹
::
hash
(
key
);

714 
	gi
 = 
h
 & 
sizeMask
;

716 #i‡
DUMP_HASHTABLE_STATS


717 ++
	gHashTabÀSèts
::
numAc˚s£s
;

718 
	g¥obeCou¡
 = 0;

721 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


722 ++
	gm_°©s
->
	gnumAc˚s£s
;

725 
VÆueTy≥
* 
	gdñëedE¡ry
 = 0;

728 
VÆueTy≥
* 
	gíåy
 = 
èbÀ
 + 
i
;

731 i‡(
	gHashFun˘i⁄s
::
ß„ToCom∑ªToEm±yOrDñëed
) {

732 i‡(
isEm±yBuckë
(*
íåy
))

733  
makeLookupResu…
(
dñëedE¡ry
 ? dñëedE¡ry : 
íåy
, 
Ál£
, 
h
);

735 i‡(
	gHashTøn¶©‹
::
equÆ
(
Exåa˘‹
::
exåa˘
(*
íåy
), 
key
))

736  
makeLookupResu…
(
íåy
, 
åue
, 
h
);

738 i‡(
isDñëedBuckë
(*
íåy
))

739 
	gdñëedE¡ry
 = 
íåy
;

741 i‡(
isEm±yBuckë
(*
íåy
))

742  
makeLookupResu…
(
dñëedE¡ry
 ? dñëedE¡ry : 
íåy
, 
Ál£
, 
h
);

744 i‡(
isDñëedBuckë
(*
íåy
))

745 
	gdñëedE¡ry
 = 
íåy
;

746 i‡(
	gHashTøn¶©‹
::
equÆ
(
Exåa˘‹
::
exåa˘
(*
íåy
), 
key
))

747  
makeLookupResu…
(
íåy
, 
åue
, 
h
);

749 #i‡
DUMP_HASHTABLE_STATS


750 ++
	g¥obeCou¡
;

751 
	gHashTabÀSèts
::
ªc‹dCﬁlisi⁄AtCou¡
(
¥obeCou¡
);

754 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


755 
	gm_°©s
->
ªc‹dCﬁlisi⁄AtCou¡
(
¥obeCou¡
);

758 i‡(
	gk
 == 0)

759 
k
 = 1 | 
doubÀHash
(
h
);

760 
	gi
 = (
i
 + 
k
Ë& 
sizeMask
;

764 
	gãm∂©e
<
boﬁ
 
	gem±yVÆueIsZîo
> 
	gHashTabÀBuckëInôülizî
;

766 
	gãm∂©e
<> 
	gHashTabÀBuckëInôülizî
<
	gÁl£
> {

767 
	gãm∂©e
<
ty≥«me
 
	gTøôs
,Åy≥«mê
	gVÆue
> 
öôülize
(
VÆue
& 
buckë
)

769 
√w
 (
NŸNuŒ
, &
buckë
Ë
VÆue
(
Tøôs
::
em±yVÆue
());

773 
	gãm∂©e
<> 
	gHashTabÀBuckëInôülizî
<
	gåue
> {

774 
	gãm∂©e
<
ty≥«me
 
	gTøôs
,Åy≥«mê
	gVÆue
> 
öôülize
(
VÆue
& 
buckë
)

779 
mem£t
(&
buckë
, 0, (bucket));

783 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

784 
ölöe
 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$öôülizeBuckë
(
VÆueTy≥
& 
buckë
)

786 
HashTabÀBuckëInôülizî
<
Tøôs
::
em±yVÆueIsZîo
>::
ãm∂©e
 
öôülize
<Tøôs>(
buckë
);

787 
	}
}

789 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

790 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
,Åy≥«mê
	gExåa
>

791 
ALWAYS_INLINE
áutÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
add
(
T
&& 
key
, 
Exåa
&& 
exåa
Ë-> 
	gAddResu…


793 
	gcheckKey
<
	gHashTøn¶©‹
>(
	gkey
);

795 
övÆid©eIãøt‹s
();

797 i‡(!
	gm_èbÀ
)

798 
ex∑nd
(
nuŒ±r
);

800 
öã∫ÆCheckTabÀC⁄si°ícy
();

802 
ASSERT
(
m_èbÀ
);

804 
	gk
 = 0;

805 
VÆueTy≥
* 
	gèbÀ
 = 
m_èbÀ
;

806 
	gsizeMask
 = 
m_èbÀSizeMask
;

807 
	gh
 = 
HashTøn¶©‹
::
hash
(
key
);

808 
	gi
 = 
h
 & 
sizeMask
;

810 #i‡
DUMP_HASHTABLE_STATS


811 ++
	gHashTabÀSèts
::
numAc˚s£s
;

812 
	g¥obeCou¡
 = 0;

815 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


816 ++
	gm_°©s
->
	gnumAc˚s£s
;

819 
VÆueTy≥
* 
	gdñëedE¡ry
 = 0;

820 
VÆueTy≥
* 
	gíåy
;

822 
	gíåy
 = 
èbÀ
 + 
i
;

825 i‡(
	gHashFun˘i⁄s
::
ß„ToCom∑ªToEm±yOrDñëed
) {

826 i‡(
isEm±yBuckë
(*
íåy
))

829 i‡(
	gHashTøn¶©‹
::
equÆ
(
Exåa˘‹
::
exåa˘
(*
íåy
), 
key
))

830  
AddResu…
(
makeKnownGoodIãøt‹
(
íåy
), 
Ál£
);

832 i‡(
isDñëedBuckë
(*
íåy
))

833 
	gdñëedE¡ry
 = 
íåy
;

835 i‡(
isEm±yBuckë
(*
íåy
))

838 i‡(
isDñëedBuckë
(*
íåy
))

839 
	gdñëedE¡ry
 = 
íåy
;

840 i‡(
	gHashTøn¶©‹
::
equÆ
(
Exåa˘‹
::
exåa˘
(*
íåy
), 
key
))

841  
AddResu…
(
makeKnownGoodIãøt‹
(
íåy
), 
Ál£
);

843 #i‡
DUMP_HASHTABLE_STATS


844 ++
	g¥obeCou¡
;

845 
	gHashTabÀSèts
::
ªc‹dCﬁlisi⁄AtCou¡
(
¥obeCou¡
);

848 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


849 
	gm_°©s
->
ªc‹dCﬁlisi⁄AtCou¡
(
¥obeCou¡
);

852 i‡(
	gk
 == 0)

853 
k
 = 1 | 
doubÀHash
(
h
);

854 
	gi
 = (
i
 + 
k
Ë& 
sizeMask
;

857 i‡(
	gdñëedE¡ry
) {

858 
öôülizeBuckë
(*
dñëedE¡ry
);

859 
	gíåy
 = 
dñëedE¡ry
;

860 --
	gm_dñëedCou¡
;

863 
	gHashTøn¶©‹
::
å™¶©e
(*
íåy
, 
°d
::
f‹w¨d
<
T
>(
key
), std::f‹w¨d<
Exåa
>(
exåa
));

864 ++
	gm_keyCou¡
;

866 i‡(
shouldEx∑nd
())

867 
	gíåy
 = 
ex∑nd
(
íåy
);

869 
öã∫ÆCheckTabÀC⁄si°ícy
();

871  
AddResu…
(
makeKnownGoodIãøt‹
(
íåy
), 
åue
);

874 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

875 
	gãm∂©e
<
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
,Åy≥«mê
	gExåa
>

876 
ölöe
áutÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
addPassögHashCode
(
T
&& 
key
, 
Exåa
&& 
exåa
Ë-> 
	gAddResu…


878 
	gcheckKey
<
	gHashTøn¶©‹
>(
	gkey
);

880 
övÆid©eIãøt‹s
();

882 i‡(!
	gm_èbÀ
)

883 
ex∑nd
();

885 
öã∫ÆCheckTabÀC⁄si°ícy
();

887 
FuŒLookupTy≥
 
	glookupResu…
 = 
fuŒLookupF‹Wrôög
<
HashTøn¶©‹
>(
key
);

889 
VÆueTy≥
* 
	gíåy
 = 
lookupResu…
.
fú°
.first;

890 
boﬁ
 
	gfound
 = 
lookupResu…
.
fú°
.
£c⁄d
;

891 
	gh
 = 
lookupResu…
.
£c⁄d
;

893 i‡(
	gfound
)

894  
AddResu…
(
makeKnownGoodIãøt‹
(
íåy
), 
Ál£
);

896 i‡(
isDñëedBuckë
(*
íåy
)) {

897 
öôülizeBuckë
(*
íåy
);

898 --
	gm_dñëedCou¡
;

901 
	gHashTøn¶©‹
::
å™¶©e
(*
íåy
, 
°d
::
f‹w¨d
<
T
>(
key
), std::f‹w¨d<
Exåa
>(
exåa
), 
h
);

902 ++
	gm_keyCou¡
;

904 i‡(
shouldEx∑nd
())

905 
	gíåy
 = 
ex∑nd
(
íåy
);

907 
öã∫ÆCheckTabÀC⁄si°ícy
();

909  
AddResu…
(
makeKnownGoodIãøt‹
(
íåy
), 
åue
);

912 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

913 
ölöe
áutÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
ªö£π
(
VÆueTy≥
&& 
íåy
) -> ValueType*

915 
ASSERT
(
m_èbÀ
);

916 
ASSERT
(!
lookupF‹Wrôög
(
Exåa˘‹
::
exåa˘
(
íåy
)).
£c⁄d
);

917 
ASSERT
(!
isDñëedBuckë
(*(
lookupF‹Wrôög
(
Exåa˘‹
::
exåa˘
(
íåy
)).
fú°
)));

918 #i‡
DUMP_HASHTABLE_STATS


919 ++
	gHashTabÀSèts
::
numReö£πs
;

921 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


922 ++
	gm_°©s
->
	gnumReö£πs
;

925 
VÆue
* 
	g√wE¡ry
 = 
lookupF‹Wrôög
(
Exåa˘‹
::
exåa˘
(
íåy
)).
fú°
;

926 
	g√wE¡ry
->~
VÆue
();

927 
√w
 (
NŸNuŒ
, 
√wE¡ry
Ë
VÆueTy≥
(
WTF
::
move
(
íåy
));

929  
	g√wE¡ry
;

932 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

933 
	gãm∂©e
 <
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
>

934 autÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
föd
(c⁄° 
T
& 
key
Ë-> 
ôî©‹


936 i‡(!
m_èbÀ
)

937  
íd
();

939 
VÆueTy≥
* 
	gíåy
 = 
lookup
<
HashTøn¶©‹
>(
key
);

940 i‡(!
	gíåy
)

941  
íd
();

943  
makeKnownGoodIãøt‹
(
íåy
);

946 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

947 
	gãm∂©e
 <
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
>

948 autÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$föd
(c⁄° 
T
& 
key
Ëc⁄° -> 
c⁄°_ôî©‹


950 i‡(!
m_èbÀ
)

951  
	`íd
();

953 
VÆueTy≥
* 
íåy
 = 
c⁄°_ˇ°
<
HashTabÀ
*>(
this
)->
lookup
<
HashTøn¶©‹
>(
key
);

954 i‡(!
íåy
)

955  
	`íd
();

957  
	`makeKnownGoodC⁄°Iãøt‹
(
íåy
);

958 
	}
}

960 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

961 
	gãm∂©e
 <
ty≥«me
 
	gHashTøn¶©‹
,Åy≥«mê
	gT
>

962 
boﬁ
 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$c⁄èös
(c⁄° 
T
& 
key
) const

964 i‡(!
m_èbÀ
)

965  
Ál£
;

967  
c⁄°_ˇ°
<
HashTabÀ
*>(
this
)->
lookup
<
HashTøn¶©‹
>(
key
);

968 
	}
}

970 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

971 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$ªmoveAndInvÆid©eWôhoutE¡ryC⁄si°ícyCheck
(
VÆueTy≥
* 
pos
)

973 
	`övÆid©eIãøt‹s
();

974 
	`ªmove
(
pos
);

975 
	}
}

977 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

978 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$ªmoveAndInvÆid©e
(
VÆueTy≥
* 
pos
)

980 
	`övÆid©eIãøt‹s
();

981 
	`öã∫ÆCheckTabÀC⁄si°ícy
();

982 
	`ªmove
(
pos
);

983 
	}
}

985 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

986 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$ªmove
(
VÆueTy≥
* 
pos
)

988 #i‡
DUMP_HASHTABLE_STATS


989 ++
HashTabÀSèts
::
numRemoves
;

991 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


992 ++
m_°©s
->
numRemoves
;

995 
	`dñëeBuckë
(*
pos
);

996 ++
m_dñëedCou¡
;

997 --
m_keyCou¡
;

999 i‡(
	`shouldShrök
())

1000 
	`shrök
();

1002 
	`öã∫ÆCheckTabÀC⁄si°ícy
();

1003 
	}
}

1005 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1006 
ölöe
 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$ªmove
(
ôî©‹
 
ô
)

1008 i‡(
ô
 =
	`íd
())

1011 
	`ªmoveAndInvÆid©e
(
c⁄°_ˇ°
<
VÆueTy≥
*>(
ô
.
m_ôî©‹
.
m_posôi⁄
));

1012 
	}
}

1014 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1015 
ölöe
 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$ªmoveWôhoutE¡ryC⁄si°ícyCheck
(
ôî©‹
 
ô
)

1017 i‡(
ô
 =
	`íd
())

1020 
	`ªmoveAndInvÆid©eWôhoutE¡ryC⁄si°ícyCheck
(
c⁄°_ˇ°
<
VÆueTy≥
*>(
ô
.
m_ôî©‹
.
m_posôi⁄
));

1021 
	}
}

1023 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1024 
ölöe
 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$ªmoveWôhoutE¡ryC⁄si°ícyCheck
(
c⁄°_ôî©‹
 
ô
)

1026 i‡(
ô
 =
	`íd
())

1029 
	`ªmoveAndInvÆid©eWôhoutE¡ryC⁄si°ícyCheck
(
c⁄°_ˇ°
<
VÆueTy≥
*>(
ô
.
m_posôi⁄
));

1030 
	}
}

1032 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1033 
ölöe
 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$ªmove
(c⁄° 
KeyTy≥
& 
key
)

1035 
	`ªmove
(
	`föd
(
key
));

1036 
	}
}

1038 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1039 
	gãm∂©e
<
ty≥«me
 
	gFun˘‹
>

1040 
ölöe
 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$ªmoveIf
(c⁄° 
Fun˘‹
& 
fun˘‹
)

1042 
i
 = 
m_èbÀSize
; i--;) {

1043 i‡(
	`isEm±yOrDñëedBuckë
(
m_èbÀ
[
i
]))

1046 i‡(!
	`fun˘‹
(
m_èbÀ
[
i
]))

1049 
	`dñëeBuckë
(
m_èbÀ
[
i
]);

1050 ++
m_dñëedCou¡
;

1051 --
m_keyCou¡
;

1054 i‡(
	`shouldShrök
())

1055 
	`shrök
();

1057 
	`öã∫ÆCheckTabÀC⁄si°ícy
();

1058 
	}
}

1060 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1061 autÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
ÆloˇãTabÀ
(
size
Ë-> 
VÆueTy≥
*

1065 i‡(
Tøôs
::
em±yVÆueIsZîo
)

1066  
°©ic_ˇ°
<
VÆueTy≥
*>(
Á°Zî€dMÆloc
(
size
 * (ValueType)));

1067 
VÆueTy≥
* 
	gªsu…
 = 
°©ic_ˇ°
<VÆueTy≥*>(
Á°MÆloc
(
size
 * (ValueType)));

1068 
	gi
 = 0; i < 
	gsize
; i++)

1069 
öôülizeBuckë
(
ªsu…
[
i
]);

1070  
	gªsu…
;

1073 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1074 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$dóŒoˇãTabÀ
(
VÆueTy≥
* 
èbÀ
, 
size
)

1076 
i
 = 0; i < 
size
; ++i) {

1077 i‡(!
	`isDñëedBuckë
(
èbÀ
[
i
]))

1078 
èbÀ
[
i
].~
	`VÆueTy≥
();

1080 
	`Á°Fªe
(
èbÀ
);

1081 
	}
}

1083 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1084 autÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
ex∑nd
(
VÆueTy≥
* 
íåy
) -> ValueType*

1086 
√wSize
;

1087 i‡(
	gm_èbÀSize
 == 0)

1088 
√wSize
 = 
KeyTøôs
::
möimumTabÀSize
;

1089 i‡(
mu°RehashInPœ˚
())

1090 
	g√wSize
 = 
m_èbÀSize
;

1092 
	g√wSize
 = 
m_èbÀSize
 * 2;

1094  
ªhash
(
√wSize
, 
íåy
);

1097 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1098 autÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
ªhash
(
√wTabÀSize
, 
VÆueTy≥
* 
íåy
Ë-> 
	gVÆueTy≥
*

1100 
öã∫ÆCheckTabÀC⁄si°ícyEx˚±Size
();

1102 
	gﬁdTabÀSize
 = 
m_èbÀSize
;

1103 
VÆueTy≥
* 
	gﬁdTabÀ
 = 
m_èbÀ
;

1105 #i‡
DUMP_HASHTABLE_STATS


1106 i‡(
	gﬁdTabÀSize
 != 0)

1107 ++
HashTabÀSèts
::
numRehashes
;

1110 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


1111 i‡(
	gﬁdTabÀSize
 != 0)

1112 ++
m_°©s
->
numRehashes
;

1115 
	gm_èbÀSize
 = 
√wTabÀSize
;

1116 
	gm_èbÀSizeMask
 = 
√wTabÀSize
 - 1;

1117 
	gm_èbÀ
 = 
ÆloˇãTabÀ
(
√wTabÀSize
);

1119 
VÆue
* 
	g√wE¡ry
 = 
nuŒ±r
;

1120 
	gi
 = 0; i !
ﬁdTabÀSize
; ++i) {

1121 i‡(
isEm±yOrDñëedBuckë
(
ﬁdTabÀ
[
i
])) {

1122 
ASSERT
(&
ﬁdTabÀ
[
i
] !
íåy
);

1126 
VÆue
* 
	gªö£πedE¡ry
 = 
ªö£π
(
WTF
::
move
(
ﬁdTabÀ
[
i
]));

1127 i‡(&
	gﬁdTabÀ
[
i
] =
íåy
) {

1128 
ASSERT
(!
√wE¡ry
);

1129 
	g√wE¡ry
 = 
ªö£πedE¡ry
;

1133 
	gm_dñëedCou¡
 = 0;

1135 
dóŒoˇãTabÀ
(
ﬁdTabÀ
, 
ﬁdTabÀSize
);

1137 
öã∫ÆCheckTabÀC⁄si°ícy
();

1138  
	g√wE¡ry
;

1141 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1142 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$˛ór
()

1144 
	`övÆid©eIãøt‹s
();

1145 i‡(!
m_èbÀ
)

1148 
	`dóŒoˇãTabÀ
(
m_èbÀ
, 
m_èbÀSize
);

1149 
m_èbÀ
 = 0;

1150 
m_èbÀSize
 = 0;

1151 
m_èbÀSizeMask
 = 0;

1152 
m_keyCou¡
 = 0;

1153 
	}
}

1155 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1156 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$HashTabÀ
(c⁄° 
HashTabÀ
& 
Ÿhî
)

1157 : 
	`m_èbÀ
(0)

1158 , 
	`m_èbÀSize
(0)

1159 , 
	`m_èbÀSizeMask
(0)

1160 , 
	`m_keyCou¡
(0)

1161 , 
	$m_dñëedCou¡
(0)

1162 #i‡
CHECK_HASHTABLE_ITERATORS


1163 , 
	`m_ôî©‹s
(0)

1164 , 
	`m_muãx
(
°d
::
make_unique
<°d::
muãx
>())

1166 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


1167 , 
	`m_°©s
(
°d
::
make_unique
<
Sèts
>(*
Ÿhî
.
m_°©s
))

1174 
c⁄°_ôî©‹
 
íd
 = 
Ÿhî
.
	`íd
();

1175 
c⁄°_ôî©‹
 
ô
 = 
Ÿhî
.
	`begö
(); ià!
íd
; ++it)

1176 
	`add
(*
ô
);

1177 
	}
}

1179 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1180 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$sw≠
(
HashTabÀ
& 
Ÿhî
)

1182 
	`övÆid©eIãøt‹s
();

1183 
Ÿhî
.
	`övÆid©eIãøt‹s
();

1185 
°d
::
	`sw≠
(
m_èbÀ
, 
Ÿhî
.m_table);

1186 
°d
::
	`sw≠
(
m_èbÀSize
, 
Ÿhî
.m_tableSize);

1187 
°d
::
	`sw≠
(
m_èbÀSizeMask
, 
Ÿhî
.m_tableSizeMask);

1188 
°d
::
	`sw≠
(
m_keyCou¡
, 
Ÿhî
.m_keyCount);

1189 
°d
::
	`sw≠
(
m_dñëedCou¡
, 
Ÿhî
.m_deletedCount);

1191 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


1192 
m_°©s
.
	`sw≠
(
Ÿhî
.m_stats);

1194 
	}
}

1196 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1197 autÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
›î©‹
=(c⁄° 
HashTabÀ
& 
Ÿhî
) -> HashTable&

1201 
HashTabÀ
 
tmp
(
Ÿhî
);

1202 
sw≠
(
tmp
);

1203  *
	gthis
;

1206 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1207 
ölöe
 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$HashTabÀ
(
HashTabÀ
&& 
Ÿhî
)

1208 #i‡
CHECK_HASHTABLE_ITERATORS


1209 : 
	`m_ôî©‹s
(
nuŒ±r
)

1210 , 
	`m_muãx
(
°d
::
make_unique
<°d::
muãx
>())

1213 
Ÿhî
.
	`övÆid©eIãøt‹s
();

1215 
m_èbÀ
 = 
Ÿhî
.m_table;

1216 
m_èbÀSize
 = 
Ÿhî
.m_tableSize;

1217 
m_èbÀSizeMask
 = 
Ÿhî
.m_tableSizeMask;

1218 
m_keyCou¡
 = 
Ÿhî
.m_keyCount;

1219 
m_dñëedCou¡
 = 
Ÿhî
.m_deletedCount;

1221 
Ÿhî
.
m_èbÀ
 = 
nuŒ±r
;

1222 
Ÿhî
.
m_èbÀSize
 = 0;

1223 
Ÿhî
.
m_èbÀSizeMask
 = 0;

1224 
Ÿhî
.
m_keyCou¡
 = 0;

1225 
Ÿhî
.
m_dñëedCou¡
 = 0;

1227 #i‡
DUMP_HASHTABLE_STATS_PER_TABLE


1228 
m_°©s
 = 
WTF
::
	`move
(
Ÿhî
.m_stats);

1229 
Ÿhî
.
m_°©s
 = 
nuŒ±r
;

1231 
	}
}

1233 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1234 
ölöe
áutÿ
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
›î©‹
=(
HashTabÀ
&& 
Ÿhî
) -> HashTable&

1236 
HashTabÀ
 
ãmp
 = 
WTF
::
move
(
Ÿhî
);

1237 
sw≠
(
ãmp
);

1238  *
	gthis
;

1241 #i‡!
ASSERT_DISABLED


1243 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1244 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$checkTabÀC⁄si°ícy
() const

1246 
	`checkTabÀC⁄si°ícyEx˚±Size
();

1247 
	`ASSERT
(!
m_èbÀ
 || !
	`shouldEx∑nd
());

1248 
	`ASSERT
(!
	`shouldShrök
());

1249 
	}
}

1251 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1252 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$checkTabÀC⁄si°ícyEx˚±Size
() const

1254 i‡(!
m_èbÀ
)

1257 
cou¡
 = 0;

1258 
dñëedCou¡
 = 0;

1259 
j
 = 0; j < 
m_èbÀSize
; ++j) {

1260 
VÆueTy≥
* 
íåy
 = 
m_èbÀ
 + 
j
;

1261 i‡(
	`isEm±yBuckë
(*
íåy
))

1264 i‡(
	`isDñëedBuckë
(*
íåy
)) {

1265 ++
dñëedCou¡
;

1269 
c⁄°_ôî©‹
 
ô
 = 
	`föd
(
Exåa˘‹
::
	`exåa˘
(*
íåy
));

1270 
	`ASSERT
(
íåy
 =
ô
.
m_posôi⁄
);

1271 ++
cou¡
;

1273 
VÆueCheck
<
Key
>::
	`checkC⁄si°ícy
(
ô
->
key
);

1276 
	`ASSERT
(
cou¡
 =
m_keyCou¡
);

1277 
	`ASSERT
(
dñëedCou¡
 =
m_dñëedCou¡
);

1278 
	`ASSERT
(
m_èbÀSize
 >
KeyTøôs
::
möimumTabÀSize
);

1279 
	`ASSERT
(
m_èbÀSizeMask
);

1280 
	`ASSERT
(
m_èbÀSize
 =
m_èbÀSizeMask
 + 1);

1281 
	}
}

1285 #i‡
CHECK_HASHTABLE_ITERATORS


1287 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1288 
	gHashTabÀ
<
	gKey
, 
	gVÆue
, 
	gExåa˘‹
, 
	gHashFun˘i⁄s
, 
	gTøôs
, 
	gKeyTøôs
>::
	$övÆid©eIãøt‹s
()

1290 
°d
::
lock_gu¨d
<°d::
muãx
> 
	`lock
(*
m_muãx
);

1291 
c⁄°_ôî©‹
* 
√xt
;

1292 
c⁄°_ôî©‹
* 
p
 = 
m_ôî©‹s
;Ö;Ö = 
√xt
) {

1293 
√xt
 = 
p
->
m_√xt
;

1294 
p
->
m_èbÀ
 = 0;

1295 
p
->
m_√xt
 = 0;

1296 
p
->
m_¥evious
 = 0;

1298 
m_ôî©‹s
 = 0;

1299 
	}
}

1301 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1302 
addIãøt‹
(c⁄° 
HashTabÀ
<
Key
, 
VÆue
, 
Exåa˘‹
, 
HashFun˘i⁄s
, 
Tøôs
, 
KeyTøôs
>* 
èbÀ
,

1303 
HashTabÀC⁄°Iãøt‹
<
Key
, 
VÆue
, 
Exåa˘‹
, 
HashFun˘i⁄s
, 
Tøôs
, 
KeyTøôs
>* 
ô
)

1305 
	gô
->
	gm_èbÀ
 = 
èbÀ
;

1306 
	gô
->
	gm_¥evious
 = 0;

1309 i‡(!
	gèbÀ
) {

1310 
	gô
->
	gm_√xt
 = 0;

1312 
	g°d
::
lock_gu¨d
<
°d
::
muãx
> 
lock
(*
èbÀ
->
m_muãx
);

1313 
ASSERT
(
èbÀ
->
m_ôî©‹s
 !
ô
);

1314 
	gô
->
	gm_√xt
 = 
èbÀ
->
m_ôî©‹s
;

1315 
	gèbÀ
->
	gm_ôî©‹s
 = 
ô
;

1316 i‡(
	gô
->
	gm_√xt
) {

1317 
ASSERT
(!
ô
->
m_√xt
->
m_¥evious
);

1318 
	gô
->
	gm_√xt
->
	gm_¥evious
 = 
ô
;

1323 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
,Åy≥«mê
	gExåa˘‹
,Åy≥«mê
	gHashFun˘i⁄s
,Åy≥«mê
	gTøôs
,Åy≥«mê
	gKeyTøôs
>

1324 
ªmoveIãøt‹
(
HashTabÀC⁄°Iãøt‹
<
Key
, 
VÆue
, 
Exåa˘‹
, 
HashFun˘i⁄s
, 
Tøôs
, 
KeyTøôs
>* 
ô
)

1326 
	gHashTabÀ
<
	tKey
, 
	tVÆue
, 
	tExåa˘‹
, 
	tHashFun˘i⁄s
, 
	tTøôs
, 
	tKeyTøôs
> 
	tHashTabÀTy≥
;

1327 
	gHashTabÀC⁄°Iãøt‹
<
	tKey
, 
	tVÆue
, 
	tExåa˘‹
, 
	tHashFun˘i⁄s
, 
	tTøôs
, 
	tKeyTøôs
> 
	tc⁄°_ôî©‹
;

1330 i‡(!
	gô
->
	gm_èbÀ
) {

1331 
ASSERT
(!
ô
->
m_√xt
);

1332 
ASSERT
(!
ô
->
m_¥evious
);

1334 
	g°d
::
lock_gu¨d
<
°d
::
muãx
> 
lock
(*
ô
->
m_èbÀ
->
m_muãx
);

1335 i‡(
	gô
->
	gm_√xt
) {

1336 
ASSERT
(
ô
->
m_√xt
->
m_¥evious
 == it);

1337 
	gô
->
	gm_√xt
->
	gm_¥evious
 = 
ô
->
m_¥evious
;

1339 i‡(
	gô
->
	gm_¥evious
) {

1340 
ASSERT
(
ô
->
m_èbÀ
->
m_ôî©‹s
 != it);

1341 
ASSERT
(
ô
->
m_¥evious
->
m_√xt
 == it);

1342 
	gô
->
	gm_¥evious
->
	gm_√xt
 = 
ô
->
m_√xt
;

1344 
ASSERT
(
ô
->
m_èbÀ
->
m_ôî©‹s
 == it);

1345 
	gô
->
	gm_èbÀ
->
	gm_ôî©‹s
 = 
ô
->
m_√xt
;

1349 
	gô
->
	gm_èbÀ
 = 0;

1350 
	gô
->
	gm_√xt
 = 0;

1351 
	gô
->
	gm_¥evious
 = 0;

1358 
	gãm∂©e
<
ty≥«me
 
	gHashTabÀTy≥
,Åy≥«mê
	gVÆueTy≥
> 
	sHashTabÀC⁄°Iãøt‹Ad≠ãr
 {

1359 
HashTabÀC⁄°Iãøt‹Ad≠ãr
() {}

1360 
HashTabÀC⁄°Iãøt‹Ad≠ãr
(c⁄° 
ty≥«me
 
HashTabÀTy≥
::
c⁄°_ôî©‹
& 
im∂
Ë: 
m_im∂
(impl) {}

1362 c⁄° 
VÆueTy≥
* 
gë
(Ëc⁄° {  (c⁄° VÆueTy≥*)
m_im∂
.get(); }

1363 c⁄° 
	gVÆueTy≥
& 
	g›î©‹
*(Ëc⁄° {  *
gë
(); }

1364 c⁄° 
VÆueTy≥
* 
	g›î©‹
->(Ëc⁄° {  
gë
(); }

1366 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
& 
	g›î©‹
++(Ë{ ++
	gm_im∂
;  *
	gthis
; }

1369 
ty≥«me
 
	gHashTabÀTy≥
::
c⁄°_ôî©‹
 
m_im∂
;

1372 
	gãm∂©e
<
ty≥«me
 
	gHashTabÀTy≥
,Åy≥«mê
	gVÆueTy≥
> 
	sHashTabÀIãøt‹Ad≠ãr
 {

1373 
HashTabÀIãøt‹Ad≠ãr
() {}

1374 
HashTabÀIãøt‹Ad≠ãr
(c⁄° 
ty≥«me
 
HashTabÀTy≥
::
ôî©‹
& 
im∂
Ë: 
m_im∂
(impl) {}

1376 
VÆueTy≥
* 
gë
(Ëc⁄° {  (VÆueTy≥*)
m_im∂
.get(); }

1377 
	gVÆueTy≥
& 
	g›î©‹
*(Ëc⁄° {  *
gë
(); }

1378 
VÆueTy≥
* 
	g›î©‹
->(Ëc⁄° {  
gë
(); }

1380 
	gHashTabÀIãøt‹Ad≠ãr
& 
	g›î©‹
++(Ë{ ++
	gm_im∂
;  *
	gthis
; }

1383 
›î©‹
 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
<
	gHashTabÀTy≥
, 
	gVÆueTy≥
>() {

1384 
ty≥«me
 
	gHashTabÀTy≥
::
c⁄°_ôî©‹
 
i
 = 
m_im∂
;

1385  
	gi
;

1388 
ty≥«me
 
	gHashTabÀTy≥
::
ôî©‹
 
m_im∂
;

1391 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

1392 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
HashTabÀC⁄°Iãøt‹Ad≠ãr
<
T
, 
	gU
>& 
	ga
, c⁄° 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
<
	gT
, U>& 
	gb
)

1394  
	ga
.
	gm_im∂
 =
b
.
m_im∂
;

1397 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

1398 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
HashTabÀC⁄°Iãøt‹Ad≠ãr
<
T
, 
	gU
>& 
	ga
, c⁄° 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
<
	gT
, U>& 
	gb
)

1400  
	ga
.
	gm_im∂
 !
b
.
m_im∂
;

1403 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

1404 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
HashTabÀIãøt‹Ad≠ãr
<
T
, 
	gU
>& 
	ga
, c⁄° 
	gHashTabÀIãøt‹Ad≠ãr
<
	gT
, U>& 
	gb
)

1406  
	ga
.
	gm_im∂
 =
b
.
m_im∂
;

1409 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

1410 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
HashTabÀIãøt‹Ad≠ãr
<
T
, 
	gU
>& 
	ga
, c⁄° 
	gHashTabÀIãøt‹Ad≠ãr
<
	gT
, U>& 
	gb
)

1412  
	ga
.
	gm_im∂
 !
b
.
m_im∂
;

1416 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

1417 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
HashTabÀC⁄°Iãøt‹Ad≠ãr
<
T
, 
	gU
>& 
	ga
, c⁄° 
	gHashTabÀIãøt‹Ad≠ãr
<
	gT
, U>& 
	gb
)

1419  
	ga
.
	gm_im∂
 =
b
.
m_im∂
;

1422 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

1423 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
HashTabÀC⁄°Iãøt‹Ad≠ãr
<
T
, 
	gU
>& 
	ga
, c⁄° 
	gHashTabÀIãøt‹Ad≠ãr
<
	gT
, U>& 
	gb
)

1425  
	ga
.
	gm_im∂
 !
b
.
m_im∂
;

1428 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

1429 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
HashTabÀIãøt‹Ad≠ãr
<
T
, 
	gU
>& 
	ga
, c⁄° 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
<
	gT
, U>& 
	gb
)

1431  
	ga
.
	gm_im∂
 =
b
.
m_im∂
;

1434 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

1435 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
HashTabÀIãøt‹Ad≠ãr
<
T
, 
	gU
>& 
	ga
, c⁄° 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
<
	gT
, U>& 
	gb
)

1437  
	ga
.
	gm_im∂
 !
b
.
m_im∂
;

1442 
	~<wtf/HashIãøt‹s.h
>

	@HashTraits.h

21 #i‚de‡
WTF_HashTøôs_h


22 
	#WTF_HashTøôs_h


	)

24 
	~<wtf/HashFun˘i⁄s.h
>

25 
	~<wtf/StdLibExåas.h
>

26 
	~<utûôy
>

27 
	~<limôs
>

29 
«me•a˚
 
	gWTF
 {

31 
˛ass
 
	gSåög
;

33 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gOwnPå
;

34 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPassOwnPå
;

36 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gHashTøôs
;

38 
	gãm∂©e
<
boﬁ
 
	gisI¡egî
, 
ty≥«me
 
	gT
> 
	gGíîicHashTøôsBa£
;

40 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gGíîicHashTøôsBa£
<
	gÁl£
, T> {

42 c⁄° 
boﬁ
 
	gem±yVÆueIsZîo
 = 
Ál£
;

47 c⁄° 
boﬁ
 
	ghasIsEm±yVÆueFun˘i⁄
 = 
Ál£
;

51 c⁄° 
	gmöimumTabÀSize
 = 8;

55 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gGíîicHashTøôsBa£
<
	gåue
, T> : 
GíîicHashTøôsBa£
<
Ál£
, T> {

56 c⁄° 
boﬁ
 
	gem±yVÆueIsZîo
 = 
åue
;

57 
c⁄°ru˘DñëedVÆue
(
T
& 
¶Ÿ
Ë{ 
	g¶Ÿ
 = 
°©ic_ˇ°
<T>(-1); }

58 
boﬁ
 
isDñëedVÆue
(
T
 
vÆue
Ë{  
	gvÆue
 =
°©ic_ˇ°
<T>(-1); }

61 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gGíîicHashTøôs
 : 
GíîicHashTøôsBa£
<
°d
::
is_öãgøl
<
T
>::
vÆue
, T> {

62 
T
 
	tTøôTy≥
;

63 
T
 
	tEm±yVÆueTy≥
;

65 
T
 
em±yVÆue
() {  T(); }

68 
T
 
	tPìkTy≥
;

69 
	gãm∂©e
<
ty≥«me
 
	gU
> U&& 
≥ek
(
U
&& 
vÆue
Ë{  
	g°d
::
f‹w¨d
<U>(value); }

72 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gHashTøôs
 : 
GíîicHashTøôs
<
T
> { };

74 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gFlﬂtHashTøôs
 : 
GíîicHashTøôs
<
T
> {

75 
T
 
em±yVÆue
(Ë{  
°d
::
numîic_limôs
<T>::
öföôy
(); }

76 
c⁄°ru˘DñëedVÆue
(
T
& 
¶Ÿ
Ë{ 
	g¶Ÿ
 = -
°d
::
numîic_limôs
<T>::
öföôy
(); }

77 
boﬁ
 
isDñëedVÆue
(
T
 
vÆue
Ë{  
	gvÆue
 =-
°d
::
numîic_limôs
<T>::
öföôy
(); }

80 
	gãm∂©e
<> 
	gHashTøôs
<> : 
FlﬂtHashTøôs
<> { };

81 
	gãm∂©e
<> 
	gHashTøôs
<> : 
FlﬂtHashTøôs
<> { };

84 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gUnsig√dWôhZîoKeyHashTøôs
 : 
GíîicHashTøôs
<
T
> {

85 c⁄° 
boﬁ
 
em±yVÆueIsZîo
 = 
Ál£
;

86 
T
 
em±yVÆue
(Ë{  
	g°d
::
numîic_limôs
<T>::
max
(); }

87 
c⁄°ru˘DñëedVÆue
(
T
& 
¶Ÿ
Ë{ 
	g¶Ÿ
 = 
°d
::
numîic_limôs
<T>::
max
() - 1; }

88 
boﬁ
 
isDñëedVÆue
(
T
 
vÆue
Ë{  
	gvÆue
 =
°d
::
numîic_limôs
<T>::
max
() - 1; }

91 
	gãm∂©e
<
ty≥«me
 
	gP
> 
	gHashTøôs
<P*> : 
GíîicHashTøôs
<
P
*> {

92 c⁄° 
boﬁ
 
em±yVÆueIsZîo
 = 
åue
;

93 
c⁄°ru˘DñëedVÆue
(
P
*& 
¶Ÿ
Ë{ 
	g¶Ÿ
 = 
ªöãΩªt_ˇ°
<P*>(-1); }

94 
boﬁ
 
isDñëedVÆue
(
P
* 
vÆue
Ë{  
	gvÆue
 =
ªöãΩªt_ˇ°
<P*>(-1); }

97 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gSim∂eCœssHashTøôs
 : 
GíîicHashTøôs
<
T
> {

98 c⁄° 
boﬁ
 
em±yVÆueIsZîo
 = 
åue
;

99 
c⁄°ru˘DñëedVÆue
(
T
& 
¶Ÿ
Ë{ 
√w
 (
NŸNuŒ
, &¶ŸËT(
HashTabÀDñëedVÆue
); }

100 
boﬁ
 
isDñëedVÆue
(c⁄° 
T
& 
vÆue
Ë{  
	gvÆue
.
isHashTabÀDñëedVÆue
(); }

103 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gDñëî
> 
	gHashTøôs
<
	g°d
::
unique_±r
<
T
, Dñëî>> : 
Sim∂eCœssHashTøôs
<
°d
::unique_ptr<T, Deleter>> {

104 
	g°d
::
	tnuŒ±r_t
 
	tEm±yVÆueTy≥
;

105 
Em±yVÆueTy≥
 
em±yVÆue
(Ë{  
	gnuŒ±r
; }

107 
c⁄°ru˘DñëedVÆue
(
°d
::
unique_±r
<
T
, 
Dñëî
>& 
¶Ÿ
Ë{ 
√w
 (
NŸNuŒ
, &¶ŸË
	g°d
::unique_±r<T, 
	gDñëî
> { 
	gªöãΩªt_ˇ°
<
	gT
*>(-1) }; }

108 
boﬁ
 
isDñëedVÆue
(c⁄° 
°d
::
unique_±r
<
T
, 
Dñëî
>& 
vÆue
Ë{  
	gvÆue
.
gë
(Ë=
ªöãΩªt_ˇ°
<T*>(-1); }

110 
T
* 
	tPìkTy≥
;

111 
T
* 
≥ek
(c⁄° 
°d
::
unique_±r
<T, 
Dñëî
>& 
vÆue
Ë{  
	gvÆue
.
gë
(); }

112 
T
* 
≥ek
(
°d
::
nuŒ±r_t
Ë{  
nuŒ±r
; }

115 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gHashTøôs
<
	gOwnPå
<T>> : 
Sim∂eCœssHashTøôs
<
OwnPå
<
T
>> {

116 
°d
::
	tnuŒ±r_t
 
	tEm±yVÆueTy≥
;

117 
Em±yVÆueTy≥
 
em±yVÆue
(Ë{  
	gnuŒ±r
; }

119 
T
* 
	tPìkTy≥
;

120 
T
* 
≥ek
(c⁄° 
OwnPå
<T>& 
vÆue
Ë{  
	gvÆue
.
gë
(); }

121 
T
* 
≥ek
(
°d
::
nuŒ±r_t
Ë{  
nuŒ±r
; }

124 
	gãm∂©e
<
ty≥«me
 
	gP
> 
	gHashTøôs
<
	gRefPå
<P>> : 
Sim∂eCœssHashTøôs
<
RefPå
<
P
>> {

125 
P
* 
em±yVÆue
() {  0; }

127 
P
* 
	tPìkTy≥
;

128 
PìkTy≥
 
≥ek
(c⁄° 
RefPå
<
P
>& 
vÆue
Ë{  
	gvÆue
.
gë
(); }

129 
PìkTy≥
 
≥ek
(
P
* 
vÆue
Ë{  
	gvÆue
; }

132 
	gãm∂©e
<> 
	gHashTøôs
<
	gSåög
> : 
Sim∂eCœssHashTøôs
<
Såög
> {

133 c⁄° 
boﬁ
 
hasIsEm±yVÆueFun˘i⁄
 = 
åue
;

134 
boﬁ
 
isEm±yVÆue
(c⁄° 
Såög
&);

139 
	gãm∂©e
<
ty≥«me
 
	gTøôs
, 
boﬁ
 
	ghasEm±yVÆueFun˘i⁄
> 
	gHashTøôsEm±yVÆueCheckî
;

140 
	gãm∂©e
<
ty≥«me
 
	gTøôs
> 
	gHashTøôsEm±yVÆueCheckî
<Tøôs, 
	gåue
> {

141 
	gãm∂©e
<
ty≥«me
 
	gT
> 
boﬁ
 
isEm±yVÆue
(c⁄° 
T
& 
vÆue
Ë{  
	gTøôs
::isEmptyValue(value); }

143 
	gãm∂©e
<
ty≥«me
 
	gTøôs
> 
	gHashTøôsEm±yVÆueCheckî
<Tøôs, 
	gÁl£
> {

144 
	gãm∂©e
<
ty≥«me
 
	gT
> 
boﬁ
 
isEm±yVÆue
(c⁄° 
T
& 
vÆue
Ë{  
	gvÆue
 =
Tøôs
::
em±yVÆue
(); }

146 
	gãm∂©e
<
ty≥«me
 
	gTøôs
,Åy≥«mê
	gT
> 
ölöe
 
boﬁ
 
isHashTøôsEm±yVÆue
(c⁄° 
T
& 
vÆue
)

148  
	gHashTøôsEm±yVÆueCheckî
<
	gTøôs
, Tøôs::
hasIsEm±yVÆueFun˘i⁄
>::
isEm±yVÆue
(
vÆue
);

151 
	gãm∂©e
<
ty≥«me
 
	gFú°TøôsArg
,Åy≥«mê
	gSec⁄dTøôsArg
>

152 
	gPaúHashTøôs
 : 
GíîicHashTøôs
<
°d
::
∑ú
<
ty≥«me
 
Fú°TøôsArg
::
TøôTy≥
,Åy≥«mê
	gSec⁄dTøôsArg
::TraitType>> {

153 
Fú°TøôsArg
 
	tFú°Tøôs
;

154 
Sec⁄dTøôsArg
 
	tSec⁄dTøôs
;

155 
	g°d
::
	t∑ú
<
	tty≥«me
 
	tFú°Tøôs
::
	tTøôTy≥
,Åy≥«mê
	tSec⁄dTøôs
::TraitType> TraitType;

156 
	g°d
::
	t∑ú
<
	tty≥«me
 
	tFú°Tøôs
::
	tEm±yVÆueTy≥
,Åy≥«mê
	tSec⁄dTøôs
::EmptyValueType> EmptyValueType;

158 c⁄° 
boﬁ
 
	gem±yVÆueIsZîo
 = 
Fú°Tøôs
::
em±yVÆueIsZîo
 && 
Sec⁄dTøôs
::emptyValueIsZero;

159 
Em±yVÆueTy≥
 
em±yVÆue
(Ë{  
	g°d
::
make_∑ú
(
Fú°Tøôs
::em±yVÆue(), 
Sec⁄dTøôs
::emptyValue()); }

161 c⁄° 
	gmöimumTabÀSize
 = 
Fú°Tøôs
::
möimumTabÀSize
;

163 
c⁄°ru˘DñëedVÆue
(
TøôTy≥
& 
¶Ÿ
Ë{ 
	gFú°Tøôs
::c⁄°ru˘DñëedVÆue(¶Ÿ.
fú°
); }

164 
boﬁ
 
isDñëedVÆue
(c⁄° 
TøôTy≥
& 
vÆue
Ë{  
	gFú°Tøôs
::isDñëedVÆue(vÆue.
fú°
); }

167 
	gãm∂©e
<
ty≥«me
 
	gFú°
,Åy≥«mê
	gSec⁄d
>

168 
	gHashTøôs
<
	g°d
::
∑ú
<
Fú°
, 
	gSec⁄d
>> : 
public
 
PaúHashTøôs
<
HashTøôs
<First>, HashTraits<Second>> { };

170 
	gãm∂©e
<
ty≥«me
 
	gKeyTy≥Arg
,Åy≥«mê
	gVÆueTy≥Arg
>

171 
	sKeyVÆuePaú
 {

172 
KeyTy≥Arg
 
	tKeyTy≥
;

174 
KeyVÆuePaú
()

178 
	gãm∂©e
<
ty≥«me
 
	gK
,Åy≥«mê
	gV
>

179 
KeyVÆuePaú
(
K
&& 
key
, 
V
&& 
vÆue
)

180 : 
key
(
°d
::
f‹w¨d
<
K
>(key))

181 , 
vÆue
(
°d
::
f‹w¨d
<
V
>(value))

185 
ãm∂©e
 <
ty≥«me
 
OthîKeyTy≥
,Åy≥«mê
	gOthîVÆueTy≥
>

186 
KeyVÆuePaú
(KeyVÆuePaú<
OthîKeyTy≥
, 
OthîVÆueTy≥
>&& 
Ÿhî
)

187 : 
key
(
°d
::
f‹w¨d
<
OthîKeyTy≥
>(
Ÿhî
.key))

188 , 
vÆue
(
°d
::
f‹w¨d
<
OthîVÆueTy≥
>(
Ÿhî
.value))

192 
KeyTy≥Arg
 
key
;

193 
VÆueTy≥Arg
 
	gvÆue
;

196 
	gãm∂©e
<
ty≥«me
 
	gKeyTøôsArg
,Åy≥«mê
	gVÆueTøôsArg
>

197 
	gKeyVÆuePaúHashTøôs
 : 
GíîicHashTøôs
<
KeyVÆuePaú
<
ty≥«me
 
KeyTøôsArg
::
TøôTy≥
,Åy≥«mê
	gVÆueTøôsArg
::TraitType>> {

198 
KeyTøôsArg
 
	tKeyTøôs
;

199 
VÆueTøôsArg
 
	tVÆueTøôs
;

200 
	gKeyVÆuePaú
<
	tty≥«me
 
	tKeyTøôs
::
	tTøôTy≥
,Åy≥«mê
	tVÆueTøôs
::TraitType> TraitType;

201 
	gKeyVÆuePaú
<
	tty≥«me
 
	tKeyTøôs
::
	tEm±yVÆueTy≥
,Åy≥«mê
	tVÆueTøôs
::EmptyValueType> EmptyValueType;

203 c⁄° 
boﬁ
 
	gem±yVÆueIsZîo
 = 
KeyTøôs
::
em±yVÆueIsZîo
 && 
VÆueTøôs
::emptyValueIsZero;

204 
Em±yVÆueTy≥
 
em±yVÆue
(Ë{  
	gKeyVÆuePaú
<
ty≥«me
 
	gKeyTøôs
::Em±yVÆueTy≥,Åy≥«mê
	gVÆueTøôs
::Em±yVÆueTy≥>(
KeyTøôs
::emptyValue(), ValueTraits::emptyValue()); }

206 c⁄° 
	gmöimumTabÀSize
 = 
KeyTøôs
::
möimumTabÀSize
;

208 
c⁄°ru˘DñëedVÆue
(
TøôTy≥
& 
¶Ÿ
Ë{ 
	gKeyTøôs
::c⁄°ru˘DñëedVÆue(¶Ÿ.
key
); }

209 
boﬁ
 
isDñëedVÆue
(c⁄° 
TøôTy≥
& 
vÆue
Ë{  
	gKeyTøôs
::isDñëedVÆue(vÆue.
key
); }

212 
	gãm∂©e
<
ty≥«me
 
	gKey
,Åy≥«mê
	gVÆue
>

213 
	gHashTøôs
<
	gKeyVÆuePaú
<
	gKey
, 
	gVÆue
>> : 
public
 
KeyVÆuePaúHashTøôs
<
HashTøôs
<
Key
>, HashTraits<Value>> { };

215 
	gãm∂©e
<
ty≥«me
 
	gT
>

216 
	gNuŒabÀHashTøôs
 : 
public
 
HashTøôs
<
T
> {

217 c⁄° 
boﬁ
 
em±yVÆueIsZîo
 = 
Ál£
;

218 
T
 
em±yVÆue
(Ë{  
	gªöãΩªt_ˇ°
<
	gT
>(1); }

223 
	gãm∂©e
<
ty≥«me
 
	gT
>

224 
	gCu°omHashTøôs
 : 
public
 
GíîicHashTøôs
<
T
> {

225 c⁄° 
boﬁ
 
em±yVÆueIsZîo
 = 
Ál£
;

226 c⁄° 
boﬁ
 
	ghasIsEm±yVÆueFun˘i⁄
 = 
åue
;

228 
c⁄°ru˘DñëedVÆue
(
T
& 
¶Ÿ
)

230 
√w
 (
NŸNuŒ
, &
¶Ÿ
Ë
T
(T::
DñëedVÆue
);

233 
boﬁ
 
isDñëedVÆue
(c⁄° 
T
& 
vÆue
)

235  
	gvÆue
.
isDñëedVÆue
();

238 
T
 
em±yVÆue
()

240  
T
(T::
Em±yVÆue
);

243 
boﬁ
 
isEm±yVÆue
(c⁄° 
T
& 
vÆue
)

245  
	gvÆue
.
isEm±yVÆue
();

251 
usög
 
	gWTF
::
HashTøôs
;

252 
usög
 
	gWTF
::
PaúHashTøôs
;

253 
usög
 
	gWTF
::
NuŒabÀHashTøôs
;

254 
usög
 
	gWTF
::
Sim∂eCœssHashTøôs
;

	@HexNumber.h

20 #i‚de‡
HexNumbî_h


21 
	#HexNumbî_h


	)

23 
	~<wtf/ãxt/SåögC⁄ˇã«ã.h
>

25 
«me•a˚
 
	gWTF
 {

27 
	eHexC⁄vîsi⁄Mode
 {

28 
	gLowîˇ£
,

29 
	gUµîˇ£


32 
«me•a˚
 
	gI¡î«l
 {

34 c⁄° 
LCh¨
 
	glowîHexDigôs
[17] = "0123456789abcdef";

35 c⁄° 
LCh¨
 
	guµîHexDigôs
[17] = "0123456789ABCDEF";

36 
ölöe
 c⁄° 
LCh¨
* 
hexDigôsF‹Mode
(
HexC⁄vîsi⁄Mode
 
mode
)

38  
	gmode
 =
Lowîˇ£
 ? 
lowîHexDigôs
 : 
uµîHexDigôs
;

43 
	gãm∂©e
<
ty≥«me
 
	gT
>

44 
ölöe
 
≠≥ndByãAsHex
(
byã
, 
T
& 
de°ö©i⁄
, 
HexC⁄vîsi⁄Mode
 
mode
 = 
Uµîˇ£
)

46 c⁄° 
LCh¨
* 
hexDigôs
 = 
I¡î«l
::
hexDigôsF‹Mode
(
mode
);

47 
	gde°ö©i⁄
.
≠≥nd
(
hexDigôs
[
byã
 >> 4]);

48 
	gde°ö©i⁄
.
≠≥nd
(
hexDigôs
[
byã
 & 0xF]);

51 
	gãm∂©e
<
ty≥«me
 
	gT
>

52 
ölöe
 
∂a˚ByãAsHexCom¥essIfPossibÀ
(
byã
, 
T
& 
de°ö©i⁄
, & 
ödex
, 
HexC⁄vîsi⁄Mode
 
mode
 = 
Uµîˇ£
)

54 c⁄° 
LCh¨
* 
hexDigôs
 = 
I¡î«l
::
hexDigôsF‹Mode
(
mode
);

55 i‡(
	gbyã
 >= 0x10)

56 
de°ö©i⁄
[
ödex
++] = 
hexDigôs
[
byã
 >> 4];

57 
	gde°ö©i⁄
[
ödex
++] = 
hexDigôs
[
byã
 & 0xF];

60 
	gãm∂©e
<
ty≥«me
 
	gT
>

61 
ölöe
 
∂a˚ByãAsHex
(
byã
, 
T
& 
de°ö©i⁄
, 
HexC⁄vîsi⁄Mode
 
mode
 = 
Uµîˇ£
)

63 c⁄° 
LCh¨
* 
hexDigôs
 = 
I¡î«l
::
hexDigôsF‹Mode
(
mode
);

64 *
	gde°ö©i⁄
++ = 
hexDigôs
[
byã
 >> 4];

65 *
	gde°ö©i⁄
++ = 
hexDigôs
[
byã
 & 0xF];

68 
	gãm∂©e
<
ty≥«me
 
	gT
>

69 
ölöe
 
≠≥ndUnsig√dAsHex
(
numbî
, 
T
& 
de°ö©i⁄
, 
HexC⁄vîsi⁄Mode
 
mode
 = 
Uµîˇ£
)

71 c⁄° 
LCh¨
* 
hexDigôs
 = 
I¡î«l
::
hexDigôsF‹Mode
(
mode
);

72 
	gVe˘‹
<
	gLCh¨
, 8> 
	gªsu…
;

74 
	gªsu…
.
≠≥nd
(
hexDigôs
[
numbî
 % 16]);

75 
	gnumbî
 >>= 4;

76 } 
	gnumbî
 > 0);

78 
	gªsu…
.
ªvî£
();

79 
	gde°ö©i⁄
.
≠≥nd
(
ªsu…
.
d©a
(),Ñesu….
size
());

82 
	gãm∂©e
<
ty≥«me
 
	gT
>

83 
ölöe
 
≠≥ndUnsig√d64AsHex
(
uöt64_t
 
numbî
, 
T
& 
de°ö©i⁄
, 
HexC⁄vîsi⁄Mode
 
mode
 = 
Uµîˇ£
)

85 c⁄° 
LCh¨
* 
hexDigôs
 = 
I¡î«l
::
hexDigôsF‹Mode
(
mode
);

86 
	gVe˘‹
<
	gLCh¨
, 8> 
	gªsu…
;

88 
	gªsu…
.
≠≥nd
(
hexDigôs
[
numbî
 % 16]);

89 
	gnumbî
 >>= 4;

90 } 
	gnumbî
 > 0);

92 
	gªsu…
.
ªvî£
();

93 
	gde°ö©i⁄
.
≠≥nd
(
ªsu…
.
d©a
(),Ñesu….
size
());

97 
	gãm∂©e
<
ty≥«me
 
	gT
>

98 
ölöe
 
≠≥ndUnsig√dAsHexFixedSize
(
numbî
, 
T
& 
de°ö©i⁄
, 
desúedDigôs
, 
HexC⁄vîsi⁄Mode
 
mode
 = 
Uµîˇ£
)

100 
ASSERT
(
desúedDigôs
);

102 c⁄° 
LCh¨
* 
	ghexDigôs
 = 
I¡î«l
::
hexDigôsF‹Mode
(
mode
);

103 
	gVe˘‹
<
	gLCh¨
, 8> 
	gªsu…
;

105 
	gªsu…
.
≠≥nd
(
hexDigôs
[
numbî
 % 16]);

106 
	gnumbî
 >>= 4;

107 } 
	gªsu…
.
size
(Ë< 
	gdesúedDigôs
);

109 
ASSERT
(
ªsu…
.
size
(Ë=
desúedDigôs
);

110 
	gªsu…
.
ªvî£
();

111 
	gde°ö©i⁄
.
≠≥nd
(
ªsu…
.
d©a
(),Ñesu….
size
());

116 
usög
 
	gWTF
::
≠≥ndByãAsHex
;

117 
usög
 
	gWTF
::
≠≥ndUnsig√dAsHex
;

118 
usög
 
	gWTF
::
≠≥ndUnsig√dAsHexFixedSize
;

119 
usög
 
	gWTF
::
∂a˚ByãAsHex
;

120 
usög
 
	gWTF
::
∂a˚ByãAsHexCom¥essIfPossibÀ
;

121 
usög
 
	gWTF
::
Lowîˇ£
;

	@InlineASM.h

26 #i‚de‡
I∆öeASM_h


27 
	#I∆öeASM_h


	)

31 #i‡
OS
(
DARWIN
Ë|| (OS(
WINDOWS
Ë&& 
CPU
(
X86
))

32 
	#SYMBOL_STRING
(
«me
Ë"_" #«me

	)

34 
	#SYMBOL_STRING
(
«me
Ë#«me

	)

37 #i‡
OS
(
IOS
)

38 
	#THUMB_FUNC_PARAM
(
«me
Ë
	`SYMBOL_STRING
“ame)

	)

40 
	#THUMB_FUNC_PARAM
(
«me
)

	)

43 #i‡(
OS
(
LINUX
Ë|| OS(
FREEBSD
)Ë&& 
CPU
(
X86_64
)

44 
	#GLOBAL_REFERENCE
(
«me
Ë#«mê"@∂t"

	)

45 #ñi‡
CPU
(
X86
Ë&& 
COMPILER
(
MINGW
)

46 
	#GLOBAL_REFERENCE
(
«me
Ë"@" #«mê"@4"

	)

47 #ñi‡
OS
(
LINUX
Ë&& 
CPU
(
X86
Ë&& 
deföed
(
__PIC__
)

48 
	#GLOBAL_REFERENCE
(
«me
Ë
	`SYMBOL_STRING
“ameË"@∂t"

	)

50 
	#GLOBAL_REFERENCE
(
«me
Ë
	`SYMBOL_STRING
“ame)

	)

53 #i‡
HAVE
(
INTERNAL_VISIBILITY
)

54 
	#LOCAL_REFERENCE
(
«me
Ë
	`SYMBOL_STRING
“ame)

	)

56 
	#LOCAL_REFERENCE
(
«me
Ë
	`GLOBAL_REFERENCE
“ame)

	)

59 #i‡
OS
(
DARWIN
)

61 
	#HIDE_SYMBOL
(
«me
Ë".¥iv©e_exã∫ _" #«me

	)

62 #ñi‡
OS
(
AIX
)

64 
	#HIDE_SYMBOL
(
«me
Ë".lglob»" #«me

	)

65 #ñi‡ 
OS
(
LINUX
) \

66 || 
OS
(
FREEBSD
) \

67 || 
OS
(
OPENBSD
) \

68 || 
OS
(
SOLARIS
) \

69 || (
OS
(
HPUX
Ë&& 
CPU
(
IA64
)) \

70 || 
	$OS
(
NETBSD
)

72 
	#HIDE_SYMBOL
(
«me
Ë".hiddí " #«me

	)

74 
	#HIDE_SYMBOL
(
«me
)

	)

80 #i‡
	`OS
(
DARWIN
)

81 
	#LOCAL_LABEL_STRING
(
«me
Ë"L" #«me

	)

82 #ñi‡ 
	`OS
(
LINUX
) \

83 || 
	`OS
(
FREEBSD
) \

84 || 
	`OS
(
OPENBSD
) \

85 || 
	$OS
(
NETBSD
)

87 
	#LOCAL_LABEL_STRING
(
«me
Ë".L" #«me

	)

90 #i‡(
	`CPU
(
ARM_TRADITIONAL
Ë&& (
	`deföed
(
thumb2
Ë|| deföed(
__thumb2__
Ë|| deföed(
__thumb
Ë|| deföed(
__thumb__
))Ë|| CPU(
ARM_THUMB2
)

91 
	#INLINE_ARM_FUNCTION
(
«me
Ë".thumb" "\n" ".thumb_fun¯" 
	`THUMB_FUNC_PARAM
“ameË"\n"

	)

93 
	#INLINE_ARM_FUNCTION
(
«me
)

	)

	@Insertion.h

26 #i‚de‡
In£πi⁄_h


27 
	#In£πi⁄_h


	)

29 
«me•a˚
 
	gWTF
 {

31 
	gãm∂©e
<
ty≥«me
 
	gT
>

32 ˛as†
	cIn£πi⁄
 {

33 
	gpublic
:

34 
In£πi⁄
() { }

36 
In£πi⁄
(
size_t
 
ödex
, 
T
 
ñemít
)

37 : 
m_ödex
(
ödex
)

38 , 
m_ñemít
(
ñemít
)

42 
size_t
 
ödex
(Ëc⁄° {  
	gm_ödex
; }

43 
T
 
ñemít
(Ëc⁄° {  
	gm_ñemít
; }

45 
boﬁ
 
	g›î©‹
<(c⁄° 
	gIn£πi⁄
& 
	gŸhî
) const

47  
	gm_ödex
 < 
	gŸhî
.m_index;

50 
	g¥iv©e
:

51 
size_t
 
m_ödex
;

52 
T
 
	gm_ñemít
;

55 
	gãm∂©e
<
ty≥«me
 
	gT¨gëVe˘‹Ty≥
,Åy≥«mê
	gIn£πi⁄Ve˘‹Ty≥
>

56 
	$execuãIn£πi⁄s
(
T¨gëVe˘‹Ty≥
& 
èrgë
, 
In£πi⁄Ve˘‹Ty≥
& 
ö£πi⁄s
)

58 i‡(!
ö£πi⁄s
.
	`size
())

60 
èrgë
.
	`grow
—¨gë.
	`size
(Ë+ 
ö£πi⁄s
.size());

61 
size_t
 
œ°Index
 = 
èrgë
.
	`size
();

62 
size_t
 
ödexInIn£πi⁄s
 = 
ö£πi⁄s
.
	`size
(); indexInInsertions--;) {

63 
	`ASSERT
(!
ödexInIn£πi⁄s
 || 
ö£πi⁄s
[ödexInIn£πi⁄s].
	`ödex
() >= insertions[indexInInsertions - 1].index());

64 
size_t
 
fú°Index
 = 
ö£πi⁄s
[
ödexInIn£πi⁄s
].
	`ödex
() + indexInInsertions;

65 
size_t
 
ödexOff£t
 = 
ödexInIn£πi⁄s
 + 1;

66 
size_t
 
i
 = 
œ°Index
; --ò> 
fú°Index
;)

67 
èrgë
[
i
] =Å¨gë[ò- 
ödexOff£t
];

68 
èrgë
[
fú°Index
] = 
ö£πi⁄s
[
ödexInIn£πi⁄s
].
	`ñemít
();

69 
œ°Index
 = 
fú°Index
;

71 
ö£πi⁄s
.
	`ªsize
(0);

72 
	}
}

76 
usög
 
	gWTF
::
In£πi⁄
;

77 
usög
 
	gWTF
::
execuãIn£πi⁄s
;

	@IteratorAdaptors.h

26 #i‚de‡
WTF_Iãøt‹Ad≠t‹s_h


27 
	#WTF_Iãøt‹Ad≠t‹s_h


	)

29 
	~<ty≥_åaôs
>

31 
«me•a˚
 
	gWTF
 {

33 
	gãm∂©e
<
ty≥«me
 
	gPªdiˇã
,Åy≥«mê
	gIãøt‹
>

34 ˛as†
	cFûãrIãøt‹
 {

35 
	gpublic
:

36 
FûãrIãøt‹
(
Pªdiˇã
 
¥ed
, 
Iãøt‹
 
begö
, Iãøt‹ 
íd
)

37 : 
m_¥ed
(
WTF
::
move
(
¥ed
))

38 , 
m_ôî
(
WTF
::
move
(
begö
))

39 , 
m_íd
(
WTF
::
move
(
íd
))

41 
m_ôî
 !
m_íd
 && !
m_¥ed
(*m_iter))

42 ++
m_ôî
;

45 
	gFûãrIãøt‹
& 
	g›î©‹
++()

47 
	gm_ôî
 !
m_íd
) {

48 ++
m_ôî
;

49 i‡(
	gm_ôî
 =
m_íd
 || 
m_¥ed
(*
m_ôî
))

52  *
	gthis
;

55 c⁄° 
ty≥«me
 
	g°d
::
ªmove_c⁄°
<
de˛ty≥
(*
°d
::
de˛vÆ
<
Iãøt‹
>())>::
ty≥
 
›î©‹
*() const

57 
ASSERT
(
m_ôî
 !
m_íd
);

58 
ASSERT
(
m_¥ed
(*
m_ôî
));

59  *
	gm_ôî
;

62 
ölöe
 
boﬁ
 
	g›î©‹
==(
FûãrIãøt‹
& 
Ÿhî
Ëc⁄° {  
m_ôî
 == other.m_iter; }

63 
ölöe
 
boﬁ
 
	g›î©‹
!=(
FûãrIãøt‹
& 
Ÿhî
Ëc⁄° {  
m_ôî
 != other.m_iter; }

65 
	g¥iv©e
:

66 c⁄° 
Pªdiˇã
 
m_¥ed
;

67 
Iãøt‹
 
	gm_ôî
;

68 
Iãøt‹
 
	gm_íd
;

71 
	gãm∂©e
<
ty≥«me
 
	gPªdiˇã
,Åy≥«mê
	gIãøt‹
>

72 
ölöe
 
	gFûãrIãøt‹
<
	gPªdiˇã
, 
	gIãøt‹
> 
	$makeFûãrIãøt‹
(
Pªdiˇã
&& 
¥ed
, 
Iãøt‹
&& 
begö
, Iãøt‹&& 
íd
)

74  
FûãrIãøt‹
<
Pªdiˇã
, 
Iãøt‹
>(
°d
::
f‹w¨d
<Pªdiˇã>(
¥ed
), std::f‹w¨d<Iãøt‹>(
begö
), std::f‹w¨d<Iãøt‹>(
íd
));

75 
	}
}

77 
	gãm∂©e
<
ty≥«me
 
	gTønsf‹m
,Åy≥«mê
	gIãøt‹
>

78 ˛as†
	cTønsf‹mIãøt‹
 {

79 
	gpublic
:

80 
Tønsf‹mIãøt‹
(
Tønsf‹m
&& 
å™sf‹m
, 
Iãøt‹
&& 
ôî
)

81 : 
m_å™sf‹m
(
WTF
::
move
(
å™sf‹m
))

82 , 
m_ôî
(
WTF
::
move
(
ôî
))

86 
Tønsf‹mIãøt‹
& 
›î©‹
++()

88 ++
m_ôî
;

89  *
	gthis
;

92 c⁄° 
ty≥«me
 
	g°d
::
ªmove_c⁄°
<
de˛ty≥
(
°d
::
de˛vÆ
<
Tønsf‹m
>()(*°d::de˛vÆ<
Iãøt‹
>()))>::
ty≥
 
›î©‹
*() const

94  
m_å™sf‹m
(*
m_ôî
);

97 
ölöe
 
boﬁ
 
	g›î©‹
==(
Tønsf‹mIãøt‹
& 
Ÿhî
Ëc⁄° {  
m_ôî
 == other.m_iter; }

98 
ölöe
 
boﬁ
 
	g›î©‹
!=(
Tønsf‹mIãøt‹
& 
Ÿhî
Ëc⁄° {  
m_ôî
 != other.m_iter; }

100 
	g¥iv©e
:

101 c⁄° 
Tønsf‹m
 
m_å™sf‹m
;

102 
Iãøt‹
 
	gm_ôî
;

105 
	gãm∂©e
<
ty≥«me
 
	gTønsf‹m
,Åy≥«mê
	gIãøt‹
>

106 
ölöe
 
	gTønsf‹mIãøt‹
<
	gTønsf‹m
, 
	gIãøt‹
> 
	$makeTønsf‹mIãøt‹
(
Tønsf‹m
&& 
å™sf‹m
, 
Iãøt‹
&& 
ôî
)

108  
Tønsf‹mIãøt‹
<
Tønsf‹m
, 
Iãøt‹
>(
WTF
::
	`move
(
å™sf‹m
), WTF::move(
ôî
));

109 
	}
}

	@IteratorRange.h

26 #i‚de‡
WTF_Iãøt‹R™ge_h


27 
	#WTF_Iãøt‹R™ge_h


	)

29 
«me•a˚
 
	gWTF
 {

31 
	gãm∂©e
<
ty≥«me
 
	gIãøt‹
>

32 ˛as†
	cIãøt‹R™ge
 {

33 
	gpublic
:

34 
Iãøt‹R™ge
(
Iãøt‹
 
begö
, Iãøt‹ 
íd
)

35 : 
m_begö
(
WTF
::
move
(
begö
))

36 , 
m_íd
(
WTF
::
move
(
íd
))

40 
Iãøt‹
 
begö
(Ëc⁄° {  
m_begö
; }

41 
Iãøt‹
 
íd
(Ëc⁄° {  
	gm_íd
; }

43 
	g¥iv©e
:

44 
Iãøt‹
 
m_begö
;

45 
Iãøt‹
 
	gm_íd
;

48 
	gãm∂©e
<
ty≥«me
 
	gIãøt‹
>

49 
	gIãøt‹R™ge
<
	gIãøt‹
> 
	$makeIãøt‹R™ge
(
Iãøt‹
&& 
begö
, Iãøt‹&& 
íd
)

51  
Iãøt‹R™ge
<
Iãøt‹
>(
°d
::
f‹w¨d
<Iãøt‹>(
begö
), std::f‹w¨d<Iãøt‹>(
íd
));

52 
	}
}

	@ListDump.h

26 #i‚de‡
Li°Dump_h


27 
	#Li°Dump_h


	)

29 
	~"CommaPröãr.h
"

30 
	~"PrötSåóm.h
"

31 
	~"SåögPrötSåóm.h
"

33 
«me•a˚
 
	gWTF
 {

35 
	gãm∂©e
<
ty≥«me
 
	gT
>

36 ˛as†
	cLi°Dump
 {

37 
	gpublic
:

38 
Li°Dump
(c⁄° 
T
& 
li°
, c⁄° * 
comma
)

39 : 
m_li°
(
li°
)

40 , 
m_comma
(
comma
)

44 
dump
(
PrötSåóm
& 
out
) const

46 
ty≥«me
 
	gT
::
c⁄°_ôî©‹
 
ôî
 = 
m_li°
.
begö
(); 
	gôî
 !m_li°.
íd
(); ++iter)

47 
	gout
.
¥öt
(
m_comma
, *
ôî
);

50 
	g¥iv©e
:

51 c⁄° 
T
& 
m_li°
;

52 
CommaPröãr
 
	gm_comma
;

55 
	gãm∂©e
<
ty≥«me
 
	gT
>

56 ˛as†
	cM≠Dump
 {

57 
	gpublic
:

58 
M≠Dump
(c⁄° 
T
& 
m≠
, c⁄° * 
¨row
, c⁄° * 
comma
)

59 : 
m_m≠
(
m≠
)

60 , 
m_¨row
(
¨row
)

61 , 
m_comma
(
comma
)

65 
dump
(
PrötSåóm
& 
out
) const

67 
ty≥«me
 
	gT
::
c⁄°_ôî©‹
 
ôî
 = 
m_m≠
.
begö
(); 
	gôî
 !m_m≠.
íd
(); ++iter)

68 
	gout
.
¥öt
(
m_comma
, 
ôî
->
key
, 
m_¨row
, iãr->
vÆue
);

71 
	g¥iv©e
:

72 c⁄° 
T
& 
m_m≠
;

73 c⁄° * 
	gm_¨row
;

74 
CommaPröãr
 
	gm_comma
;

77 
	gãm∂©e
<
ty≥«me
 
	gT
>

78 
	gLi°Dump
<
	gT
> 
li°Dump
(c⁄° 
T
& 
li°
, c⁄° * 
comma
 = ", ")

80  
Li°Dump
<
T
>(
li°
, 
comma
);

83 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gCom∑øt‹
>

84 
CSåög
 
s‹ãdLi°Dump
(c⁄° 
T
& 
li°
, c⁄° 
Com∑øt‹
& 
com∑øt‹
, c⁄° * 
comma
 = ", ")

86 
Ve˘‹
<
ty≥«me
 
T
::
VÆueTy≥
> 
myLi°
;

87 
	gmyLi°
.
≠≥ndR™ge
(
li°
.
begö
(),Üi°.
íd
());

88 
	g°d
::
s‹t
(
myLi°
.
begö
(), myLi°.
íd
(), 
com∑øt‹
);

89 
SåögPrötSåóm
 
	gout
;

90 
CommaPröãr
 
commaPröãr
(
comma
);

91 
	gi
 = 0; i < 
	gmyLi°
.
size
(); ++i)

92 
	gout
.
¥öt
(
commaPröãr
, 
myLi°
[
i
]);

93  
	gout
.
toCSåög
();

96 
	gãm∂©e
<
ty≥«me
 
	gT
>

97 
CSåög
 
s‹ãdLi°Dump
(c⁄° 
T
& 
li°
, c⁄° * 
comma
 = ", ")

99  
s‹ãdLi°Dump
(
li°
, 
°d
::
Àss
<
ty≥«me
 
T
::
VÆueTy≥
>(), 
comma
);

102 
	gãm∂©e
<
ty≥«me
 
	gT
>

103 
	gM≠Dump
<
	gT
> 
m≠Dump
(c⁄° 
T
& 
m≠
, c⁄° * 
¨row
 = "=>", c⁄° * 
comma
 = ", ")

105  
M≠Dump
<
T
>(
m≠
, 
¨row
, 
comma
);

108 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gCom∑øt‹
>

109 
CSåög
 
s‹ãdM≠Dump
(c⁄° 
T
& 
m≠
, c⁄° 
Com∑øt‹
& 
com∑øt‹
, c⁄° * 
¨row
 = "=>", c⁄° * 
comma
 = ", ")

111 
Ve˘‹
<
ty≥«me
 
T
::
KeyTy≥
> 
keys
;

112 
ty≥«me
 
	gT
::
c⁄°_ôî©‹
 
ôî
 = 
m≠
.
begö
(); 
	gôî
 !m≠.
íd
(); ++iter)

113 
	gkeys
.
≠≥nd
(
ôî
->
key
);

114 
	g°d
::
s‹t
(
keys
.
begö
(), keys.
íd
(), 
com∑øt‹
);

115 
SåögPrötSåóm
 
	gout
;

116 
CommaPröãr
 
commaPröãr
(
comma
);

117 
	gi
 = 0; i < 
	gkeys
.
size
(); ++i)

118 
	gout
.
¥öt
(
commaPröãr
, 
keys
[
i
], 
¨row
, 
m≠
.
gë
(keys[i]));

119  
	gout
.
toCSåög
();

122 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

123 ˛as†
	cLi°DumpInC⁄ãxt
 {

124 
	gpublic
:

125 
Li°DumpInC⁄ãxt
(c⁄° 
T
& 
li°
, 
U
* 
c⁄ãxt
, c⁄° * 
comma
)

126 : 
m_li°
(
li°
)

127 , 
m_c⁄ãxt
(
c⁄ãxt
)

128 , 
m_comma
(
comma
)

132 
dump
(
PrötSåóm
& 
out
) const

134 
ty≥«me
 
	gT
::
c⁄°_ôî©‹
 
ôî
 = 
m_li°
.
begö
(); 
	gôî
 !m_li°.
íd
(); ++iter)

135 
	gout
.
¥öt
(
m_comma
, 
öC⁄ãxt
(*
ôî
, 
m_c⁄ãxt
));

138 
	g¥iv©e
:

139 c⁄° 
T
& 
m_li°
;

140 
U
* 
	gm_c⁄ãxt
;

141 
CommaPröãr
 
	gm_comma
;

144 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

145 
	gLi°DumpInC⁄ãxt
<
	gT
, 
	gU
> 
li°DumpInC⁄ãxt
(

146 c⁄° 
T
& 
li°
, 
U
* 
c⁄ãxt
, c⁄° * 
comma
 = ", ")

148  
Li°DumpInC⁄ãxt
<
T
, 
U
>(
li°
, 
c⁄ãxt
, 
comma
);

153 
usög
 
	gWTF
::
li°Dump
;

154 
usög
 
	gWTF
::
s‹ãdLi°Dump
;

155 
usög
 
	gWTF
::
m≠Dump
;

156 
usög
 
	gWTF
::
s‹ãdM≠Dump
;

157 
usög
 
	gWTF
::
li°DumpInC⁄ãxt
;

	@ListHashSet.h

22 #i‚de‡
WTF_Li°HashSë_h


23 
	#WTF_Li°HashSë_h


	)

25 
	~<wtf/HashSë.h
>

26 
	~<wtf/OwnPå.h
>

27 
	~<wtf/PassOwnPå.h
>

29 
«me•a˚
 
	gWTF
 {

41 
	gãm∂©e
<
ty≥«me
 
	gVÆue
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gHashFun˘i⁄s
> 
˛ass
 
	gLi°HashSë
;

43 
	gãm∂©e
<
ty≥«me
 
	gVÆueArg
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gHashArg
> 
˛ass
 
	gLi°HashSëIãøt‹
;

44 
	gãm∂©e
<
ty≥«me
 
	gVÆueArg
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gHashArg
> 
˛ass
 
	gLi°HashSëC⁄°Iãøt‹
;

46 
	gãm∂©e
<
ty≥«me
 
	gVÆueArg
, 
size_t
 
	gölöeC≠acôy
> 
	gLi°HashSëNode
;

47 
	gãm∂©e
<
ty≥«me
 
	gVÆueArg
, 
size_t
 
	gölöeC≠acôy
> 
˛ass
 
	gLi°HashSëNodeAŒoˇt‹
;

49 
	gãm∂©e
<
ty≥«me
 
	gHashArg
> 
	gLi°HashSëNodeHashFun˘i⁄s
;

50 
	gãm∂©e
<
ty≥«me
 
	gHashArg
> 
	gLi°HashSëTøn¶©‹
;

52 
	gãm∂©e
<
ty≥«me
 
	gVÆueArg
, 
size_t
 
	gölöeC≠acôy
 = 256,Åy≥«mê
	gHashArg
 =Åy≥«mê
DeÁu…Hash
<
VÆueArg
>::
Hash
> cœs†
	cLi°HashSë
 {

53 
WTF_MAKE_FAST_ALLOCATED
;

54 
	g¥iv©e
:

55 
Li°HashSëNode
<
	tVÆueArg
, 
	tölöeC≠acôy
> 
	tNode
;

56 
	gLi°HashSëNodeAŒoˇt‹
<
	tVÆueArg
, 
	tölöeC≠acôy
> 
	tNodeAŒoˇt‹
;

58 
	gHashTøôs
<
	tNode
*> 
	tNodeTøôs
;

59 
	gLi°HashSëNodeHashFun˘i⁄s
<
	tHashArg
> 
	tNodeHash
;

60 
	gLi°HashSëTøn¶©‹
<
	tHashArg
> 
	tBa£Tøn¶©‹
;

62 
HashArg
 
	tHashFun˘i⁄s
;

64 
	gpublic
:

65 
VÆueArg
 
	tVÆueTy≥
;

67 
	gLi°HashSëIãøt‹
<
	tVÆueTy≥
, 
	tölöeC≠acôy
, 
	tHashArg
> 
	tôî©‹
;

68 
	gLi°HashSëC⁄°Iãøt‹
<
	tVÆueTy≥
, 
	tölöeC≠acôy
, 
	tHashArg
> 
	tc⁄°_ôî©‹
;

69 
‰õnd
 
˛ass
 
	gLi°HashSëC⁄°Iãøt‹
<
	gVÆueTy≥
, 
	gölöeC≠acôy
, 
	gHashArg
>;

71 
	g°d
::
	tªvî£_ôî©‹
<
	tôî©‹
>Ñeverse_iterator;

72 
	g°d
::
	tªvî£_ôî©‹
<
	tc⁄°_ôî©‹
> 
	tc⁄°_ªvî£_ôî©‹
;

74 
	gHashTabÀAddResu…
<
	tôî©‹
> 
	tAddResu…
;

76 
Li°HashSë
();

77 
Li°HashSë
(const ListHashSet&);

78 
	gLi°HashSë
& 
	g›î©‹
=(c⁄° 
Li°HashSë
&);

79 ~
Li°HashSë
();

81 
sw≠
(
Li°HashSë
&);

83 
size
() const;

84 
ˇ∑côy
() const;

85 
boﬁ
 
isEm±y
() const;

87 
ôî©‹
 
begö
(Ë{  
makeIãøt‹
(
m_hód
); }

88 
ôî©‹
 
íd
(Ë{  
makeIãøt‹
(
nuŒ±r
); }

89 
c⁄°_ôî©‹
 
begö
(Ëc⁄° {  
makeC⁄°Iãøt‹
(
m_hód
); }

90 
c⁄°_ôî©‹
 
íd
(Ëc⁄° {  
makeC⁄°Iãøt‹
(
nuŒ±r
); }

92 
ªvî£_ôî©‹
 
rbegö
(Ë{ Ñevî£_ôî©‹(
íd
()); }

93 
ªvî£_ôî©‹
 
ªnd
(Ë{ Ñevî£_ôî©‹(
begö
()); }

94 
c⁄°_ªvî£_ôî©‹
 
rbegö
(Ëc⁄° {  c⁄°_ªvî£_ôî©‹(
íd
()); }

95 
c⁄°_ªvî£_ôî©‹
 
ªnd
(Ëc⁄° {  c⁄°_ªvî£_ôî©‹(
begö
()); }

97 
	gVÆueTy≥
& 
fú°
();

98 c⁄° 
	gVÆueTy≥
& 
fú°
() const;

99 
ªmoveFú°
();

100 
VÆueTy≥
 
èkeFú°
();

102 
	gVÆueTy≥
& 
œ°
();

103 c⁄° 
	gVÆueTy≥
& 
œ°
() const;

104 
ªmoveLa°
();

105 
VÆueTy≥
 
èkeLa°
();

107 
ôî©‹
 
föd
(c⁄° 
VÆueTy≥
&);

108 
c⁄°_ôî©‹
 
föd
(c⁄° 
VÆueTy≥
&) const;

109 
boﬁ
 
c⁄èös
(c⁄° 
VÆueTy≥
&) const;

116 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gHashTøn¶©‹
> 
ôî©‹
 
föd
(c⁄° 
T
&);

117 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gHashTøn¶©‹
> 
c⁄°_ôî©‹
 
föd
(c⁄° 
T
&) const;

118 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gHashTøn¶©‹
> 
boﬁ
 
c⁄èös
(c⁄° 
T
&) const;

122 
AddResu…
 
add
(c⁄° 
VÆueTy≥
&);

123 
AddResu…
 
add
(
VÆueTy≥
&&);

127 
AddResu…
 
≠≥ndOrMoveToLa°
(c⁄° 
VÆueTy≥
&);

128 
AddResu…
 
≠≥ndOrMoveToLa°
(
VÆueTy≥
&&);

132 
AddResu…
 
¥ïídOrMoveToFú°
(c⁄° 
VÆueTy≥
&);

133 
AddResu…
 
¥ïídOrMoveToFú°
(
VÆueTy≥
&&);

135 
AddResu…
 
ö£πBef‹e
(c⁄° 
VÆueTy≥
& 
bef‹eVÆue
, c⁄° VÆueTy≥& 
√wVÆue
);

136 
AddResu…
 
ö£πBef‹e
(c⁄° 
VÆueTy≥
& 
bef‹eVÆue
, VÆueTy≥&& 
√wVÆue
);

137 
AddResu…
 
ö£πBef‹e
(
ôî©‹
, c⁄° 
VÆueTy≥
&);

138 
AddResu…
 
ö£πBef‹e
(
ôî©‹
, 
VÆueTy≥
&&);

140 
boﬁ
 
ªmove
(c⁄° 
VÆueTy≥
&);

141 
boﬁ
 
ªmove
(
ôî©‹
);

142 
˛ór
();

144 
	g¥iv©e
:

145 
u∆ök
(
Node
*);

146 
u∆ökAndDñëe
(
Node
*);

147 
≠≥ndNode
(
Node
*);

148 
¥ïídNode
(
Node
*);

149 
ö£πNodeBef‹e
(
Node
* 
bef‹eNode
, Node* 
√wNode
);

150 
dñëeAŒNodes
();

152 
ôî©‹
 
makeIãøt‹
(
Node
*);

153 
c⁄°_ôî©‹
 
makeC⁄°Iãøt‹
(
Node
*) const;

155 
	gHashTabÀ
<
	gNode
*, Node*, 
	gIdítôyExåa˘‹
, 
	gNodeHash
, 
	gNodeTøôs
, NodeTøôs> 
	gm_im∂
;

156 
Node
* 
	gm_hód
;

157 
Node
* 
	gm_èû
;

158 
	g°d
::
unique_±r
<
NodeAŒoˇt‹
> 
m_Æloˇt‹
;

161 
	gãm∂©e
<
ty≥«me
 
	gVÆueArg
, 
size_t
 
	gölöeC≠acôy
> cœs†
	cLi°HashSëNodeAŒoˇt‹
 {

162 
	gWTF_MAKE_FAST_ALLOCATED
;

164 
	gpublic
:

165 
Li°HashSëNode
<
	tVÆueArg
, 
	tölöeC≠acôy
> 
	tNode
;

166 
	gLi°HashSëNodeAŒoˇt‹
<
	tVÆueArg
, 
	tölöeC≠acôy
> 
	tNodeAŒoˇt‹
;

168 
Li°HashSëNodeAŒoˇt‹
()

169 : 
m_‰ìLi°
(
poﬁ
())

170 , 
m_isD⁄eWôhInôülFªeLi°
(
Ál£
)

172 
mem£t
(
m_poﬁ
.
poﬁ
, 0, (m_pool.pool));

175 
Node
* 
Æloˇã
()

177 
Node
* 
	gªsu…
 = 
m_‰ìLi°
;

179 i‡(!
	gªsu…
)

180  
	g°©ic_ˇ°
<
	gNode
*>(
Á°MÆloc
((
Node
)));

182 
ASSERT
(!
ªsu…
->
m_isAŒoˇãd
);

184 
Node
* 
	g√xt
 = 
ªsu…
->
m_√xt
;

185 
ASSERT
(!
√xt
 || !√xt->
m_isAŒoˇãd
);

186 i‡(!
	g√xt
 && !
	gm_isD⁄eWôhInôülFªeLi°
) {

187 
	g√xt
 = 
ªsu…
 + 1;

188 i‡(
	g√xt
 =
∑°Poﬁ
()) {

189 
m_isD⁄eWôhInôülFªeLi°
 = 
åue
;

190 
	g√xt
 = 0;

192 
ASSERT
(
öPoﬁ
(
√xt
));

193 
ASSERT
(!
√xt
->
m_isAŒoˇãd
);

196 
	gm_‰ìLi°
 = 
√xt
;

198  
	gªsu…
;

201 
dóŒoˇã
(
Node
* 
node
)

203 i‡(
öPoﬁ
(
node
)) {

204 #i‚de‡
NDEBUG


205 
	gnode
->
	gm_isAŒoˇãd
 = 
Ál£
;

207 
	gnode
->
	gm_√xt
 = 
m_‰ìLi°
;

208 
	gm_‰ìLi°
 = 
node
;

212 
Á°Fªe
(
node
);

215 
	g¥iv©e
:

216 
Node
* 
poﬁ
(Ë{  
ªöãΩªt_ˇ°_±r
<Node*>(
m_poﬁ
.pool); }

217 
Node
* 
∑°Poﬁ
(Ë{  
poﬁ
(Ë+ 
	gm_poﬁSize
; }

218 
boﬁ
 
öPoﬁ
(
Node
* 
node
)

220  
	gnode
 >
poﬁ
(Ë&& 
node
 < 
∑°Poﬁ
();

223 
Node
* 
	gm_‰ìLi°
;

224 
boﬁ
 
	gm_isD⁄eWôhInôülFªeLi°
;

225 c⁄° 
size_t
 
	gm_poﬁSize
 = 
ölöeC≠acôy
;

227 
	gpoﬁ
[(
Node
Ë* 
m_poﬁSize
];

228 
	gf‹Alignmít
;

229 } 
	gm_poﬁ
;

232 
	gãm∂©e
<
ty≥«me
 
	gVÆueArg
, 
size_t
 
	gölöeC≠acôy
> 
	sLi°HashSëNode
 {

233 
	gLi°HashSëNodeAŒoˇt‹
<
	tVÆueArg
, 
	tölöeC≠acôy
> 
	tNodeAŒoˇt‹
;

235 
	gãm∂©e
<
ty≥«me
 
	gT
>

236 
Li°HashSëNode
(
T
&& 
vÆue
)

237 : 
m_vÆue
(
°d
::
f‹w¨d
<
T
>(
vÆue
))

238 , 
m_¥ev
(0)

239 , 
m_√xt
(0)

240 #i‚de‡
NDEBUG


241 , 
m_isAŒoˇãd
(
åue
)

246 * 
›î©‹
 
√w
(
size_t
, 
NodeAŒoˇt‹
* 
Æloˇt‹
)

248  
	gÆloˇt‹
->
Æloˇã
();

250 
de°roy
(
NodeAŒoˇt‹
* 
Æloˇt‹
)

252 
	gthis
->~
Li°HashSëNode
();

253 
	gÆloˇt‹
->
dóŒoˇã
(
this
);

256 
VÆueArg
 
	gm_vÆue
;

257 
Li°HashSëNode
* 
	gm_¥ev
;

258 
Li°HashSëNode
* 
	gm_√xt
;

260 #i‚de‡
NDEBUG


261 
boﬁ
 
	gm_isAŒoˇãd
;

265 
	gãm∂©e
<
ty≥«me
 
	gHashArg
> 
	sLi°HashSëNodeHashFun˘i⁄s
 {

266 
	gãm∂©e
<
ty≥«me
 
	gT
> 
hash
(c⁄° 
T
& 
key
Ë{  
	gHashArg
::hash(key->
m_vÆue
); }

267 
	gãm∂©e
<
ty≥«me
 
	gT
> 
boﬁ
 
equÆ
(c⁄° 
T
& 
a
, c⁄° T& 
b
Ë{  
	gHashArg
::equÆ◊->
m_vÆue
, b->m_value); }

268 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
Ál£
;

271 
	gãm∂©e
<
ty≥«me
 
	gVÆueArg
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gHashArg
> cœs†
	cLi°HashSëIãøt‹
 {

272 
	g¥iv©e
:

273 
Li°HashSë
<
	tVÆueArg
, 
	tölöeC≠acôy
, 
	tHashArg
> 
	tLi°HashSëTy≥
;

274 
	gLi°HashSëIãøt‹
<
	tVÆueArg
, 
	tölöeC≠acôy
, 
	tHashArg
> 
	tôî©‹
;

275 
	gLi°HashSëC⁄°Iãøt‹
<
	tVÆueArg
, 
	tölöeC≠acôy
, 
	tHashArg
> 
	tc⁄°_ôî©‹
;

276 
	gLi°HashSëNode
<
	tVÆueArg
, 
	tölöeC≠acôy
> 
	tNode
;

277 
VÆueArg
 
	tVÆueTy≥
;

279 
‰õnd
 
˛ass
 
	gLi°HashSë
<
	gVÆueArg
, 
	gölöeC≠acôy
, 
	gHashArg
>;

281 
Li°HashSëIãøt‹
(c⁄° 
Li°HashSëTy≥
* 
£t
, 
Node
* 
posôi⁄
Ë: 
m_ôî©‹
(set,Öosition) { }

283 
	gpublic
:

284 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

285 
VÆueTy≥
 
	tvÆue_ty≥
;

286 
VÆueTy≥
* 
	tpoöãr
;

287 
	gVÆueTy≥
& 
	tª„ªn˚
;

288 
	g°d
::
	tbidúe˘i⁄Æ_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

290 
Li°HashSëIãøt‹
() { }

294 
VÆueTy≥
* 
gë
(Ëc⁄° {  
	gc⁄°_ˇ°
<
	gVÆueTy≥
*>(
	gm_ôî©‹
.get()); }

295 
	gVÆueTy≥
& 
	g›î©‹
*(Ëc⁄° {  *
gë
(); }

296 
VÆueTy≥
* 
	g›î©‹
->(Ëc⁄° {  
gë
(); }

298 
	gôî©‹
& 
	g›î©‹
++(Ë{ ++
	gm_ôî©‹
;  *
	gthis
; }

302 
	gôî©‹
& 
	g›î©‹
--(Ë{ --
	gm_ôî©‹
;  *
	gthis
; }

307 
boﬁ
 
	g›î©‹
==(c⁄° 
ôî©‹
& 
Ÿhî
Ëc⁄° {  
m_ôî©‹
 == other.m_iterator; }

308 
boﬁ
 
	g›î©‹
!=(c⁄° 
ôî©‹
& 
Ÿhî
Ëc⁄° {  
m_ôî©‹
 != other.m_iterator; }

310 
›î©‹
 
c⁄°_ôî©‹
(Ëc⁄° {  
	gm_ôî©‹
; }

312 
	g¥iv©e
:

313 
Node
* 
node
(Ë{  
m_ôî©‹
.node(); }

315 
c⁄°_ôî©‹
 
	gm_ôî©‹
;

318 
	gãm∂©e
<
ty≥«me
 
	gVÆueArg
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gHashArg
> cœs†
	cLi°HashSëC⁄°Iãøt‹
 {

319 
	g¥iv©e
:

320 
Li°HashSë
<
	tVÆueArg
, 
	tölöeC≠acôy
, 
	tHashArg
> 
	tLi°HashSëTy≥
;

321 
	gLi°HashSëIãøt‹
<
	tVÆueArg
, 
	tölöeC≠acôy
, 
	tHashArg
> 
	tôî©‹
;

322 
	gLi°HashSëC⁄°Iãøt‹
<
	tVÆueArg
, 
	tölöeC≠acôy
, 
	tHashArg
> 
	tc⁄°_ôî©‹
;

323 
	gLi°HashSëNode
<
	tVÆueArg
, 
	tölöeC≠acôy
> 
	tNode
;

324 
VÆueArg
 
	tVÆueTy≥
;

326 
‰õnd
 
˛ass
 
	gLi°HashSë
<
	gVÆueArg
, 
	gölöeC≠acôy
, 
	gHashArg
>;

327 
‰õnd
 
˛ass
 
	gLi°HashSëIãøt‹
<
	gVÆueArg
, 
	gölöeC≠acôy
, 
	gHashArg
>;

329 
Li°HashSëC⁄°Iãøt‹
(c⁄° 
Li°HashSëTy≥
* 
£t
, 
Node
* 
posôi⁄
)

330 : 
m_£t
(
£t
)

331 , 
m_posôi⁄
(
posôi⁄
)

335 
	gpublic
:

336 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

337 c⁄° 
	tVÆueTy≥
 
	tvÆue_ty≥
;

338 c⁄° 
	tVÆueTy≥
* 
	tpoöãr
;

339 c⁄° 
	tVÆueTy≥
& 
	tª„ªn˚
;

340 
	g°d
::
	tbidúe˘i⁄Æ_ôî©‹_èg
 
	tôî©‹_ˇãg‹y
;

342 
Li°HashSëC⁄°Iãøt‹
()

346 c⁄° 
VÆueTy≥
* 
gë
() const

348  &
	gm_posôi⁄
->
	gm_vÆue
;

351 c⁄° 
	gVÆueTy≥
& 
	g›î©‹
*(Ëc⁄° {  *
gë
(); }

352 c⁄° 
VÆueTy≥
* 
	g›î©‹
->(Ëc⁄° {  
gë
(); }

354 
	gc⁄°_ôî©‹
& 
	g›î©‹
++()

356 
ASSERT
(
m_posôi⁄
 != 0);

357 
	gm_posôi⁄
 = 
m_posôi⁄
->
m_√xt
;

358  *
	gthis
;

363 
	gc⁄°_ôî©‹
& 
	g›î©‹
--()

365 
ASSERT
(
m_posôi⁄
 !
m_£t
->
m_hód
);

366 i‡(!
	gm_posôi⁄
)

367 
	gm_posôi⁄
 = 
m_£t
->
m_èû
;

369 
	gm_posôi⁄
 = 
m_posôi⁄
->
m_¥ev
;

370  *
	gthis
;

376 
boﬁ
 
	g›î©‹
==(c⁄° 
c⁄°_ôî©‹
& 
Ÿhî
) const

378  
m_posôi⁄
 =
Ÿhî
.m_position;

380 
boﬁ
 
	g›î©‹
!=(c⁄° 
c⁄°_ôî©‹
& 
Ÿhî
) const

382  
m_posôi⁄
 !
Ÿhî
.m_position;

385 
	g¥iv©e
:

386 
Node
* 
node
(Ë{  
m_posôi⁄
; }

388 c⁄° 
Li°HashSëTy≥
* 
	gm_£t
;

389 
Node
* 
	gm_posôi⁄
;

392 
	gãm∂©e
<
ty≥«me
 
	gHashFun˘i⁄s
>

393 
	sLi°HashSëTøn¶©‹
 {

394 
	gãm∂©e
<
ty≥«me
 
	gT
> 
hash
(c⁄° 
T
& 
key
Ë{  
	gHashFun˘i⁄s
::hash(key); }

395 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
boﬁ
 
equÆ
(c⁄° 
T
& 
a
, c⁄° 
U
& 
b
Ë{  
	gHashFun˘i⁄s
::equÆ◊->
m_vÆue
, b); }

396 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
> 
å™¶©e
(
T
*& 
loˇti⁄
, 
U
&& 
key
, c⁄° 
V
& 
Æloˇt‹
)

398 
	gloˇti⁄
 = 
√w
 (
Æloˇt‹
Ë
T
(
°d
::
f‹w¨d
<
U
>(
key
));

402 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

403 
ölöe
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$Li°HashSë
()

404 : 
	`m_hód
(0)

405 , 
	`m_èû
(0)

406 , 
	`m_Æloˇt‹
(
°d
::
make_unique
<
NodeAŒoˇt‹
>())

408 
	}
}

410 
ãm∂©e
<
ty≥«me
 
T
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

411 
ölöe
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$Li°HashSë
(c⁄° 
Li°HashSë
& 
Ÿhî
)

412 : 
	`m_hód
(0)

413 , 
	`m_èû
(0)

414 , 
	`m_Æloˇt‹
(
°d
::
make_unique
<
NodeAŒoˇt‹
>())

416 autÿ
ô
 = 
Ÿhî
.
	`begö
(), 
íd
 = othî.
	`íd
(); it !=Énd; ++it)

417 
	`add
(*
ô
);

418 
	}
}

420 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

421 
ölöe
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>& Li°HashSë<T, i∆öeC≠acôy, U>::
›î©‹
=(c⁄° 
Li°HashSë
& 
Ÿhî
)

423 
Li°HashSë
 
tmp
(
Ÿhî
);

424 
sw≠
(
tmp
);

425  *
	gthis
;

428 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

429 
ölöe
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$sw≠
(
Li°HashSë
& 
Ÿhî
)

431 
m_im∂
.
	`sw≠
(
Ÿhî
.m_impl);

432 
°d
::
	`sw≠
(
m_hód
, 
Ÿhî
.m_head);

433 
°d
::
	`sw≠
(
m_èû
, 
Ÿhî
.m_tail);

434 
m_Æloˇt‹
.
	`sw≠
(
Ÿhî
.m_allocator);

435 
	}
}

437 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

438 
ölöe
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::~
	$Li°HashSë
()

440 
	`dñëeAŒNodes
();

441 
	}
}

443 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

444 
ölöe
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$size
() const

446  
m_im∂
.
	`size
();

447 
	}
}

449 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

450 
ölöe
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$ˇ∑côy
() const

452  
m_im∂
.
	`ˇ∑côy
();

453 
	}
}

455 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

456 
ölöe
 
boﬁ
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$isEm±y
() const

458  
m_im∂
.
	`isEm±y
();

459 
	}
}

461 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

462 
ölöe
 
	gT
& 
	gLi°HashSë
<T, 
	gölöeC≠acôy
, 
	gU
>::
	$fú°
()

464 
	`ASSERT
(!
	`isEm±y
());

465  
m_hód
->
m_vÆue
;

466 
	}
}

468 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

469 
ölöe
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$ªmoveFú°
()

471 
	`èkeFú°
();

472 
	}
}

474 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

475 
ölöe
 
T
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$èkeFú°
()

477 
	`ASSERT
(!
	`isEm±y
());

478 autÿ
ô
 = 
m_im∂
.
	`föd
(
m_hód
);

480 
T
 
ªsu…
 = 
WTF
::
	`move
((*
ô
)->
m_vÆue
);

481 
m_im∂
.
	`ªmove
(
ô
);

482 
	`u∆ökAndDñëe
(
m_hód
);

484  
ªsu…
;

485 
	}
}

487 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

488 
ölöe
 c⁄° 
	gT
& 
	gLi°HashSë
<T, 
	gölöeC≠acôy
, 
	gU
>::
	$fú°
() const

490 
	`ASSERT
(!
	`isEm±y
());

491  
m_hód
->
m_vÆue
;

492 
	}
}

494 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

495 
ölöe
 
	gT
& 
	gLi°HashSë
<T, 
	gölöeC≠acôy
, 
	gU
>::
	$œ°
()

497 
	`ASSERT
(!
	`isEm±y
());

498  
m_èû
->
m_vÆue
;

499 
	}
}

501 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

502 
ölöe
 c⁄° 
	gT
& 
	gLi°HashSë
<T, 
	gölöeC≠acôy
, 
	gU
>::
	$œ°
() const

504 
	`ASSERT
(!
	`isEm±y
());

505  
m_èû
->
m_vÆue
;

506 
	}
}

508 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

509 
ölöe
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$ªmoveLa°
()

511 
	`èkeLa°
();

512 
	}
}

514 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

515 
ölöe
 
T
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$èkeLa°
()

517 
	`ASSERT
(!
	`isEm±y
());

518 autÿ
ô
 = 
m_im∂
.
	`föd
(
m_èû
);

520 
T
 
ªsu…
 = 
WTF
::
	`move
((*
ô
)->
m_vÆue
);

521 
m_im∂
.
	`ªmove
(
ô
);

522 
	`u∆ökAndDñëe
(
m_èû
);

524  
ªsu…
;

525 
	}
}

527 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

528 
ölöe
áutÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
föd
(c⁄° 
VÆueTy≥
& 
vÆue
Ë-> 
ôî©‹


530 autÿ
ô
 = 
m_im∂
.
ãm∂©e
 
föd
<
Ba£Tøn¶©‹
>(
vÆue
);

531 i‡(
	gô
 =
m_im∂
.
íd
())

532  
íd
();

533  
makeIãøt‹
(*
ô
);

536 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

537 
ölöe
áutÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$föd
(c⁄° 
VÆueTy≥
& 
vÆue
Ëc⁄° -> 
c⁄°_ôî©‹


539 autÿ
ô
 = 
m_im∂
.
ãm∂©e
 
föd
<
Ba£Tøn¶©‹
>(
vÆue
);

540 i‡(
ô
 =
m_im∂
.
	`íd
())

541  
	`íd
();

542  
	`makeC⁄°Iãøt‹
(*
ô
);

543 
	}
}

545 
	gãm∂©e
<
ty≥«me
 
	gTøn¶©‹
>

546 
	sLi°HashSëTøn¶©‹Ad≠ãr
 {

547 
	gãm∂©e
<
ty≥«me
 
	gT
> 
hash
(c⁄° 
T
& 
key
Ë{  
	gTøn¶©‹
::hash(key); }

548 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
boﬁ
 
equÆ
(c⁄° 
T
& 
a
, c⁄° 
U
& 
b
Ë{  
	gTøn¶©‹
::equÆ◊->
m_vÆue
, b); }

551 
	gãm∂©e
<
ty≥«me
 
	gVÆueTy≥
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

552 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gHashTøn¶©‹
>

553 
ölöe
áutÿ
	gLi°HashSë
<
	gVÆueTy≥
, 
	gölöeC≠acôy
, 
	gU
>::
föd
(c⁄° 
T
& 
vÆue
Ë-> 
ôî©‹


555 autÿ
ô
 = 
m_im∂
.
ãm∂©e
 
föd
<
Li°HashSëTøn¶©‹Ad≠ãr
<
HashTøn¶©‹
>>(
vÆue
);

556 i‡(
	gô
 =
m_im∂
.
íd
())

557  
íd
();

558  
makeIãøt‹
(*
ô
);

561 
	gãm∂©e
<
ty≥«me
 
	gVÆueTy≥
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

562 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gHashTøn¶©‹
>

563 
ölöe
áutÿ
	gLi°HashSë
<
	gVÆueTy≥
, 
	gölöeC≠acôy
, 
	gU
>::
	$föd
(c⁄° 
T
& 
vÆue
Ëc⁄° -> 
c⁄°_ôî©‹


565 autÿ
ô
 = 
m_im∂
.
ãm∂©e
 
föd
<
Li°HashSëTøn¶©‹Ad≠ãr
<
HashTøn¶©‹
>>(
vÆue
);

566 i‡(
ô
 =
m_im∂
.
	`íd
())

567  
	`íd
();

568  
	`makeC⁄°Iãøt‹
(*
ô
);

569 
	}
}

571 
	gãm∂©e
<
ty≥«me
 
	gVÆueTy≥
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

572 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gHashTøn¶©‹
>

573 
ölöe
 
boﬁ
 
	gLi°HashSë
<
	gVÆueTy≥
, 
	gölöeC≠acôy
, 
	gU
>::
	$c⁄èös
(c⁄° 
T
& 
vÆue
) const

575  
m_im∂
.
ãm∂©e
 
c⁄èös
<
Li°HashSëTøn¶©‹Ad≠ãr
<
HashTøn¶©‹
>>(
vÆue
);

576 
	}
}

578 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

579 
ölöe
 
boﬁ
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$c⁄èös
(c⁄° 
VÆueTy≥
& 
vÆue
) const

581  
m_im∂
.
ãm∂©e
 
c⁄èös
<
Ba£Tøn¶©‹
>(
vÆue
);

582 
	}
}

584 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

585 autÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
add
(c⁄° 
VÆueTy≥
& 
vÆue
Ë-> 
AddResu…


587 autÿ
ªsu…
 = 
m_im∂
.
ãm∂©e
 
add
<
Ba£Tøn¶©‹
>(
vÆue
, 
	gm_Æloˇt‹
.
gë
());

588 i‡(
	gªsu…
.
	gisNewE¡ry
)

589 
≠≥ndNode
(*
ªsu…
.
ôî©‹
);

590  
AddResu…
(
makeIãøt‹
(*
ªsu…
.
ôî©‹
),Ñesu….
isNewE¡ry
);

593 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

594 autÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
add
(
VÆueTy≥
&& 
vÆue
Ë-> 
AddResu…


596 autÿ
ªsu…
 = 
m_im∂
.
ãm∂©e
 
add
<
Ba£Tøn¶©‹
>(
WTF
::
move
(
vÆue
), 
	gm_Æloˇt‹
.
gë
());

597 i‡(
	gªsu…
.
	gisNewE¡ry
)

598 
≠≥ndNode
(*
ªsu…
.
ôî©‹
);

599  
AddResu…
(
makeIãøt‹
(*
ªsu…
.
ôî©‹
),Ñesu….
isNewE¡ry
);

602 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

603 autÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
≠≥ndOrMoveToLa°
(c⁄° 
VÆueTy≥
& 
vÆue
Ë-> 
AddResu…


605 autÿ
ªsu…
 = 
m_im∂
.
ãm∂©e
 
add
<
Ba£Tøn¶©‹
>(
vÆue
, 
	gm_Æloˇt‹
.
gë
());

606 
Node
* 
	gnode
 = *
ªsu…
.
ôî©‹
;

607 i‡(!
	gªsu…
.
	gisNewE¡ry
)

608 
u∆ök
(
node
);

609 
≠≥ndNode
(
node
);

611  
AddResu…
(
makeIãøt‹
(*
ªsu…
.
ôî©‹
),Ñesu….
isNewE¡ry
);

614 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

615 autÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
≠≥ndOrMoveToLa°
(
VÆueTy≥
&& 
vÆue
Ë-> 
AddResu…


617 autÿ
ªsu…
 = 
m_im∂
.
ãm∂©e
 
add
<
Ba£Tøn¶©‹
>(
WTF
::
move
(
vÆue
), 
	gm_Æloˇt‹
.
gë
());

618 
Node
* 
	gnode
 = *
ªsu…
.
ôî©‹
;

619 i‡(!
	gªsu…
.
	gisNewE¡ry
)

620 
u∆ök
(
node
);

621 
≠≥ndNode
(
node
);

623  
AddResu…
(
makeIãøt‹
(*
ªsu…
.
ôî©‹
),Ñesu….
isNewE¡ry
);

626 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

627 autÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
¥ïídOrMoveToFú°
(c⁄° 
VÆueTy≥
& 
vÆue
Ë-> 
AddResu…


629 autÿ
ªsu…
 = 
m_im∂
.
ãm∂©e
 
add
<
Ba£Tøn¶©‹
>(
vÆue
, 
	gm_Æloˇt‹
.
gë
());

630 
Node
* 
	gnode
 = *
ªsu…
.
ôî©‹
;

631 i‡(!
	gªsu…
.
	gisNewE¡ry
)

632 
u∆ök
(
node
);

633 
¥ïídNode
(
node
);

635  
AddResu…
(
makeIãøt‹
(*
ªsu…
.
ôî©‹
),Ñesu….
isNewE¡ry
);

638 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

639 autÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
¥ïídOrMoveToFú°
(
VÆueTy≥
&& 
vÆue
Ë-> 
AddResu…


641 autÿ
ªsu…
 = 
m_im∂
.
ãm∂©e
 
add
<
Ba£Tøn¶©‹
>(
WTF
::
move
(
vÆue
), 
	gm_Æloˇt‹
.
gë
());

642 
Node
* 
	gnode
 = *
ªsu…
.
ôî©‹
;

643 i‡(!
	gªsu…
.
	gisNewE¡ry
)

644 
u∆ök
(
node
);

645 
¥ïídNode
(
node
);

647  
AddResu…
(
makeIãøt‹
(*
ªsu…
.
ôî©‹
),Ñesu….
isNewE¡ry
);

650 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

651 autÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
ö£πBef‹e
(c⁄° 
VÆueTy≥
& 
bef‹eVÆue
, c⁄° VÆueTy≥& 
√wVÆue
Ë-> 
	gAddResu…


653  
ö£πBef‹e
(
föd
(
bef‹eVÆue
), 
√wVÆue
);

656 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

657 autÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
ö£πBef‹e
(c⁄° 
VÆueTy≥
& 
bef‹eVÆue
, VÆueTy≥&& 
√wVÆue
Ë-> 
	gAddResu…


659  
ö£πBef‹e
(
föd
(
bef‹eVÆue
), 
WTF
::
move
(
√wVÆue
));

662 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

663 autÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
ö£πBef‹e
(
ôî©‹
 
ô
, c⁄° 
VÆueTy≥
& 
√wVÆue
Ë-> 
	gAddResu…


665 autÿ
	gªsu…
 = 
m_im∂
.
ãm∂©e
 
add
<
Ba£Tøn¶©‹
>(
√wVÆue
, 
	gm_Æloˇt‹
.
gë
());

666 i‡(
	gªsu…
.
	gisNewE¡ry
)

667 
ö£πNodeBef‹e
(
ô
.
node
(), *
ªsu…
.
ôî©‹
);

668  
AddResu…
(
makeIãøt‹
(*
ªsu…
.
ôî©‹
),Ñesu….
isNewE¡ry
);

671 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

672 autÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
ö£πBef‹e
(
ôî©‹
 
ô
, 
VÆueTy≥
&& 
√wVÆue
Ë-> 
	gAddResu…


674 autÿ
	gªsu…
 = 
m_im∂
.
ãm∂©e
 
add
<
Ba£Tøn¶©‹
>(
WTF
::
move
(
√wVÆue
), 
	gm_Æloˇt‹
.
gë
());

675 i‡(
	gªsu…
.
	gisNewE¡ry
)

676 
ö£πNodeBef‹e
(
ô
.
node
(), *
ªsu…
.
ôî©‹
);

677  
AddResu…
(
makeIãøt‹
(*
ªsu…
.
ôî©‹
),Ñesu….
isNewE¡ry
);

680 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

681 
ölöe
 
boﬁ
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$ªmove
(
ôî©‹
 
ô
)

683 i‡(
ô
 =
	`íd
())

684  
Ál£
;

685 
m_im∂
.
	`ªmove
(
ô
.
	`node
());

686 
	`u∆ökAndDñëe
(
ô
.
	`node
());

687  
åue
;

688 
	}
}

690 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

691 
ölöe
 
boﬁ
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$ªmove
(c⁄° 
VÆueTy≥
& 
vÆue
)

693  
	`ªmove
(
	`föd
(
vÆue
));

694 
	}
}

696 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

697 
ölöe
 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$˛ór
()

699 
	`dñëeAŒNodes
();

700 
m_im∂
.
	`˛ór
();

701 
m_hód
 = 0;

702 
m_èû
 = 0;

703 
	}
}

705 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

706 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$u∆ök
(
Node
* 
node
)

708 i‡(!
node
->
m_¥ev
) {

709 
	`ASSERT
(
node
 =
m_hód
);

710 
m_hód
 = 
node
->
m_√xt
;

712 
	`ASSERT
(
node
 !
m_hód
);

713 
node
->
m_¥ev
->
m_√xt
 =Çode->m_next;

716 i‡(!
node
->
m_√xt
) {

717 
	`ASSERT
(
node
 =
m_èû
);

718 
m_èû
 = 
node
->
m_¥ev
;

720 
	`ASSERT
(
node
 !
m_èû
);

721 
node
->
m_√xt
->
m_¥ev
 =Çode->m_prev;

723 
	}
}

725 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

726 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$u∆ökAndDñëe
(
Node
* 
node
)

728 
	`u∆ök
(
node
);

729 
node
->
	`de°roy
(
m_Æloˇt‹
.
	`gë
());

730 
	}
}

732 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

733 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$≠≥ndNode
(
Node
* 
node
)

735 
node
->
m_¥ev
 = 
m_èû
;

736 
node
->
m_√xt
 = 0;

738 i‡(
m_èû
) {

739 
	`ASSERT
(
m_hód
);

740 
m_èû
->
m_√xt
 = 
node
;

742 
	`ASSERT
(!
m_hód
);

743 
m_hód
 = 
node
;

746 
m_èû
 = 
node
;

747 
	}
}

749 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

750 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$¥ïídNode
(
Node
* 
node
)

752 
node
->
m_¥ev
 = 0;

753 
node
->
m_√xt
 = 
m_hód
;

755 i‡(
m_hód
)

756 
m_hód
->
m_¥ev
 = 
node
;

758 
m_èû
 = 
node
;

760 
m_hód
 = 
node
;

761 
	}
}

763 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

764 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$ö£πNodeBef‹e
(
Node
* 
bef‹eNode
, Node* 
√wNode
)

766 i‡(!
bef‹eNode
)

767  
	`≠≥ndNode
(
√wNode
);

769 
√wNode
->
m_√xt
 = 
bef‹eNode
;

770 
√wNode
->
m_¥ev
 = 
bef‹eNode
->m_prev;

771 i‡(
bef‹eNode
->
m_¥ev
)

772 
bef‹eNode
->
m_¥ev
->
m_√xt
 = 
√wNode
;

773 
bef‹eNode
->
m_¥ev
 = 
√wNode
;

775 i‡(!
√wNode
->
m_¥ev
)

776 
m_hód
 = 
√wNode
;

777 
	}
}

779 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

780 
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$dñëeAŒNodes
()

782 i‡(!
m_hód
)

785 
Node
* 
node
 = 
m_hód
, *
√xt
 = m_hód->
m_√xt
;Çode;Çode =Çext,Çext =Çode ?Çode->m_next : 0)

786 
node
->
	`de°roy
(
m_Æloˇt‹
.
	`gë
());

787 
	}
}

789 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

790 
ölöe
áutÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
makeIãøt‹
(
Node
* 
posôi⁄
Ë-> 
ôî©‹


792  
ôî©‹
(
this
, 
posôi⁄
);

795 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gU
>

796 
ölöe
áutÿ
	gLi°HashSë
<
	gT
, 
	gölöeC≠acôy
, 
	gU
>::
	$makeC⁄°Iãøt‹
(
Node
* 
posôi⁄
Ëc⁄° -> 
c⁄°_ôî©‹


798  
	`c⁄°_ôî©‹
(
this
, 
posôi⁄
);

799 
	}
}

803 
usög
 
	gWTF
::
Li°HashSë
;

	@Locker.h

28 #i‚de‡
Lockî_h


29 
	#Lockî_h


	)

31 
	~<wtf/N⁄c›yabÀ.h
>

33 
«me•a˚
 
	gWTF
 {

35 
	gãm∂©e
 <
ty≥«me
 
	gT
> cœs†
	cLockî
 {

36 
WTF_MAKE_NONCOPYABLE
(
Lockî
);

37 
	gpublic
:

38 
ex∂icô
 
Lockî
(
T
& 
lockabÀ
Ë: 
m_lockabÀ
(&lockabÀË{ 
lock
(); }

39 
ex∂icô
 
Lockî
(
T
* 
lockabÀ
Ë: 
m_lockabÀ
÷ockabÀË{ 
lock
(); }

40 ~
Lockî
()

42 i‡(
	gm_lockabÀ
)

43 
	gm_lockabÀ
->
u∆ock
();

46 
u∆ockE¨ly
()

48 
	gm_lockabÀ
->
u∆ock
();

49 
	gm_lockabÀ
 = 0;

51 
	g¥iv©e
:

52 
lock
()

54 i‡(
m_lockabÀ
)

55 
m_lockabÀ
->
lock
();

58 
T
* 
	gm_lockabÀ
;

63 
usög
 
	gWTF
::
Lockî
;

	@MD5.cpp

49 
	~"c⁄fig.h
"

50 
	~"MD5.h
"

52 
	~"As£πi⁄s.h
"

53 #i‚de‡
NDEBUG


54 
	~"SåögExåas.h
"

55 
	~"ãxt/CSåög.h
"

57 
	~<wtf/StdLibExåas.h
>

59 
«me•a˚
 
	gWTF
 {

63 
toLôéeEndün
(
uöt8_t
* 
buf
, 
l⁄gs
)

65 
ASSERT
(
l⁄gs
 > 0);

67 
uöt32_t
 
	gt
 = 
°©ic_ˇ°
<uöt32_t>(
buf
[3] << 8 | buf[2]) << 16 | buf[1] << 8 | buf[0];

68 
ASSERT_WITH_MESSAGE
(!(
ªöãΩªt_ˇ°
<
uöçå_t
>(
buf
Ë% (
t
)), "alignmentÉrror of buf");

69 
mem˝y
(
buf
, &
t
, (t));

70 
	gbuf
 +(
t
);

71 } --
	gl⁄gs
);

76 
	#F1
(
x
, 
y
, 
z
Ë(z ^ (x & (y ^ z)))

	)

77 
	#F2
(
x
, 
y
, 
z
Ë
	`F1
(z, x, y)

	)

78 
	#F3
(
x
, 
y
, 
z
Ë(x ^ y ^ z)

	)

79 
	#F4
(
x
, 
y
, 
z
Ë(y ^ (x | ~z))

	)

82 
	#MD5STEP
(
f
, 
w
, 
x
, 
y
, 
z
, 
d©a
, 
s
) \

83 (
w
 +
	`f
(
x
, 
y
, 
z
Ë+ 
d©a
, w = w << 
s
 | w >> (32 - s), w +x)

	)

85 
MD5Tønsf‹m
(
uöt32_t
 
buf
[4], c⁄° uöt32_à
ö
[16])

87 
uöt32_t
 
	ga
 = 
buf
[0];

88 
uöt32_t
 
	gb
 = 
buf
[1];

89 
uöt32_t
 
	gc
 = 
buf
[2];

90 
uöt32_t
 
	gd
 = 
buf
[3];

92 
MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 0]+0xd76aa478, 7);

93 
MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 1]+0xe8c7b756, 12);

94 
MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 2]+0x242070db, 17);

95 
MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 3]+0xc1bdceee, 22);

96 
MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 4]+0xf57c0faf, 7);

97 
MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 5]+0x4787c62a, 12);

98 
MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 6]+0xa8304613, 17);

99 
MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 7]+0xfd469501, 22);

100 
MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 8]+0x698098d8, 7);

101 
MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 9]+0x8b44f7af, 12);

102 
MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[10]+0xffff5bb1, 17);

103 
MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[11]+0x895cd7be, 22);

104 
MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[12]+0x6b901122, 7);

105 
MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[13]+0xfd987193, 12);

106 
MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[14]+0xa679438e, 17);

107 
MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[15]+0x49b40821, 22);

109 
MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 1]+0xf61e2562, 5);

110 
MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 6]+0xc040b340, 9);

111 
MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[11]+0x265e5a51, 14);

112 
MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 0]+0xe9b6c7aa, 20);

113 
MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 5]+0xd62f105d, 5);

114 
MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[10]+0x02441453, 9);

115 
MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[15]+0xd8a1e681, 14);

116 
MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 4]+0xe7d3fbc8, 20);

117 
MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 9]+0x21e1cde6, 5);

118 
MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[14]+0xc33707d6, 9);

119 
MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 3]+0xf4d50d87, 14);

120 
MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 8]+0x455a14ed, 20);

121 
MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[13]+0xa9e3e905, 5);

122 
MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 2]+0xfcefa3f8, 9);

123 
MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 7]+0x676f02d9, 14);

124 
MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[12]+0x8d2a4c8a, 20);

126 
MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 5]+0xfffa3942, 4);

127 
MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 8]+0x8771f681, 11);

128 
MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[11]+0x6d9d6122, 16);

129 
MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[14]+0xfde5380c, 23);

130 
MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 1]+0xa4beea44, 4);

131 
MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 4]+0x4bdecfa9, 11);

132 
MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 7]+0xf6bb4b60, 16);

133 
MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[10]+0xbebfbc70, 23);

134 
MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[13]+0x289b7ec6, 4);

135 
MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 0]+0xeaa127fa, 11);

136 
MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 3]+0xd4ef3085, 16);

137 
MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 6]+0x04881d05, 23);

138 
MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 9]+0xd9d4d039, 4);

139 
MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[12]+0xe6db99e5, 11);

140 
MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[15]+0x1fa27cf8, 16);

141 
MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 2]+0xc4ac5665, 23);

143 
MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 0]+0xf4292244, 6);

144 
MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 7]+0x432aff97, 10);

145 
MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[14]+0xab9423a7, 15);

146 
MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 5]+0xfc93a039, 21);

147 
MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[12]+0x655b59c3, 6);

148 
MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 3]+0x8f0ccc92, 10);

149 
MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[10]+0xffeff47d, 15);

150 
MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 1]+0x85845dd1, 21);

151 
MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 8]+0x6fa87e4f, 6);

152 
MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[15]+0xfe2ce6e0, 10);

153 
MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 6]+0xa3014314, 15);

154 
MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[13]+0x4e0811a1, 21);

155 
MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 4]+0xf7537e82, 6);

156 
MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[11]+0xbd3af235, 10);

157 
MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 2]+0x2ad7d2bb, 15);

158 
MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 9]+0xeb86d391, 21);

160 
	gbuf
[0] +
a
;

161 
	gbuf
[1] +
b
;

162 
	gbuf
[2] +
c
;

163 
	gbuf
[3] +
d
;

166 
	gMD5
::
MD5
()

168 
m_buf
[0] = 0x67452301;

169 
	gm_buf
[1] = 0xefcdab89;

170 
	gm_buf
[2] = 0x98badcfe;

171 
	gm_buf
[3] = 0x10325476;

172 
	gm_bôs
[0] = 0;

173 
	gm_bôs
[1] = 0;

174 
mem£t
(
m_ö
, 0, (m_in));

175 
ASSERT_WITH_MESSAGE
(!(
ªöãΩªt_ˇ°
<
uöçå_t
>(
m_ö
Ë% (
uöt32_t
)), "alignmentÉrror of m_in");

178 
	gMD5
::
addByãs
(c⁄° 
uöt8_t
* 
öput
, 
size_t
 
Àngth
)

180 c⁄° 
uöt8_t
* 
	gbuf
 = 
öput
;

183 
uöt32_t
 
	gt
 = 
m_bôs
[0];

184 
	gm_bôs
[0] = 
t
 + (
Àngth
 << 3);

185 i‡(
	gm_bôs
[0] < 
	gt
)

186 
	gm_bôs
[1]++;

187 
	gm_bôs
[1] +
Àngth
 >> 29;

189 
	gt
 = (
t
 >> 3) & 0x3f;

193 i‡(
	gt
) {

194 
uöt8_t
* 
	gp
 = 
m_ö
 + 
t
;

196 
	gt
 = 64 - 
t
;

197 i‡(
	gÀngth
 < 
	gt
) {

198 
mem˝y
(
p
, 
buf
, 
Àngth
);

201 
mem˝y
(
p
, 
buf
, 
t
);

202 
toLôéeEndün
(
m_ö
, 16);

203 
MD5Tønsf‹m
(
m_buf
, 
ªöãΩªt_ˇ°_±r
<
uöt32_t
*>(
m_ö
));

204 
	gbuf
 +
t
;

205 
	gÀngth
 -
t
;

210 
	gÀngth
 >= 64) {

211 
mem˝y
(
m_ö
, 
buf
, 64);

212 
toLôéeEndün
(
m_ö
, 16);

213 
MD5Tønsf‹m
(
m_buf
, 
ªöãΩªt_ˇ°_±r
<
uöt32_t
*>(
m_ö
));

214 
	gbuf
 += 64;

215 
	gÀngth
 -= 64;

219 
mem˝y
(
m_ö
, 
buf
, 
Àngth
);

222 
	gMD5
::
checksum
(
Dige°
& 
dige°
)

225 
cou¡
 = (
m_bôs
[0] >> 3) & 0x3F;

229 
uöt8_t
* 
	gp
 = 
m_ö
 + 
cou¡
;

230 *
	gp
++ = 0x80;

233 
	gcou¡
 = 64 - 1 - 
cou¡
;

236 i‡(
	gcou¡
 < 8) {

238 
mem£t
(
p
, 0, 
cou¡
);

239 
toLôéeEndün
(
m_ö
, 16);

240 
MD5Tønsf‹m
(
m_buf
, 
ªöãΩªt_ˇ°_±r
<
uöt32_t
 *>(
m_ö
));

243 
mem£t
(
m_ö
, 0, 56);

246 
mem£t
(
p
, 0, 
cou¡
 - 8);

248 
toLôéeEndün
(
m_ö
, 14);

251 
mem˝y
(
m_ö
 + 56, 
m_bôs
, (m_bits));

253 
MD5Tønsf‹m
(
m_buf
, 
ªöãΩªt_ˇ°_±r
<
uöt32_t
*>(
m_ö
));

254 
toLôéeEndün
(
ªöãΩªt_ˇ°
<
uöt8_t
*>(
m_buf
), 4);

257 
uöt8_t
* 
	gmBufUI¡8
 = 
ªöãΩªt_ˇ°
<uöt8_t*>(
m_buf
);

258 
size_t
 
	gi
 = 0; i < 
	ghashSize
; ++i)

259 
	gdige°
[
i
] = 
mBufUI¡8
[i];

262 
mem£t
(
m_buf
, 0, (m_buf));

263 
mem£t
(
m_bôs
, 0, (m_bits));

264 
mem£t
(
m_ö
, 0, (m_in));

	@MD5.h

31 #i‚de‡
WTF_MD5_h


32 
	#WTF_MD5_h


	)

34 
	~<¨øy
>

35 
	~<wtf/Ve˘‹.h
>

37 
«me•a˚
 
	gWTF
 {

39 ˛as†
	cMD5
 {

40 
	gpublic
:

41 
WTF_EXPORT_PRIVATE
 
MD5
();

43 
addByãs
(c⁄° 
Ve˘‹
<
uöt8_t
>& 
öput
)

45 
addByãs
(
öput
.
d©a
(), i≈ut.
size
());

47 
WTF_EXPORT_PRIVATE
 
addByãs
(c⁄° 
uöt8_t
* 
öput
, 
size_t
 
Àngth
);

50 
WTF_EXPORT_PRIVATE
 c⁄° 
size_t
 
	ghashSize
 = 16;

53 
	g°d
::
	t¨øy
<
	tuöt8_t
, 
	thashSize
> 
	tDige°
;

56 
WTF_EXPORT_PRIVATE
 
checksum
(
Dige°
&);

58 
	g¥iv©e
:

59 
uöt32_t
 
m_buf
[4];

60 
uöt32_t
 
	gm_bôs
[2];

61 
uöt8_t
 
	gm_ö
[64];

66 
usög
 
	gWTF
::
MD5
;

	@MainThread.cpp

29 
	~"c⁄fig.h
"

30 
	~"MaöThªad.h
"

32 
	~"CuºítTime.h
"

33 
	~"Deque.h
"

34 
	~"Fun˘i⁄Æ.h
"

35 
	~"StdLibExåas.h
"

36 
	~<muãx
>

37 
	~<wtf/NevîDe°royed.h
>

38 
	~<wtf/ThªadS≥cific.h
>

40 
«me•a˚
 
	gWTF
 {

42 
	sFun˘i⁄WôhC⁄ãxt
 {

43 
MaöThªadFun˘i⁄
* 
	gfun˘i⁄
;

44 * 
	gc⁄ãxt
;

46 
Fun˘i⁄WôhC⁄ãxt
(
MaöThªadFun˘i⁄
* 
fun˘i⁄
 = 
nuŒ±r
, * 
c⁄ãxt
 =Çullptr)

47 : 
fun˘i⁄
(function)

48 , 
c⁄ãxt
(context)

51 
boﬁ
 
	g›î©‹
 =(c⁄° 
Fun˘i⁄WôhC⁄ãxt
& 
o
)

53  
fun˘i⁄
 =
o
.fun˘i⁄ && 
c⁄ãxt
 == o.context;

57 ˛as†
	cFun˘i⁄WôhC⁄ãxtFödî
 {

58 
	gpublic
:

59 
Fun˘i⁄WôhC⁄ãxtFödî
(c⁄° 
Fun˘i⁄WôhC⁄ãxt
& 
m
) : m(m) {}

60 
boﬁ
 
›î©‹
(Ë(
Fun˘i⁄WôhC⁄ãxt
& 
o
Ë{  o =
m
; }

61 
Fun˘i⁄WôhC⁄ãxt
 
	gm
;

65 
	gDeque
<
	tFun˘i⁄WôhC⁄ãxt
> 
	tFun˘i⁄Queue
;

67 
boﬁ
 
	gˇŒbacksPau£d
;

68 #i‡!
OS
(
DARWIN
Ë|| 
PLATFORM
(
EFL
Ë|| 
	$PLATFORM
(
GTK
)

69 
ThªadIdítifõr
 
maöThªadIdítifõr
;

72 
°d
::
muãx
& 
	$maöThªadFun˘i⁄QueueMuãx
()

74 
NevîDe°royed
<
°d
::
muãx
> mutex;

76  
muãx
;

77 
	}
}

79 
	gFun˘i⁄Queue
& 
	$fun˘i⁄Queue
()

81 
NevîDe°royed
<
Fun˘i⁄Queue
> 
fun˘i⁄Queue
;

82  
fun˘i⁄Queue
;

83 
	}
}

86 #i‡!
OS
(
DARWIN
Ë|| 
PLATFORM
(
EFL
Ë|| 
	$PLATFORM
(
GTK
)

88 
	$öôülizeMaöThªad
()

90 
boﬁ
 
öôülizedMaöThªad
;

91 i‡(
öôülizedMaöThªad
)

93 
öôülizedMaöThªad
 = 
åue
;

95 
maöThªadIdítifõr
 = 
	`cuºítThªad
();

97 
	`maöThªadFun˘i⁄QueueMuãx
();

98 
	`öôülizeMaöThªadPœtf‹m
();

99 
	`öôülizeGCThªads
();

100 
	}
}

104 
±hªad_⁄˚_t
 
	göôülizeMaöThªadKeyOn˚
 = 
PTHREAD_ONCE_INIT
;

106 
	$öôülizeMaöThªadOn˚
()

108 
	`maöThªadFun˘i⁄QueueMuãx
();

109 
	`öôülizeMaöThªadPœtf‹m
();

110 
	}
}

112 
	$öôülizeMaöThªad
()

114 
	`±hªad_⁄˚
(&
öôülizeMaöThªadKeyOn˚
, 
öôülizeMaöThªadOn˚
);

115 
	}
}

117 #i‡!
	$USE
(
WEB_THREAD
)

118 
	$öôülizeMaöThªadToPro˚ssMaöThªadOn˚
()

120 
	`maöThªadFun˘i⁄QueueMuãx
();

121 
	`öôülizeMaöThªadToPro˚ssMaöThªadPœtf‹m
();

122 
	}
}

124 
	$öôülizeMaöThªadToPro˚ssMaöThªad
()

126 
	`±hªad_⁄˚
(&
öôülizeMaöThªadKeyOn˚
, 
öôülizeMaöThªadToPro˚ssMaöThªadOn˚
);

127 
	}
}

129 
±hªad_⁄˚_t
 
	göôülizeWebThªadKeyOn˚
 = 
PTHREAD_ONCE_INIT
;

131 
	$öôülizeWebThªadOn˚
()

133 
	`öôülizeWebThªadPœtf‹m
();

134 
	}
}

136 
	$öôülizeWebThªad
()

138 
	`±hªad_⁄˚
(&
öôülizeWebThªadKeyOn˚
, 
öôülizeWebThªadOn˚
);

139 
	}
}

145 c⁄°áutÿ
	gmaxRunLo›Su•ísi⁄Time
 = 
°d
::
chr⁄o
::
mûli£c⁄ds
(50);

147 
	$di•©chFun˘i⁄sFromMaöThªad
()

149 
	`ASSERT
(
	`isMaöThªad
());

151 i‡(
ˇŒbacksPau£d
)

154 autÿ
°¨tTime
 = 
°d
::
chr⁄o
::
°ódy_˛ock
::
	`now
();

156 
Fun˘i⁄WôhC⁄ãxt
 
övoˇti⁄
;

157 
åue
) {

159 
°d
::
lock_gu¨d
<°d::
muãx
> 
	`lock
(
	`maöThªadFun˘i⁄QueueMuãx
());

160 i‡(!
	`fun˘i⁄Queue
().
	`size
())

162 
övoˇti⁄
 = 
	`fun˘i⁄Queue
().
	`èkeFú°
();

165 
övoˇti⁄
.
	`fun˘i⁄
(övoˇti⁄.
c⁄ãxt
);

171 i‡(
°d
::
chr⁄o
::
°ódy_˛ock
::
	`now
(Ë- 
°¨tTime
 > 
maxRunLo›Su•ísi⁄Time
) {

172 
	`scheduÀDi•©chFun˘i⁄sOnMaöThªad
();

176 
	}
}

178 
	$ˇŒOnMaöThªad
(
MaöThªadFun˘i⁄
* 
fun˘i⁄
, * 
c⁄ãxt
)

180 
	`ASSERT
(
fun˘i⁄
);

181 
boﬁ
 
√edToScheduÀ
 = 
Ál£
;

183 
°d
::
lock_gu¨d
<°d::
muãx
> 
	`lock
(
	`maöThªadFun˘i⁄QueueMuãx
());

184 
√edToScheduÀ
 = 
	`fun˘i⁄Queue
().
	`size
() == 0;

185 
	`fun˘i⁄Queue
().
	`≠≥nd
(
	`Fun˘i⁄WôhC⁄ãxt
(
fun˘i⁄
, 
c⁄ãxt
));

187 i‡(
√edToScheduÀ
)

188 
	`scheduÀDi•©chFun˘i⁄sOnMaöThªad
();

189 
	}
}

191 
	$ˇn˚lCÆlOnMaöThªad
(
MaöThªadFun˘i⁄
* 
fun˘i⁄
, * 
c⁄ãxt
)

193 
	`ASSERT
(
fun˘i⁄
);

195 
°d
::
lock_gu¨d
<°d::
muãx
> 
	`lock
(
	`maöThªadFun˘i⁄QueueMuãx
());

197 
Fun˘i⁄WôhC⁄ãxtFödî
 
	`¥ed
(
	`Fun˘i⁄WôhC⁄ãxt
(
fun˘i⁄
, 
c⁄ãxt
));

199 
åue
) {

202 
Fun˘i⁄Queue
::
ôî©‹
 
	`i
(
	`fun˘i⁄Queue
().
	`födIf
(
¥ed
));

203 i‡(
i
 =
	`fun˘i⁄Queue
().
	`íd
())

205 
	`fun˘i⁄Queue
().
	`ªmove
(
i
);

207 
	}
}

209 
	$ˇŒFun˘i⁄Obje˘
(* 
c⁄ãxt
)

211 autÿ
fun˘i⁄
 = 
°d
::
unique_±r
<°d::fun˘i⁄<()>>(
°©ic_ˇ°
<°d::fun˘i⁄<()>*>(
c⁄ãxt
));

212 (*
fun˘i⁄
)();

213 
	}
}

215 
ˇŒOnMaöThªad
(
°d
::
fun˘i⁄
<()> function)

217 
ˇŒOnMaöThªad
(
ˇŒFun˘i⁄Obje˘
, 
°d
::
make_unique
<°d::
fun˘i⁄
<()>>(
WTF
::
move
(fun˘i⁄)).
ªÀa£
());

220 
	$£tMaöThªadCÆlbacksPau£d
(
boﬁ
 
∑u£d
)

222 
	`ASSERT
(
	`isMaöThªad
());

224 i‡(
ˇŒbacksPau£d
 =
∑u£d
)

227 
ˇŒbacksPau£d
 = 
∑u£d
;

229 i‡(!
ˇŒbacksPau£d
)

230 
	`scheduÀDi•©chFun˘i⁄sOnMaöThªad
();

231 
	}
}

233 #i‡!
OS
(
DARWIN
Ë|| 
PLATFORM
(
EFL
Ë|| 
	$PLATFORM
(
GTK
)

234 
boﬁ
 
	$isMaöThªad
()

236  
	`cuºítThªad
(Ë=
maöThªadIdítifõr
;

237 
	}
}

240 #i‡!
	$USE
(
WEB_THREAD
)

241 
boﬁ
 
	$ˇnAc˚ssThªadLoˇlD©aF‹Thªad
(
ThªadIdítifõr
 
thªadId
)

243  
thªadId
 =
	`cuºítThªad
();

244 
	}
}

247 #i‡
	$ENABLE
(
PARALLEL_GC
)

248 
ThªadS≥cific
<
boﬁ
>* 
isGCThªad
;

251 
	$öôülizeGCThªads
()

253 #i‡
	`ENABLE
(
PARALLEL_GC
)

254 
isGCThªad
 = 
√w
 
ThªadS≥cific
<
boﬁ
>();

256 
	}
}

258 #i‡
	$ENABLE
(
PARALLEL_GC
)

259 
	$ªgi°îGCThªad
()

261 i‡(!
isGCThªad
) {

267 **
isGCThªad
 = 
åue
;

268 
	}
}

270 
boﬁ
 
	$isMaöThªadOrGCThªad
()

272 i‡(
isGCThªad
->
	`isSë
() && **isGCThread)

273  
åue
;

275  
	`isMaöThªad
();

276 
	}
}

277 #ñi‡
OS
(
DARWIN
Ë&& !
PLATFORM
(
EFL
Ë&& !
	$PLATFORM
(
GTK
)

279 
boﬁ
 
	$isMaöThªadOrGCThªad
()

281  
	`isMaöThªad
();

282 
	}
}

	@MainThread.h

30 #i‚de‡
MaöThªad_h


31 
	#MaöThªad_h


	)

33 
	~<fun˘i⁄Æ
>

34 
	~<°döt.h
>

36 
«me•a˚
 
	gWTF
 {

38 
uöt32_t
 
	tThªadIdítifõr
;

39 
	tMaöThªadFun˘i⁄
(*);

42 
WTF_EXPORT_PRIVATE
 
öôülizeMaöThªad
();

44 
WTF_EXPORT_PRIVATE
 
ˇŒOnMaöThªad
(
MaöThªadFun˘i⁄
*, * 
c⁄ãxt
);

45 
WTF_EXPORT_PRIVATE
 
ˇn˚lCÆlOnMaöThªad
(
MaöThªadFun˘i⁄
*, * 
c⁄ãxt
);

47 
WTF_EXPORT_PRIVATE
 
ˇŒOnMaöThªad
(
°d
::
fun˘i⁄
<()>);

49 
WTF_EXPORT_PRIVATE
 
£tMaöThªadCÆlbacksPau£d
(
boﬁ
 
∑u£d
);

51 
WTF_EXPORT_PRIVATE
 
boﬁ
 
isMaöThªad
();

53 
WTF_EXPORT_PRIVATE
 
boﬁ
 
ˇnAc˚ssThªadLoˇlD©aF‹Thªad
(
ThªadIdítifõr
);

55 #i‡
USE
(
WEB_THREAD
)

56 
WTF_EXPORT_PRIVATE
 
boﬁ
 
isWebThªad
();

57 
WTF_EXPORT_PRIVATE
 
boﬁ
 
isUIThªad
();

58 
WTF_EXPORT_PRIVATE
 
öôülizeWebThªad
();

59 
WTF_EXPORT_PRIVATE
 
öôülizeAµliˇti⁄UIThªadIdítifõr
();

60 
WTF_EXPORT_PRIVATE
 
öôülizeWebThªadIdítifõr
();

61 
öôülizeWebThªadPœtf‹m
();

63 
ölöe
 
boﬁ
 
isWebThªad
(Ë{  
isMaöThªad
(); }

64 
ölöe
 
boﬁ
 
isUIThªad
(Ë{  
isMaöThªad
(); }

67 
öôülizeGCThªads
();

69 #i‡
ENABLE
(
PARALLEL_GC
)

70 
ªgi°îGCThªad
();

71 
WTF_EXPORT_PRIVATE
 
boﬁ
 
isMaöThªadOrGCThªad
();

72 #ñi‡
OS
(
DARWIN
Ë&& !
PLATFORM
(
EFL
Ë&& !PLATFORM(
GTK
)

73 
WTF_EXPORT_PRIVATE
 
boﬁ
 
isMaöThªadOrGCThªad
();

75 
ölöe
 
boﬁ
 
isMaöThªadOrGCThªad
(Ë{  
isMaöThªad
(); }

79 
öôülizeMaöThªadPœtf‹m
();

80 
scheduÀDi•©chFun˘i⁄sOnMaöThªad
();

81 
di•©chFun˘i⁄sFromMaöThªad
();

83 #i‡
OS
(
DARWIN
Ë&& !
PLATFORM
(
EFL
Ë&& !PLATFORM(
GTK
)

84 #i‡!
USE
(
WEB_THREAD
)

88 
WTF_EXPORT_PRIVATE
 
öôülizeMaöThªadToPro˚ssMaöThªad
();

90 
öôülizeMaöThªadToPro˚ssMaöThªadPœtf‹m
();

95 
usög
 
	gWTF
::
ˇŒOnMaöThªad
;

96 
usög
 
	gWTF
::
ˇn˚lCÆlOnMaöThªad
;

97 
usög
 
	gWTF
::
£tMaöThªadCÆlbacksPau£d
;

98 
usög
 
	gWTF
::
isMaöThªad
;

99 
usög
 
	gWTF
::
isMaöThªadOrGCThªad
;

100 
usög
 
	gWTF
::
ˇnAc˚ssThªadLoˇlD©aF‹Thªad
;

101 
usög
 
	gWTF
::
isUIThªad
;

102 
usög
 
	gWTF
::
isWebThªad
;

103 #i‡
USE
(
WEB_THREAD
)

104 
usög
 
	gWTF
::
öôülizeWebThªad
;

105 
usög
 
	gWTF
::
öôülizeAµliˇti⁄UIThªadIdítifõr
;

106 
usög
 
	gWTF
::
öôülizeWebThªadIdítifõr
;

	@MallocPtr.h

26 #i‚de‡
MÆlocPå_h


27 
	#MÆlocPå_h


	)

33 
«me•a˚
 
	gWTF
 {

35 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cMÆlocPå
 {

36 
	gpublic
:

37 
MÆlocPå
()

38 : 
m_±r
(
nuŒ±r
)

42 
MÆlocPå
(
°d
::
nuŒ±r_t
)

43 : 
m_±r
(
nuŒ±r
)

47 
MÆlocPå
(MÆlocPå&& 
Ÿhî
)

48 : 
m_±r
(
Ÿhî
.
ÀakPå
())

52 ~
MÆlocPå
()

54 
Á°Fªe
(
m_±r
);

57 
T
* 
gë
() const

59  
	gm_±r
;

62 
T
 *
ÀakPå
(Ë
	gWARN_UNUSED_RETURN


64 
T
* 
	g±r
 = 
m_±r
;

65 
	gm_±r
 = 
nuŒ±r
;

66  
	g±r
;

69 
boﬁ
 
	g›î©‹
!() const

71  !
	gm_±r
;

74 
	gMÆlocPå
& 
	g›î©‹
=(
MÆlocPå
&& 
Ÿhî
)

76 
MÆlocPå
 
±r
 = 
WTF
::
move
(
Ÿhî
);

77 
sw≠
(
±r
);

79  *
	gthis
;

82 
sw≠
(
MÆlocPå
& 
Ÿhî
)

84 
	g°d
::
sw≠
(
m_±r
, 
Ÿhî
.m_ptr);

87 
	gãm∂©e
<
ty≥«me
 
	gU
> 
‰õnd
 
	gMÆlocPå
<U> 
ad›tMÆlocPå
(
U
*);

89 
MÆlocPå
 
mÆloc
(
size_t
 
size
)

91 
MÆlocPå
 
	gmÆlocPå
;

92 
	gmÆlocPå
.
	gm_±r
 = 
°©ic_ˇ°
<
T
*>(
Á°MÆloc
(
size
));

94  
	gmÆlocPå
;

97 
ªÆloc
(
size_t
 
√wSize
)

99 
	gm_±r
 = 
°©ic_ˇ°
<
T
*>(
Á°RóŒoc
(
m_±r
, 
√wSize
));

102 
	g¥iv©e
:

103 
ex∂icô
 
MÆlocPå
(
T
* 
±r
)

104 : 
m_±r
(
±r
)

108 
T
* 
m_±r
;

111 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gMÆlocPå
<U> 
	$ad›tMÆlocPå
(
U
* 
±r
)

113  
MÆlocPå
<
U
>(
±r
);

114 
	}
}

118 
usög
 
	gWTF
::
MÆlocPå
;

119 
usög
 
	gWTF
::
ad›tMÆlocPå
;

	@MathExtras.h

26 #i‚de‡
WTF_M©hExåas_h


27 
	#WTF_M©hExåas_h


	)

29 
	~<Æg‹ôhm
>

30 
	~<cm©h
>

31 
	~<Êﬂt.h
>

32 
	~<limôs
>

33 
	~<°döt.h
>

34 
	~<°dlib.h
>

35 
	~<wtf/StdLibExåas.h
>

37 #i‡
OS
(
SOLARIS
)

38 
	~<õìÂ.h
>

41 #i‡
OS
(
OPENBSD
)

42 
	~<sys/ty≥s.h
>

43 
	~<machöe/õì.h
>

46 #i‚de‡
M_PI


47 c⁄° 
	gpiDoubÀ
 = 3.14159265358979323846;

48 c⁄° 
	gpiFlﬂt
 = 3.14159265358979323846f;

50 c⁄° 
	gpiDoubÀ
 = 
M_PI
;

51 c⁄° 
	gpiFlﬂt
 = 
°©ic_ˇ°
<>(
M_PI
);

54 #i‚de‡
M_PI_2


55 c⁄° 
	gpiOvîTwoDoubÀ
 = 1.57079632679489661923;

56 c⁄° 
	gpiOvîTwoFlﬂt
 = 1.57079632679489661923f;

58 c⁄° 
	gpiOvîTwoDoubÀ
 = 
M_PI_2
;

59 c⁄° 
	gpiOvîTwoFlﬂt
 = 
°©ic_ˇ°
<>(
M_PI_2
);

62 #i‚de‡
M_PI_4


63 c⁄° 
	gpiOvîFourDoubÀ
 = 0.785398163397448309616;

64 c⁄° 
	gpiOvîFourFlﬂt
 = 0.785398163397448309616f;

66 c⁄° 
	gpiOvîFourDoubÀ
 = 
M_PI_4
;

67 c⁄° 
	gpiOvîFourFlﬂt
 = 
°©ic_ˇ°
<>(
M_PI_4
);

70 #i‡
OS
(
DARWIN
)

73 
ölöe
 
	$wtf_˚û
(
x
Ë{  
	`c›ysign
(
	`˚û
(x), x); 
	}
}

75 
	#˚û
(
x
Ë
	`wtf_˚û
(x)

	)

79 #i‡
OS
(
SOLARIS
)

81 
«me•a˚
 
	g°d
 {

83 #i‚de‡
isföôe


84 
ölöe
 
boﬁ
 
isföôe
(
x
Ë{  
föôe
(xË&& !
i¢™d
(x); }

86 #i‚de‡
signbô


87 
ölöe
 
boﬁ
 
signbô
(
x
Ë{  
c›ysign
(1.0, x) < 0; }

89 #i‚de‡
isöf


90 
ölöe
 
boﬁ
 
isöf
(
x
Ë{  !
föôe
(xË&& !
i¢™d
(x); }

97 #i‡
OS
(
OPENBSD
)

99 
«me•a˚
 
	g°d
 {

101 #i‚de‡
isföôe


102 
ölöe
 
boﬁ
 
isföôe
(
x
Ë{  
föôe
(x); }

104 #i‚de‡
signbô


105 
ölöe
 
boﬁ
 
signbô
(
x
Ë{ 
õì_doubÀ
 *
	gp
 = (õì_doubÀ *)&x; Ö->
	gdbl_sign
; }

112 #i‡
COMPILER
(
MSVC
)

115 "C" 
ölöe
 
	$wtf_©™2
(
x
, 
y
)

117 
posInf
 = 
°d
::
numîic_limôs
<>::
	`öföôy
();

118 
√gInf
 = -
°d
::
numîic_limôs
<>::
	`öföôy
();

119 
«n
 = 
°d
::
numîic_limôs
<>::
	`quõt_NaN
();

121 
ªsu…
 = 
«n
;

123 i‡(
x
 =
posInf
 && 
y
 ==ÖosInf)

124 
ªsu…
 = 
piOvîFourDoubÀ
;

125 i‡(
x
 =
posInf
 && 
y
 =
√gInf
)

126 
ªsu…
 = 3 * 
piOvîFourDoubÀ
;

127 i‡(
x
 =
√gInf
 && 
y
 =
posInf
)

128 
ªsu…
 = -
piOvîFourDoubÀ
;

129 i‡(
x
 =
√gInf
 && 
y
 ==ÇegInf)

130 
ªsu…
 = -3 * 
piOvîFourDoubÀ
;

132 
ªsu…
 = ::
	`©™2
(
x
, 
y
);

134  
ªsu…
;

135 
	}
}

138 "C" 
ölöe
 
	$wtf_fmod
(
x
, 
y
Ë{  (!
°d
::
	`isöf
(xË&& std::isöf(y)Ë? x : 
	`fmod
(x, y); 
	}
}

141 "C" 
ölöe
 
	$wtf_pow
(
x
, 
y
Ë{  y =0 ? 1 : 
	`pow
(x, y); 
	}
}

143 
	#©™2
(
x
, 
y
Ë
	`wtf_©™2
(x, y)

	)

144 
	#fmod
(
x
, 
y
Ë
	`wtf_fmod
(x, y)

	)

145 
	#pow
(
x
, 
y
Ë
	`wtf_pow
(x, y)

	)

149 
ölöe
 
	$deg2ød
(
d
Ë{  d * 
piDoubÀ
 / 180.0; 
	}
}

150 
ölöe
 
	$ød2deg
(
r
Ë{ Ñ * 180.0 / 
piDoubÀ
; 
	}
}

151 
ölöe
 
	$deg2gød
(
d
Ë{  d * 400.0 / 360.0; 
	}
}

152 
ölöe
 
	$gød2deg
(
g
Ë{  g * 360.0 / 400.0; 
	}
}

153 
ölöe
 
	$tu∫2deg
(
t
Ë{ Å * 360.0; 
	}
}

154 
ölöe
 
	$deg2tu∫
(
d
Ë{  d / 360.0; 
	}
}

155 
ölöe
 
	$ød2gød
(
r
Ë{ Ñ * 200.0 / 
piDoubÀ
; 
	}
}

156 
ölöe
 
	$gød2ød
(
g
Ë{  g * 
piDoubÀ
 / 200.0; 
	}
}

158 
ölöe
 
	$deg2ød
(
d
Ë{  d * 
piFlﬂt
 / 180.0f; 
	}
}

159 
ölöe
 
	$ød2deg
(
r
Ë{ Ñ * 180.0‡/ 
piFlﬂt
; 
	}
}

160 
ölöe
 
	$deg2gød
(
d
Ë{  d * 400.0‡/ 360.0f; 
	}
}

161 
ölöe
 
	$gød2deg
(
g
Ë{  g * 360.0‡/ 400.0f; 
	}
}

162 
ölöe
 
	$tu∫2deg
(
t
Ë{ Å * 360.0f; 
	}
}

163 
ölöe
 
	$deg2tu∫
(
d
Ë{  d / 360.0f; 
	}
}

164 
ölöe
 
	$ød2gød
(
r
Ë{ Ñ * 200.0‡/ 
piFlﬂt
; 
	}
}

165 
ölöe
 
	$gød2ød
(
g
Ë{  g * 
piFlﬂt
 / 200.0f; 
	}
}

168 
ãm∂©e
<
ty≥«me
 
T
> 
ölöe
 T 
	$deÁu…MöimumF‹Cœmp
(Ë{  
°d
::
numîic_limôs
<
T
>::
	`mö
(); 
	}
}

169 
ãm∂©e
<> 
ölöe
 
	$deÁu…MöimumF‹Cœmp
(Ë{  -
°d
::
numîic_limôs
<>::
	`max
(); 
	}
}

170 
ãm∂©e
<> 
ölöe
 
	$deÁu…MöimumF‹Cœmp
(Ë{  -
°d
::
numîic_limôs
<>::
	`max
(); 
	}
}

171 
ãm∂©e
<
ty≥«me
 
T
> 
ölöe
 T 
	$deÁu…MaximumF‹Cœmp
(Ë{  
°d
::
numîic_limôs
<
T
>::
	`max
(); 
	}
}

173 
ãm∂©e
<
ty≥«me
 
T
> 
ölöe
 T 
˛ampTo
(
vÆue
, T 
mö
 = 
deÁu…MöimumF‹Cœmp
<T>(), T 
max
 = 
deÁu…MaximumF‹Cœmp
<T>())

175 i‡(
vÆue
 >
°©ic_ˇ°
<>(
max
))

176  
max
;

177 i‡(
vÆue
 <
°©ic_ˇ°
<>(
mö
))

178  
mö
;

179  
°©ic_ˇ°
<
T
>(
vÆue
);

181 
ãm∂©e
<> 
ölöe
 
˛ampTo
(, , );

183 
ölöe
 
	$˛ampToI¡egî
(
vÆue
)

185  
˛ampTo
<>(
vÆue
);

186 
	}
}

188 
ölöe
 
	$˛ampToUnsig√d
(
vÆue
)

190  
˛ampTo
<>(
vÆue
);

191 
	}
}

193 
ölöe
 
	$˛ampToFlﬂt
(
vÆue
)

195  
˛ampTo
<>(
vÆue
);

196 
	}
}

198 
ölöe
 
	$˛ampToPosôiveI¡egî
(
vÆue
)

200  
˛ampTo
<>(
vÆue
, 0);

201 
	}
}

203 
ölöe
 
	$˛ampToI¡egî
(
vÆue
)

205  
˛ampTo
<>(
vÆue
);

206 
	}
}

208 
ölöe
 
	$˛ampToI¡egî
(
x
)

210 c⁄° 
ötMax
 = 
°©ic_ˇ°
<>(
°d
::
numîic_limôs
<>::
	`max
());

212 i‡(
x
 >
ötMax
)

213  
°d
::
numîic_limôs
<>::
	`max
();

214  
°©ic_ˇ°
<>(
x
);

215 
	}
}

217 
ölöe
 
boﬁ
 
	$isWôhöI¡R™ge
(
x
)

219  
x
 > 
°©ic_ˇ°
<>(
°d
::
numîic_limôs
<>::
	`mö
()Ë&& x < sètic_ˇ°<>(°d::numîic_limôs<>::
	`max
());

220 
	}
}

222 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
boﬁ
 
	$hasO√BôSë
(
T
 
vÆue
)

224  !((
vÆue
 - 1) & value) && value;

225 
	}
}

227 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
boﬁ
 
	$hasZîoOrO√BôsSë
(
T
 
vÆue
)

229  !((
vÆue
 - 1) & value);

230 
	}
}

232 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
boﬁ
 
	$hasTwoOrM‹eBôsSë
(
T
 
vÆue
)

234  !
	`hasZîoOrO√BôsSë
(
vÆue
);

235 
	}
}

237 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
	$gëLSBSë
(
T
 
vÆue
)

239 
ªsu…
 = 0;

241 
vÆue
 >>= 1)

242 ++
ªsu…
;

244  
ªsu…
;

245 
	}
}

247 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
T
 
	$divideRoundedUp
(
T
 
a
, T 
b
)

249  (
a
 + 
b
 - 1) / b;

250 
	}
}

252 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
T
 
	$timesThªePlusO√DividedByTwo
(
T
 
vÆue
)

259  
vÆue
 + (value >> 1) + (value & 1);

260 
	}
}

262 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
boﬁ
 
	$isNŸZîoAndOrdîed
(
T
 
vÆue
)

264  
vÆue
 > 0.0 || value < 0.0;

265 
	}
}

267 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
boﬁ
 
	$isZîoOrUn‹dîed
(
T
 
vÆue
)

269  !
	`isNŸZîoAndOrdîed
(
vÆue
);

270 
	}
}

272 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
boﬁ
 
	$isGª©îTh™N⁄ZîoPowîOfTwo
(
T
 
vÆue
, 
powî
)

276  !!((
vÆue
 >> 1Ë>> (
powî
 - 1));

277 
	}
}

279 #i‚de‡
UINT64_C


280 #i‡
COMPILER
(
MSVC
)

281 
	#UINT64_C
(
c
Ë¯## 
ui64


	)

283 
	#UINT64_C
(
c
Ë¯## 
uŒ


	)

287 #i‡
COMPILER
(
MINGW64
Ë&& (!
deföed
(
__MINGW64_VERSION_RC
) || __MINGW64_VERSION_RC < 1)

288 
ölöe
 
	$wtf_pow
(
x
, 
y
)

292 i‡((
x
 =0.0 || 
°d
::
	`isöf
(x)Ë&& std::
	`isföôe
(
y
)) {

293 
f
;

294 i‡(
	`modf
(
y
, &
f
) != 0.0)

295  ((
x
 =0.0Ë^ (
y
 > 0.0)Ë? 
°d
::
numîic_limôs
<>::
	`öföôy
() : 0.0;

298 i‡(
x
 == 2.0) {

299 
yI¡
 = 
°©ic_ˇ°
<>(
y
);

300 i‡(
y
 =
yI¡
)

301  
	`ldexp
(1.0, 
yI¡
);

304  
	`pow
(
x
, 
y
);

305 
	}
}

306 
	#pow
(
x
, 
y
Ë
	`wtf_pow
(x, y)

	)

313 
ölöe
 
	$decompo£DoubÀ
(
numbî
, 
boﬁ
& 
sign
, 
öt32_t
& 
exp⁄ít
, 
uöt64_t
& 
m™tisß
)

315 
	`ASSERT
(
°d
::
	`isföôe
(
numbî
));

317 
sign
 = 
°d
::
	`signbô
(
numbî
);

319 
uöt64_t
 
bôs
 = 
WTF
::
bôwi£_ˇ°
<uöt64_t>(
numbî
);

320 
exp⁄ít
 = (
°©ic_ˇ°
<
öt32_t
>(
bôs
 >> 52) & 0x7ff) - 0x3ff;

321 
m™tisß
 = 
bôs
 & 0xFFFFFFFFFFFFFull;

325 i‡(
exp⁄ít
 == -0x3ff)

326 
exp⁄ít
 = 
m™tisß
 ? -0x3fe : 0;

328 
m™tisß
 |= 0x10000000000000ull;

329 
	}
}

332 
ölöe
 
	$doubÀToI¡egî
(
d
, & 
vÆue
)

334 i‡(
°d
::
	`i¢™
(
d
Ë|| std::
	`isöf
(d))

335 
vÆue
 = 0;

338 
fmodVÆue
 = 
	`fmod
(
	`åunc
(
d
), 
°d
::
numîic_limôs
<>::
	`max
() + 1.0);

339 i‡(
fmodVÆue
 >= 0) {

342 
vÆue
 = 
°©ic_ˇ°
<>(
fmodVÆue
);

346 
fmodVÆueInUnsig√dL⁄gL⁄g
 = 
°©ic_ˇ°
<>(-
fmodVÆue
);

349 
vÆue
 = 
°d
::
numîic_limôs
<>::
	`max
(Ë- 
fmodVÆueInUnsig√dL⁄gL⁄g
 + 1;

352 
	}
}

354 
«me•a˚
 
	gWTF
 {

357 
ölöe
 
uöt32_t
 
roundUpToPowîOfTwo
(uöt32_à
v
)

359 
	gv
--;

360 
	gv
 |
v
 >> 1;

361 
	gv
 |
v
 >> 2;

362 
	gv
 |
v
 >> 4;

363 
	gv
 |
v
 >> 8;

364 
	gv
 |
v
 >> 16;

365 
	gv
++;

366  
	gv
;

369 
ölöe
 
Á°Log2
(
i
)

371 
	glog2
 = 0;

372 i‡(
	gi
 & (i - 1))

373 
	glog2
 += 1;

374 i‡(
	gi
 >> 16)

375 
	glog2
 +16, 
	gi
 >>= 16;

376 i‡(
	gi
 >> 8)

377 
	glog2
 +8, 
	gi
 >>= 8;

378 i‡(
	gi
 >> 4)

379 
	glog2
 +4, 
	gi
 >>= 4;

380 i‡(
	gi
 >> 2)

381 
	glog2
 +2, 
	gi
 >>= 2;

382 i‡(
	gi
 >> 1)

383 
	glog2
 += 1;

384  
	glog2
;

	@MediaTime.cpp

29 
	~"c⁄fig.h
"

30 
	~"MedüTime.h
"

32 
	~<Æg‹ôhm
>

33 
	~<wtf/CheckedArôhmëic.h
>

34 
	~<wtf/M©hExåas.h
>

35 
	~<wtf/PrötSåóm.h
>

37 
«me•a˚
 
	gWTF
 {

39 
öt32_t
 
gª©e°Comm⁄Divis‹
(öt32_à
a
, i¡32_à
b
)

42 
öt32_t
 
	gãmp
 = 0;

43 
	gb
) {

44 
	gãmp
 = 
b
;

45 
	gb
 = 
a
 % 
b
;

46 
	ga
 = 
ãmp
;

48  
	ga
;

51 
öt32_t
 
Àa°Comm⁄Mu…ùÀ
(öt32_à
a
, i¡32_à
b
, i¡32_à&
ªsu…
)

53  
ß„Mu…ùly
(
a
, 
b
 / 
gª©e°Comm⁄Divis‹
◊, b), 
ªsu…
);

56 
öt32_t
 
signum
(
öt64_t
 
vÆ
)

58  (0 < 
	gvÆ
) - (val < 0);

61 c⁄° 
öt32_t
 
	gMedüTime
::
MaximumTimeSˇÀ
 = 0x7fffffffL;

63 
	gMedüTime
::
MedüTime
()

64 : 
m_timeVÆue
(0)

65 , 
m_timeSˇÀ
(
DeÁu…TimeSˇÀ
)

66 , 
m_timeFœgs
(
VÆid
)

70 
	gMedüTime
::
MedüTime
(
öt64_t
 
vÆue
, 
öt32_t
 
sˇÀ
, 
uöt32_t
 
Êags
)

71 : 
m_timeVÆue
(
vÆue
)

72 , 
m_timeSˇÀ
(
sˇÀ
)

73 , 
m_timeFœgs
(
Êags
)

77 
	gMedüTime
::~
MedüTime
()

81 
MedüTime
::MedüTime(c⁄° MedüTime& 
rhs
)

83 *
this
 = 
rhs
;

86 
MedüTime
 
	gMedüTime
::
¸óãWôhFlﬂt
(
ÊﬂtTime
, 
öt32_t
 
timeSˇÀ
)

88 i‡(
	gÊﬂtTime
 !
ÊﬂtTime
)

89  
övÆidTime
();

90 i‡(
	g°d
::
isöf
(
ÊﬂtTime
))

91  
°d
::
signbô
(
ÊﬂtTime
Ë? 
√g©iveInföôeTime
(Ë: 
posôiveInföôeTime
();

92 i‡(
	gÊﬂtTime
 > 
	g°d
::
numîic_limôs
<
öt64_t
>::
max
())

93  
posôiveInföôeTime
();

94 i‡(
	gÊﬂtTime
 < 
	g°d
::
numîic_limôs
<
öt64_t
>::
mö
())

95  
√g©iveInföôeTime
();

97 
ÊﬂtTime
 * 
	gtimeSˇÀ
 > 
	g°d
::
numîic_limôs
<
öt64_t
>::
max
())

98 
timeSˇÀ
 /= 2;

99  
MedüTime
(
°©ic_ˇ°
<
öt64_t
>(
ÊﬂtTime
 * 
timeSˇÀ
),ÅimeSˇÀ, 
VÆid
);

102 
MedüTime
 
	gMedüTime
::
¸óãWôhDoubÀ
(
doubÀTime
, 
öt32_t
 
timeSˇÀ
)

104 i‡(
	gdoubÀTime
 !
doubÀTime
)

105  
övÆidTime
();

106 i‡(
	g°d
::
isöf
(
doubÀTime
))

107  
°d
::
signbô
(
doubÀTime
Ë? 
√g©iveInföôeTime
(Ë: 
posôiveInföôeTime
();

108 i‡(
	gdoubÀTime
 > 
	g°d
::
numîic_limôs
<
öt64_t
>::
max
())

109  
posôiveInföôeTime
();

110 i‡(
	gdoubÀTime
 < 
	g°d
::
numîic_limôs
<
öt64_t
>::
mö
())

111  
√g©iveInföôeTime
();

113 
doubÀTime
 * 
	gtimeSˇÀ
 > 
	g°d
::
numîic_limôs
<
öt64_t
>::
max
())

114 
timeSˇÀ
 /= 2;

115  
MedüTime
(
°©ic_ˇ°
<
öt64_t
>(
doubÀTime
 * 
timeSˇÀ
),ÅimeSˇÀ, 
VÆid
);

118 
	gMedüTime
::
toFlﬂt
() const

120 i‡(
isInvÆid
(Ë|| 
isIndeföôe
())

121  
°d
::
numîic_limôs
<>::
quõt_NaN
();

122 i‡(
isPosôiveInföôe
())

123  
	g°d
::
numîic_limôs
<>::
öföôy
();

124 i‡(
isNeg©iveInföôe
())

125  -
	g°d
::
numîic_limôs
<>::
öföôy
();

126  
	g°©ic_ˇ°
<>(
	gm_timeVÆue
Ë/ 
	gm_timeSˇÀ
;

129 
	gMedüTime
::
toDoubÀ
() const

131 i‡(
isInvÆid
(Ë|| 
isIndeföôe
())

132  
°d
::
numîic_limôs
<>::
quõt_NaN
();

133 i‡(
isPosôiveInföôe
())

134  
	g°d
::
numîic_limôs
<>::
öföôy
();

135 i‡(
isNeg©iveInföôe
())

136  -
	g°d
::
numîic_limôs
<>::
öföôy
();

137  
	g°©ic_ˇ°
<>(
	gm_timeVÆue
Ë/ 
	gm_timeSˇÀ
;

140 
	gMedüTime
& MedüTime::
›î©‹
=(c⁄° 
MedüTime
& 
rhs
)

142 
m_timeVÆue
 = 
rhs
.m_timeValue;

143 
	gm_timeSˇÀ
 = 
rhs
.
m_timeSˇÀ
;

144 
	gm_timeFœgs
 = 
rhs
.
m_timeFœgs
;

145  *
	gthis
;

148 
MedüTime
 
	gMedüTime
::
›î©‹
+(c⁄° MedüTime& 
rhs
) const

150 i‡(
rhs
.
isInvÆid
() || isInvalid())

151  
övÆidTime
();

153 i‡(
	grhs
.
isIndeföôe
() || isIndefinite())

154  
ödeföôeTime
();

156 i‡(
isPosôiveInföôe
(Ë&& 
	grhs
.
isNeg©iveInföôe
())

157  
övÆidTime
();

159 i‡(
isNeg©iveInföôe
(Ë&& 
	grhs
.
isPosôiveInföôe
())

160  
övÆidTime
();

162 i‡(
isPosôiveInföôe
(Ë|| 
	grhs
.isPositiveInfinite())

163  
posôiveInföôeTime
();

165 i‡(
isNeg©iveInföôe
(Ë|| 
	grhs
.isNegativeInfinite())

166  
√g©iveInföôeTime
();

168 
öt32_t
 
	gcomm⁄TimeSˇÀ
;

169 i‡(!
Àa°Comm⁄Mu…ùÀ
(
this
->
m_timeSˇÀ
, 
rhs
.m_timeSˇÀ, 
comm⁄TimeSˇÀ
Ë|| 
	gcomm⁄TimeSˇÀ
 > 
	gMaximumTimeSˇÀ
)

170 
	gcomm⁄TimeSˇÀ
 = 
MaximumTimeSˇÀ
;

171 
MedüTime
 
	ga
 = *
this
;

172 
MedüTime
 
	gb
 = 
rhs
;

173 
	ga
.
£tTimeSˇÀ
(
comm⁄TimeSˇÀ
);

174 
	gb
.
£tTimeSˇÀ
(
comm⁄TimeSˇÀ
);

175 !
ß„Add
(
a
.
m_timeVÆue
, 
b
.m_timeValue,á.m_timeValue)) {

176 i‡(
	gcomm⁄TimeSˇÀ
 == 1)

177  
a
.
m_timeVÆue
 > 0 ? 
posôiveInföôeTime
(Ë: 
√g©iveInföôeTime
();

178 
	gcomm⁄TimeSˇÀ
 /= 2;

179 
	ga
.
£tTimeSˇÀ
(
comm⁄TimeSˇÀ
);

180 
	gb
.
£tTimeSˇÀ
(
comm⁄TimeSˇÀ
);

182  
	ga
;

185 
MedüTime
 
	gMedüTime
::
›î©‹
-(c⁄° MedüTime& 
rhs
) const

187 i‡(
rhs
.
isInvÆid
() || isInvalid())

188  
övÆidTime
();

190 i‡(
	grhs
.
isIndeföôe
() || isIndefinite())

191  
ödeföôeTime
();

193 i‡(
isPosôiveInföôe
(Ë&& 
	grhs
.isPositiveInfinite())

194  
övÆidTime
();

196 i‡(
isNeg©iveInföôe
(Ë&& 
	grhs
.isNegativeInfinite())

197  
övÆidTime
();

199 i‡(
isPosôiveInföôe
(Ë|| 
	grhs
.
isNeg©iveInföôe
())

200  
posôiveInföôeTime
();

202 i‡(
isNeg©iveInföôe
(Ë|| 
	grhs
.
isPosôiveInföôe
())

203  
√g©iveInföôeTime
();

205 
öt32_t
 
	gcomm⁄TimeSˇÀ
;

206 i‡(!
Àa°Comm⁄Mu…ùÀ
(
this
->
m_timeSˇÀ
, 
rhs
.m_timeSˇÀ, 
comm⁄TimeSˇÀ
Ë|| 
	gcomm⁄TimeSˇÀ
 > 
	gMaximumTimeSˇÀ
)

207 
	gcomm⁄TimeSˇÀ
 = 
MaximumTimeSˇÀ
;

208 
MedüTime
 
	ga
 = *
this
;

209 
MedüTime
 
	gb
 = 
rhs
;

210 
	ga
.
£tTimeSˇÀ
(
comm⁄TimeSˇÀ
);

211 
	gb
.
£tTimeSˇÀ
(
comm⁄TimeSˇÀ
);

212 !
ß„Sub
(
a
.
m_timeVÆue
, 
b
.m_timeValue,á.m_timeValue)) {

213 i‡(
	gcomm⁄TimeSˇÀ
 == 1)

214  
a
.
m_timeVÆue
 > 0 ? 
posôiveInföôeTime
(Ë: 
√g©iveInföôeTime
();

215 
	gcomm⁄TimeSˇÀ
 /= 2;

216 
	ga
.
£tTimeSˇÀ
(
comm⁄TimeSˇÀ
);

217 
	gb
.
£tTimeSˇÀ
(
comm⁄TimeSˇÀ
);

219  
	ga
;

222 
MedüTime
 
	gMedüTime
::
›î©‹
-() const

224 i‡(
isInvÆid
())

225  
övÆidTime
();

227 i‡(
isIndeföôe
())

228  
ödeföôeTime
();

230 i‡(
isPosôiveInföôe
())

231  
√g©iveInföôeTime
();

233 i‡(
isNeg©iveInföôe
())

234  
posôiveInföôeTime
();

236 
MedüTime
 
	g√g©iveTime
 = *
this
;

237 
	g√g©iveTime
.
	gm_timeVÆue
 = -
√g©iveTime
.
m_timeVÆue
;

238  
	g√g©iveTime
;

241 
MedüTime
 
	gMedüTime
::
›î©‹
*(
öt32_t
 
rhs
) const

243 i‡(
isInvÆid
())

244  
övÆidTime
();

246 i‡(
isIndeföôe
())

247  
ödeföôeTime
();

249 i‡(!
	grhs
)

250  
zîoTime
();

252 i‡(
isPosôiveInföôe
()) {

253 i‡(
	grhs
 > 0)

254  
posôiveInföôeTime
();

255  
√g©iveInföôeTime
();

258 i‡(
isNeg©iveInföôe
()) {

259 i‡(
	grhs
 > 0)

260  
√g©iveInföôeTime
();

261  
posôiveInföôeTime
();

264 
MedüTime
 
	ga
 = *
this
;

266 !
ß„Mu…ùly
(
a
.
m_timeVÆue
, 
rhs
,á.m_timeValue)) {

267 i‡(
	ga
.
	gm_timeSˇÀ
 == 1)

268  
signum
(
a
.
m_timeVÆue
Ë=signum(
rhs
Ë? 
posôiveInföôeTime
(Ë: 
√g©iveInföôeTime
();

269 
	ga
.
£tTimeSˇÀ
(
a
.
m_timeSˇÀ
 / 2);

272  
	ga
;

275 
boﬁ
 
	gMedüTime
::
›î©‹
<(c⁄° 
MedüTime
& 
rhs
) const

277  
com∑ª
(
rhs
Ë=
LessTh™
;

280 
boﬁ
 
	gMedüTime
::
›î©‹
>(c⁄° 
MedüTime
& 
rhs
) const

282  
com∑ª
(
rhs
Ë=
Gª©îTh™
;

285 
boﬁ
 
	gMedüTime
::
›î©‹
!=(c⁄° 
MedüTime
& 
rhs
) const

287  
com∑ª
(
rhs
Ë!
EquÆTo
;

290 
boﬁ
 
	gMedüTime
::
›î©‹
==(c⁄° 
MedüTime
& 
rhs
) const

292  
com∑ª
(
rhs
Ë=
EquÆTo
;

295 
boﬁ
 
	gMedüTime
::
›î©‹
>=(c⁄° 
MedüTime
& 
rhs
) const

297  
com∑ª
(
rhs
Ë>
EquÆTo
;

300 
boﬁ
 
	gMedüTime
::
›î©‹
<=(c⁄° 
MedüTime
& 
rhs
) const

302  
com∑ª
(
rhs
Ë<
EquÆTo
;

305 
boﬁ
 
	gMedüTime
::
›î©‹
!() const

307  
com∑ª
(
zîoTime
()Ë=
EquÆTo
;

310 
	gMedüTime
::
›î©‹
 
boﬁ
() const

312  
com∑ª
(
zîoTime
()Ë!
EquÆTo
;

315 
	gMedüTime
::
Com∑ris⁄Fœgs
 
MedüTime
::
com∑ª
(c⁄° MedüTime& 
rhs
) const

317 i‡((
isPosôiveInföôe
(Ë&& 
rhs
.isPositiveInfinite())

318 || (
isNeg©iveInföôe
(Ë&& 
rhs
.isNegativeInfinite())

319 || (
isInvÆid
(Ë&& 
rhs
.isInvalid())

320 || (
isIndeföôe
(Ë&& 
rhs
.isIndefinite()))

321  
EquÆTo
;

323 i‡(
isInvÆid
())

324  
	gGª©îTh™
;

326 i‡(
	grhs
.
isInvÆid
())

327  
	gLessTh™
;

329 i‡(
	grhs
.
isNeg©iveInföôe
(Ë|| 
isPosôiveInföôe
())

330  
	gGª©îTh™
;

332 i‡(
	grhs
.
isPosôiveInföôe
(Ë|| 
isNeg©iveInföôe
())

333  
	gLessTh™
;

335 i‡(
isIndeföôe
())

336  
	gGª©îTh™
;

338 i‡(
	grhs
.
isIndeföôe
())

339  
	gLessTh™
;

341 
öt64_t
 
	grhsWhﬁe
 = 
rhs
.
m_timeVÆue
 /Ñhs.
m_timeSˇÀ
;

342 
öt64_t
 
	glhsWhﬁe
 = 
m_timeVÆue
 / 
m_timeSˇÀ
;

343 i‡(
	glhsWhﬁe
 > 
	grhsWhﬁe
)

344  
	gGª©îTh™
;

345 i‡(
	glhsWhﬁe
 < 
	grhsWhﬁe
)

346  
	gLessTh™
;

348 
öt64_t
 
	grhsRemaö
 = 
rhs
.
m_timeVÆue
 %Ñhs.
m_timeSˇÀ
;

349 
öt64_t
 
	glhsRemaö
 = 
m_timeVÆue
 % 
m_timeSˇÀ
;

350 
öt64_t
 
	glhsFa˘‹
 = 
lhsRemaö
 * 
rhs
.
m_timeSˇÀ
;

351 
öt64_t
 
	grhsFa˘‹
 = 
rhsRemaö
 * 
m_timeSˇÀ
;

353 i‡(
	glhsFa˘‹
 =
rhsFa˘‹
)

354  
EquÆTo
;

355  
	glhsFa˘‹
 > 
	grhsFa˘‹
 ? 
	gGª©îTh™
 : 
LessTh™
;

358 c⁄° 
	gMedüTime
& MedüTime::
zîoTime
()

360 c⁄° 
MedüTime
* 
time
 = 
√w
 MedüTime(0, 1, 
VÆid
);

361  *
	gtime
;

364 c⁄° 
	gMedüTime
& MedüTime::
övÆidTime
()

366 c⁄° 
MedüTime
* 
time
 = 
√w
 MediaTime(-1, 1, 0);

367  *
	gtime
;

370 c⁄° 
	gMedüTime
& MedüTime::
posôiveInföôeTime
()

372 c⁄° 
MedüTime
* 
time
 = 
√w
 MedüTime(0, 1, 
PosôiveInföôe
 | 
VÆid
);

373  *
	gtime
;

376 c⁄° 
	gMedüTime
& MedüTime::
√g©iveInföôeTime
()

378 c⁄° 
MedüTime
* 
time
 = 
√w
 MedüTime(-1, 1, 
Neg©iveInföôe
 | 
VÆid
);

379  *
	gtime
;

382 c⁄° 
	gMedüTime
& MedüTime::
ödeföôeTime
()

384 c⁄° 
MedüTime
* 
time
 = 
√w
 MedüTime(0, 1, 
Indeföôe
 | 
VÆid
);

385  *
	gtime
;

388 
	gMedüTime
::
£tTimeSˇÀ
(
öt32_t
 
timeSˇÀ
)

390 i‡(
timeSˇÀ
 =
m_timeSˇÀ
)

392 
	gtimeSˇÀ
 = 
°d
::
mö
(
MaximumTimeSˇÀ
, 
timeSˇÀ
);

393 
öt64_t
 
	gwhﬁeP¨t
 = 
m_timeVÆue
 / 
m_timeSˇÀ
;

398 
öt64_t
 
	g√wWhﬁeP¨t
;

399 !
ß„Mu…ùly
(
whﬁeP¨t
, 
timeSˇÀ
, 
√wWhﬁeP¨t
))

400 
	gtimeSˇÀ
 /= 2;

402 
öt64_t
 
	gªmaödî
 = 
m_timeVÆue
 % 
m_timeSˇÀ
;

403 
	gm_timeVÆue
 = 
√wWhﬁeP¨t
 + (
ªmaödî
 * 
timeSˇÀ
Ë/ 
m_timeSˇÀ
;

404 
	gm_timeSˇÀ
 = 
timeSˇÀ
;

407 
	gMedüTime
::
dump
(
PrötSåóm
 &
out
) const

409 
out
.
¥öt
("{", 
m_timeVÆue
, "/", 
m_timeSˇÀ
, ", ", 
toDoubÀ
(), "}");

412 
MedüTime
 
abs
(c⁄° MedüTime& 
rhs
)

414 i‡(
	grhs
.
isInvÆid
())

415  
	gMedüTime
::
övÆidTime
();

416 i‡(
	grhs
.
isNeg©iveInföôe
(Ë||Ñhs.
isPosôiveInföôe
())

417  
	gMedüTime
::
posôiveInföôeTime
();

418 
MedüTime
 
	gvÆ
 = 
rhs
;

419 
	gvÆ
.
	gm_timeVÆue
 *
signum
(
rhs
.
m_timeSˇÀ
Ë* signum‘hs.
m_timeVÆue
);

420  
	gvÆ
;

	@MediaTime.h

29 #i‚de‡
WTF_MedüTime_h


30 
	#WTF_MedüTime_h


	)

32 
	~<wtf/Fa°MÆloc.h
>

34 
	~<cm©h
>

35 
	~<limôs
>

36 
	~<m©h.h
>

37 
	~<°döt.h
>

39 
«me•a˚
 
	gWTF
 {

41 
˛ass
 
	gPrötSåóm
;

43 ˛as†
	cWTF_EXPORT_PRIVATE
 
	gMedüTime
 {

44 
	gWTF_MAKE_FAST_ALLOCATED
;

45 
	gpublic
:

47 
VÆid
 = 1 << 0,

48 
	gHasBìnRounded
 = 1 << 1,

49 
	gPosôiveInföôe
 = 1 << 2,

50 
	gNeg©iveInföôe
 = 1 << 3,

51 
	gIndeföôe
 = 1 << 4,

54 
MedüTime
();

55 
MedüTime
(
öt64_t
 
vÆue
, 
öt32_t
 
sˇÀ
, 
uöt32_t
 
Êags
 = 
VÆid
);

56 
MedüTime
(c⁄° MedüTime& 
rhs
);

57 ~
MedüTime
();

59 
MedüTime
 
¸óãWôhFlﬂt
(
ÊﬂtTime
, 
öt32_t
 
timeSˇÀ
 = 
DeÁu…TimeSˇÀ
);

60 
MedüTime
 
¸óãWôhDoubÀ
(
doubÀTime
, 
öt32_t
 
timeSˇÀ
 = 
DeÁu…TimeSˇÀ
);

62 
toFlﬂt
() const;

63 
toDoubÀ
() const;

65 
	gMedüTime
& 
	g›î©‹
=(c⁄° 
MedüTime
& 
rhs
);

66 
	gMedüTime
& 
	g›î©‹
+=(c⁄° 
MedüTime
& 
rhs
Ë{  *
this
 = *this +Ñhs; }

67 
	gMedüTime
& 
	g›î©‹
-=(c⁄° 
MedüTime
& 
rhs
Ë{  *
this
 = *this -Ñhs; }

68 
MedüTime
 
	g›î©‹
+(c⁄° 
	gMedüTime
& 
	grhs
) const;

69 
MedüTime
 
	g›î©‹
-(c⁄° 
	gMedüTime
& 
	grhs
) const;

70 
MedüTime
 
	g›î©‹
-() const;

71 
MedüTime
 
	g›î©‹
*(
	göt32_t
) const;

72 
boﬁ
 
	g›î©‹
<(c⁄° 
	gMedüTime
& 
	grhs
) const;

73 
boﬁ
 
	g›î©‹
>(c⁄° 
	gMedüTime
& 
	grhs
) const;

74 
boﬁ
 
	g›î©‹
!=(c⁄° 
MedüTime
& 
rhs
) const;

75 
boﬁ
 
	g›î©‹
==(c⁄° 
MedüTime
& 
rhs
) const;

76 
boﬁ
 
	g›î©‹
>=(c⁄° 
MedüTime
& 
rhs
) const;

77 
boﬁ
 
	g›î©‹
<=(c⁄° 
MedüTime
& 
rhs
) const;

78 
boﬁ
 
	g›î©‹
!() const;

79 
ex∂icô
 
›î©‹
 
boﬁ
() const;

82 
	gLessTh™
 = -1,

83 
	gEquÆTo
 = 0,

84 
	gGª©îTh™
 = 1,

85 } 
	tCom∑ris⁄Fœgs
;

87 
Com∑ris⁄Fœgs
 
com∑ª
(c⁄° 
MedüTime
& 
rhs
) const;

89 
boﬁ
 
isVÆid
(Ëc⁄° {  
	gm_timeFœgs
 & 
	gVÆid
; }

90 
boﬁ
 
isInvÆid
(Ëc⁄° {  !
isVÆid
(); }

91 
boﬁ
 
hasBìnRounded
(Ëc⁄° {  
	gm_timeFœgs
 & 
	gHasBìnRounded
; }

92 
boﬁ
 
isPosôiveInföôe
(Ëc⁄° {  
	gm_timeFœgs
 & 
	gPosôiveInföôe
; }

93 
boﬁ
 
isNeg©iveInföôe
(Ëc⁄° {  
	gm_timeFœgs
 & 
	gNeg©iveInföôe
; }

94 
boﬁ
 
isIndeföôe
(Ëc⁄° {  
	gm_timeFœgs
 & 
	gIndeföôe
; }

96 c⁄° 
	gMedüTime
& 
zîoTime
();

97 c⁄° 
	gMedüTime
& 
övÆidTime
();

98 c⁄° 
	gMedüTime
& 
posôiveInföôeTime
();

99 c⁄° 
	gMedüTime
& 
√g©iveInföôeTime
();

100 c⁄° 
	gMedüTime
& 
ödeföôeTime
();

102 c⁄° 
	göt64_t
& 
timeVÆue
(Ëc⁄° {  
	gm_timeVÆue
; }

103 c⁄° 
	göt32_t
& 
timeSˇÀ
(Ëc⁄° {  
	gm_timeSˇÀ
; }

105 
dump
(
PrötSåóm
& 
out
) const;

108 
›î©‹
 (Ëc⁄° = 
dñëe
;

109 
MedüTime
(Ë
dñëe
;

110 
›î©‹
 (Ëc⁄° = 
dñëe
;

111 
MedüTime
(Ë
dñëe
;

113 
‰õnd
 
WTF_EXPORT_PRIVATE
 
MedüTime
 
abs
(c⁄° MedüTime& 
rhs
);

114 
	g¥iv©e
:

115 c⁄° 
öt32_t
 
DeÁu…TimeSˇÀ
 = 10000000;

116 c⁄° 
öt32_t
 
	gMaximumTimeSˇÀ
;

118 
£tTimeSˇÀ
(
öt32_t
);

120 
öt64_t
 
	gm_timeVÆue
;

121 
öt32_t
 
	gm_timeSˇÀ
;

122 
uöt32_t
 
	gm_timeFœgs
;

125 
ölöe
 
MedüTime
 
	g›î©‹
*(
öt32_t
 
	glhs
, c⁄° 
	gMedüTime
& 
	grhs
) { Ñhs.operator*(lhs); }

127 
WTF_EXPORT_PRIVATE
 
MedüTime
 
abs
(c⁄° MedüTime& 
rhs
);

130 
usög
 
	gWTF
::
MedüTime
;

131 
usög
 
	gWTF
::
abs
;

	@MessageQueue.h

30 #i‚de‡
MesßgeQueue_h


31 
	#MesßgeQueue_h


	)

33 
	~<limôs
>

34 
	~<wtf/As£πi⁄s.h
>

35 
	~<wtf/Deque.h
>

36 
	~<wtf/N⁄c›yabÀ.h
>

37 
	~<wtf/Thªadög.h
>

39 
«me•a˚
 
	gWTF
 {

41 
	eMesßgeQueueWaôResu…
 {

42 
	gMesßgeQueueTîmö©ed
,

43 
	gMesßgeQueueTimeout
,

44 
	gMesßgeQueueMesßgeRe˚ived


50 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

51 ˛as†
	cMesßgeQueue
 {

52 
WTF_MAKE_NONCOPYABLE
(
MesßgeQueue
);

53 
	gpublic
:

54 
MesßgeQueue
(Ë: 
m_kûÀd
(
Ál£
) { }

55 ~
MesßgeQueue
();

57 
≠≥nd
(
°d
::
unique_±r
<
D©aTy≥
>);

58 
≠≥ndAndKûl
(
°d
::
unique_±r
<
D©aTy≥
>);

59 
boﬁ
 
≠≥ndAndCheckEm±y
(
°d
::
unique_±r
<
D©aTy≥
>);

60 
¥ïíd
(
°d
::
unique_±r
<
D©aTy≥
>);

62 
	g°d
::
unique_±r
<
D©aTy≥
> 
waôF‹Mesßge
();

63 
	g°d
::
unique_±r
<
D©aTy≥
> 
åyGëMesßge
();

64 
	g°d
::
unique_±r
<
D©aTy≥
> 
åyGëMesßgeIgn‹ögKûÀd
();

65 
	gãm∂©e
<
ty≥«me
 
	gPªdiˇã
>

66 
	g°d
::
unique_±r
<
D©aTy≥
> 
waôF‹MesßgeFûãªdWôhTimeout
(
MesßgeQueueWaôResu…
&, 
Pªdiˇã
&&, 
absﬁuãTime
);

68 
	gãm∂©e
<
ty≥«me
 
	gPªdiˇã
>

69 
ªmoveIf
(
Pªdiˇã
&&);

71 
kûl
();

72 
boﬁ
 
kûÀd
() const;

75 
boﬁ
 
isEm±y
();

77 
öföôeTime
(Ë{  
	g°d
::
numîic_limôs
<>::
max
(); }

79 
	g¥iv©e
:

80 
muèbÀ
 
Muãx
 
m_muãx
;

81 
ThªadC⁄dôi⁄
 
	gm_c⁄dôi⁄
;

82 
	gDeque
<
	g°d
::
unique_±r
<
D©aTy≥
>> 
m_queue
;

83 
boﬁ
 
	gm_kûÀd
;

86 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

87 
	gMesßgeQueue
<
	gD©aTy≥
>::~
	$MesßgeQueue
()

89 
	}
}

91 
ãm∂©e
<
ty≥«me
 
D©aTy≥
>

92 
ölöe
 
MesßgeQueue
<
D©aTy≥
>::
≠≥nd
(
°d
::
unique_±r
<D©aTy≥> 
mesßge
)

94 
MuãxLockî
 
lock
(
m_muãx
);

95 
	gm_queue
.
≠≥nd
(
WTF
::
move
(
mesßge
));

96 
	gm_c⁄dôi⁄
.
sig«l
();

99 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

100 
ölöe
 
	gMesßgeQueue
<
	gD©aTy≥
>::
≠≥ndAndKûl
(
°d
::
unique_±r
<
D©aTy≥
> 
mesßge
)

102 
MuãxLockî
 
lock
(
m_muãx
);

103 
	gm_queue
.
≠≥nd
(
WTF
::
move
(
mesßge
));

104 
	gm_kûÀd
 = 
åue
;

105 
	gm_c⁄dôi⁄
.
brﬂdˇ°
();

109 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

110 
ölöe
 
boﬁ
 
	gMesßgeQueue
<
	gD©aTy≥
>::
≠≥ndAndCheckEm±y
(
°d
::
unique_±r
<
D©aTy≥
> 
mesßge
)

112 
MuãxLockî
 
lock
(
m_muãx
);

113 
boﬁ
 
	gwasEm±y
 = 
m_queue
.
isEm±y
();

114 
	gm_queue
.
≠≥nd
(
WTF
::
move
(
mesßge
));

115 
	gm_c⁄dôi⁄
.
sig«l
();

116  
	gwasEm±y
;

119 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

120 
ölöe
 
	gMesßgeQueue
<
	gD©aTy≥
>::
¥ïíd
(
°d
::
unique_±r
<
D©aTy≥
> 
mesßge
)

122 
MuãxLockî
 
lock
(
m_muãx
);

123 
	gm_queue
.
¥ïíd
(
WTF
::
move
(
mesßge
));

124 
	gm_c⁄dôi⁄
.
sig«l
();

127 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

128 
ölöe
áutÿ
	gMesßgeQueue
<
	gD©aTy≥
>::
waôF‹Mesßge
(Ë-> 
°d
::
unique_±r
<
D©aTy≥
>

130 
MesßgeQueueWaôResu…
 
exôRós⁄
;

131 
	g°d
::
unique_±r
<
D©aTy≥
> 
ªsu…
 = 
waôF‹MesßgeFûãªdWôhTimeout
(
exôRós⁄
, [](c⁄° D©aTy≥&Ë{  
åue
; }, 
öföôeTime
());

132 
ASSERT
(
exôRós⁄
 =
MesßgeQueueTîmö©ed
 ||ÉxôRós⁄ =
MesßgeQueueMesßgeRe˚ived
);

133  
	gªsu…
;

136 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

137 
	gãm∂©e
<
ty≥«me
 
	gPªdiˇã
>

138 
ölöe
áutÿ
	gMesßgeQueue
<
	gD©aTy≥
>::
waôF‹MesßgeFûãªdWôhTimeout
(
MesßgeQueueWaôResu…
& 
ªsu…
, 
Pªdiˇã
&& 
¥ediˇã
, 
absﬁuãTime
Ë-> 
	g°d
::
unique_±r
<
D©aTy≥
>

140 
MuãxLockî
 
lock
(
m_muãx
);

141 
boﬁ
 
	gtimedOut
 = 
Ál£
;

143 autÿ
	gfound
 = 
m_queue
.
íd
();

144 !
	gm_kûÀd
 && !
	gtimedOut
) {

145 
	gfound
 = 
m_queue
.
födIf
([&
¥ediˇã
](c⁄° 
°d
::
unique_±r
<
D©aTy≥
>& 
±r
Ë-> 
boﬁ
 {

146 
ASSERT
(
±r
);

147  
¥ediˇã
(*
±r
);

149 i‡(
	gfound
 !
m_queue
.
íd
())

152 
	gtimedOut
 = !
m_c⁄dôi⁄
.
timedWaô
(
m_muãx
, 
absﬁuãTime
);

155 
ASSERT
(!
timedOut
 || 
absﬁuãTime
 !
öföôeTime
());

157 i‡(
	gm_kûÀd
) {

158 
	gªsu…
 = 
MesßgeQueueTîmö©ed
;

159  
	gnuŒ±r
;

162 i‡(
	gtimedOut
) {

163 
	gªsu…
 = 
MesßgeQueueTimeout
;

164  
	gnuŒ±r
;

167 
ASSERT
(
found
 !
m_queue
.
íd
());

168 
	g°d
::
unique_±r
<
D©aTy≥
> 
mesßge
 = 
WTF
::
move
(*
found
);

169 
	gm_queue
.
ªmove
(
found
);

170 
	gªsu…
 = 
MesßgeQueueMesßgeRe˚ived
;

171  
	gmesßge
;

174 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

175 
ölöe
áutÿ
	gMesßgeQueue
<
	gD©aTy≥
>::
åyGëMesßge
(Ë-> 
°d
::
unique_±r
<
D©aTy≥
>

177 
MuãxLockî
 
lock
(
m_muãx
);

178 i‡(
	gm_kûÀd
)

179  
	gnuŒ±r
;

180 i‡(
	gm_queue
.
isEm±y
())

181  
	gnuŒ±r
;

183  
	gm_queue
.
èkeFú°
();

186 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

187 
ölöe
áutÿ
	gMesßgeQueue
<
	gD©aTy≥
>::
åyGëMesßgeIgn‹ögKûÀd
(Ë-> 
°d
::
unique_±r
<
D©aTy≥
>

189 
MuãxLockî
 
lock
(
m_muãx
);

190 i‡(
	gm_queue
.
isEm±y
())

191  
	gnuŒ±r
;

193  
	gm_queue
.
èkeFú°
();

196 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

197 
	gãm∂©e
<
ty≥«me
 
	gPªdiˇã
>

198 
ölöe
 
	gMesßgeQueue
<
	gD©aTy≥
>::
	$ªmoveIf
(
Pªdiˇã
&& 
¥ediˇã
)

200 
MuãxLockî
 
	`lock
(
m_muãx
);

201 
åue
) {

202 autÿ
found
 = 
m_queue
.
	`födIf
([&
¥ediˇã
](c⁄° 
°d
::
unique_±r
<
D©aTy≥
>& 
±r
Ë-> 
boﬁ
 {

203 
	`ASSERT
(
±r
);

204  
	`¥ediˇã
(*
±r
);

207 i‡(
found
 =
m_queue
.
	`íd
())

210 
m_queue
.
	`ªmove
(
found
);

212 
	}
}

214 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

215 
ölöe
 
boﬁ
 
	gMesßgeQueue
<
	gD©aTy≥
>::
	$isEm±y
()

217 
MuãxLockî
 
	`lock
(
m_muãx
);

218 i‡(
m_kûÀd
)

219  
åue
;

220  
m_queue
.
	`isEm±y
();

221 
	}
}

223 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

224 
ölöe
 
	gMesßgeQueue
<
	gD©aTy≥
>::
	$kûl
()

226 
MuãxLockî
 
	`lock
(
m_muãx
);

227 
m_kûÀd
 = 
åue
;

228 
m_c⁄dôi⁄
.
	`brﬂdˇ°
();

229 
	}
}

231 
	gãm∂©e
<
ty≥«me
 
	gD©aTy≥
>

232 
ölöe
 
boﬁ
 
	gMesßgeQueue
<
	gD©aTy≥
>::
	$kûÀd
() const

234 
MuãxLockî
 
	`lock
(
m_muãx
);

235  
m_kûÀd
;

236 
	}
}

239 
usög
 
	gWTF
::
MesßgeQueue
;

241 
usög
 
	gWTF
::
MesßgeQueueWaôResu…
;

242 
usög
 
	gWTF
::
MesßgeQueueTîmö©ed
;

243 
usög
 
	gWTF
::
MesßgeQueueTimeout
;

244 
usög
 
	gWTF
::
MesßgeQueueMesßgeRe˚ived
;

	@MetaAllocator.cpp

29 
	~"c⁄fig.h
"

30 
	~"MëaAŒoˇt‹.h
"

32 
	~<wtf/D©aLog.h
>

33 
	~<wtf/Fa°MÆloc.h
>

34 
	~<wtf/Pro˚ssID.h
>

36 
«me•a˚
 
	gWTF
 {

38 
	gMëaAŒoˇt‹
::~
MëaAŒoˇt‹
()

40 
FªeS∑˚Node
* 
node
 = 
m_‰ìS∑˚SizeM≠
.
fú°
(); 
	gnode
;) {

41 
FªeS∑˚Node
* 
	g√xt
 = 
node
->
suc˚ss‹
();

42 
	gm_‰ìS∑˚SizeM≠
.
ªmove
(
node
);

43 
‰ìFªeS∑˚Node
(
node
);

44 
	gnode
 = 
√xt
;

46 
	gm_lock
.
FöÆize
();

47 #i‚de‡
NDEBUG


48 
ASSERT
(!
m_mÆlocBÆ™˚
);

52 
	gMëaAŒoˇt‹Tøckî
::
nŸify
(
MëaAŒoˇt‹H™dÀ
* 
h™dÀ
)

54 
m_Æloˇti⁄s
.
ö£π
(
h™dÀ
);

57 
	gMëaAŒoˇt‹Tøckî
::
ªÀa£
(
MëaAŒoˇt‹H™dÀ
* 
h™dÀ
)

59 
m_Æloˇti⁄s
.
ªmove
(
h™dÀ
);

62 
ALWAYS_INLINE
 
	gMëaAŒoˇt‹
::
ªÀa£
(
MëaAŒoˇt‹H™dÀ
* 
h™dÀ
)

64 
SpöLockHﬁdî
 
lockî
(&
m_lock
);

65 i‡(
	gh™dÀ
->
sizeInByãs
()) {

66 
de¸emítPageOccu∑ncy
(
h™dÀ
->
°¨t
(), h™dÀ->
sizeInByãs
());

67 
addFªeS∑˚FromRñó£dH™dÀ
(
h™dÀ
->
°¨t
(), h™dÀ->
sizeInByãs
());

70 i‡(
UNLIKELY
(!!
m_åackî
))

71 
	gm_åackî
->
ªÀa£
(
h™dÀ
);

74 
	gMëaAŒoˇt‹H™dÀ
::
MëaAŒoˇt‹H™dÀ
(
MëaAŒoˇt‹
* 
Æloˇt‹
, * 
°¨t
, 
size_t
 
sizeInByãs
, * 
ow√rUID
)

75 : 
m_Æloˇt‹
(
Æloˇt‹
)

76 , 
m_°¨t
(
°¨t
)

77 , 
m_sizeInByãs
(
sizeInByãs
)

78 , 
m_ow√rUID
(
ow√rUID
)

80 
ASSERT
(
Æloˇt‹
);

81 
ASSERT
(
°¨t
);

82 
ASSERT
(
sizeInByãs
);

85 
	gMëaAŒoˇt‹H™dÀ
::~
MëaAŒoˇt‹H™dÀ
()

87 
ASSERT
(
m_Æloˇt‹
);

88 
	gm_Æloˇt‹
->
ªÀa£
(
this
);

91 
	gMëaAŒoˇt‹H™dÀ
::
shrök
(
size_t
 
√wSizeInByãs
)

93 
ASSERT
(
√wSizeInByãs
 <
m_sizeInByãs
);

95 
SpöLockHﬁdî
 
lockî
(&
m_Æloˇt‹
->
m_lock
);

97 
	g√wSizeInByãs
 = 
m_Æloˇt‹
->
roundUp
(
√wSizeInByãs
);

99 
ASSERT
(
√wSizeInByãs
 <
m_sizeInByãs
);

101 i‡(
	g√wSizeInByãs
 =
m_sizeInByãs
)

104 
uöçå_t
 
	g‰ìSèπ
 = 
ªöãΩªt_ˇ°
<uöçå_t>(
m_°¨t
Ë+ 
√wSizeInByãs
;

105 
size_t
 
	g‰ìSize
 = 
m_sizeInByãs
 - 
√wSizeInByãs
;

106 
uöçå_t
 
	g‰ìEnd
 = 
‰ìSèπ
 + 
‰ìSize
;

108 
uöçå_t
 
	gfú°Com∂ëñyFªePage
 = (
‰ìSèπ
 + 
m_Æloˇt‹
->
m_∑geSize
 - 1) & ~(m_allocator->m_pageSize - 1);

109 i‡(
	gfú°Com∂ëñyFªePage
 < 
	g‰ìEnd
)

110 
	gm_Æloˇt‹
->
de¸emítPageOccu∑ncy
(
ªöãΩªt_ˇ°
<*>(
fú°Com∂ëñyFªePage
), 
‰ìSize
 - (fú°Com∂ëñyFªePagê- 
‰ìSèπ
));

112 
	gm_Æloˇt‹
->
addFªeS∑˚FromRñó£dH™dÀ
(
ªöãΩªt_ˇ°
<*>(
‰ìSèπ
), 
‰ìSize
);

114 
	gm_sizeInByãs
 = 
√wSizeInByãs
;

117 
	gMëaAŒoˇt‹
::
MëaAŒoˇt‹
(
size_t
 
Æloˇti⁄GønuÀ
, size_à
∑geSize
)

118 : 
m_Æloˇti⁄GønuÀ
(
Æloˇti⁄GønuÀ
)

119 , 
m_∑geSize
(
∑geSize
)

120 , 
m_byãsAŒoˇãd
(0)

121 , 
m_byãsRe£rved
(0)

122 , 
m_byãsCommôãd
(0)

123 , 
m_åackî
(0)

124 #i‚de‡
NDEBUG


125 , 
m_mÆlocBÆ™˚
(0)

127 #i‡
ENABLE
(
META_ALLOCATOR_PROFILE
)

128 , 
m_numAŒoˇti⁄s
(0)

129 , 
m_numFªes
(0)

132 
	gm_lock
.
Inô
();

134 
	gm_logPageSize
 = 0; m_logPageSize < 32; ++m_logPageSize) {

135 i‡(
	g°©ic_ˇ°
<
	gsize_t
>(1Ë<< 
	gm_logPageSize
 =
m_∑geSize
)

139 
ASSERT
(
°©ic_ˇ°
<
size_t
>(1Ë<< 
m_logPageSize
 =
m_∑geSize
);

141 
	gm_logAŒoˇti⁄GønuÀ
 = 0; m_logAllocationGranule < 32; ++m_logAllocationGranule) {

142 i‡(
	g°©ic_ˇ°
<
	gsize_t
>(1Ë<< 
	gm_logAŒoˇti⁄GønuÀ
 =
m_Æloˇti⁄GønuÀ
)

146 
ASSERT
(
°©ic_ˇ°
<
size_t
>(1Ë<< 
m_logAŒoˇti⁄GønuÀ
 =
m_Æloˇti⁄GønuÀ
);

149 
	gPassRefPå
<
	gMëaAŒoˇt‹H™dÀ
> 
	gMëaAŒoˇt‹
::
Æloˇã
(
size_t
 
sizeInByãs
, * 
ow√rUID
)

151 
SpöLockHﬁdî
 
lockî
(&
m_lock
);

153 i‡(!
	gsizeInByãs
)

156 
	gsizeInByãs
 = 
roundUp
(
sizeInByãs
);

158 * 
	g°¨t
 = 
födAndRemoveFªeS∑˚
(
sizeInByãs
);

159 i‡(!
	g°¨t
) {

160 
size_t
 
	gªque°edNumbîOfPages
 = (
sizeInByãs
 + 
m_∑geSize
 - 1Ë>> 
m_logPageSize
;

161 
size_t
 
	gnumbîOfPages
 = 
ªque°edNumbîOfPages
;

163 
	g°¨t
 = 
ÆloˇãNewS∑˚
(
numbîOfPages
);

164 i‡(!
	g°¨t
)

167 
ASSERT
(
numbîOfPages
 >
ªque°edNumbîOfPages
);

169 
size_t
 
	groundedUpSize
 = 
numbîOfPages
 << 
m_logPageSize
;

171 
ASSERT
(
roundedUpSize
 >
sizeInByãs
);

173 
	gm_byãsRe£rved
 +
roundedUpSize
;

175 i‡(
	groundedUpSize
 > 
	gsizeInByãs
) {

176 * 
	g‰ìS∑˚Sèπ
 = 
ªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
uöçå_t
>(
°¨t
Ë+ 
sizeInByãs
);

177 
size_t
 
	g‰ìS∑˚Size
 = 
roundedUpSize
 - 
sizeInByãs
;

178 
addFªeS∑˚
(
‰ìS∑˚Sèπ
, 
‰ìS∑˚Size
);

181 
ö¸emítPageOccu∑ncy
(
°¨t
, 
sizeInByãs
);

182 
	gm_byãsAŒoˇãd
 +
sizeInByãs
;

183 #i‡
ENABLE
(
META_ALLOCATOR_PROFILE
)

184 
	gm_numAŒoˇti⁄s
++;

187 
MëaAŒoˇt‹H™dÀ
* 
	gh™dÀ
 = 
√w
 MëaAŒoˇt‹H™dÀ(
this
, 
°¨t
, 
sizeInByãs
, 
ow√rUID
);

189 i‡(
UNLIKELY
(!!
m_åackî
))

190 
	gm_åackî
->
nŸify
(
h™dÀ
);

192  
ad›tRef
(
h™dÀ
);

195 
	gMëaAŒoˇt‹
::
Sèti°ics
 
MëaAŒoˇt‹
::
cuºítSèti°ics
()

197 
SpöLockHﬁdî
 
lockî
(&
m_lock
);

198 
Sèti°ics
 
	gªsu…
;

199 
	gªsu…
.
	gbyãsAŒoˇãd
 = 
m_byãsAŒoˇãd
;

200 
	gªsu…
.
	gbyãsRe£rved
 = 
m_byãsRe£rved
;

201 
	gªsu…
.
	gbyãsCommôãd
 = 
m_byãsCommôãd
;

202  
	gªsu…
;

205 * 
	gMëaAŒoˇt‹
::
födAndRemoveFªeS∑˚
(
size_t
 
sizeInByãs
)

207 
FªeS∑˚Node
* 
node
 = 
m_‰ìS∑˚SizeM≠
.
födLó°Gª©îTh™OrEquÆ
(
sizeInByãs
);

209 i‡(!
	gnode
)

212 
ASSERT
(
node
->
m_sizeInByãs
 >
sizeInByãs
);

214 
	gm_‰ìS∑˚SizeM≠
.
ªmove
(
node
);

216 * 
	gªsu…
;

218 i‡(
	gnode
->
	gm_sizeInByãs
 =
sizeInByãs
) {

220 
ªsu…
 = 
node
->
m_°¨t
;

222 
	gm_‰ìS∑˚SèπAddªssM≠
.
ªmove
(
node
->
m_°¨t
);

223 
	gm_‰ìS∑˚EndAddªssM≠
.
ªmove
(
ªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
uöçå_t
>(
node
->
m_°¨t
Ë+Çode->
m_sizeInByãs
));

224 
‰ìFªeS∑˚Node
(
node
);

233 
uöçå_t
 
	gfú°Page
 = 
ªöãΩªt_ˇ°
<uöçå_t>(
node
->
m_°¨t
Ë>> 
m_logPageSize
;

234 
uöçå_t
 
	gœ°Page
 = (
ªöãΩªt_ˇ°
<uöçå_t>(
node
->
m_°¨t
Ë+Çode->
m_sizeInByãs
 - 1Ë>> 
m_logPageSize
;

236 
uöçå_t
 
	gœ°PageF‹Le·AŒoˇti⁄
 = (
ªöãΩªt_ˇ°
<uöçå_t>(
node
->
m_°¨t
Ë+ 
sizeInByãs
 - 1Ë>> 
m_logPageSize
;

237 
uöçå_t
 
	gfú°PageF‹RightAŒoˇti⁄
 = (
ªöãΩªt_ˇ°
<uöçå_t>(
node
->
m_°¨t
Ë+Çode->
m_sizeInByãs
 - 
sizeInByãs
Ë>> 
m_logPageSize
;

239 i‡(
	gœ°PageF‹Le·AŒoˇti⁄
 - 
	gfú°Page
 + 1 <
œ°Page
 - 
fú°PageF‹RightAŒoˇti⁄
 + 1) {

241 
ªsu…
 = 
node
->
m_°¨t
;

243 
	gm_‰ìS∑˚SèπAddªssM≠
.
ªmove
(
node
->
m_°¨t
);

245 
	gnode
->
	gm_sizeInByãs
 -
sizeInByãs
;

246 
	gnode
->
	gm_°¨t
 = 
ªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
uöçå_t
>(
node
->
m_°¨t
Ë+ 
sizeInByãs
);

248 
	gm_‰ìS∑˚SizeM≠
.
ö£π
(
node
);

249 
	gm_‰ìS∑˚SèπAddªssM≠
.
add
(
node
->
m_°¨t
,Çode);

253 
	gªsu…
 = 
ªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
uöçå_t
>(
node
->
m_°¨t
Ë+Çode->
m_sizeInByãs
 - 
sizeInByãs
);

255 
	gm_‰ìS∑˚EndAddªssM≠
.
ªmove
(
ªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
uöçå_t
>(
node
->
m_°¨t
Ë+Çode->
m_sizeInByãs
));

257 
	gnode
->
	gm_sizeInByãs
 -
sizeInByãs
;

259 
	gm_‰ìS∑˚SizeM≠
.
ö£π
(
node
);

260 
	gm_‰ìS∑˚EndAddªssM≠
.
add
(
ªsu…
, 
node
);

264 #i‡
ENABLE
(
META_ALLOCATOR_PROFILE
)

265 
dumpProfûe
();

268  
	gªsu…
;

271 
	gMëaAŒoˇt‹
::
addFªeS∑˚FromRñó£dH™dÀ
(* 
°¨t
, 
size_t
 
sizeInByãs
)

273 #i‡
ENABLE
(
META_ALLOCATOR_PROFILE
)

274 
	gm_numFªes
++;

276 
	gm_byãsAŒoˇãd
 -
sizeInByãs
;

277 
addFªeS∑˚
(
°¨t
, 
sizeInByãs
);

280 
	gMëaAŒoˇt‹
::
addFªshFªeS∑˚
(* 
°¨t
, 
size_t
 
sizeInByãs
)

282 
SpöLockHﬁdî
 
lockî
(&
m_lock
);

283 
	gm_byãsRe£rved
 +
sizeInByãs
;

284 
addFªeS∑˚
(
°¨t
, 
sizeInByãs
);

287 
size_t
 
	gMëaAŒoˇt‹
::
debugFªeS∑˚Size
()

289 #i‚de‡
NDEBUG


290 
SpöLockHﬁdî
 
lockî
(&
m_lock
);

291 
size_t
 
	gªsu…
 = 0;

292 
FªeS∑˚Node
* 
	gnode
 = 
m_‰ìS∑˚SizeM≠
.
fú°
();Çode;Çodê
node
->
suc˚ss‹
())

293 
ªsu…
 +
node
->
m_sizeInByãs
;

294  
	gªsu…
;

296 
CRASH
();

301 
	gMëaAŒoˇt‹
::
addFªeS∑˚
(* 
°¨t
, 
size_t
 
sizeInByãs
)

303 * 
	gíd
 = 
ªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
uöçå_t
>(
°¨t
Ë+ 
sizeInByãs
);

305 
	gHashM≠
<*, 
	gFªeS∑˚Node
*>::
ôî©‹
 
À·Neighb‹
 = 
m_‰ìS∑˚EndAddªssM≠
.
föd
(
°¨t
);

306 
	gHashM≠
<*, 
	gFªeS∑˚Node
*>::
ôî©‹
 
rightNeighb‹
 = 
m_‰ìS∑˚SèπAddªssM≠
.
föd
(
íd
);

308 i‡(
	gÀ·Neighb‹
 !
m_‰ìS∑˚EndAddªssM≠
.
íd
()) {

312 
ASSERT
(
ªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
uöçå_t
>(
À·Neighb‹
->
vÆue
->
m_°¨t
Ë+Üe·Neighb‹->vÆue->
m_sizeInByãs
Ë=À·Neighb‹->
key
);

314 
FªeS∑˚Node
* 
	gÀ·Node
 = 
À·Neighb‹
->
vÆue
;

316 * 
	gÀ·Sèπ
 = 
À·Node
->
m_°¨t
;

317 
size_t
 
	gÀ·Size
 = 
À·Node
->
m_sizeInByãs
;

318 * 
	gÀ·End
 = 
ªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
uöçå_t
>(
À·Sèπ
Ë+ 
À·Size
);

320 
ASSERT
(
À·End
 =
°¨t
);

322 
	gm_‰ìS∑˚SizeM≠
.
ªmove
(
À·Node
);

323 
	gm_‰ìS∑˚EndAddªssM≠
.
ªmove
(
À·End
);

326 i‡(
	grightNeighb‹
 !
m_‰ìS∑˚SèπAddªssM≠
.
íd
()) {

330 
ASSERT
(
rightNeighb‹
->
vÆue
->
m_°¨t
 =rightNeighb‹->
key
);

332 
FªeS∑˚Node
* 
	grightNode
 = 
rightNeighb‹
->
vÆue
;

333 * 
	grightSèπ
 = 
rightNeighb‹
->
key
;

334 
size_t
 
	grightSize
 = 
rightNode
->
m_sizeInByãs
;

335 * 
	grightEnd
 = 
ªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
uöçå_t
>(
rightSèπ
Ë+ 
rightSize
);

337 
ASSERT
(
rightSèπ
 =
íd
);

338 
ASSERT
(
ªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
uöçå_t
>(
À·Sèπ
Ë+ 
À·Size
 + 
sizeInByãs
 + 
rightSize
Ë=
rightEnd
);

340 
	gm_‰ìS∑˚SizeM≠
.
ªmove
(
rightNode
);

341 
	gm_‰ìS∑˚SèπAddªssM≠
.
ªmove
(
rightSèπ
);

342 
	gm_‰ìS∑˚EndAddªssM≠
.
ªmove
(
rightEnd
);

344 
‰ìFªeS∑˚Node
(
rightNode
);

346 
	gÀ·Node
->
	gm_sizeInByãs
 +
sizeInByãs
 + 
rightSize
;

348 
	gm_‰ìS∑˚SizeM≠
.
ö£π
(
À·Node
);

349 
	gm_‰ìS∑˚EndAddªssM≠
.
add
(
rightEnd
, 
À·Node
);

351 
	gÀ·Node
->
	gm_sizeInByãs
 +
sizeInByãs
;

353 
	gm_‰ìS∑˚SizeM≠
.
ö£π
(
À·Node
);

354 
	gm_‰ìS∑˚EndAddªssM≠
.
add
(
íd
, 
À·Node
);

359 i‡(
	grightNeighb‹
 !
m_‰ìS∑˚SèπAddªssM≠
.
íd
()) {

360 
FªeS∑˚Node
* 
rightNode
 = 
rightNeighb‹
->
vÆue
;

361 * 
	grightSèπ
 = 
rightNeighb‹
->
key
;

362 
size_t
 
	grightSize
 = 
rightNode
->
m_sizeInByãs
;

363 * 
	grightEnd
 = 
ªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
uöçå_t
>(
rightSèπ
Ë+ 
rightSize
);

365 
ASSERT
(
rightSèπ
 =
íd
);

366 
ASSERT_UNUSED
(
rightEnd
, 
ªöãΩªt_ˇ°
<*>‘eöãΩªt_ˇ°<
uöçå_t
>(
°¨t
Ë+ 
sizeInByãs
 + 
rightSize
) ==ÑightEnd);

368 
	gm_‰ìS∑˚SizeM≠
.
ªmove
(
rightNode
);

369 
	gm_‰ìS∑˚SèπAddªssM≠
.
ªmove
(
rightSèπ
);

371 
	grightNode
->
	gm_sizeInByãs
 +
sizeInByãs
;

372 
	grightNode
->
	gm_°¨t
 = 
°¨t
;

374 
	gm_‰ìS∑˚SizeM≠
.
ö£π
(
rightNode
);

375 
	gm_‰ìS∑˚SèπAddªssM≠
.
add
(
°¨t
, 
rightNode
);

379 
FªeS∑˚Node
* 
	gnode
 = 
ÆlocFªeS∑˚Node
();

381 
	gnode
->
	gm_sizeInByãs
 = 
sizeInByãs
;

382 
	gnode
->
	gm_°¨t
 = 
°¨t
;

384 
	gm_‰ìS∑˚SizeM≠
.
ö£π
(
node
);

385 
	gm_‰ìS∑˚SèπAddªssM≠
.
add
(
°¨t
, 
node
);

386 
	gm_‰ìS∑˚EndAddªssM≠
.
add
(
íd
, 
node
);

390 #i‡
ENABLE
(
META_ALLOCATOR_PROFILE
)

391 
dumpProfûe
();

395 
	gMëaAŒoˇt‹
::
ö¸emítPageOccu∑ncy
(* 
addªss
, 
size_t
 
sizeInByãs
)

397 
uöçå_t
 
	gfú°Page
 = 
ªöãΩªt_ˇ°
<uöçå_t>(
addªss
Ë>> 
m_logPageSize
;

398 
uöçå_t
 
	gœ°Page
 = (
ªöãΩªt_ˇ°
<uöçå_t>(
addªss
Ë+ 
sizeInByãs
 - 1Ë>> 
m_logPageSize
;

400 
uöçå_t
 
	g∑ge
 = 
fú°Page
;Öagê<
œ°Page
; ++page) {

401 
	gHashM≠
<
	guöçå_t
, 
	gsize_t
>::
ôî©‹
 
ôî
 = 
m_∑geOccu∑ncyM≠
.
föd
(
∑ge
);

402 i‡(
	gôî
 =
m_∑geOccu∑ncyM≠
.
íd
()) {

403 
m_∑geOccu∑ncyM≠
.
add
(
∑ge
, 1);

404 
	gm_byãsCommôãd
 +
m_∑geSize
;

405 
nŸifyNìdPage
(
ªöãΩªt_ˇ°
<*>(
∑ge
 << 
m_logPageSize
));

407 
	gôî
->
	gvÆue
++;

411 
	gMëaAŒoˇt‹
::
de¸emítPageOccu∑ncy
(* 
addªss
, 
size_t
 
sizeInByãs
)

413 
uöçå_t
 
	gfú°Page
 = 
ªöãΩªt_ˇ°
<uöçå_t>(
addªss
Ë>> 
m_logPageSize
;

414 
uöçå_t
 
	gœ°Page
 = (
ªöãΩªt_ˇ°
<uöçå_t>(
addªss
Ë+ 
sizeInByãs
 - 1Ë>> 
m_logPageSize
;

416 
uöçå_t
 
	g∑ge
 = 
fú°Page
;Öagê<
œ°Page
; ++page) {

417 
	gHashM≠
<
	guöçå_t
, 
	gsize_t
>::
ôî©‹
 
ôî
 = 
m_∑geOccu∑ncyM≠
.
föd
(
∑ge
);

418 
ASSERT
(
ôî
 !
m_∑geOccu∑ncyM≠
.
íd
());

419 i‡(!--(
	gôî
->
	gvÆue
)) {

420 
	gm_∑geOccu∑ncyM≠
.
ªmove
(
ôî
);

421 
	gm_byãsCommôãd
 -
m_∑geSize
;

422 
nŸifyPageIsFªe
(
ªöãΩªt_ˇ°
<*>(
∑ge
 << 
m_logPageSize
));

427 
size_t
 
	gMëaAŒoˇt‹
::
roundUp
(size_à
sizeInByãs
)

429 i‡(
°d
::
numîic_limôs
<
size_t
>::
max
(Ë- 
m_Æloˇti⁄GønuÀ
 <
sizeInByãs
)

430 
CRASH
();

431  (
	gsizeInByãs
 + 
	gm_Æloˇti⁄GønuÀ
 - 1) & ~(m_allocationGranule - 1);

434 
	gMëaAŒoˇt‹
::
FªeS∑˚Node
* 
MëaAŒoˇt‹
::
ÆlocFªeS∑˚Node
()

436 #i‚de‡
NDEBUG


437 
m_mÆlocBÆ™˚
++;

439  
√w
 (
NŸNuŒ
, 
Á°MÆloc
((
FªeS∑˚Node
))) FreeSpaceNode(0, 0);

442 
	gMëaAŒoˇt‹
::
‰ìFªeS∑˚Node
(
FªeS∑˚Node
* 
node
)

444 #i‚de‡
NDEBUG


445 
m_mÆlocBÆ™˚
--;

447 
Á°Fªe
(
node
);

450 #i‡
ENABLE
(
META_ALLOCATOR_PROFILE
)

451 
	gMëaAŒoˇt‹
::
dumpProfûe
()

453 
d©aLogF
(

455 
gëCuºítPro˚ssID
(), 
this
, 
m_numAŒoˇti⁄s
, 
m_numFªes
, 
m_byãsAŒoˇãd
, 
m_byãsRe£rved
, 
m_byãsCommôãd
);

	@MetaAllocator.h

29 #i‚de‡
WTF_MëaAŒoˇt‹_h


30 
	#WTF_MëaAŒoˇt‹_h


	)

32 
	~<wtf/As£πi⁄s.h
>

33 
	~<wtf/HashM≠.h
>

34 
	~<wtf/MëaAŒoˇt‹H™dÀ.h
>

35 
	~<wtf/N⁄c›yabÀ.h
>

36 
	~<wtf/PageBlock.h
>

37 
	~<wtf/RedBœckTªe.h
>

38 
	~<wtf/RefCou¡ed.h
>

39 
	~<wtf/RefPå.h
>

40 
	~<wtf/TCSpöLock.h
>

42 
«me•a˚
 
	gWTF
 {

44 
	#ENABLE_META_ALLOCATOR_PROFILE
 0

	)

46 ˛as†
	cMëaAŒoˇt‹Tøckî
 {

47 
	gWTF_MAKE_FAST_ALLOCATED
;

48 
	gpublic
:

49 
nŸify
(
MëaAŒoˇt‹H™dÀ
*);

50 
ªÀa£
(
MëaAŒoˇt‹H™dÀ
*);

52 
MëaAŒoˇt‹H™dÀ
* 
föd
(* 
addªss
)

54 
MëaAŒoˇt‹H™dÀ
* 
	gh™dÀ
 = 
m_Æloˇti⁄s
.
födGª©e°LessTh™OrEquÆ
(
addªss
);

55 i‡(
	gh™dÀ
 && 
	gaddªss
 < h™dÀ->
íd
())

56  
	gh™dÀ
;

60 
	gRedBœckTªe
<
	gMëaAŒoˇt‹H™dÀ
, *> 
	gm_Æloˇti⁄s
;

63 ˛as†
	cMëaAŒoˇt‹
 {

64 
WTF_MAKE_NONCOPYABLE
(
MëaAŒoˇt‹
);

66 
	gpublic
:

67 
WTF_EXPORT_PRIVATE
 
MëaAŒoˇt‹
(
size_t
 
Æloˇti⁄GønuÀ
, size_à
∑geSize
 = 
WTF
::pageSize());

69 
WTF_EXPORT_PRIVATE
 
	gvútuÆ
 ~
MëaAŒoˇt‹
();

71 
WTF_EXPORT_PRIVATE
 
	gPassRefPå
<
	gMëaAŒoˇt‹H™dÀ
> 
Æloˇã
(
size_t
 
sizeInByãs
, * 
ow√rUID
);

73 
åackAŒoˇti⁄s
(
MëaAŒoˇt‹Tøckî
* 
åackî
)

75 
	gm_åackî
 = 
åackî
;

79 
size_t
 
byãsAŒoˇãd
(Ë{  
	gm_byãsAŒoˇãd
; }

80 
size_t
 
byãsRe£rved
(Ë{  
	gm_byãsRe£rved
; }

81 
size_t
 
byãsCommôãd
(Ë{  
	gm_byãsCommôãd
; }

84 
	sSèti°ics
 {

85 
size_t
 
	gbyãsAŒoˇãd
;

86 
size_t
 
	gbyãsRe£rved
;

87 
size_t
 
	gbyãsCommôãd
;

89 
Sèti°ics
 
cuºítSèti°ics
();

94 
WTF_EXPORT_PRIVATE
 
addFªshFªeS∑˚
(* 
°¨t
, 
size_t
 
sizeInByãs
);

98 
WTF_EXPORT_PRIVATE
 
size_t
 
debugFªeS∑˚Size
();

100 #i‡
ENABLE
(
META_ALLOCATOR_PROFILE
)

101 
dumpProfûe
();

103 
dumpProfûe
() { }

106 
	g¥Ÿe˘ed
:

110 
vútuÆ
 * 
ÆloˇãNewS∑˚
(
size_t
& 
numPages
) = 0;

113 
vútuÆ
 
nŸifyNìdPage
(* 
∑ge
) = 0;

116 
vútuÆ
 
nŸifyPageIsFªe
(* 
∑ge
) = 0;

122 
	g¥iv©e
:

124 
‰õnd
 
˛ass
 
MëaAŒoˇt‹H™dÀ
;

126 
˛ass
 
	gFªeS∑˚Node
 : 
public
 
RedBœckTªe
<
FªeS∑˚Node
, 
	gsize_t
>::
Node
 {

127 
public
:

128 
FªeS∑˚Node
(* 
°¨t
, 
size_t
 
sizeInByãs
)

129 : 
m_°¨t
(
°¨t
)

130 , 
m_sizeInByãs
(
sizeInByãs
)

134 
size_t
 
key
()

136  
	gm_sizeInByãs
;

139 * 
	gm_°¨t
;

140 
size_t
 
	gm_sizeInByãs
;

142 
	gRedBœckTªe
<
	tFªeS∑˚Node
, 
	tsize_t
> 
	tTªe
;

145 
ªÀa£
(
MëaAŒoˇt‹H™dÀ
*);

150 * 
födAndRemoveFªeS∑˚
(
size_t
 
sizeInByãs
);

153 
addFªeS∑˚FromRñó£dH™dÀ
(* 
°¨t
, 
size_t
 
sizeInByãs
);

158 
addFªeS∑˚
(* 
°¨t
, 
size_t
 
sizeInByãs
);

162 
ö¸emítPageOccu∑ncy
(* 
addªss
, 
size_t
 
sizeInByãs
);

163 
de¸emítPageOccu∑ncy
(* 
addªss
, 
size_t
 
sizeInByãs
);

167 
size_t
 
roundUp
(size_à
sizeInByãs
);

169 
FªeS∑˚Node
* 
ÆlocFªeS∑˚Node
();

170 
WTF_EXPORT_PRIVATE
 
‰ìFªeS∑˚Node
(
FªeS∑˚Node
*);

172 
size_t
 
	gm_Æloˇti⁄GønuÀ
;

173 
	gm_logAŒoˇti⁄GønuÀ
;

174 
size_t
 
	gm_∑geSize
;

175 
	gm_logPageSize
;

177 
Tªe
 
	gm_‰ìS∑˚SizeM≠
;

178 
	gHashM≠
<*, 
	gFªeS∑˚Node
*> 
	gm_‰ìS∑˚SèπAddªssM≠
;

179 
	gHashM≠
<*, 
	gFªeS∑˚Node
*> 
	gm_‰ìS∑˚EndAddªssM≠
;

180 
	gHashM≠
<
	guöçå_t
, 
	gsize_t
> 
	gm_∑geOccu∑ncyM≠
;

182 
size_t
 
	gm_byãsAŒoˇãd
;

183 
size_t
 
	gm_byãsRe£rved
;

184 
size_t
 
	gm_byãsCommôãd
;

186 
SpöLock
 
	gm_lock
;

188 
MëaAŒoˇt‹Tøckî
* 
	gm_åackî
;

190 #i‚de‡
NDEBUG


191 
size_t
 
	gm_mÆlocBÆ™˚
;

194 #i‡
ENABLE
(
META_ALLOCATOR_PROFILE
)

195 
	gm_numAŒoˇti⁄s
;

196 
	gm_numFªes
;

	@MetaAllocatorHandle.h

29 #i‚de‡
WTF_MëaAŒoˇt‹H™dÀ_h


30 
	#WTF_MëaAŒoˇt‹H™dÀ_h


	)

32 
	~<wtf/As£πi⁄s.h
>

33 
	~<wtf/RedBœckTªe.h
>

34 
	~<wtf/ThªadSa„RefCou¡ed.h
>

35 
	~<wtf/RefPå.h
>

37 
«me•a˚
 
	gWTF
 {

39 
˛ass
 
	gMëaAŒoˇt‹
;

41 
˛ass
 
	gMëaAŒoˇt‹H™dÀ
 : 
public
 
ThªadSa„RefCou¡ed
<
MëaAŒoˇt‹H™dÀ
>,Öubli¯
	gRedBœckTªe
<MëaAŒoˇt‹H™dÀ, *>::
Node
 {

42 
¥iv©e
:

43 
MëaAŒoˇt‹H™dÀ
(
MëaAŒoˇt‹
*, * 
°¨t
, 
size_t
 
sizeInByãs
, * 
ow√rUID
);

45 
	gpublic
:

46 
WTF_EXPORT_PRIVATE
 ~
MëaAŒoˇt‹H™dÀ
();

48 * 
°¨t
() const

50  
	gm_°¨t
;

53 * 
íd
() const

55  
	gªöãΩªt_ˇ°
<*>(
ídAsI¡egî
());

58 
uöçå_t
 
°¨tAsI¡egî
() const

60  
	gªöãΩªt_ˇ°
<
	guöçå_t
>(
	gm_°¨t
);

63 
uöçå_t
 
ídAsI¡egî
() const

65  
°¨tAsI¡egî
(Ë+ 
	gm_sizeInByãs
;

68 
size_t
 
sizeInByãs
() const

70  
	gm_sizeInByãs
;

73 
boﬁ
 
c⁄èösI¡egîAddªss
(
uöçå_t
 
addªss
) const

75  
	gaddªss
 - 
°¨tAsI¡egî
(Ë< 
sizeInByãs
();

78 
boﬁ
 
c⁄èös
(* 
addªss
) const

80  
c⁄èösI¡egîAddªss
(
ªöãΩªt_ˇ°
<
uöçå_t
>(
addªss
));

83 
WTF_EXPORT_PRIVATE
 
shrök
(
size_t
 
√wSizeInByãs
);

85 
boﬁ
 
isM™aged
()

87  !!
	gm_Æloˇt‹
;

90 
MëaAŒoˇt‹
* 
Æloˇt‹
()

92 
ASSERT
(
m_Æloˇt‹
);

93  
	gm_Æloˇt‹
;

96 * 
ow√rUID
()

98  
	gm_ow√rUID
;

101 * 
key
()

103  
	gm_°¨t
;

106 
	g¥iv©e
:

107 
‰õnd
 
˛ass
 
MëaAŒoˇt‹
;

109 
MëaAŒoˇt‹
* 
	gm_Æloˇt‹
;

110 * 
	gm_°¨t
;

111 
size_t
 
	gm_sizeInByãs
;

112 * 
	gm_ow√rUID
;

	@NeverDestroyed.h

26 #i‚de‡
NevîDe°royed_h


27 
	#NevîDe°royed_h


	)

29 
	~<ty≥_åaôs
>

30 
	~<utûôy
>

31 
	~<wtf/N⁄c›yabÀ.h
>

32 
	~<wtf/RefCou¡ed.h
>

44 
«me•a˚
 
	gWTF
 {

46 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cNevîDe°royed
 {

47 
WTF_MAKE_NONCOPYABLE
(
NevîDe°royed
);

49 
	gpublic
:

50 
ãm∂©e
<
ty≥«me
... 
Args
>

51 
NevîDe°royed
(
Args
&&... 
¨gs
)

53 
MaybeRñax
<
T
>(
√w
 (
asPå
()ËT(
°d
::
f‹w¨d
<
Args
>(
¨gs
)...));

56 
›î©‹
 
	gT
&(Ë{  *
asPå
(); }

57 
	gT
& 
gë
(Ë{  *
asPå
(); }

59 
	g¥iv©e
:

60 
ty≥«me
 
	t°d
::
	tªmove_c⁄°
<
	tT
>::
	tty≥
* 
	tPoöãrTy≥
;

62 
PoöãrTy≥
 
asPå
(Ë{  
	gªöãΩªt_ˇ°
<
	gPoöãrTy≥
>(&
	gm_°‹age
); }

66 
ty≥«me
 
	g°d
::
Æig√d_°‹age
<(
T
), std::
Æignmít_of
<T>::
vÆue
>::
ty≥
 
m_°‹age
;

68 
	gãm∂©e
 <
ty≥«me
 
	gPåTy≥
, 
boﬁ
 
	gShouldRñax
 = 
°d
::
is_ba£_of
<
RefCou¡ed
<
PåTy≥
>, PåTy≥>::
vÆue
> 
	sMaybeRñax
 {

69 
ex∂icô
 
MaybeRñax
(
PåTy≥
*) { }

71 
	gãm∂©e
 <
ty≥«me
 
	gPåTy≥
> 
	gMaybeRñax
<PåTy≥, 
	gåue
> {

72 
ex∂icô
 
MaybeRñax
(
PåTy≥
* 
±r
Ë{ 
	g±r
->
ªœxAd›ti⁄Requúemít
(); }

76 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cLazyNevîDe°royed
 {

77 
WTF_MAKE_NONCOPYABLE
(
LazyNevîDe°royed
);

79 
	gpublic
:

80 
LazyNevîDe°royed
() = ;

82 
	gãm∂©e
<
	gty≥«me
... 
	gArgs
>

83 
c⁄°ru˘
(
Args
&&... 
¨gs
)

85 
ASSERT
(!
m_isC⁄°ru˘ed
);

87 #i‡!
ASSERT_DISABLED


88 
	gm_isC⁄°ru˘ed
 = 
åue
;

91 
	gMaybeRñax
<
	gT
>(
√w
 (
asPå
()Ë
T
(
°d
::
f‹w¨d
<
Args
>(
¨gs
)...));

94 
›î©‹
 
	gT
&(Ë{  *
asPå
(); }

95 
	gT
& 
gë
(Ë{  *
asPå
(); }

97 
	g¥iv©e
:

98 
ty≥«me
 
	t°d
::
	tªmove_c⁄°
<
	tT
>::
	tty≥
* 
	tPoöãrTy≥
;

100 
PoöãrTy≥
 
asPå
()

102 
ASSERT
(
m_isC⁄°ru˘ed
);

104  
	gªöãΩªt_ˇ°
<
	gPoöãrTy≥
>(&
	gm_°‹age
);

109 
ty≥«me
 
	g°d
::
Æig√d_°‹age
<(
T
), std::
Æignmít_of
<T>::
vÆue
>::
ty≥
 
m_°‹age
;

111 
	gãm∂©e
 <
ty≥«me
 
	gPåTy≥
, 
boﬁ
 
	gShouldRñax
 = 
°d
::
is_ba£_of
<
RefCou¡ed
<
PåTy≥
>, PåTy≥>::
vÆue
> 
	sMaybeRñax
 {

112 
ex∂icô
 
MaybeRñax
(
PåTy≥
*) { }

114 
	gãm∂©e
 <
ty≥«me
 
	gPåTy≥
> 
	gMaybeRñax
<PåTy≥, 
	gåue
> {

115 
ex∂icô
 
MaybeRñax
(
PåTy≥
* 
±r
Ë{ 
	g±r
->
ªœxAd›ti⁄Requúemít
(); }

118 #i‡!
ASSERT_DISABLED


119 
boﬁ
 
	gm_isC⁄°ru˘ed
 = 
Ál£
;

125 
usög
 
	gWTF
::
LazyNevîDe°royed
;

126 
usög
 
	gWTF
::
NevîDe°royed
;

	@NoLock.h

26 #i‚de‡
NoLock_h


27 
	#NoLock_h


	)

29 
	~<wtf/Lockî.h
>

31 
«me•a˚
 
	gWTF
 {

33 ˛as†
	cNoLock
 {

34 
	gpublic
:

35 
lock
() { }

36 
u∆ock
() { }

37 
boﬁ
 
isHñd
(Ë{  
Ál£
; }

40 
	gLockî
<
	tNoLock
> 
	tNoLockLockî
;

44 
usög
 
	gWTF
::
NoLock
;

45 
usög
 
	gWTF
::
NoLockLockî
;

	@Noncopyable.h

21 #i‚de‡
WTF_N⁄c›yabÀ_h


22 
	#WTF_N⁄c›yabÀ_h


	)

24 
	#WTF_MAKE_NONCOPYABLE
(
CœssName
) \

25 
¥iv©e
: \

26 
	`CœssName
(c⁄° 
CœssName
&Ë
dñëe
; \

27 
CœssName
& 
›î©‹
=(c⁄° CœssName&Ë
dñëe
; \

28 

	)

	@NumberOfCores.cpp

26 
	~"c⁄fig.h
"

27 
	~"NumbîOfC‹es.h
"

29 #i‡
OS
(
DARWIN
)

30 
	~<sys/∑øm.h
>

33 
	~<sys/ty≥s.h
>

34 
	~<sys/sys˘l.h
>

35 #ñi‡
OS
(
LINUX
Ë|| OS(
AIX
Ë|| OS(
SOLARIS
Ë|| OS(
OPENBSD
Ë|| OS(
NETBSD
Ë|| OS(
FREEBSD
)

36 
	~<uni°d.h
>

37 #ñi‡
OS
(
WINDOWS
)

38 
	~<wödows.h
>

41 
«me•a˚
 
	gWTF
 {

43 
numbîOfPro˚ss‹C‹es
()

45 c⁄° 
	gdeÁu…IfU«vaûabÀ
 = 1;

46 
	gs_numbîOfC‹es
 = -1;

48 i‡(
	gs_numbîOfC‹es
 > 0)

49  
	gs_numbîOfC‹es
;

51 #i‡
OS
(
DARWIN
)

52 
	gªsu…
;

53 
size_t
 
	gÀngth
 = (
ªsu…
);

54 
	g«me
[] = {

55 
CTL_HW
,

56 
HW_AVAILCPU


58 
	gsys˘lResu…
 = 
sys˘l
(
«me
, “ameË/ (), &
ªsu…
, &
Àngth
, 0, 0);

60 
	gs_numbîOfC‹es
 = 
sys˘lResu…
 < 0 ? 
deÁu…IfU«vaûabÀ
 : 
ªsu…
;

61 #ñi‡
OS
(
LINUX
Ë|| OS(
AIX
Ë|| OS(
SOLARIS
Ë|| OS(
OPENBSD
Ë|| OS(
NETBSD
Ë|| OS(
FREEBSD
)

62 
	gsysc⁄fResu…
 = 
sysc⁄f
(
_SC_NPROCESSORS_ONLN
);

64 
	gs_numbîOfC‹es
 = 
sysc⁄fResu…
 < 0 ? 
deÁu…IfU«vaûabÀ
 : 
°©ic_ˇ°
<>(sysconfResult);

65 #ñi‡
OS
(
WINDOWS
)

66 
UNUSED_PARAM
(
deÁu…IfU«vaûabÀ
);

67 
SYSTEM_INFO
 
	gsysInfo
;

68 
GëSy°emInfo
(&
sysInfo
);

70 
	gs_numbîOfC‹es
 = 
sysInfo
.
dwNumbîOfPro˚ss‹s
;

72 
	gs_numbîOfC‹es
 = 
deÁu…IfU«vaûabÀ
;

74  
	gs_numbîOfC‹es
;

	@NumberOfCores.h

21 #i‚de‡
NumbîOfC‹es_h


22 
	#NumbîOfC‹es_h


	)

24 
«me•a˚
 
	gWTF
 {

26 
WTF_EXPORT_PRIVATE
 
numbîOfPro˚ss‹C‹es
();

	@OSAllocator.h

26 #i‚de‡
OSAŒoˇt‹_h


27 
	#OSAŒoˇt‹_h


	)

29 
	~<Æg‹ôhm
>

30 
	~<wtf/VMTags.h
>

32 
«me•a˚
 
	gWTF
 {

34 ˛as†
	cOSAŒoˇt‹
 {

35 
	gpublic
:

36 
	eUßge
 {

37 
UnknownUßge
 = -1,

38 
	gFa°MÆlocPages
 = 
VM_TAG_FOR_TCMALLOC_MEMORY
,

39 
	gJSGCHópPages
 = 
VM_TAG_FOR_COLLECTOR_MEMORY
,

40 
	gJSVMSèckPages
 = 
VM_TAG_FOR_REGISTERFILE_MEMORY
,

41 
	gJSJITCodePages
 = 
VM_TAG_FOR_EXECUTABLEALLOCATOR_MEMORY
,

47 
WTF_EXPORT_PRIVATE
 * 
ª£rveUncommôãd
(
size_t
, 
Ußge
 = 
UnknownUßge
, 
boﬁ
 
wrôabÀ
 = 
åue
, boﬁ 
execuèbÀ
 = 
Ál£
, boﬁ 
ö˛udesGu¨dPages
 = false);

48 
WTF_EXPORT_PRIVATE
 
ªÀa£Decommôãd
(*, 
size_t
);

53 
WTF_EXPORT_PRIVATE
 
commô
(*, 
size_t
, 
boﬁ
 
wrôabÀ
, boﬁ 
execuèbÀ
);

54 
WTF_EXPORT_PRIVATE
 
decommô
(*, 
size_t
);

59 
WTF_EXPORT_PRIVATE
 * 
ª£rveAndCommô
(
size_t
, 
Ußge
 = 
UnknownUßge
, 
boﬁ
 
wrôabÀ
 = 
åue
, boﬁ 
execuèbÀ
 = 
Ál£
, boﬁ 
ö˛udesGu¨dPages
 = false);

60 
decommôAndRñó£
(* 
ba£
, 
size_t
 
size
);

65 
WTF_EXPORT_PRIVATE
 * 
ª£rveAndCommô
(
size_t
 
ª£rveSize
, size_à
commôSize
, 
Ußge
 = 
UnknownUßge
, 
boﬁ
 
wrôabÀ
 = 
åue
, boﬁ 
execuèbÀ
 = 
Ál£
);

70 
	gãm∂©e
<
ty≥«me
 
	gT
>

71 
T
* 
ªÆloˇãCommôãd
(T*, 
size_t
 
ﬁdSize
, size_à
√wSize
, 
Ußge
 = 
UnknownUßge
, 
boﬁ
 
wrôabÀ
 = 
åue
, boﬁ 
execuèbÀ
 = 
Ál£
);

74 
ölöe
 * 
	gOSAŒoˇt‹
::
	$ª£rveAndCommô
(
size_t
 
ª£rveSize
, size_à
commôSize
, 
Ußge
 
ußge
, 
boﬁ
 
wrôabÀ
, boﬁ 
execuèbÀ
)

76 * 
ba£
 = 
	`ª£rveUncommôãd
(
ª£rveSize
, 
ußge
, 
wrôabÀ
, 
execuèbÀ
);

77 
	`commô
(
ba£
, 
commôSize
, 
wrôabÀ
, 
execuèbÀ
);

78  
ba£
;

79 
	}
}

81 
ölöe
 
	gOSAŒoˇt‹
::
	$decommôAndRñó£
(* 
ªÀa£Ba£
, 
size_t
 
ªÀa£Size
)

83 
	`ªÀa£Decommôãd
(
ªÀa£Ba£
, 
ªÀa£Size
);

84 
	}
}

86 
	gãm∂©e
<
ty≥«me
 
	gT
>

87 
ölöe
 
T
* 
	gOSAŒoˇt‹
::
	$ªÆloˇãCommôãd
(
T
* 
ﬁdBa£
, 
size_t
 
ﬁdSize
, size_à
√wSize
, 
Ußge
 
ußge
, 
boﬁ
 
wrôabÀ
, boﬁ 
execuèbÀ
)

89 * 
√wBa£
 = 
	`ª£rveAndCommô
(
√wSize
, 
ußge
, 
wrôabÀ
, 
execuèbÀ
);

90 
	`mem˝y
(
√wBa£
, 
ﬁdBa£
, 
°d
::
	`mö
(
ﬁdSize
, 
√wSize
));

91 
	`decommôAndRñó£
(
ﬁdBa£
, 
ﬁdSize
);

92  
°©ic_ˇ°
<
T
*>(
√wBa£
);

93 
	}
}

97 
usög
 
	gWTF
::
OSAŒoˇt‹
;

	@OSAllocatorPosix.cpp

26 
	~"c⁄fig.h
"

27 
	~"OSAŒoˇt‹.h
"

29 #i‡
OS
(
UNIX
)

31 
	~"PageAŒoˇti⁄.h
"

32 
	~<î∫o.h
>

33 
	~<sys/mm™.h
>

34 
	~<wtf/As£πi⁄s.h
>

36 
«me•a˚
 
	gWTF
 {

38 * 
	gOSAŒoˇt‹
::
ª£rveUncommôãd
(
size_t
 
byãs
, 
Ußge
 
ußge
, 
boﬁ
 
wrôabÀ
, boﬁ 
execuèbÀ
, boﬁ 
ö˛udesGu¨dPages
)

40 #i‡
OS
(
LINUX
)

41 
UNUSED_PARAM
(
ußge
);

42 
UNUSED_PARAM
(
wrôabÀ
);

43 
UNUSED_PARAM
(
execuèbÀ
);

44 
UNUSED_PARAM
(
ö˛udesGu¨dPages
);

46 * 
	gªsu…
 = 
mm≠
(0, 
byãs
, 
PROT_NONE
, 
MAP_NORESERVE
 | 
MAP_PRIVATE
 | 
MAP_ANON
, -1, 0);

47 i‡(
	gªsu…
 =
MAP_FAILED
)

48 
CRASH
();

49 
madvi£
(
ªsu…
, 
byãs
, 
MADV_DONTNEED
);

51 * 
	gªsu…
 = 
ª£rveAndCommô
(
byãs
, 
ußge
, 
wrôabÀ
, 
execuèbÀ
, 
ö˛udesGu¨dPages
);

52 #i‡
HAVE
(
MADV_FREE_REUSE
)

54 
madvi£
(
ªsu…
, 
byãs
, 
MADV_FREE_REUSABLE
Ë=-1 && 
î∫o
 =
EAGAIN
) { }

59  
ªsu…
;

62 * 
	gOSAŒoˇt‹
::
ª£rveAndCommô
(
size_t
 
byãs
, 
Ußge
 
ußge
, 
boﬁ
 
wrôabÀ
, boﬁ 
execuèbÀ
, boﬁ 
ö˛udesGu¨dPages
)

65 
	g¥Ÿe˘i⁄
 = 
PROT_READ
;

66 i‡(
	gwrôabÀ
)

67 
	g¥Ÿe˘i⁄
 |
PROT_WRITE
;

68 i‡(
	gexecuèbÀ
)

69 
	g¥Ÿe˘i⁄
 |
PROT_EXEC
;

71 
	gÊags
 = 
MAP_PRIVATE
 | 
MAP_ANON
;

72 #i‡
PLATFORM
(
IOS
)

73 i‡(
	gexecuèbÀ
)

74 
	gÊags
 |
MAP_JIT
;

77 #i‡
OS
(
DARWIN
)

78 
	gfd
 = 
ußge
;

80 
UNUSED_PARAM
(
ußge
);

81 
	gfd
 = -1;

84 * 
	gªsu…
 = 0;

85 #i‡(
OS
(
DARWIN
Ë&& 
CPU
(
X86_64
))

86 i‡(
	gexecuèbÀ
) {

87 
ASSERT
(
ö˛udesGu¨dPages
);

97 
öçå_t
 
	gøndomLoˇti⁄
 = 0;

98 
	gøndomLoˇti⁄
 = 
¨c4øndom
() & ((1 << 25) - 1);

99 
	gøndomLoˇti⁄
 += (1 << 24);

100 
	gøndomLoˇti⁄
 <<= 21;

101 
	gªsu…
 = 
ªöãΩªt_ˇ°
<*>(
øndomLoˇti⁄
);

105 
	gªsu…
 = 
mm≠
(
ªsu…
, 
byãs
, 
¥Ÿe˘i⁄
, 
Êags
, 
fd
, 0);

106 i‡(
	gªsu…
 =
MAP_FAILED
) {

107 i‡(
execuèbÀ
)

108 
ªsu…
 = 0;

110 
CRASH
();

112 i‡(
	gªsu…
 && 
	gö˛udesGu¨dPages
) {

117 
mm≠
(
ªsu…
, 
∑geSize
(), 
PROT_NONE
, 
MAP_FIXED
 | 
MAP_PRIVATE
 | 
MAP_ANON
, 
fd
, 0);

118 
mm≠
(
°©ic_ˇ°
<*>(
ªsu…
Ë+ 
byãs
 - 
∑geSize
(),ÖageSize(), 
PROT_NONE
, 
MAP_FIXED
 | 
MAP_PRIVATE
 | 
MAP_ANON
, 
fd
, 0);

120  
	gªsu…
;

123 
	gOSAŒoˇt‹
::
commô
(* 
addªss
, 
size_t
 
byãs
, 
boﬁ
 
wrôabÀ
, boﬁ 
execuèbÀ
)

125 #i‡
OS
(
LINUX
)

126 
	g¥Ÿe˘i⁄
 = 
PROT_READ
;

127 i‡(
	gwrôabÀ
)

128 
	g¥Ÿe˘i⁄
 |
PROT_WRITE
;

129 i‡(
	gexecuèbÀ
)

130 
	g¥Ÿe˘i⁄
 |
PROT_EXEC
;

131 i‡(
m¥Ÿe˘
(
addªss
, 
byãs
, 
¥Ÿe˘i⁄
))

132 
CRASH
();

133 
madvi£
(
addªss
, 
byãs
, 
MADV_WILLNEED
);

134 #ñi‡
HAVE
(
MADV_FREE_REUSE
)

135 
UNUSED_PARAM
(
wrôabÀ
);

136 
UNUSED_PARAM
(
execuèbÀ
);

137 
madvi£
(
addªss
, 
byãs
, 
MADV_FREE_REUSE
Ë=-1 && 
î∫o
 =
EAGAIN
) { }

140 
UNUSED_PARAM
(
addªss
);

141 
UNUSED_PARAM
(
byãs
);

142 
UNUSED_PARAM
(
wrôabÀ
);

143 
UNUSED_PARAM
(
execuèbÀ
);

147 
	gOSAŒoˇt‹
::
decommô
(* 
addªss
, 
size_t
 
byãs
)

149 #i‡
OS
(
LINUX
)

150 
madvi£
(
addªss
, 
byãs
, 
MADV_DONTNEED
);

151 i‡(
m¥Ÿe˘
(
addªss
, 
byãs
, 
PROT_NONE
))

152 
CRASH
();

153 #ñi‡
HAVE
(
MADV_FREE_REUSE
)

154 
madvi£
(
addªss
, 
byãs
, 
MADV_FREE_REUSABLE
Ë=-1 && 
î∫o
 =
EAGAIN
) { }

155 #ñi‡
HAVE
(
MADV_FREE
)

156 
madvi£
(
addªss
, 
byãs
, 
MADV_FREE
Ë=-1 && 
î∫o
 =
EAGAIN
) { }

157 #ñi‡
HAVE
(
MADV_DONTNEED
)

158 
madvi£
(
addªss
, 
byãs
, 
MADV_DONTNEED
Ë=-1 && 
î∫o
 =
EAGAIN
) { }

160 
UNUSED_PARAM
(
addªss
);

161 
UNUSED_PARAM
(
byãs
);

165 
	gOSAŒoˇt‹
::
ªÀa£Decommôãd
(* 
addªss
, 
size_t
 
byãs
)

167 
	gªsu…
 = 
munm≠
(
addªss
, 
byãs
);

168 i‡(
	gªsu…
 == -1)

169 
CRASH
();

	@OSAllocatorWin.cpp

26 
	~"c⁄fig.h
"

27 
	~"OSAŒoˇt‹.h
"

29 #i‡
OS
(
WINDOWS
)

31 
	~"wödows.h
"

32 
	~<wtf/As£πi⁄s.h
>

34 
«me•a˚
 
	gWTF
 {

36 
ölöe
 
DWORD
 
¥Ÿe˘i⁄
(
boﬁ
 
wrôabÀ
, boﬁ 
execuèbÀ
)

38  
	gexecuèbÀ
 ?

39 (
	gwrôabÀ
 ? 
	gPAGE_EXECUTE_READWRITE
 : 
PAGE_EXECUTE_READ
) :

40 (
wrôabÀ
 ? 
PAGE_READWRITE
 : 
PAGE_READONLY
);

43 * 
	gOSAŒoˇt‹
::
ª£rveUncommôãd
(
size_t
 
byãs
, 
Ußge
, 
boﬁ
 
wrôabÀ
, boﬁ 
execuèbÀ
, bool)

45 * 
	gªsu…
 = 
VútuÆAŒoc
(0, 
byãs
, 
MEM_RESERVE
, 
¥Ÿe˘i⁄
(
wrôabÀ
, 
execuèbÀ
));

46 i‡(!
	gªsu…
)

47 
CRASH
();

48  
	gªsu…
;

51 * 
	gOSAŒoˇt‹
::
ª£rveAndCommô
(
size_t
 
byãs
, 
Ußge
, 
boﬁ
 
wrôabÀ
, boﬁ 
execuèbÀ
, bool)

53 * 
	gªsu…
 = 
VútuÆAŒoc
(0, 
byãs
, 
MEM_RESERVE
 | 
MEM_COMMIT
, 
¥Ÿe˘i⁄
(
wrôabÀ
, 
execuèbÀ
));

54 i‡(!
	gªsu…
)

55 
CRASH
();

56  
	gªsu…
;

59 
	gOSAŒoˇt‹
::
commô
(* 
addªss
, 
size_t
 
byãs
, 
boﬁ
 
wrôabÀ
, boﬁ 
execuèbÀ
)

61 * 
	gªsu…
 = 
VútuÆAŒoc
(
addªss
, 
byãs
, 
MEM_COMMIT
, 
¥Ÿe˘i⁄
(
wrôabÀ
, 
execuèbÀ
));

62 i‡(!
	gªsu…
)

63 
CRASH
();

66 
	gOSAŒoˇt‹
::
decommô
(* 
addªss
, 
size_t
 
byãs
)

74 i‡(!
	gbyãs
)

76 
boﬁ
 
	gªsu…
 = 
VútuÆFªe
(
addªss
, 
byãs
, 
MEM_DECOMMIT
);

77 i‡(!
	gªsu…
)

78 
CRASH
();

81 
	gOSAŒoˇt‹
::
ªÀa£Decommôãd
(* 
addªss
, 
size_t
 
byãs
)

85 i‡(!
	gbyãs
)

89 
boﬁ
 
	gªsu…
 = 
VútuÆFªe
(
addªss
, 0, 
MEM_RELEASE
);

90 i‡(!
	gªsu…
)

91 
CRASH
();

	@OSRandomSource.cpp

26 
	~"c⁄fig.h
"

27 
	~"OSR™domSour˚.h
"

29 
	~<°döt.h
>

30 
	~<°dlib.h
>

32 #i‡
OS
(
UNIX
)

33 
	~<f˙é.h
>

34 
	~<uni°d.h
>

37 #i‡
OS
(
WINDOWS
)

38 
	~<wödows.h
>

39 
	~<wö¸y±.h
>

42 
«me•a˚
 
	gWTF
 {

44 
¸y±ogøphiˇŒyR™domVÆuesFromOS
(* 
buf„r
, 
size_t
 
Àngth
)

46 #i‡
OS
(
UNIX
)

47 
	gfd
 = 
›í
("/dev/uøndom", 
O_RDONLY
, 0);

48 i‡(
	gfd
 < 0)

49 
CRASH
();

51 i‡(
ªad
(
fd
, 
buf„r
, 
Àngth
Ë!
°©ic_ˇ°
<
ssize_t
>(length))

52 
CRASH
();

54 
˛o£
(
fd
);

55 #ñi‡
OS
(
WINDOWS
)

56 
HCRYPTPROV
 
	ghCry±Prov
 = 0;

57 i‡(!
Cry±AcquúeC⁄ãxt
(&
hCry±Prov
, 0, 
MS_DEF_PROV
, 
PROV_RSA_FULL
, 
CRYPT_VERIFYCONTEXT
))

58 
CRASH
();

59 i‡(!
Cry±GíR™dom
(
hCry±Prov
, 
Àngth
, 
buf„r
))

60 
CRASH
();

61 
Cry±Rñó£C⁄ãxt
(
hCry±Prov
, 0);

	@OSRandomSource.h

26 #i‚de‡
WTF_OSR™domSour˚_h


27 
	#WTF_OSR™domSour˚_h


	)

29 
«me•a˚
 
	gWTF
 {

35 
¸y±ogøphiˇŒyR™domVÆuesFromOS
(* 
buf„r
, 
size_t
 
Àngth
);

	@ObjcRuntimeExtras.h

25 #i‚de‡
WTF_ObjcRu¡imeExåas_h


26 
	#WTF_ObjcRu¡imeExåas_h


	)

31 
	~<objc/mesßge.h
>

33 #ifde‡
__˝lu•lus


35 
	gãm∂©e
<
ty≥«me
 
	gRëu∫Ty≥
, 
	gty≥«me
... 
	gArgumítTy≥s
>

36 
ölöe
 
Rëu∫Ty≥
 
	$wtfObjcMsgSíd
(
id
 
èrgë
, 
SEL
 
£À˘‹
, 
ArgumítTy≥s
... 
¨gumíts
)

38  
ªöãΩªt_ˇ°
<
	`Rëu∫Ty≥
 (*)(
id
, 
SEL
, 
ArgumítTy≥s
...)>(
objc_msgSíd
)(
èrgë
, 
£À˘‹
, 
¨gumíts
...);

39 
	}
}

41 
	gãm∂©e
<
ty≥«me
 
	gRëu∫Ty≥
, 
	gty≥«me
... 
	gArgumítTy≥s
>

42 
ölöe
 
Rëu∫Ty≥
 
	$wtfCÆlIMP
(
IMP
 
im∂emíèti⁄
, 
id
 
èrgë
, 
SEL
 
£À˘‹
, 
ArgumítTy≥s
... 
¨gumíts
)

44  
ªöãΩªt_ˇ°
<
	`Rëu∫Ty≥
 (*)(
id
, 
SEL
, 
ArgumítTy≥s
...)>(
im∂emíèti⁄
)(
èrgë
, 
£À˘‹
, 
¨gumíts
...);

45 
	}
}

	@Optional.h

26 #i‚de‡
O±i⁄Æ_h


27 
	#O±i⁄Æ_h


	)

29 
	~<ty≥_åaôs
>

30 
	~<wtf/As£πi⁄s.h
>

31 
	~<wtf/StdLibExåas.h
>

37 
«me•a˚
 
	gWTF
 {

39 
	eInPœ˚Tag
 { 
	gInPœ˚
 };

40 
	eNuŒ›tTag
 { 
	gNuŒ›t
 };

42 
	gãm∂©e
<
ty≥«me
 
	gT
>

43 ˛as†
	cO±i⁄Æ
 {

44 
	gpublic
:

45 
O±i⁄Æ
()

46 : 
m_isEngaged
(
Ál£
)

50 
O±i⁄Æ
(
NuŒ›tTag
)

51 : 
m_isEngaged
(
Ál£
)

55 
O±i⁄Æ
(c⁄° 
T
& 
vÆue
)

56 : 
m_isEngaged
(
åue
)

57 , 
m_vÆue
(
vÆue
)

61 
O±i⁄Æ
(c⁄° O±i⁄Æ& 
Ÿhî
)

62 : 
m_isEngaged
(
Ÿhî
.m_isEngaged)

64 i‡(
m_isEngaged
)

65 
√w
 (
NŸNuŒ
, 
°d
::
addªssof
(
m_vÆue
)Ë
T
(
Ÿhî
.m_value);

68 
O±i⁄Æ
(O±i⁄Æ&& 
Ÿhî
)

69 : 
m_isEngaged
(
Ÿhî
.m_isEngaged)

71 i‡(
m_isEngaged
)

72 
√w
 (
NŸNuŒ
, 
°d
::
addªssof
(
m_vÆue
)Ë
T
(
WTF
::
move
(
Ÿhî
.m_value));

75 
O±i⁄Æ
(
T
&& 
vÆue
)

76 : 
m_isEngaged
(
åue
)

77 , 
m_vÆue
(
WTF
::
move
(
vÆue
))

81 
ãm∂©e
<
ty≥«me
... 
Args
>

82 
O±i⁄Æ
(
InPœ˚Tag
, 
Args
&&... 
¨gs
)

83 : 
m_isEngaged
(
åue
)

84 , 
m_vÆue
(
°d
::
f‹w¨d
<
Args
>(
¨gs
)...)

88 ~
O±i⁄Æ
()

90 i‡(
m_isEngaged
)

91 
m_vÆue
.~
T
();

94 
	gO±i⁄Æ
& 
	g›î©‹
=(
NuŒ›tTag
)

96 i‡(
m_isEngaged
) {

97 
m_vÆue
.~
T
();

98 
	gm_isEngaged
 = 
Ál£
;

100  *
	gthis
;

103 
	gO±i⁄Æ
& 
	g›î©‹
=(c⁄° 
O±i⁄Æ
& 
Ÿhî
)

105 i‡(
m_isEngaged
 =
Ÿhî
.m_isEngaged) {

106 i‡(
m_isEngaged
)

107 
m_vÆue
 = 
Ÿhî
.m_value;

108  *
	gthis
;

111 i‡(
	gm_isEngaged
)

112 
	gm_vÆue
.~
T
();

114 
√w
 (
NŸNuŒ
, 
°d
::
addªssof
(
m_vÆue
)Ë
T
(
Ÿhî
.m_value);

115 
	gm_isEngaged
 = 
Ÿhî
.
m_isEngaged
;

117  *
	gthis
;

120 
	gO±i⁄Æ
& 
	g›î©‹
=(
O±i⁄Æ
&& 
Ÿhî
)

122 i‡(
m_isEngaged
 =
Ÿhî
.m_isEngaged) {

123 i‡(
m_isEngaged
)

124 
m_vÆue
 = 
WTF
::
move
(
Ÿhî
.m_value);

125  *
	gthis
;

128 i‡(
	gm_isEngaged
)

129 
	gm_vÆue
.~
T
();

131 
√w
 (
NŸNuŒ
, 
°d
::
addªssof
(
m_vÆue
)Ë
T
(
WTF
::
move
(
Ÿhî
.m_value));

132 
	gm_isEngaged
 = 
Ÿhî
.
m_isEngaged
;

134  *
	gthis
;

137 
	gãm∂©e
<
ty≥«me
 
	gU
>

138 
	gO±i⁄Æ
& 
	g›î©‹
=(
U
&& 
u
)

140 i‡(
m_isEngaged
) {

141 
m_vÆue
 = 
°d
::
f‹w¨d
<
U
>(
u
);

142  *
	gthis
;

145 
√w
 (
NŸNuŒ
, 
°d
::
addªssof
(
m_vÆue
)Ë
T
(°d::
f‹w¨d
<
U
>(
u
));

146 
	gm_isEngaged
 = 
åue
;

147  *
	gthis
;

150 
ex∂icô
 
›î©‹
 
boﬁ
(Ëc⁄° {  
	gm_isEngaged
; }

152 
	gT
& 
vÆue
()

154 
ASSERT
(
m_isEngaged
);

155  
	gm_vÆue
;

158 c⁄° 
	gT
& 
vÆue
() const

160 
ASSERT
(
m_isEngaged
);

161  
	gm_vÆue
;

164 
	gãm∂©e
<
ty≥«me
 
	gU
>

165 
T
 
vÆueOr
(
U
&& 
vÆue
) const

167 i‡(
	gm_isEngaged
)

168  
	gm_vÆue
;

170  
	g°d
::
f‹w¨d
<
U
>(
vÆue
);

173 
	g¥iv©e
:

174 
boﬁ
 
m_isEngaged
;

176 
T
 
	gm_vÆue
;

182 
usög
 
	gWTF
::
InPœ˚
;

183 
usög
 
	gWTF
::
NuŒ›t
;

184 
usög
 
	gWTF
::
O±i⁄Æ
;

	@OwnPtr.h

21 #i‚de‡
WTF_OwnPå_h


22 
	#WTF_OwnPå_h


	)

24 
	~<Æg‹ôhm
>

25 
	~<c°ddef
>

26 
	~<mem‹y
>

27 
	~<wtf/As£πi⁄s.h
>

28 
	~<wtf/Atomics.h
>

29 
	~<wtf/GëPå.h
>

30 
	~<wtf/HashTøôs.h
>

31 
	~<wtf/N⁄c›yabÀ.h
>

32 
	~<wtf/OwnPåComm⁄.h
>

34 
«me•a˚
 
	gWTF
 {

36 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPassOwnPå
;

37 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gPassOwnPå
<T> 
ad›tPå
(
T
*);

39 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cOwnPå
 {

40 
	gpublic
:

41 
T
 
	tVÆueTy≥
;

42 
VÆueTy≥
* 
	tPåTy≥
;

44 
OwnPå
(Ë: 
m_±r
(0) { }

45 
OwnPå
(
°d
::
nuŒ±r_t
Ë: 
m_±r
(0) { }

48 
ãm∂©e
<
ty≥«me
 
U
> 
OwnPå
(c⁄° 
PassOwnPå
<U>& 
o
);

50 ~
OwnPå
(Ë{ 
dñëeOw√dPå
(
m_±r
); }

52 
PåTy≥
 
gë
(Ëc⁄° {  
	gm_±r
; }

54 
˛ór
();

55 
	gPassOwnPå
<
	gT
> 
ªÀa£
();

56 
PåTy≥
 
ÀakPå
(Ë
	gWARN_UNUSED_RETURN
;

58 
	gVÆueTy≥
& 
	g›î©‹
*(Ëc⁄° { 
ASSERT
(
m_±r
);  *
	gm_±r
; }

59 
PåTy≥
 
	g›î©‹
->(Ëc⁄° { 
ASSERT
(
m_±r
);  
	gm_±r
; }

61 
boﬁ
 
	g›î©‹
!(Ëc⁄° {  !
	gm_±r
; }

64 
PåTy≥
 
	tOwnPå
::*
	tUn•ecifõdBoﬁTy≥
;

65 
›î©‹
 
Un•ecifõdBoﬁTy≥
(Ëc⁄° {  
	gm_±r
 ? &
	gOwnPå
::
m_±r
 : 0; }

67 
	gOwnPå
& 
	g›î©‹
=(c⁄° 
PassOwnPå
<
T
>&);

68 
	gOwnPå
& 
	g›î©‹
=(
°d
::
nuŒ±r_t
Ë{ 
˛ór
();  *
	gthis
; }

69 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gOwnPå
& 
	g›î©‹
=(c⁄° 
PassOwnPå
<
U
>&);

71 
OwnPå
(OwnPtr&&);

72 
	gãm∂©e
<
ty≥«me
 
	gU
> 
OwnPå
(OwnPå<
U
>&&);

74 
	gOwnPå
& 
	g›î©‹
=(
OwnPå
&&);

75 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gOwnPå
& 
	g›î©‹
=(
OwnPå
<
U
>&&);

78 
OwnPå
(
HashTabÀDñëedVÆueTy≥
Ë: 
m_±r
(
hashTabÀDñëedVÆue
()) { }

79 
boﬁ
 
isHashTabÀDñëedVÆue
(Ëc⁄° {  
m_±r
 =
hashTabÀDñëedVÆue
(); }

81 
sw≠
(
OwnPå
& 
o
Ë{ 
	g°d
::sw≠(
m_±r
, o.m_ptr); }

91 
	gãm∂©e
<
	gty≥«me
... 
	gArgs
>

92 
¸óãTønß˘i⁄Æly
(
Args
...);

94 
	g¥iv©e
:

95 
ex∂icô
 
OwnPå
(
PåTy≥
 
±r
Ë: 
m_±r
(ptr) { }

97 
PåTy≥
 
hashTabÀDñëedVÆue
(Ë{  
ªöãΩªt_ˇ°
<PtrType>(-1); }

101 
	gãm∂©e
<
ty≥«me
 
	gU
> 
boﬁ
 
	g›î©‹
==(c⁄° 
OwnPå
<
U
>&Ë{ 
COMPILE_ASSERT
(!(U*), 
OwnPås_should_√vî_be_equÆ
);  
	gÁl£
; }

102 
	gãm∂©e
<
ty≥«me
 
	gU
> 
boﬁ
 
	g›î©‹
!=(c⁄° 
OwnPå
<
U
>&Ë{ 
COMPILE_ASSERT
(!(U*), 
OwnPås_should_√vî_be_equÆ
);  
	gÁl£
; }

103 
	gãm∂©e
<
ty≥«me
 
	gU
> 
boﬁ
 
	g›î©‹
==(c⁄° 
PassOwnPå
<
U
>&Ë{ 
COMPILE_ASSERT
(!(U*), 
OwnPås_should_√vî_be_equÆ
);  
	gÁl£
; }

104 
	gãm∂©e
<
ty≥«me
 
	gU
> 
boﬁ
 
	g›î©‹
!=(c⁄° 
PassOwnPå
<
U
>&Ë{ 
COMPILE_ASSERT
(!(U*), 
OwnPås_should_√vî_be_equÆ
);  
	gÁl£
; }

106 
PåTy≥
 
	gm_±r
;

109 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gOwnPå
<T>::
OwnPå
(c⁄° 
PassOwnPå
<
U
>& 
o
)

110 : 
m_±r
(
o
.
	$ÀakPå
())

112 
	}
}

114 
ãm∂©e
<
ty≥«me
 
T
> 
ölöe
 
OwnPå
<T>::
	$˛ór
()

116 
PåTy≥
 
±r
 = 
m_±r
;

117 
m_±r
 = 0;

118 
	`dñëeOw√dPå
(
±r
);

119 
	}
}

121 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gPassOwnPå
<T> 
	gOwnPå
<T>::
	$ªÀa£
()

123 
PåTy≥
 
±r
 = 
m_±r
;

124 
m_±r
 = 0;

125  
	`ad›tPå
(
±r
);

126 
	}
}

128 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
Åy≥«mê
	gOwnPå
<T>::
PåTy≥
 
OwnPå
<
T
>::
	$ÀakPå
()

130 
PåTy≥
 
±r
 = 
m_±r
;

131 
m_±r
 = 0;

132  
±r
;

133 
	}
}

135 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gOwnPå
<T>& OwnPå<T>::
›î©‹
=(c⁄° 
PassOwnPå
<
T
>& 
o
)

137 
PåTy≥
 
±r
 = 
m_±r
;

138 
	gm_±r
 = 
o
.
ÀakPå
();

139 
ASSERT
(!
±r
 || 
m_±r
 !=Ötr);

140 
dñëeOw√dPå
(
±r
);

141  *
	gthis
;

144 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gOwnPå
<T>& OwnPå<T>::
›î©‹
=(c⁄° 
PassOwnPå
<
U
>& 
o
)

146 
PåTy≥
 
±r
 = 
m_±r
;

147 
	gm_±r
 = 
o
.
ÀakPå
();

148 
ASSERT
(!
±r
 || 
m_±r
 !=Ötr);

149 
dñëeOw√dPå
(
±r
);

150  *
	gthis
;

153 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gOwnPå
<T>::
OwnPå
(OwnPå<
T
>&& 
o
)

154 : 
m_±r
(
o
.
	$ÀakPå
())

156 
	}
}

158 
ãm∂©e
<
ty≥«me
 
T
>Åem∂©e<ty≥«mê
U
> 
ölöe
 
OwnPå
<T>::OwnPå(OwnPå<U>&& 
o
)

159 : 
m_±r
(
o
.
	$ÀakPå
())

161 
	}
}

163 
ãm∂©e
<
ty≥«me
 
T
> 
ölöe
áutÿ
OwnPå
<T>::
›î©‹
=(OwnPå&& 
o
) -> OwnPtr&

165 
ASSERT
(!
o
 || o !
m_±r
);

166 
OwnPå
 
	g±r
 = 
WTF
::
move
(
o
);

167 
sw≠
(
±r
);

168  *
	gthis
;

171 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
áutÿ
	gOwnPå
<T>::
›î©‹
=(
OwnPå
<
U
>&& 
o
) -> OwnPtr&

173 
ASSERT
(!
o
 || o !
m_±r
);

174 
OwnPå
 
	g±r
 = 
WTF
::
move
(
o
);

175 
sw≠
(
±r
);

176  *
	gthis
;

179 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
sw≠
(
OwnPå
<
T
>& 
a
, OwnPå<T>& 
b
)

181 
	ga
.
sw≠
(
b
);

184 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
OwnPå
<
T
>& 
a
, 
U
* 
	gb
)

186  
	ga
.
gë
(Ë=
b
;

189 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(
T
* 
a
, c⁄° 
	gOwnPå
<U>& 
	gb
)

191  
	ga
 =
b
.
gë
();

194 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
OwnPå
<
T
>& 
a
, 
U
* 
	gb
)

196  
	ga
.
gë
(Ë!
b
;

199 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(
T
* 
a
, c⁄° 
	gOwnPå
<U>& 
	gb
)

201  
	ga
 !
b
.
gë
();

204 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<
	gty≥«me
... 
	gArgs
> 
ölöe
 
	gOwnPå
<T>::
	$¸óãTønß˘i⁄Æly
(
Args
... 
¨gs
)

206 i‡(
m_±r
) {

207 
WTF
::
	`lﬂdLﬂdFí˚
();

211 
T
* 
√wObje˘
 = 
√w
 
	`T
(
¨gs
...);

212 
WTF
::
	`°‹eSt‹eFí˚
();

213 #i‡
	`ENABLE
(
COMPARE_AND_SWAP
)

215 i‡(
m_±r
) {

216 
dñëe
 
√wObje˘
;

217 
WTF
::
	`lﬂdLﬂdFí˚
();

220 } !
WTF
::
	`wókCom∑ªAndSw≠
(
bôwi£_ˇ°
<*vﬁ©ûe*>(&
m_±r
), 
nuŒ±r
, 
√wObje˘
));

222 
m_±r
 = 
√wObje˘
;

224 
	}
}

226 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gIsSm¨tPå
<
	gOwnPå
<T>> {

227 c⁄° 
boﬁ
 
	gvÆue
 = 
åue
;

230 
	gãm∂©e
<
ty≥«me
 
	gP
> 
	gDeÁu…Hash
<
	gOwnPå
<P>> {

231 
	gPåHash
<
	tOwnPå
<
	tP
>> 
	tHash
;

236 
usög
 
	gWTF
::
OwnPå
;

	@OwnPtrCommon.h

28 #i‚de‡
WTF_OwnPåComm⁄_h


29 
	#WTF_OwnPåComm⁄_h


	)

31 
«me•a˚
 
	gWTF
 {

33 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
dñëeOw√dPå
(
T
* 
±r
)

35 
	tknown
[(
T
) ? 1 : -1];

36 i‡((
	gknown
))

37 
dñëe
 
	g±r
;

	@PackedIntVector.h

26 #i‚de‡
PackedI¡Ve˘‹_h


27 
	#PackedI¡Ve˘‹_h


	)

29 
	~<wtf/BôVe˘‹.h
>

31 
«me•a˚
 
	gWTF
 {

40 
	gãm∂©e
<
ty≥«me
 
	gT
, 
	gbôCou¡
>

41 ˛as†
	cPackedI¡Ve˘‹
 {

42 
	gpublic
:

43 
°©ic_as£π
(
bôCou¡
, "bitCount mustÇot be zero!");

44 
°©ic_as£π
(
bôCou¡
 < (*) * 8, "bitCount mustÇotÉxceedÅheáddress spaceÜimit!");

46 
PackedI¡Ve˘‹
()

50 
PackedI¡Ve˘‹
(c⁄° PackedI¡Ve˘‹& 
Ÿhî
)

51 : 
m_bôs
(
Ÿhî
.m_bits)

55 
PackedI¡Ve˘‹
& 
›î©‹
=(c⁄° PackedI¡Ve˘‹& 
Ÿhî
)

57 
m_bôs
 = 
Ÿhî
.m_bits;

58  *
	gthis
;

61 
size_t
 
size
() const

63  
	gm_bôs
.
size
(Ë/ 
	gbôCou¡
;

66 
ísuªSize
(
size_t
 
numI¡s
)

68 
	gm_bôs
.
ísuªSize
(
numI¡s
 * 
bôCou¡
);

71 
ªsize
(
size_t
 
numI¡s
)

73 
	gm_bôs
.
ªsize
(
numI¡s
 * 
bôCou¡
);

76 
˛órAŒ
()

78 
	gm_bôs
.
˛órAŒ
();

81 
T
 
gë
(
size_t
 
ödex
) const

83 
uöçå_t
 
	gªsu…
 = 0;

84 
	gsubIndex
 = 0; subIndex < 
	gbôCou¡
; ++subIndex) {

85 
	gªsu…
 <<= 1;

86 
	gªsu…
 |(
m_bôs
.
quickGë
(
ödex
 * 
bôCou¡
 + 
subIndex
) ? 1 : 0);

88  
	g°©ic_ˇ°
<
	gT
>(
	gªsu…
);

91 
£t
(
size_t
 
ödex
, 
T
 
vÆue
)

96 
uöçå_t
 
	gmyVÆue
 = 
°©ic_ˇ°
<uöçå_t>(
vÆue
);

99 
ASSERT
((
myVÆue
 & 
mask
()) == myValue);

101 
	gsubIndex
 = 
bôCou¡
; subIndex-- > 0;) {

102 
	gm_bôs
.
quickSë
(
ödex
 * 
bôCou¡
 + 
subIndex
, !!(
myVÆue
 & 1));

103 
	gmyVÆue
 >>= 1;

108 
ASSERT
(
gë
(
ödex
Ë=
vÆue
);

110 
	g¥iv©e
:

116 
uöçå_t
 
mask
(Ë{  (
°©ic_ˇ°
<uöçå_t>(2Ë<< (
bôCou¡
 - 1)) - 1; }

119 
BôVe˘‹
 
	gm_bôs
;

124 
usög
 
	gWTF
::
PackedI¡Ve˘‹
;

	@PageAllocation.h

26 #i‚de‡
PageAŒoˇti⁄_h


27 
	#PageAŒoˇti⁄_h


	)

29 
	~<wtf/As£πi⁄s.h
>

30 
	~<wtf/OSAŒoˇt‹.h
>

31 
	~<wtf/PageBlock.h
>

32 
	~<wtf/VMTags.h
>

33 
	~<Æg‹ôhm
>

35 #i‡
OS
(
DARWIN
)

36 
	~<mach/mach_öô.h
>

37 
	~<mach/vm_m≠.h
>

40 #i‡
OS
(
WINDOWS
)

41 
	~<mÆloc.h
>

42 
	~<wödows.h
>

45 #i‡
HAVE
(
ERRNO_H
)

46 
	~<î∫o.h
>

49 #i‡
HAVE
(
MMAP
)

50 
	~<sys/mm™.h
>

51 
	~<uni°d.h
>

54 
«me•a˚
 
	gWTF
 {

72 ˛as†
	cPageAŒoˇti⁄
 : 
¥iv©e
 
PageBlock
 {

73 
public
:

74 
PageAŒoˇti⁄
()

78 
usög
 
PageBlock
::
size
;

79 
usög
 
	gPageBlock
::
ba£
;

81 #i‚de‡
__˛™g__


82 
usög
 
	gPageBlock
::
›î©‹
 
boﬁ
;

86 
›î©‹
 
boﬁ
(Ëc⁄° {  
	gPageBlock
::operator bool(); }

89 
PageAŒoˇti⁄
 
Æloˇã
(
size_t
 
size
, 
OSAŒoˇt‹
::
Ußge
 
ußge
 = OSAŒoˇt‹::
UnknownUßge
, 
boﬁ
 
wrôabÀ
 = 
åue
, boﬁ 
execuèbÀ
 = 
Ál£
)

91 
ASSERT
(
isPageAlig√d
(
size
));

92  
PageAŒoˇti⁄
(
OSAŒoˇt‹
::
ª£rveAndCommô
(
size
, 
ußge
, 
wrôabÀ
, 
execuèbÀ
), size);

95 
dóŒoˇã
()

99 
PageAŒoˇti⁄
 
	gtmp
;

100 
	g°d
::
sw≠
(
tmp
, *
this
);

102 
ASSERT
(
tmp
);

103 
ASSERT
(!*
this
);

105 
	gOSAŒoˇt‹
::
decommôAndRñó£
(
tmp
.
ba£
(),Åmp.
size
());

108 
	g¥iv©e
:

109 
PageAŒoˇti⁄
(* 
ba£
, 
size_t
 
size
)

110 : 
PageBlock
(
ba£
, 
size
, 
Ál£
)

117 
usög
 
	gWTF
::
PageAŒoˇti⁄
;

	@PageAllocationAligned.cpp

26 
	~"c⁄fig.h
"

27 
	~"PageAŒoˇti⁄Alig√d.h
"

29 
«me•a˚
 
	gWTF
 {

31 
PageAŒoˇti⁄Alig√d
 
	gPageAŒoˇti⁄Alig√d
::
Æloˇã
(
size_t
 
size
, size_à
Æignmít
, 
OSAŒoˇt‹
::
Ußge
 
ußge
, 
boﬁ
 
wrôabÀ
)

33 
ASSERT
(
isPageAlig√d
(
size
));

34 
ASSERT
(
isPageAlig√d
(
Æignmít
));

35 
ASSERT
(
isPowîOfTwo
(
Æignmít
));

36 
ASSERT
(
size
 >
Æignmít
);

37 
size_t
 
	gÆignmítMask
 = 
Æignmít
 - 1;

39 #i‡
OS
(
DARWIN
)

40 
	gÊags
 = 
VM_FLAGS_ANYWHERE
;

41 i‡(
	gußge
 !
OSAŒoˇt‹
::
UnknownUßge
)

42 
Êags
 |
ußge
;

43 
	g¥Ÿe˘i⁄
 = 
PROT_READ
;

44 i‡(
	gwrôabÀ
)

45 
	g¥Ÿe˘i⁄
 |
PROT_WRITE
;

47 
vm_addªss_t
 
	gaddªss
 = 0;

48 
vm_m≠
(
cuºít_èsk
(), &
addªss
, 
size
, 
ÆignmítMask
, 
Êags
, 
MEMORY_OBJECT_NULL
, 0, 
FALSE
, 
¥Ÿe˘i⁄
, 
PROT_READ
 | 
PROT_WRITE
, 
VM_INHERIT_DEFAULT
);

49  
PageAŒoˇti⁄Alig√d
(
ªöãΩªt_ˇ°
<*>(
addªss
), 
size
);

51 
size_t
 
	gÆignmítDñè
 = 
Æignmít
 - 
∑geSize
();

54 
size_t
 
	gª£rv©i⁄Size
 = 
size
 + 
ÆignmítDñè
;

55 * 
	gª£rv©i⁄Ba£
 = 
OSAŒoˇt‹
::
ª£rveUncommôãd
(
ª£rv©i⁄Size
, 
ußge
, 
wrôabÀ
, 
Ál£
);

58 * 
	gÆig√dBa£
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
ª£rv©i⁄Ba£
Ë& 
ÆignmítMask


59 ? 
ªöãΩªt_ˇ°
<*>(‘eöãΩªt_ˇ°<
uöçå_t
>(
ª£rv©i⁄Ba£
Ë& ~
ÆignmítMask
Ë+ 
Æignmít
)

60 : 
ª£rv©i⁄Ba£
;

61 
	gOSAŒoˇt‹
::
commô
(
Æig√dBa£
, 
size
, 
wrôabÀ
, 
Ál£
);

63  
PageAŒoˇti⁄Alig√d
(
Æig√dBa£
, 
size
, 
ª£rv©i⁄Ba£
, 
ª£rv©i⁄Size
);

67 
	gPageAŒoˇti⁄Alig√d
::
dóŒoˇã
()

71 
PageAŒoˇti⁄Alig√d
 
tmp
;

72 
	g°d
::
sw≠
(
tmp
, *
this
);

74 
ASSERT
(
tmp
);

75 
ASSERT
(!*
this
);

77 #i‡
OS
(
DARWIN
)

78 
vm_dóŒoˇã
(
cuºít_èsk
(), 
ªöãΩªt_ˇ°
<
vm_addªss_t
>(
tmp
.
ba£
()),Åmp.
size
());

80 
ASSERT
(
tmp
.
m_ª£rv©i⁄
.
c⁄èös
—mp.
ba£
(),Åmp.
size
()));

81 
	gOSAŒoˇt‹
::
decommôAndRñó£
(
tmp
.
m_ª£rv©i⁄
.
ba£
(),Åmp.m_ª£rv©i⁄.
size
());

	@PageAllocationAligned.h

26 #i‚de‡
PageAŒoˇti⁄Alig√d_h


27 
	#PageAŒoˇti⁄Alig√d_h


	)

29 
	~<wtf/OSAŒoˇt‹.h
>

30 
	~<wtf/PageRe£rv©i⁄.h
>

32 
«me•a˚
 
	gWTF
 {

34 ˛as†
	cPageAŒoˇti⁄Alig√d
 : 
¥iv©e
 
PageBlock
 {

35 
public
:

36 
PageAŒoˇti⁄Alig√d
()

40 
usög
 
PageBlock
::
›î©‹
 
boﬁ
;

41 
usög
 
	gPageBlock
::
size
;

42 
usög
 
	gPageBlock
::
ba£
;

44 
WTF_EXPORT_PRIVATE
 
PageAŒoˇti⁄Alig√d
 
Æloˇã
(
size_t
 
size
, size_à
Æignmít
, 
OSAŒoˇt‹
::
Ußge
 
ußge
 = OSAŒoˇt‹::
UnknownUßge
, 
boﬁ
 
wrôabÀ
 = 
åue
);

46 
WTF_EXPORT_PRIVATE
 
dóŒoˇã
();

48 
	g¥iv©e
:

49 #i‡
OS
(
DARWIN
)

50 
PageAŒoˇti⁄Alig√d
(* 
ba£
, 
size_t
 
size
)

51 : 
PageBlock
(
ba£
, 
size
, 
Ál£
)

55 
PageAŒoˇti⁄Alig√d
(* 
ba£
, 
size_t
 
size
, * 
ª£rv©i⁄Ba£
, size_à
ª£rv©i⁄Size
)

56 : 
PageBlock
(
ba£
, 
size
, 
Ál£
)

57 , 
m_ª£rv©i⁄
(
ª£rv©i⁄Ba£
, 
ª£rv©i⁄Size
, 
Ál£
)

61 
PageBlock
 
	gm_ª£rv©i⁄
;

68 
usög
 
	gWTF
::
PageAŒoˇti⁄Alig√d
;

	@PageBlock.cpp

26 
	~"c⁄fig.h
"

27 
	~"PageBlock.h
"

29 #i‡
OS
(
UNIX
)

30 
	~<uni°d.h
>

33 #i‡
OS
(
WINDOWS
)

34 
	~<mÆloc.h
>

35 
	~<wödows.h
>

38 
«me•a˚
 
	gWTF
 {

40 
size_t
 
	gs_∑geSize
;

41 
size_t
 
	gs_∑geMask
;

43 #i‡
OS
(
UNIX
)

45 
ölöe
 
size_t
 
sy°emPageSize
()

47  
gë∑gesize
();

50 #ñi‡
OS
(
WINDOWS
)

52 
ölöe
 
size_t
 
sy°emPageSize
()

54 
size_t
 
	gsize
 = 0;

55 
SYSTEM_INFO
 
	gsy°em_öfo
;

56 
GëSy°emInfo
(&
sy°em_öfo
);

57 
	gsize
 = 
sy°em_öfo
.
dwPageSize
;

58  
	gsize
;

63 
size_t
 
∑geSize
()

65 i‡(!
	gs_∑geSize
)

66 
	gs_∑geSize
 = 
sy°emPageSize
();

67 
ASSERT
(
isPowîOfTwo
(
s_∑geSize
));

68  
	gs_∑geSize
;

71 
size_t
 
∑geMask
()

73 i‡(!
	gs_∑geMask
)

74 
	gs_∑geMask
 = ~(
∑geSize
() - 1);

75  
	gs_∑geMask
;

	@PageBlock.h

26 #i‚de‡
PageBlock_h


27 
	#PageBlock_h


	)

29 
«me•a˚
 
	gWTF
 {

31 
WTF_EXPORT_PRIVATE
 
size_t
 
∑geSize
();

32 
WTF_EXPORT_PRIVATE
 
size_t
 
∑geMask
();

33 
ölöe
 
boﬁ
 
isPageAlig√d
(* 
addªss
Ë{  !(
	gªöãΩªt_ˇ°
<
	göçå_t
>(
	gaddªss
Ë& (
∑geSize
() - 1)); }

34 
ölöe
 
boﬁ
 
isPageAlig√d
(
size_t
 
size
Ë{  !(
	gsize
 & (
∑geSize
() - 1)); }

35 
ölöe
 
boﬁ
 
isPowîOfTwo
(
size_t
 
size
Ë{  !(
	gsize
 & (size - 1)); }

37 ˛as†
	cPageBlock
 {

38 
	gpublic
:

39 
PageBlock
();

40 
PageBlock
(const PageBlock&);

41 
PageBlock
(*, 
size_t
, 
boﬁ
 
hasGu¨dPages
);

43 * 
ba£
(Ëc⁄° {  
	gm_ba£
; }

44 
size_t
 
size
(Ëc⁄° {  
	gm_size
; }

46 
›î©‹
 
boﬁ
(Ëc⁄° {  !!
	gm_ªÆBa£
; }

48 
boﬁ
 
c⁄èös
(* 
c⁄èöedBa£
, 
size_t
 
c⁄èöedSize
)

50  
	gc⁄èöedBa£
 >
m_ba£


51 && (
°©ic_ˇ°
<*>(
c⁄èöedBa£
Ë+ 
c⁄èöedSize
Ë<(°©ic_ˇ°<*>(
m_ba£
Ë+ 
m_size
);

54 
	g¥iv©e
:

55 * 
m_ªÆBa£
;

56 * 
	gm_ba£
;

57 
size_t
 
	gm_size
;

60 
ölöe
 
	gPageBlock
::
	$PageBlock
()

61 : 
	`m_ªÆBa£
(0)

62 , 
	`m_ba£
(0)

63 , 
	$m_size
(0)

65 
	}
}

67 
ölöe
 
	gPageBlock
::
	$PageBlock
(c⁄° 
PageBlock
& 
Ÿhî
)

68 : 
	`m_ªÆBa£
(
Ÿhî
.
m_ªÆBa£
)

69 , 
	`m_ba£
(
Ÿhî
.
m_ba£
)

70 , 
	$m_size
(
Ÿhî
.
m_size
)

72 
	}
}

74 
ölöe
 
	gPageBlock
::
	$PageBlock
(* 
ba£
, 
size_t
 
size
, 
boﬁ
 
hasGu¨dPages
)

75 : 
	`m_ªÆBa£
(
ba£
)

76 , 
	`m_ba£
(
°©ic_ˇ°
<*>(
ba£
Ë+ ((ba£ && 
hasGu¨dPages
Ë? 
	$∑geSize
() : 0))

77 , 
	$m_size
(
size
)

79 
	}
}

83 
usög
 
	gWTF
::
∑geSize
;

84 
usög
 
	gWTF
::
isPageAlig√d
;

85 
usög
 
	gWTF
::
isPageAlig√d
;

86 
usög
 
	gWTF
::
isPowîOfTwo
;

	@PageReservation.h

26 #i‚de‡
PageRe£rv©i⁄_h


27 
	#PageRe£rv©i⁄_h


	)

29 
	~<wtf/PageAŒoˇti⁄.h
>

31 
«me•a˚
 
	gWTF
 {

57 ˛as†
	cPageRe£rv©i⁄
 : 
¥iv©e
 
PageBlock
 {

58 
public
:

59 
PageRe£rv©i⁄
()

60 : 
m_commôãd
(0)

61 , 
m_wrôabÀ
(
Ál£
)

62 , 
m_execuèbÀ
(
Ál£
)

66 
usög
 
	gPageBlock
::
ba£
;

67 
usög
 
	gPageBlock
::
size
;

69 #i‚de‡
__˛™g__


70 
usög
 
	gPageBlock
::
›î©‹
 
boﬁ
;

74 
›î©‹
 
boﬁ
(Ëc⁄° {  
	gPageBlock
::operator bool(); }

77 
commô
(* 
°¨t
, 
size_t
 
size
)

79 
ASSERT
(*
this
);

80 
ASSERT
(
isPageAlig√d
(
°¨t
));

81 
ASSERT
(
isPageAlig√d
(
size
));

82 
ASSERT
(
c⁄èös
(
°¨t
, 
size
));

84 
	gm_commôãd
 +
size
;

85 
	gOSAŒoˇt‹
::
commô
(
°¨t
, 
size
, 
m_wrôabÀ
, 
m_execuèbÀ
);

88 
decommô
(* 
°¨t
, 
size_t
 
size
)

90 
ASSERT
(*
this
);

91 
ASSERT
(
isPageAlig√d
(
°¨t
));

92 
ASSERT
(
isPageAlig√d
(
size
));

93 
ASSERT
(
c⁄èös
(
°¨t
, 
size
));

95 
	gm_commôãd
 -
size
;

96 
	gOSAŒoˇt‹
::
decommô
(
°¨t
, 
size
);

99 
size_t
 
commôãd
()

101  
	gm_commôãd
;

104 
PageRe£rv©i⁄
 
ª£rve
(
size_t
 
size
, 
OSAŒoˇt‹
::
Ußge
 
ußge
 = OSAŒoˇt‹::
UnknownUßge
, 
boﬁ
 
wrôabÀ
 = 
åue
, boﬁ 
execuèbÀ
 = 
Ál£
)

106 
ASSERT
(
isPageAlig√d
(
size
));

107  
PageRe£rv©i⁄
(
OSAŒoˇt‹
::
ª£rveUncommôãd
(
size
, 
ußge
, 
wrôabÀ
, 
execuèbÀ
), size, wrôabÀ,ÉxecuèbÀ, 
Ál£
);

110 
PageRe£rv©i⁄
 
ª£rveWôhGu¨dPages
(
size_t
 
size
, 
OSAŒoˇt‹
::
Ußge
 
ußge
 = OSAŒoˇt‹::
UnknownUßge
, 
boﬁ
 
wrôabÀ
 = 
åue
, boﬁ 
execuèbÀ
 = 
Ál£
)

112 
ASSERT
(
isPageAlig√d
(
size
));

113  
PageRe£rv©i⁄
(
OSAŒoˇt‹
::
ª£rveUncommôãd
(
size
 + 
∑geSize
(Ë* 2, 
ußge
, 
wrôabÀ
, 
execuèbÀ
, 
åue
), size, writable,Éxecutable,Årue);

116 
dóŒoˇã
()

118 
ASSERT
(!
m_commôãd
);

122 
PageRe£rv©i⁄
 
	gtmp
;

123 
	g°d
::
sw≠
(
tmp
, *
this
);

125 
ASSERT
(
tmp
);

126 
ASSERT
(!*
this
);

128 
	gOSAŒoˇt‹
::
ªÀa£Decommôãd
(
tmp
.
ba£
(),Åmp.
size
());

131 
	g¥iv©e
:

132 
PageRe£rv©i⁄
(* 
ba£
, 
size_t
 
size
, 
boﬁ
 
wrôabÀ
, boﬁ 
execuèbÀ
, boﬁ 
hasGu¨dPages
)

133 : 
PageBlock
(
ba£
, 
size
, 
hasGu¨dPages
)

134 , 
m_commôãd
(0)

135 , 
m_wrôabÀ
(
wrôabÀ
)

136 , 
m_execuèbÀ
(
execuèbÀ
)

140 
size_t
 
	gm_commôãd
;

141 
boﬁ
 
	gm_wrôabÀ
;

142 
boﬁ
 
	gm_execuèbÀ
;

147 
usög
 
	gWTF
::
PageRe£rv©i⁄
;

	@ParallelJobs.h

28 #i‚de‡
P¨ÆÀlJobs_h


29 
	#P¨ÆÀlJobs_h


	)

31 
	~<wtf/As£πi⁄s.h
>

32 
	~<wtf/N⁄c›yabÀ.h
>

33 
	~<wtf/RefPå.h
>

34 
	~<wtf/Ve˘‹.h
>

52 #i‡
ENABLE
(
THREADING_GENERIC
)

53 
	~<wtf/P¨ÆÀlJobsGíîic.h
>

55 #ñi‡
ENABLE
(
THREADING_OPENMP
)

56 
	~<wtf/P¨ÆÀlJobsO≥nMP.h
>

58 #ñi‡
ENABLE
(
THREADING_LIBDISPATCH
)

59 
	~<wtf/P¨ÆÀlJobsLibdi•©ch.h
>

66 
«me•a˚
 
	gWTF
 {

68 
	gãm∂©e
<
ty≥«me
 
	gTy≥
>

69 ˛as†
	cP¨ÆÀlJobs
 {

70 
	gWTF_MAKE_FAST_ALLOCATED
;

71 
	gpublic
:

72 (*
W‹kîFun˘i⁄
)(
	tTy≥
*);

74 
P¨ÆÀlJobs
(
W‹kîFun˘i⁄
 
func
, 
ªque°edJobNumbî
) :

75 
m_∑øŒñEnvú⁄mít
(
ªöãΩªt_ˇ°
<
P¨ÆÀlEnvú⁄mít
::
ThªadFun˘i⁄
>(
func
), (
Ty≥
), 
ªque°edJobNumbî
)

77 
	gm_∑ømëîs
.
grow
(
m_∑øŒñEnvú⁄mít
.
numbîOfJobs
());

78 
ASSERT
(
numbîOfJobs
(Ë=
m_∑ømëîs
.
size
());

81 
size_t
 
numbîOfJobs
()

83  
	gm_∑ømëîs
.
size
();

86 
	gTy≥
& 
∑ømëî
(
size_t
 
i
)

88  
	gm_∑ømëîs
[
i
];

91 
execuã
()

93 
	gm_∑øŒñEnvú⁄mít
.
execuã
(
ªöãΩªt_ˇ°
<*>(
m_∑ømëîs
.
d©a
()));

96 
	g¥iv©e
:

97 
P¨ÆÀlEnvú⁄mít
 
m_∑øŒñEnvú⁄mít
;

98 
	gVe˘‹
<
	gTy≥
> 
	gm_∑ømëîs
;

103 
usög
 
	gWTF
::
P¨ÆÀlJobs
;

	@ParallelJobsGeneric.cpp

28 
	~"c⁄fig.h
"

30 #i‡
ENABLE
(
THREADING_GENERIC
)

32 
	~"P¨ÆÀlJobs.h
"

33 
	~<wtf/NumbîOfC‹es.h
>

35 
«me•a˚
 
	gWTF
 {

37 
	gVe˘‹
< 
	gRefPå
<
	gP¨ÆÀlEnvú⁄mít
::
ThªadPriv©e
> >* 
P¨ÆÀlEnvú⁄mít
::
s_thªadPoﬁ
 = 0;

39 
	gP¨ÆÀlEnvú⁄mít
::
P¨ÆÀlEnvú⁄mít
(
ThªadFun˘i⁄
 
thªadFun˘i⁄
, 
size_t
 
sizeOfP¨amëî
, 
ªque°edJobNumbî
) :

40 
m_thªadFun˘i⁄
(
thªadFun˘i⁄
),

41 
m_sizeOfP¨amëî
(
sizeOfP¨amëî
)

43 
ASSERT_ARG
(
ªque°edJobNumbî
,ÑequestedJobNumber >= 1);

45 
	gmaxNumbîOfC‹es
 = 
numbîOfPro˚ss‹C‹es
();

47 i‡(!
	gªque°edJobNumbî
 ||Ñeque°edJobNumbî > 
	gmaxNumbîOfC‹es
)

48 
	gªque°edJobNumbî
 = 
°©ic_ˇ°
<>(
maxNumbîOfC‹es
);

50 i‡(!
	gs_thªadPoﬁ
)

51 
	gs_thªadPoﬁ
 = 
√w
 
Ve˘‹
< 
RefPå
<
ThªadPriv©e
> >();

54 
	gmaxNumbîOfNewThªads
 = 
ªque°edJobNumbî
 - 1;

56 
	gi
 = 0; i < 
	gmaxNumbîOfC‹es
 && 
	gm_thªads
.
size
(Ë< 
	g°©ic_ˇ°
<>(
	gmaxNumbîOfNewThªads
); ++i) {

57 i‡(
	gs_thªadPoﬁ
->
size
(Ë< 
	g°©ic_ˇ°
<>(
	gi
) + 1U)

58 
	gs_thªadPoﬁ
->
≠≥nd
(
ThªadPriv©e
::
¸óã
());

60 i‡((*
	gs_thªadPoﬁ
)[
i
]->
åyLockF‹
(
this
))

61 
	gm_thªads
.
≠≥nd
((*
s_thªadPoﬁ
)[
i
]);

64 
	gm_numbîOfJobs
 = 
m_thªads
.
size
() + 1;

67 
	gP¨ÆÀlEnvú⁄mít
::
execuã
(* 
∑ømëîs
)

69 * 
cuºítP¨amëî
 = 
°©ic_ˇ°
<*>(
∑ømëîs
);

70 
size_t
 
	gi
;

71 
	gi
 = 0; i < 
	gm_thªads
.
size
(); ++i) {

72 
	gm_thªads
[
i
]->
execuã
(
m_thªadFun˘i⁄
, 
cuºítP¨amëî
);

73 
	gcuºítP¨amëî
 +
m_sizeOfP¨amëî
;

77 (*
	gm_thªadFun˘i⁄
)(
	gcuºítP¨amëî
);

80 
	gi
 = 0; i < 
	gm_thªads
.
size
(); ++i)

81 
	gm_thªads
[
i
]->
waôF‹Föish
();

84 
boﬁ
 
	gP¨ÆÀlEnvú⁄mít
::
ThªadPriv©e
::
åyLockF‹
(
P¨ÆÀlEnvú⁄mít
* 
∑ª¡
)

86 
boﬁ
 
locked
 = 
m_muãx
.
åyLock
();

88 i‡(!
	glocked
)

89  
	gÁl£
;

91 i‡(
	gm_∑ª¡
) {

92 
	gm_muãx
.
u∆ock
();

93  
	gÁl£
;

96 i‡(!
	gm_thªadID
)

97 
	gm_thªadID
 = 
¸óãThªad
(&
P¨ÆÀlEnvú⁄mít
::
ThªadPriv©e
::
w‹kîThªad
, 
this
, "Parallel worker");

99 i‡(
	gm_thªadID
)

100 
	gm_∑ª¡
 = 
∑ª¡
;

102 
	gm_muãx
.
u∆ock
();

103  
	gm_thªadID
;

106 
	gP¨ÆÀlEnvú⁄mít
::
ThªadPriv©e
::
execuã
(
ThªadFun˘i⁄
 
thªadFun˘i⁄
, * 
∑ømëîs
)

108 
MuãxLockî
 
lock
(
m_muãx
);

110 
	gm_thªadFun˘i⁄
 = 
thªadFun˘i⁄
;

111 
	gm_∑ømëîs
 = 
∑ømëîs
;

112 
	gm_ru¬ög
 = 
åue
;

113 
	gm_thªadC⁄dôi⁄
.
sig«l
();

116 
	gP¨ÆÀlEnvú⁄mít
::
ThªadPriv©e
::
waôF‹Föish
()

118 
MuãxLockî
 
lock
(
m_muãx
);

120 
	gm_ru¬ög
)

121 
	gm_thªadC⁄dôi⁄
.
waô
(
m_muãx
);

124 
	gP¨ÆÀlEnvú⁄mít
::
ThªadPriv©e
::
w‹kîThªad
(* 
thªadD©a
)

126 
ThªadPriv©e
* 
sh¨edThªad
 = 
ªöãΩªt_ˇ°
<ThªadPriv©e*>(
thªadD©a
);

127 
MuãxLockî
 
lock
(
sh¨edThªad
->
m_muãx
);

129 
	gsh¨edThªad
->
	gm_thªadID
) {

130 i‡(
	gsh¨edThªad
->
	gm_ru¬ög
) {

131 (*
	gsh¨edThªad
->
	gm_thªadFun˘i⁄
)(sh¨edThªad->
	gm_∑ømëîs
);

132 
	gsh¨edThªad
->
	gm_ru¬ög
 = 
Ál£
;

133 
	gsh¨edThªad
->
	gm_∑ª¡
 = 0;

134 
	gsh¨edThªad
->
	gm_thªadC⁄dôi⁄
.
sig«l
();

137 
	gsh¨edThªad
->
	gm_thªadC⁄dôi⁄
.
waô
(
sh¨edThªad
->
m_muãx
);

	@ParallelJobsGeneric.h

28 #i‚de‡
P¨ÆÀlJobsGíîic_h


29 
	#P¨ÆÀlJobsGíîic_h


	)

31 #i‡
ENABLE
(
THREADING_GENERIC
)

33 
	~<wtf/RefCou¡ed.h
>

34 
	~<wtf/Thªadög.h
>

36 
«me•a˚
 
	gWTF
 {

38 ˛as†
	cP¨ÆÀlEnvú⁄mít
 {

39 
	gWTF_MAKE_FAST_ALLOCATED
;

40 
	gpublic
:

41 (*
ThªadFun˘i⁄
)(*);

43 
WTF_EXPORT_PRIVATE
 
P¨ÆÀlEnvú⁄mít
(
ThªadFun˘i⁄
, 
size_t
 
sizeOfP¨amëî
, 
ªque°edJobNumbî
);

45 
numbîOfJobs
()

47  
	gm_numbîOfJobs
;

50 
WTF_EXPORT_PRIVATE
 
execuã
(* 
∑ømëîs
);

52 
˛ass
 
	gThªadPriv©e
 : 
public
 
RefCou¡ed
<
ThªadPriv©e
> {

53 
public
:

54 
ThªadPriv©e
()

55 : 
m_thªadID
(0)

56 , 
m_ru¬ög
(
Ál£
)

57 , 
m_∑ª¡
(0)

61 
boﬁ
 
åyLockF‹
(
P¨ÆÀlEnvú⁄mít
*);

63 
execuã
(
ThªadFun˘i⁄
, *);

65 
waôF‹Föish
();

67 
	gPassRefPå
<
	gThªadPriv©e
> 
¸óã
()

69  
ad›tRef
(
√w
 
ThªadPriv©e
());

72 
w‹kîThªad
(*);

74 
	g¥iv©e
:

75 
ThªadIdítifõr
 
m_thªadID
;

76 
boﬁ
 
	gm_ru¬ög
;

77 
P¨ÆÀlEnvú⁄mít
* 
	gm_∑ª¡
;

79 
muèbÀ
 
Muãx
 
	gm_muãx
;

80 
ThªadC⁄dôi⁄
 
	gm_thªadC⁄dôi⁄
;

82 
ThªadFun˘i⁄
 
	gm_thªadFun˘i⁄
;

83 * 
	gm_∑ømëîs
;

86 
	g¥iv©e
:

87 
ThªadFun˘i⁄
 
m_thªadFun˘i⁄
;

88 
size_t
 
	gm_sizeOfP¨amëî
;

89 
	gm_numbîOfJobs
;

91 
	gVe˘‹
< 
	gRefPå
<
	gThªadPriv©e
> > 
	gm_thªads
;

92 
	gVe˘‹
< 
	gRefPå
<
	gThªadPriv©e
> >* 
	gs_thªadPoﬁ
;

	@ParallelJobsLibdispatch.h

28 #i‚de‡
P¨ÆÀlJobsLibdi•©ch_h


29 
	#P¨ÆÀlJobsLibdi•©ch_h


	)

31 #i‡
ENABLE
(
THREADING_LIBDISPATCH
)

33 
	~<di•©ch/di•©ch.h
>

35 
«me•a˚
 
	gWTF
 {

37 ˛as†
	cP¨ÆÀlEnvú⁄mít
 {

38 
	gWTF_MAKE_FAST_ALLOCATED
;

39 
	gpublic
:

40 (*
ThªadFun˘i⁄
)(*);

42 
P¨ÆÀlEnvú⁄mít
(
ThªadFun˘i⁄
 
thªadFun˘i⁄
, 
size_t
 
sizeOfP¨amëî
, 
ªque°edJobNumbî
)

43 : 
m_thªadFun˘i⁄
(
thªadFun˘i⁄
)

44 , 
m_sizeOfP¨amëî
(
sizeOfP¨amëî
)

45 , 
m_numbîOfJobs
(
ªque°edJobNumbî
)

48 
ASSERT_ARG
(
ªque°edJobNumbî
,ÑequestedJobNumber > 0);

51 
numbîOfJobs
()

53  
	gm_numbîOfJobs
;

56 
execuã
(* 
∑ømëîs
)

58 
di•©ch_queue_t
 
	gglobÆQueue
 = 
di•©ch_gë_globÆ_queue
(
DISPATCH_QUEUE_PRIORITY_DEFAULT
, 0);

60 
di•©ch_≠∂y
(
m_numbîOfJobs
, 
globÆQueue
, ^(
size_t
 
i
Ë{ (*
m_thªadFun˘i⁄
)(
∑ømëîs
 + (
m_sizeOfP¨amëî
 * i)); });

63 
	g¥iv©e
:

64 
ThªadFun˘i⁄
 
m_thªadFun˘i⁄
;

65 
size_t
 
	gm_sizeOfP¨amëî
;

66 
	gm_numbîOfJobs
;

	@ParallelJobsOpenMP.h

28 #i‚de‡
P¨ÆÀlJobsO≥nMP_h


29 
	#P¨ÆÀlJobsO≥nMP_h


	)

31 #i‡
ENABLE
(
THREADING_OPENMP
)

33 
	~<omp.h
>

35 
«me•a˚
 
	gWTF
 {

37 ˛as†
	cP¨ÆÀlEnvú⁄mít
 {

38 
WTF_MAKE_NONCOPYABLE
(
P¨ÆÀlEnvú⁄mít
);

39 
	gpublic
:

40 (*
ThªadFun˘i⁄
)(*);

42 
P¨ÆÀlEnvú⁄mít
(
ThªadFun˘i⁄
 
thªadFun˘i⁄
, 
size_t
 
sizeOfP¨amëî
, 
ªque°edJobNumbî
) :

43 
m_thªadFun˘i⁄
(
thªadFun˘i⁄
),

44 
m_sizeOfP¨amëî
(
sizeOfP¨amëî
)

46 
	gmaxNumbîOfThªads
 = 
omp_gë_max_thªads
();

48 i‡(!
	gªque°edJobNumbî
 ||Ñeque°edJobNumbî > 
	gmaxNumbîOfThªads
)

49 
	gªque°edJobNumbî
 = 
maxNumbîOfThªads
;

51 
ASSERT
(
ªque°edJobNumbî
 > 0);

53 
	gm_numbîOfJobs
 = 
ªque°edJobNumbî
;

57 
numbîOfJobs
()

59  
	gm_numbîOfJobs
;

62 
execuã
(* 
∑ømëîs
)

64 
omp_£t_num_thªads
(
m_numbîOfJobs
);

66 #¥agm®
omp
 
∑øŒñ
 

67 
	gi
 = 0; i < 
	gm_numbîOfJobs
; ++i)

68 (*
	gm_thªadFun˘i⁄
)(
	g∑ømëîs
 + 
i
 * 
	gm_sizeOfP¨amëî
);

71 
	g¥iv©e
:

72 
ThªadFun˘i⁄
 
m_thªadFun˘i⁄
;

73 
size_t
 
	gm_sizeOfP¨amëî
;

74 
	gm_numbîOfJobs
;

	@PassOwnPtr.h

26 #i‚de‡
WTF_PassOwnPå_h


27 
	#WTF_PassOwnPå_h


	)

29 
	~<c°ddef
>

30 
	~<wtf/As£πi⁄s.h
>

31 
	~<wtf/GëPå.h
>

32 
	~<wtf/OwnPåComm⁄.h
>

33 
	~<ty≥_åaôs
>

35 
«me•a˚
 
	gWTF
 {

37 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gOwnPå
;

38 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPassOwnPå
;

39 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gPassOwnPå
<T> 
ad›tPå
(
T
*);

41 
˛ass
 
	gRefCou¡edBa£
;

42 
˛ass
 
	gThªadSa„RefCou¡edBa£
;

44 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cPassOwnPå
 {

45 
	gpublic
:

46 
T
 
	tVÆueTy≥
;

47 
VÆueTy≥
* 
	tPåTy≥
;

49 
PassOwnPå
(Ë: 
m_±r
(0) { }

50 
PassOwnPå
(
°d
::
nuŒ±r_t
Ë: 
m_±r
(0) { }

55 
PassOwnPå
(c⁄° PassOwnPå& 
o
Ë: 
m_±r
(o.
ÀakPå
()) { }

56 
ãm∂©e
<
ty≥«me
 
U
> 
PassOwnPå
(c⁄° PassOwnPå<U>& 
o
Ë: 
m_±r
(o.
ÀakPå
()) { }

58 ~
PassOwnPå
(Ë{ 
dñëeOw√dPå
(
m_±r
); }

60 
PåTy≥
 
gë
(Ëc⁄° {  
	gm_±r
; }

62 
PåTy≥
 
ÀakPå
(Ëc⁄° 
	gWARN_UNUSED_RETURN
;

64 
	gVÆueTy≥
& 
	g›î©‹
*(Ëc⁄° { 
ASSERT
(
m_±r
);  *
	gm_±r
; }

65 
PåTy≥
 
	g›î©‹
->(Ëc⁄° { 
ASSERT
(
m_±r
);  
	gm_±r
; }

67 
boﬁ
 
	g›î©‹
!(Ëc⁄° {  !
	gm_±r
; }

70 
PåTy≥
 
	tPassOwnPå
::*
	tUn•ecifõdBoﬁTy≥
;

71 
›î©‹
 
Un•ecifõdBoﬁTy≥
(Ëc⁄° {  
	gm_±r
 ? &
	gPassOwnPå
::
m_±r
 : 0; }

73 
	gPassOwnPå
& 
	g›î©‹
=(c⁄° 
PassOwnPå
&Ë{ 
COMPILE_ASSERT
(!(
T
*), 
PassOwnPå_should_√vî_be_assig√d_to
);  *
	gthis
; }

75 
	gãm∂©e
<
ty≥«me
 
	gU
> 
‰õnd
 
	gPassOwnPå
<U> 
ad›tPå
(
U
*);

77 
	g¥iv©e
:

78 
ex∂icô
 
PassOwnPå
(
PåTy≥
 
±r
Ë: 
m_±r
(ptr) { }

82 
ãm∂©e
<
ty≥«me
 
U
> 
boﬁ
 
›î©‹
==(c⁄° 
PassOwnPå
<U>&Ë{ 
COMPILE_ASSERT
(!(U*), 
OwnPås_should_√vî_be_equÆ
);  
	gÁl£
; }

83 
	gãm∂©e
<
ty≥«me
 
	gU
> 
boﬁ
 
	g›î©‹
!=(c⁄° 
PassOwnPå
<
U
>&Ë{ 
COMPILE_ASSERT
(!(U*), 
OwnPås_should_√vî_be_equÆ
);  
	gÁl£
; }

84 
	gãm∂©e
<
ty≥«me
 
	gU
> 
boﬁ
 
	g›î©‹
==(c⁄° 
OwnPå
<
U
>&Ë{ 
COMPILE_ASSERT
(!(U*), 
OwnPås_should_√vî_be_equÆ
);  
	gÁl£
; }

85 
	gãm∂©e
<
ty≥«me
 
	gU
> 
boﬁ
 
	g›î©‹
!=(c⁄° 
OwnPå
<
U
>&Ë{ 
COMPILE_ASSERT
(!(U*), 
OwnPås_should_√vî_be_equÆ
);  
	gÁl£
; }

87 
muèbÀ
 
PåTy≥
 
	gm_±r
;

90 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
Åy≥«mê
	gPassOwnPå
<T>::
PåTy≥
 
PassOwnPå
<
T
>::
	$ÀakPå
() const

92 
PåTy≥
 
±r
 = 
m_±r
;

93 
m_±r
 = 0;

94  
±r
;

95 
	}
}

97 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
PassOwnPå
<
T
>& 
a
, c⁄° 
	gPassOwnPå
<U>& 
	gb
)

99  
	ga
.
gë
(Ë=
b
.get();

102 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
PassOwnPå
<
T
>& 
a
, c⁄° 
	gOwnPå
<U>& 
	gb
)

104  
	ga
.
gë
(Ë=
b
.get();

107 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
OwnPå
<
T
>& 
a
, c⁄° 
	gPassOwnPå
<U>& 
	gb
)

109  
	ga
.
gë
(Ë=
b
.get();

112 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
PassOwnPå
<
T
>& 
a
, 
U
* 
	gb
)

114  
	ga
.
gë
(Ë=
b
;

117 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(
T
* 
a
, c⁄° 
	gPassOwnPå
<U>& 
	gb
)

119  
	ga
 =
b
.
gë
();

122 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
PassOwnPå
<
T
>& 
a
, c⁄° 
	gPassOwnPå
<U>& 
	gb
)

124  
	ga
.
gë
(Ë!
b
.get();

127 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
PassOwnPå
<
T
>& 
a
, c⁄° 
	gOwnPå
<U>& 
	gb
)

129  
	ga
.
gë
(Ë!
b
.get();

132 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
OwnPå
<
T
>& 
a
, c⁄° 
	gPassOwnPå
<U>& 
	gb
)

134  
	ga
.
gë
(Ë!
b
.get();

137 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
PassOwnPå
<
T
>& 
a
, 
U
* 
	gb
)

139  
	ga
.
gë
(Ë!
b
;

142 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(
T
* 
a
, c⁄° 
	gPassOwnPå
<U>& 
	gb
)

144  
	ga
 !
b
.
gë
();

147 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gPassOwnPå
<T> 
	$ad›tPå
(
T
* 
±r
)

149 
	`°©ic_as£π
(!
°d
::
is_c⁄vîtibÀ
<
T
*, 
RefCou¡edBa£
*>::
vÆue
, "DoÇot useádoptPtr with RefCounted, useádoptRef!");

150 
	`°©ic_as£π
(!
°d
::
is_c⁄vîtibÀ
<
T
*, 
ThªadSa„RefCou¡edBa£
*>::
vÆue
, "DoÇot useádoptPtr with ThreadSafeRefCounted, useádoptRef!");

152  
PassOwnPå
<
T
>(
±r
);

153 
	}
}

155 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
	gPassOwnPå
<T> 
°©ic_poöãr_ˇ°
(c⁄° 
PassOwnPå
<
U
>& 
p
)

157  
ad›tPå
(
°©ic_ˇ°
<
T
*>(
p
.
ÀakPå
()));

160 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gIsSm¨tPå
<
	gPassOwnPå
<T>> {

161 c⁄° 
boﬁ
 
	gvÆue
 = 
åue
;

166 
usög
 
	gWTF
::
PassOwnPå
;

167 
usög
 
	gWTF
::
ad›tPå
;

168 
usög
 
	gWTF
::
°©ic_poöãr_ˇ°
;

	@PassRef.h

21 #i‚de‡
WTF_PassRef_h


22 
	#WTF_PassRef_h


	)

24 
	~"As£πi⁄s.h
"

25 
	~<c°ddef
>

26 
	~<utûôy
>

28 
«me•a˚
 
	gWTF
 {

30 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPassRef
;

31 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPassRefPå
;

32 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gRef
;

33 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gRefPå
;

35 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gPassRef
<T> 
ad›tRef
(
T
&);

37 
ölöe
 
ad›ãd
(const *) { }

39 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cPassRef
 {

40 
	gpublic
:

41 
PassRef
(
T
&);

42 
PassRef
(PassRef&&);

43 
	gãm∂©e
<
ty≥«me
 
	gU
> 
PassRef
(PassRef<
U
>);

45 c⁄° 
	gT
& 
gë
() const;

46 
	gT
& 
gë
();

48 
dr›Ref
();

49 
	gT
& 
ÀakRef
(Ë
	gWARN_UNUSED_RETURN
;

51 #i‚de‡
NDEBUG


52 ~
PassRef
();

55 
	g¥iv©e
:

56 
‰õnd
 
PassRef
 
ad›tRef
<
T
>(T&);

58 
	gãm∂©e
<
ty≥«me
 
	gU
> 
‰õnd
 
˛ass
 
	gPassRef
;

59 
	gãm∂©e
<
ty≥«me
 
	gU
> 
‰õnd
 
˛ass
 
	gPassRefPå
;

60 
	gãm∂©e
<
ty≥«me
 
	gU
> 
‰õnd
 
˛ass
 
	gRef
;

61 
	gãm∂©e
<
ty≥«me
 
	gU
> 
‰õnd
 
˛ass
 
	gRefPå
;

63 
	eAd›tTag
 { 
	gAd›t
 };

64 
PassRef
(
T
&, 
Ad›tTag
);

66 
	gT
& 
	gm_ª„ªn˚
;

68 #i‚de‡
NDEBUG


69 
boﬁ
 
	gm_gaveUpRe„ªn˚
;

73 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gPassRef
<T>::
	$PassRef
(
T
& 
ª„ªn˚
)

74 : 
	$m_ª„ªn˚
(
ª„ªn˚
)

75 #i‚de‡
NDEBUG


76 , 
	$m_gaveUpRe„ªn˚
(
Ál£
)

79 
ª„ªn˚
.
	`ªf
();

80 
	}
}

82 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gPassRef
<T>::
	$PassRef
(
PassRef
&& 
Ÿhî
)

83 : 
	`m_ª„ªn˚
(
Ÿhî
.
	$ÀakRef
())

84 #i‚de‡
NDEBUG


85 , 
	$m_gaveUpRe„ªn˚
(
Ál£
)

88 
	}
}

90 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gPassRef
<T>::
PassRef
(PassRef<
U
> 
Ÿhî
)

91 : 
m_ª„ªn˚
(
Ÿhî
.
	$ÀakRef
())

92 #i‚de‡
NDEBUG


93 , 
	$m_gaveUpRe„ªn˚
(
Ál£
)

96 
	}
}

98 #i‚de‡
NDEBUG


100 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gPassRef
<T>::~
	$PassRef
()

102 
	`ASSERT
(
m_gaveUpRe„ªn˚
);

103 
	}
}

107 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gPassRef
<T>::
	$dr›Ref
()

109 
	`ASSERT
(!
m_gaveUpRe„ªn˚
);

110 
m_ª„ªn˚
.
	`dîef
();

111 #i‚de‡
NDEBUG


112 
m_gaveUpRe„ªn˚
 = 
åue
;

114 
	}
}

116 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 c⁄° T& 
	gPassRef
<T>::
	$gë
() const

118 
	`ASSERT
(!
m_gaveUpRe„ªn˚
);

119  
m_ª„ªn˚
;

120 
	}
}

122 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 T& 
	gPassRef
<T>::
	$gë
()

124 
	`ASSERT
(!
m_gaveUpRe„ªn˚
);

125  
m_ª„ªn˚
;

126 
	}
}

128 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 T& 
	gPassRef
<T>::
	$ÀakRef
()

130 #i‚de‡
NDEBUG


131 
	`ASSERT
(!
m_gaveUpRe„ªn˚
);

132 
m_gaveUpRe„ªn˚
 = 
åue
;

134  
m_ª„ªn˚
;

135 
	}
}

137 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gPassRef
<T>::
	$PassRef
(
T
& 
ª„ªn˚
, 
Ad›tTag
)

138 : 
	$m_ª„ªn˚
(
ª„ªn˚
)

139 #i‚de‡
NDEBUG


140 , 
	$m_gaveUpRe„ªn˚
(
Ál£
)

143 
	}
}

145 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gPassRef
<T> 
	$ad›tRef
(
T
& 
ª„ªn˚
)

147 
	`ad›ãd
(&
ª„ªn˚
);

148  
PassRef
<
T
>(
ª„ªn˚
, PassRef<T>::
Ad›t
);

149 
	}
}

151 
	gãm∂©e
<
ty≥«me
 
	gT
, 
	gty≥«me
... 
	gArgs
> 
ölöe
 
	gPassRef
<T> 
	$¸óãRefCou¡ed
(
Args
&&... 
¨gs
)

153  
	`ad›tRef
(*
√w
 
	`T
(
°d
::
f‹w¨d
<
Args
>(
¨gs
)...));

154 
	}
}

158 
usög
 
	gWTF
::
PassRef
;

159 
usög
 
	gWTF
::
ad›tRef
;

160 
usög
 
	gWTF
::
¸óãRefCou¡ed
;

	@PassRefPtr.h

21 #i‚de‡
WTF_PassRefPå_h


22 
	#WTF_PassRefPå_h


	)

24 
	~<wtf/GëPå.h
>

25 
	~<wtf/PassRef.h
>

27 
«me•a˚
 
	gWTF
 {

29 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gPassRefPå
<T> 
ad›tRef
(
T
*);

31 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ALWAYS_INLINE
 
ªfIfNŸNuŒ
(
T
* 
±r
)

33 i‡(
LIKELY
(
±r
 !
nuŒ±r
))

34 
±r
->
ªf
();

37 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ALWAYS_INLINE
 
dîefIfNŸNuŒ
(
T
* 
±r
)

39 i‡(
LIKELY
(
±r
 !
nuŒ±r
))

40 
±r
->
dîef
();

43 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cPassRefPå
 {

44 
	gpublic
:

45 
T
 
	tVÆueTy≥
;

46 
VÆueTy≥
* 
	tPåTy≥
;

48 
PassRefPå
(Ë: 
m_±r
(
nuŒ±r
) { }

49 
PassRefPå
(
T
* 
±r
Ë: 
m_±r
’åË{ 
ªfIfNŸNuŒ
(ptr); }

53 
PassRefPå
(c⁄° PassRefPå& 
o
Ë: 
m_±r
(o.
ÀakRef
()) { }

54 
ãm∂©e
<
ty≥«me
 
U
> 
PassRefPå
(c⁄° PassRefPå<U>& 
o
Ë: 
m_±r
(o.
ÀakRef
()) { }

56 
ALWAYS_INLINE
 ~
PassRefPå
(Ë{ 
dîefIfNŸNuŒ
(
m_±r
); }

58 
	gãm∂©e
<
ty≥«me
 
	gU
> 
PassRefPå
(c⁄° 
RefPå
<
U
>&);

59 
	gãm∂©e
<
ty≥«me
 
	gU
> 
PassRefPå
(
PassRef
<
U
> 
ª„ªn˚
Ë: 
m_±r
(&ª„ªn˚.
ÀakRef
()) { }

61 
T
* 
gë
(Ëc⁄° {  
m_±r
; }

63 
T
* 
ÀakRef
(Ëc⁄° 
	gWARN_UNUSED_RETURN
;

65 
	gT
& 
	g›î©‹
*(Ëc⁄° {  *
	gm_±r
; }

66 
T
* 
	g›î©‹
->(Ëc⁄° {  
	gm_±r
; }

68 
boﬁ
 
	g›î©‹
!(Ëc⁄° {  !
	gm_±r
; }

71 
	gT
* (
	tPassRefPå
::*
	tUn•ecifõdBoﬁTy≥
);

72 
›î©‹
 
Un•ecifõdBoﬁTy≥
(Ëc⁄° {  
	gm_±r
 ? &
	gPassRefPå
::
m_±r
 : 
nuŒ±r
; }

74 
‰õnd
 
PassRefPå
 
	gad›tRef
<
	gT
>(T*);

76 
	g¥iv©e
:

77 
PassRefPå
& 
›î©‹
=(c⁄° PassRefPå&Ë
dñëe
;

79 
	eAd›tTag
 { 
	gAd›t
 };

80 
PassRefPå
(
T
* 
±r
, 
Ad›tTag
Ë: 
m_±r
(ptr) { }

82 
muèbÀ
 
T
* 
m_±r
;

85 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gPassRefPå
<T>::
PassRefPå
(c⁄° 
RefPå
<
U
>& 
o
)

86 : 
m_±r
(
o
.
	$gë
())

88 
T
* 
±r
 = 
m_±r
;

89 
	`ªfIfNŸNuŒ
(
±r
);

90 
	}
}

92 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
T
* 
	gPassRefPå
<T>::
	$ÀakRef
() const

94 
T
* 
±r
 = 
m_±r
;

95 
m_±r
 = 
nuŒ±r
;

96  
±r
;

97 
	}
}

99 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
PassRefPå
<
T
>& 
a
, c⁄° 
	gPassRefPå
<U>& 
	gb
)

101  
	ga
.
gë
(Ë=
b
.get();

104 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
PassRefPå
<
T
>& 
a
, c⁄° 
	gRefPå
<U>& 
	gb
)

106  
	ga
.
gë
(Ë=
b
.get();

109 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
RefPå
<
T
>& 
a
, c⁄° 
	gPassRefPå
<U>& 
	gb
)

111  
	ga
.
gë
(Ë=
b
.get();

114 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
PassRefPå
<
T
>& 
a
, 
U
* 
	gb
)

116  
	ga
.
gë
(Ë=
b
;

119 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(
T
* 
a
, c⁄° 
	gPassRefPå
<U>& 
	gb
)

121  
	ga
 =
b
.
gë
();

124 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
PassRefPå
<
T
>& 
a
, c⁄° 
	gPassRefPå
<U>& 
	gb
)

126  
	ga
.
gë
(Ë!
b
.get();

129 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
PassRefPå
<
T
>& 
a
, c⁄° 
	gRefPå
<U>& 
	gb
)

131  
	ga
.
gë
(Ë!
b
.get();

134 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
RefPå
<
T
>& 
a
, c⁄° 
	gPassRefPå
<U>& 
	gb
)

136  
	ga
.
gë
(Ë!
b
.get();

139 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
PassRefPå
<
T
>& 
a
, 
U
* 
	gb
)

141  
	ga
.
gë
(Ë!
b
;

144 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(
T
* 
a
, c⁄° 
	gPassRefPå
<U>& 
	gb
)

146  
	ga
 !
b
.
gë
();

149 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gPassRefPå
<T> 
	$ad›tRef
(
T
* 
p
)

151 
	`ad›ãd
(
p
);

152  
PassRefPå
<
T
>(
p
, PassRefPå<T>::
Ad›t
);

153 
	}
}

155 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
	gPassRefPå
<T> 
°©ic_poöãr_ˇ°
(c⁄° 
PassRefPå
<
U
>& 
p
)

157  
ad›tRef
(
°©ic_ˇ°
<
T
*>(
p
.
ÀakRef
()));

160 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gIsSm¨tPå
<
	gPassRefPå
<T>> {

161 c⁄° 
boﬁ
 
	gvÆue
 = 
åue
;

166 
usög
 
	gWTF
::
PassRefPå
;

167 
usög
 
	gWTF
::
ad›tRef
;

168 
usög
 
	gWTF
::
°©ic_poöãr_ˇ°
;

	@Platform.h

28 #i‚de‡
WTF_Pœtf‹m_h


29 
	#WTF_Pœtf‹m_h


	)

32 
	#ENABLE_VMOLAB
 1

	)

33 
	#ENABLE_VMOLAB_TIME
 1

	)

36 
	~<wtf/Compûî.h
>

41 
	#PLATFORM
(
WTF_FEATURE
Ë(
deföed
 
WTF_PLATFORM_
##WTF_FEATURE && WTF_PLATFORM_##WTF_FEATURE)

	)

47 
	#CPU
(
WTF_FEATURE
Ë(
deföed
 
WTF_CPU_
##WTF_FEATURE && WTF_CPU_##WTF_FEATURE)

	)

49 
	#HAVE
(
WTF_FEATURE
Ë(
deföed
 
HAVE_
##WTF_FEATURE && HAVE_##WTF_FEATURE)

	)

52 
	#OS
(
WTF_FEATURE
Ë(
deföed
 
WTF_OS_
##WTF_FEATURE && WTF_OS_##WTF_FEATURE)

	)

58 
	#USE
(
WTF_FEATURE
Ë(
deföed
 
WTF_USE_
##WTF_FEATURE && WTF_USE_##WTF_FEATURE)

	)

60 
	#ENABLE
(
WTF_FEATURE
Ë(
deföed
 
ENABLE_
##WTF_FEATURE && ENABLE_##WTF_FEATURE)

	)

68 #i‡
deföed
(
__Æpha__
)

69 
	#WTF_CPU_ALPHA
 1

	)

73 #i‡
deföed
(
__hµa__
Ë|| deföed(
__hµa64__
)

74 
	#WTF_CPU_HPPA
 1

	)

75 
	#WTF_CPU_BIG_ENDIAN
 1

	)

79 #i‡
deföed
(
__ü64__
)

80 
	#WTF_CPU_IA64
 1

	)

82 #i‡!
deföed
(
__LP64__
)

83 
	#WTF_CPU_IA64_32
 1

	)

89 #i‡(
deföed
(
mùs
Ë|| deföed(
__mùs__
Ë|| deföed(
MIPS
Ë|| deföed(
_MIPS_
)) \

90 && 
	$deföed
(
_ABIO32
)

91 
	#WTF_CPU_MIPS
 1

	)

92 #i‡
	`deföed
(
__MIPSEB__
)

93 
	#WTF_CPU_BIG_ENDIAN
 1

	)

95 
	#WTF_MIPS_PIC
 (
deföed
 
__PIC__
)

	)

96 
	#WTF_MIPS_ARCH
 
__mùs


	)

97 
	#WTF_MIPS_ISA
(
v
Ë(
deföed
 
WTF_MIPS_ARCH
 && WTF_MIPS_ARCH =v)

	)

98 
	#WTF_MIPS_ISA_AT_LEAST
(
v
Ë(
deföed
 
WTF_MIPS_ARCH
 && WTF_MIPS_ARCH >v)

	)

99 
	#WTF_MIPS_ARCH_REV
 
__mùs_iß_ªv


	)

100 
	#WTF_MIPS_ISA_REV
(
v
Ë(
deföed
 
WTF_MIPS_ARCH_REV
 && WTF_MIPS_ARCH_REV =v)

	)

101 
	#WTF_MIPS_DOUBLE_FLOAT
 (
deföed
 
__mùs_h¨d_Êﬂt
 && !deföed 
__mùs_sögÀ_Êﬂt
)

	)

102 
	#WTF_MIPS_FP64
 (
deföed
 
__mùs_Âr
 && __mùs_Â∏=64)

	)

104 
	#WTF_USE_ARENA_ALLOC_ALIGNMENT_INTEGER
 1

	)

108 #i‡–
	`deföed
(
__µc__
) \

109 || 
	`deföed
(
__PPC__
) \

110 || 
	`deföed
(
__powîpc__
) \

111 || 
	`deföed
(
__powîpc
) \

112 || 
	`deföed
(
__POWERPC__
) \

113 || 
	`deföed
(
_M_PPC
) \

114 || 
	`deföed
(
__PPC
)) \

115 && 
	`deföed
(
__BYTE_ORDER__
) \

116 && (
__BYTE_ORDER__
 =
__ORDER_BIG_ENDIAN__
)

117 
	#WTF_CPU_PPC
 1

	)

118 
	#WTF_CPU_BIG_ENDIAN
 1

	)

122 #i‡–
	`deföed
(
__µc64__
) \

123 || 
	`deföed
(
__PPC64__
)) \

124 && 
	`deföed
(
__BYTE_ORDER__
) \

125 && (
__BYTE_ORDER__
 =
__ORDER_BIG_ENDIAN__
)

126 
	#WTF_CPU_PPC64
 1

	)

127 
	#WTF_CPU_BIG_ENDIAN
 1

	)

131 #i‡–
	`deföed
(
__µc64__
) \

132 || 
	`deföed
(
__PPC64__
) \

133 || 
	`deföed
(
__µc64À__
) \

134 || 
	`deföed
(
__PPC64LE__
)) \

135 && 
	`deföed
(
__BYTE_ORDER__
) \

136 && (
__BYTE_ORDER__
 =
__ORDER_LITTLE_ENDIAN__
)

137 
	#WTF_CPU_PPC64LE
 1

	)

141 #i‡
	`deföed
(
__SH4__
)

142 
	#WTF_CPU_SH4
 1

	)

146 #i‡
	`deföed
(
__s390x__
)

147 
	#WTF_CPU_S390X
 1

	)

148 
	#WTF_CPU_BIG_ENDIAN
 1

	)

152 #i‡
	`deföed
(
__s390__
)

153 
	#WTF_CPU_S390
 1

	)

154 
	#WTF_CPU_BIG_ENDIAN
 1

	)

158 #i‡ 
	`deföed
(
__i386__
) \

159 || 
	`deföed
(
i386
) \

160 || 
	`deföed
(
_M_IX86
) \

161 || 
	`deföed
(
_X86_
) \

162 || 
	$deföed
(
__THW_INTEL
)

163 
	#WTF_CPU_X86
 1

	)

167 #i‡ 
	`deföed
(
__x86_64__
) \

168 || 
	$deföed
(
_M_X64
)

169 
	#WTF_CPU_X86_64
 1

	)

173 #i‡(
	`deföed
(
__¨m64__
Ë&& deföed(
__APPLE__
)Ë|| deföed(
__Ørch64__
)

174 
	#WTF_CPU_ARM64
 1

	)

178 
	#WTF_ARM_ARCH_AT_LEAST
(
N
Ë(
	`CPU
(
ARM
Ë&& 
WTF_ARM_ARCH_VERSION
 >N)

	)

180 #i‡ 
	`deföed
(
¨m
) \

181 || 
	`deföed
(
__¨m__
) \

182 || 
	`deföed
(
ARM
) \

183 || 
	$deföed
(
_ARM_
)

184 
	#WTF_CPU_ARM
 1

	)

186 #i‡
	`deföed
(
__ARM_PCS_VFP
)

187 
	#WTF_CPU_ARM_HARDFP
 1

	)

190 #i‡
	`deföed
(
__ARMEB__
)

191 
	#WTF_CPU_BIG_ENDIAN
 1

	)

193 #ñi‡!
	`deföed
(
__ARM_EABI__
) \

194 && !
	`deföed
(
__EABI__
) \

195 && !
	`deföed
(
__VFP_FP__
) \

196 && !
	$deföed
(
_WIN32_WCE
)

197 
	#WTF_CPU_MIDDLE_ENDIAN
 1

	)

202 #i‡ 
	`deföed
(
__ARM_ARCH_4__
) \

203 || 
	`deföed
(
__ARM_ARCH_4T__
) \

204 || 
	$deföed
(
__MARM_ARMV4__
)

205 
	#WTF_ARM_ARCH_VERSION
 4

	)

207 #ñi‡
	`deföed
(
__ARM_ARCH_5__
) \

208 || 
	`deföed
(
__ARM_ARCH_5T__
) \

209 || 
	$deföed
(
__MARM_ARMV5__
)

210 
	#WTF_ARM_ARCH_VERSION
 5

	)

212 #ñi‡
	`deföed
(
__ARM_ARCH_5E__
) \

213 || 
	`deföed
(
__ARM_ARCH_5TE__
) \

214 || 
	$deföed
(
__ARM_ARCH_5TEJ__
)

215 
	#WTF_ARM_ARCH_VERSION
 5

	)

217 
	#WTF_USE_ARENA_ALLOC_ALIGNMENT_INTEGER
 1

	)

219 #ñi‡
	`deföed
(
__ARM_ARCH_6__
) \

220 || 
	`deföed
(
__ARM_ARCH_6J__
) \

221 || 
	`deföed
(
__ARM_ARCH_6K__
) \

222 || 
	`deföed
(
__ARM_ARCH_6Z__
) \

223 || 
	`deföed
(
__ARM_ARCH_6ZK__
) \

224 || 
	`deföed
(
__ARM_ARCH_6T2__
) \

225 || 
	$deföed
(
__ARMV6__
)

226 
	#WTF_ARM_ARCH_VERSION
 6

	)

228 #ñi‡
	`deföed
(
__ARM_ARCH_7A__
) \

229 || 
	`deföed
(
__ARM_ARCH_7K__
) \

230 || 
	`deföed
(
__ARM_ARCH_7R__
) \

231 || 
	$deföed
(
__ARM_ARCH_7S__
)

232 
	#WTF_ARM_ARCH_VERSION
 7

	)

234 #ñi‡
	`deföed
(
__ARM_ARCH_8__
)

235 
	#WTF_ARM_ARCH_VERSION
 8

	)

238 #ñi‡
	`deföed
(
_M_ARM
)

239 
	#WTF_ARM_ARCH_VERSION
 
_M_ARM


	)

242 #ñi‡
	`deföed
(
__TARGET_ARCH_ARM
)

243 
	#WTF_ARM_ARCH_VERSION
 
__TARGET_ARCH_ARM


	)

245 #i‡
	`deföed
(
__TARGET_ARCH_5E
) \

246 || 
	`deföed
(
__TARGET_ARCH_5TE
) \

247 || 
	$deföed
(
__TARGET_ARCH_5TEJ
)

249 
	#WTF_USE_ARENA_ALLOC_ALIGNMENT_INTEGER
 1

	)

253 
	#WTF_ARM_ARCH_VERSION
 0

	)

258 #i‡ 
	`deföed
(
__ARM_ARCH_4T__
)

259 
	#WTF_THUMB_ARCH_VERSION
 1

	)

261 #ñi‡
	`deföed
(
__ARM_ARCH_5T__
) \

262 || 
	`deföed
(
__ARM_ARCH_5TE__
) \

263 || 
	$deföed
(
__ARM_ARCH_5TEJ__
)

264 
	#WTF_THUMB_ARCH_VERSION
 2

	)

266 #ñi‡
	`deföed
(
__ARM_ARCH_6J__
) \

267 || 
	`deföed
(
__ARM_ARCH_6K__
) \

268 || 
	`deföed
(
__ARM_ARCH_6Z__
) \

269 || 
	`deföed
(
__ARM_ARCH_6ZK__
) \

270 || 
	$deföed
(
__ARM_ARCH_6M__
)

271 
	#WTF_THUMB_ARCH_VERSION
 3

	)

273 #ñi‡
	`deföed
(
__ARM_ARCH_6T2__
) \

274 || 
	`deföed
(
__ARM_ARCH_7__
) \

275 || 
	`deföed
(
__ARM_ARCH_7A__
) \

276 || 
	`deföed
(
__ARM_ARCH_7K__
) \

277 || 
	`deföed
(
__ARM_ARCH_7M__
) \

278 || 
	`deföed
(
__ARM_ARCH_7R__
) \

279 || 
	$deföed
(
__ARM_ARCH_7S__
)

280 
	#WTF_THUMB_ARCH_VERSION
 4

	)

283 #ñi‡
	`deföed
(
__TARGET_ARCH_THUMB
)

284 
	#WTF_THUMB_ARCH_VERSION
 
__TARGET_ARCH_THUMB


	)

287 
	#WTF_THUMB_ARCH_VERSION
 0

	)

294 #i‡!
	`deföed
(
ARMV5_OR_LOWER
Ë&& !
	`WTF_ARM_ARCH_AT_LEAST
(6)

295 
	#WTF_CPU_ARMV5_OR_LOWER
 1

	)

302 #i‡!
	`deföed
(
WTF_CPU_ARM_TRADITIONAL
Ë&& !deföed(
WTF_CPU_ARM_THUMB2
)

303 #i‡
	`deföed
(
thumb2
Ë|| deföed(
__thumb2__
) \

304 || ((
	`deföed
(
__thumb
Ë|| deföed(
__thumb__
)Ë&& 
WTF_THUMB_ARCH_VERSION
 == 4)

305 
	#WTF_CPU_ARM_TRADITIONAL
 0

	)

306 
	#WTF_CPU_ARM_THUMB2
 1

	)

307 #ñi‡
	`WTF_ARM_ARCH_AT_LEAST
(4)

308 
	#WTF_CPU_ARM_TRADITIONAL
 1

	)

309 
	#WTF_CPU_ARM_THUMB2
 0

	)

313 #ñi‡
	`CPU
(
ARM_TRADITIONAL
Ë&& CPU(
ARM_THUMB2
)

317 #i‡
	`deföed
(
__ARM_NEON__
Ë&& !deföed(
WTF_CPU_ARM_NEON
)

318 
	#WTF_CPU_ARM_NEON
 1

	)

321 #i‡
	`CPU
(
ARM_NEON
)

323 
	#HAVE_ARM_NEON_INTRINSICS
 1

	)

326 #i‡(
	`deföed
(
__VFP_FP__
Ë&& !deföed(
__SOFTFP__
))

327 
	#WTF_CPU_ARM_VFP
 1

	)

330 #i‡
	`deföed
(
__ARM_ARCH_7K__
)

331 
	#WTF_CPU_APPLE_ARMV7K
 1

	)

334 #i‡
	`deföed
(
__ARM_ARCH_7S__
)

335 
	#WTF_CPU_APPLE_ARMV7S
 1

	)

340 #i‡
	`CPU
(
ARM
Ë|| CPU(
MIPS
Ë|| CPU(
SH4
)

341 
	#WTF_CPU_NEEDS_ALIGNED_ACCESS
 1

	)

348 #ifde‡
_AIX


349 
	#WTF_OS_AIX
 1

	)

353 #ifde‡
__APPLE__


354 
	#WTF_OS_DARWIN
 1

	)

356 
	~<Avaûabûôy.h
>

357 
	~<AvaûabûôyMa¸os.h
>

358 
	~<T¨gëC⁄dôi⁄Æs.h
>

363 #i‡
	`OS
(
DARWIN
Ë&& ((
	`deföed
(
TARGET_OS_EMBEDDED
) && TARGET_OS_EMBEDDED) \

364 || (
	`deföed
(
TARGET_OS_IPHONE
) && TARGET_OS_IPHONE) \

365 || (
	`deföed
(
TARGET_IPHONE_SIMULATOR
) && TARGET_IPHONE_SIMULATOR))

366 
	#WTF_OS_IOS
 1

	)

367 #ñi‡
	`OS
(
DARWIN
Ë&& 
	`deföed
(
TARGET_OS_MAC
) && TARGET_OS_MAC

368 
	#WTF_OS_MAC_OS_X
 1

	)

372 #i‡
	`deföed
(
__FªeBSD__
Ë|| deföed(
__Døg⁄Fly__
Ë|| deföed(
__FªeBSD_kî√l__
)

373 
	#WTF_OS_FREEBSD
 1

	)

377 #ifde‡
__GNU__


378 
	#WTF_OS_HURD
 1

	)

382 #ifde‡
__löux__


383 
	#WTF_OS_LINUX
 1

	)

387 #i‡
	`deföed
(
__NëBSD__
)

388 
	#WTF_OS_NETBSD
 1

	)

392 #ifde‡
__O≥nBSD__


393 
	#WTF_OS_OPENBSD
 1

	)

397 #i‡
	`deföed
(
sun
Ë|| deföed(
__sun
)

398 
	#WTF_OS_SOLARIS
 1

	)

402 #i‡
	`deföed
(
WIN32
Ë|| deföed(
_WIN32
)

403 
	#WTF_OS_WINDOWS
 1

	)

406 
	#WTF_OS_WIN
 
ERROR
 "USE WINDOWS WITH OS NOT WIN"

	)

407 
	#WTF_OS_MAC
 
ERROR
 "USE MAC_OS_X WITH OS NOT MAC"

	)

410 #i‡ 
	`OS
(
AIX
) \

411 || 
	`OS
(
DARWIN
) \

412 || 
	`OS
(
FREEBSD
) \

413 || 
	`OS
(
HURD
) \

414 || 
	`OS
(
LINUX
) \

415 || 
	`OS
(
NETBSD
) \

416 || 
	`OS
(
OPENBSD
) \

417 || 
	`OS
(
SOLARIS
) \

418 || 
	`deföed
(
unix
) \

419 || 
	`deföed
(
__unix
) \

420 || 
	$deföed
(
__unix__
)

421 
	#WTF_OS_UNIX
 1

	)

433 #i‡
	`deföed
(
BUILDING_EFL__
)

434 
	#WTF_PLATFORM_EFL
 1

	)

435 #ñi‡
	`deföed
(
BUILDING_GTK__
)

436 
	#WTF_PLATFORM_GTK
 1

	)

437 #ñi‡
	`OS
(
MAC_OS_X
)

438 
	#WTF_PLATFORM_MAC
 1

	)

439 #ñi‡
	`OS
(
IOS
)

440 
	#WTF_PLATFORM_IOS
 1

	)

441 #i‡
	`deföed
(
TARGET_IPHONE_SIMULATOR
) && TARGET_IPHONE_SIMULATOR

442 
	#WTF_PLATFORM_IOS_SIMULATOR
 1

	)

444 #ñi‡
	`OS
(
WINDOWS
)

445 
	#WTF_PLATFORM_WIN
 1

	)

449 #i‡
	`PLATFORM
(
MAC
Ë|| PLATFORM(
IOS
)

450 
	#WTF_PLATFORM_COCOA
 1

	)

453 #i‡
	`PLATFORM
(
COCOA
)

454 #i‡
deföed
 
__has_ö˛ude
 && 
	`__has_ö˛ude
(<
C‹eFound©i⁄
/
CFPriv
.
h
>)

455 
	#WTF_USE_APPLE_INTERNAL_SDK
 1

	)

462 #i‡
	`PLATFORM
(
COCOA
Ë|| (PLATFORM(
WIN
Ë&& !
	`USE
(
WINGDI
Ë&& !PLATFORM(
WIN_CAIRO
))

463 
	#WTF_USE_CG
 1

	)

465 #i‡
	`PLATFORM
(
COCOA
Ë|| (PLATFORM(
WIN
Ë&& 
	`USE
(
CG
))

466 
	#WTF_USE_CA
 1

	)

469 #i‡
	`PLATFORM
(
GTK
)

470 
	#WTF_USE_CAIRO
 1

	)

471 
	#WTF_USE_GLIB
 1

	)

472 
	#WTF_USE_FREETYPE
 1

	)

473 
	#WTF_USE_HARFBUZZ
 1

	)

474 
	#WTF_USE_SOUP
 1

	)

475 
	#WTF_USE_WEBP
 1

	)

479 #i‡
	`OS
(
WINDOWS
)

480 
	#WTF_USE_QUERY_PERFORMANCE_COUNTER
 1

	)

483 #i‡
	`PLATFORM
(
COCOA
)

485 
	#WTF_USE_CF
 1

	)

486 
	#WTF_USE_FOUNDATION
 1

	)

487 
	#WTF_USE_NETWORK_CFDATA_ARRAY_CALLBACK
 1

	)

488 
	#ENABLE_USER_MESSAGE_HANDLERS
 1

	)

489 
	#HAVE_OUT_OF_PROCESS_LAYER_HOSTING
 1

	)

493 #i‡
	`PLATFORM
(
MAC
)

495 
	#WTF_USE_APPKIT
 1

	)

496 
	#HAVE_RUNLOOP_TIMER
 1

	)

497 
	#HAVE_SEC_IDENTITY
 1

	)

498 
	#HAVE_SEC_KEYCHAIN
 1

	)

500 #i‡
	`CPU
(
X86_64
)

501 
	#WTF_USE_PLUGIN_HOST_PROCESS
 1

	)

507 #unde‡
__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES


508 
	#__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES
 0

	)

512 #i‡
	`PLATFORM
(
IOS
)

514 
	#DONT_FINALIZE_ON_MAIN_THREAD
 1

	)

515 
	#HAVE_READLINE
 1

	)

516 #i‡
	`USE
(
APPLE_INTERNAL_SDK
)

517 
	#WTF_USE_CFNETWORK
 1

	)

519 
	#WTF_USE_UIKIT_EDITING
 1

	)

520 
	#WTF_USE_WEB_THREAD
 1

	)

521 
	#WTF_USE_QUICK_LOOK
 1

	)

523 #i‡
	`CPU
(
ARM64
)

524 
	#ENABLE_JIT_CONSTANT_BLINDING
 0

	)

527 #i‡
	`CPU
(
ARM_NEON
)

528 #unde‡
HAVE_ARM_NEON_INTRINSICS


529 
	#HAVE_ARM_NEON_INTRINSICS
 0

	)

534 #i‡
	`PLATFORM
(
WIN
Ë&& !
	`USE
(
WINGDI
)

535 
	#WTF_USE_CF
 1

	)

538 #i‡
	`PLATFORM
(
WIN
Ë&& !
	`USE
(
WINGDI
Ë&& !PLATFORM(
WIN_CAIRO
)

539 
	#WTF_USE_CFNETWORK
 1

	)

542 #i‡
	`USE
(
CFNETWORK
Ë|| 
	`PLATFORM
(
COCOA
)

543 
	#WTF_USE_CFURLCACHE
 1

	)

546 #i‡!
	`deföed
(
HAVE_ACCESSIBILITY
)

547 #i‡
	`PLATFORM
(
COCOA
Ë|| PLATFORM(
WIN
Ë|| PLATFORM(
GTK
Ë|| PLATFORM(
EFL
)

548 
	#HAVE_ACCESSIBILITY
 1

	)

552 #i‡
	`OS
(
UNIX
)

553 
	#HAVE_ERRNO_H
 1

	)

554 
	#HAVE_LANGINFO_H
 1

	)

555 
	#HAVE_MMAP
 1

	)

556 
	#HAVE_SIGNAL_H
 1

	)

557 
	#HAVE_STRINGS_H
 1

	)

558 
	#HAVE_SYS_PARAM_H
 1

	)

559 
	#HAVE_SYS_TIME_H
 1

	)

560 
	#WTF_USE_PTHREADS
 1

	)

563 #i‡(
	`OS
(
FREEBSD
Ë|| OS(
OPENBSD
)Ë&& !
	`deföed
(
__GLIBC__
)

564 
	#HAVE_PTHREAD_NP_H
 1

	)

567 #i‡!
	`deföed
(
HAVE_VASPRINTF
)

568 #i‡!
	`COMPILER
(
MSVC
Ë&& !COMPILER(
MINGW
)

569 
	#HAVE_VASPRINTF
 1

	)

573 #i‡!
	`deföed
(
HAVE_STRNSTR
)

574 #i‡
	`OS
(
DARWIN
Ë|| (OS(
FREEBSD
Ë&& !
	`deföed
(
__GLIBC__
))

575 
	#HAVE_STRNSTR
 1

	)

579 #i‡!
	`OS
(
WINDOWS
Ë&& !OS(
SOLARIS
)

580 
	#HAVE_TM_GMTOFF
 1

	)

581 
	#HAVE_TM_ZONE
 1

	)

582 
	#HAVE_TIMEGM
 1

	)

585 #i‡
	`OS
(
DARWIN
)

587 
	#HAVE_DISPATCH_H
 1

	)

588 
	#HAVE_MADV_FREE
 1

	)

589 
	#HAVE_MADV_FREE_REUSE
 1

	)

590 
	#HAVE_MERGESORT
 1

	)

591 
	#HAVE_PTHREAD_SETNAME_NP
 1

	)

592 
	#HAVE_READLINE
 1

	)

593 
	#HAVE_SYS_TIMEB_H
 1

	)

594 
	#WTF_USE_ACCELERATE
 1

	)

596 #i‡!
	`PLATFORM
(
IOS
)

597 
	#HAVE_HOSTED_CORE_ANIMATION
 1

	)

602 #i‡
	`OS
(
WINDOWS
)

604 
	#HAVE_SYS_TIMEB_H
 1

	)

605 
	#HAVE_ALIGNED_MALLOC
 1

	)

606 
	#HAVE_ISDEBUGGERPRESENT
 1

	)

608 
	~<WTF/WTFHódîDëe˘i⁄.h
>

612 #i‡
	`OS
(
WINDOWS
)

613 
	#HAVE_VIRTUALALLOC
 1

	)

621 
	~<wtf/FótuªDeföes.h
>

623 #i‡
	`OS
(
WINDOWS
)

624 
	#USE_SYSTEM_MALLOC
 1

	)

627 
	#ENABLE_DEBUG_WITH_BREAKPOINT
 0

	)

628 
	#ENABLE_SAMPLING_COUNTERS
 0

	)

629 
	#ENABLE_SAMPLING_FLAGS
 0

	)

630 
	#ENABLE_SAMPLING_REGIONS
 0

	)

631 
	#ENABLE_OPCODE_SAMPLING
 0

	)

632 
	#ENABLE_CODEBLOCK_SAMPLING
 0

	)

633 #i‡
	`ENABLE
(
CODEBLOCK_SAMPLING
Ë&& !ENABLE(
OPCODE_SAMPLING
)

636 #i‡
	`ENABLE
(
OPCODE_SAMPLING
Ë|| ENABLE(
SAMPLING_FLAGS
Ë|| ENABLE(
SAMPLING_REGIONS
)

637 
	#ENABLE_SAMPLING_THREAD
 1

	)

640 #i‡!
	`deföed
(
WTF_USE_JSVALUE64
Ë&& !deföed(
WTF_USE_JSVALUE32_64
)

641 #i‡(
	`CPU
(
X86_64
Ë&& (
	`OS
(
UNIX
Ë|| OS(
WINDOWS
))) \

642 || (
	`CPU
(
IA64
Ë&& !CPU(
IA64_32
)) \

643 || 
	`CPU
(
ALPHA
) \

644 || 
	`CPU
(
ARM64
) \

645 || 
	`CPU
(
S390X
) \

646 || 
	`CPU
(
PPC64
) \

647 || 
	$CPU
(
PPC64LE
)

648 
	#WTF_USE_JSVALUE64
 1

	)

650 
	#WTF_USE_JSVALUE32_64
 1

	)

655 #i‡!
	`deföed
(
ENABLE_JIT
) \

656 && (
	`CPU
(
X86
Ë|| CPU(
X86_64
Ë|| CPU(
ARM
Ë|| CPU(
ARM64
Ë|| CPU(
MIPS
)) \

657 && !
	$CPU
(
APPLE_ARMV7K
)

658 
	#ENABLE_JIT
 1

	)

662 #i‡!
	`deföed
(
HAVE_LLVM
Ë&& 
	`OS
(
DARWIN
Ë&& !
	`PLATFORM
(
EFL
Ë&& !PLATFORM(
GTK
Ë&& 
	`ENABLE
(
FTL_JIT
Ë&& (
	`CPU
(
X86_64
Ë|| CPU(
ARM64
))

663 
	#HAVE_LLVM
 1

	)

666 #i‡
	`PLATFORM
(
GTK
Ë&& 
	`HAVE
(
LLVM
Ë&& 
	`ENABLE
(
JIT
Ë&& !
	`deföed
(
ENABLE_FTL_JIT
Ë&& 
	`CPU
(
X86_64
)

667 
	#ENABLE_FTL_JIT
 1

	)

671 #i‡
	`USE
(
JSVALUE32_64
)

672 #unde‡
ENABLE_FTL_JIT


673 
	#ENABLE_FTL_JIT
 0

	)

677 #i‡
	`PLATFORM
(
IOS_SIMULATOR
)

678 #unde‡
ENABLE_FTL_JIT


679 
	#ENABLE_FTL_JIT
 0

	)

684 #i‡!
	`deföed
(
WTF_USE_LLVM_DISASSEMBLER
Ë&& 
	`HAVE
(
LLVM
Ë&& (
	`CPU
(
X86_64
Ë|| CPU(
X86
Ë|| CPU(
ARM64
))

685 
	#WTF_USE_LLVM_DISASSEMBLER
 1

	)

691 #i‡!
	`deföed
(
WTF_USE_UDIS86
Ë&& 
	`ENABLE
(
JIT
Ë&& ((
	`OS
(
DARWIN
Ë&& !
	`PLATFORM
(
EFL
Ë&& !PLATFORM(
GTK
)Ë|| (OS(
LINUX
) && (PLATFORM(EFL) || PLATFORM(GTK)))) \

692 && (
	`CPU
(
X86
Ë|| 
	$CPU
(
X86_64
))

693 
	#WTF_USE_UDIS86
 1

	)

696 #i‡!
	`deföed
(
ENABLE_DISASSEMBLER
Ë&& (
	`USE
(
UDIS86
Ë|| USE(
LLVM_DISASSEMBLER
))

697 
	#ENABLE_DISASSEMBLER
 1

	)

700 #i‡!
	`deföed
(
WTF_USE_ARM64_DISASSEMBLER
Ë&& 
	`ENABLE
(
JIT
Ë&& (
	`PLATFORM
(
IOS
Ë|| PLATFORM(
EFL
)Ë&& 
	`CPU
(
ARM64
Ë&& !
	`USE
(
LLVM_DISASSEMBLER
)

701 
	#WTF_USE_ARM64_DISASSEMBLER
 1

	)

704 #i‡!
	`deföed
(
WTF_USE_ARMV7_DISASSEMBLER
Ë&& 
	`ENABLE
(
JIT
Ë&& (
	`PLATFORM
(
IOS
Ë|| PLATFORM(
GTK
)Ë&& 
	`CPU
(
ARM_THUMB2
)

705 
	#WTF_USE_ARMV7_DISASSEMBLER
 1

	)

708 #i‡!
	`deföed
(
ENABLE_DISASSEMBLER
Ë&& (
	`USE
(
UDIS86
Ë|| USE(
ARMV7_DISASSEMBLER
Ë|| USE(
ARM64_DISASSEMBLER
))

709 
	#ENABLE_DISASSEMBLER
 1

	)

712 #i‡!
	`deföed
(
ENABLE_DFG_JIT
Ë&& 
	`ENABLE
(
JIT
)

714 #i‡(
	`CPU
(
X86
Ë|| CPU(
X86_64
)Ë&& (
	`OS
(
DARWIN
Ë|| OS(
LINUX
Ë|| OS(
FREEBSD
Ë|| OS(
WINDOWS
))

715 
	#ENABLE_DFG_JIT
 1

	)

718 #i‡(
	`CPU
(
ARM_THUMB2
Ë|| CPU(
ARM64
)Ë&& (
	`PLATFORM
(
IOS
Ë|| PLATFORM(
GTK
Ë|| PLATFORM(
EFL
))

719 
	#ENABLE_DFG_JIT
 1

	)

722 #i‡
	`CPU
(
ARM_TRADITIONAL
Ë|| CPU(
MIPS
Ë|| CPU(
SH4
)

723 
	#ENABLE_DFG_JIT
 1

	)

731 #i‡(
	`OS
(
DARWIN
Ë|| 
	`PLATFORM
(
EFL
)Ë&& !PLATFORM(
GTK
Ë&& 
	`ENABLE
(
DFG_JIT
Ë&& 
	`USE
(
JSVALUE64
)

732 
	#ENABLE_CONCURRENT_JIT
 1

	)

736 #i‡
	`deföed
(
ENABLE_LLINT_C_LOOP
) && ENABLE_LLINT_C_LOOP

737 #unde‡
ENABLE_JIT


738 
	#ENABLE_JIT
 0

	)

742 #i‡!
	`ENABLE
(
JIT
)

743 #unde‡
ENABLE_DFG_JIT


744 #unde‡
ENABLE_FTL_JIT


745 
	#ENABLE_DFG_JIT
 0

	)

746 
	#ENABLE_FTL_JIT
 0

	)

749 
	#ENABLE_FTL_NATIVE_CALL_INLINING
 0

	)

751 #i‡!
	`deföed
(
ENABLE_FTL_NATIVE_CALL_INLINING
)

752 #i‡
	`COMPILER
(
CLANG
)

753 
	#ENABLE_FTL_NATIVE_CALL_INLINING
 1

	)

755 
	#ENABLE_FTL_NATIVE_CALL_INLINING
 0

	)

760 #i‡!
	`deföed
(
ENABLE_GGC
)

761 #i‡
	`CPU
(
X86_64
Ë|| CPU(
X86
Ë|| CPU(
ARM64
Ë|| CPU(
ARM
)

762 
	#ENABLE_GGC
 1

	)

764 
	#ENABLE_GGC
 0

	)

770 #i‡!
	`deföed
(
ENABLE_WRITE_BARRIER_PROFILING
)

771 
	#ENABLE_WRITE_BARRIER_PROFILING
 0

	)

780 #i‡!
	`deföed
(
ENABLE_ALLOCATION_LOGGING
)

781 
	#ENABLE_ALLOCATION_LOGGING
 0

	)

786 #i‡!
	`deföed
(
ENABLE_DFG_REGISTER_ALLOCATION_VALIDATION
Ë&& 
	`ENABLE
(
DFG_JIT
)

787 #i‡!
	`deföed
(
NDEBUG
)

788 
	#ENABLE_DFG_REGISTER_ALLOCATION_VALIDATION
 1

	)

790 
	#ENABLE_DFG_REGISTER_ALLOCATION_VALIDATION
 0

	)

795 #i‡
	`CPU
(
X86
Ë&& 
	`COMPILER
(
MSVC
)

796 
	#JSC_HOST_CALL
 
__Á°ˇŒ


	)

797 #ñi‡
	`CPU
(
X86
Ë&& 
	`COMPILER
(
GCC
)

798 
	#JSC_HOST_CALL
 
	`__©åibuã__
 ((
Á°ˇŒ
))

	)

800 
	#JSC_HOST_CALL


	)

804 #i‡
	`COMPILER
(
GCC
)

805 
	#HAVE_COMPUTED_GOTO
 1

	)

809 #i‡
	`HAVE
(
COMPUTED_GOTO
Ë|| 
	`ENABLE
(
JIT
)

810 
	#ENABLE_COMPUTED_GOTO_OPCODES
 1

	)

814 
	#ENABLE_REGEXP_TRACING
 0

	)

817 #i‡!
	`deföed
(
ENABLE_YARR_JIT
)

818 
	#ENABLE_YARR_JIT
 1

	)

821 
	#ENABLE_YARR_JIT_DEBUG
 0

	)

826 #i‡
	`ENABLE
(
JIT
Ë|| ENABLE(
YARR_JIT
)

827 #i‡
	`deföed
(
ENABLE_ASSEMBLER
) && !ENABLE_ASSEMBLER

830 #unde‡
ENABLE_ASSEMBLER


831 
	#ENABLE_ASSEMBLER
 1

	)

836 #i‡
	`ENABLE
(
DISASSEMBLER
)

837 #i‡
	`deföed
(
ENABLE_ASSEMBLER
) && !ENABLE_ASSEMBLER

840 #unde‡
ENABLE_ASSEMBLER


841 
	#ENABLE_ASSEMBLER
 1

	)

847 #i‡
	`ENABLE
(
ASSEMBLER
)

848 #i‡
	`CPU
(
X86_64
Ë&& !
	`OS
(
WINDOWS
Ë|| 
	`PLATFORM
(
IOS
Ë|| CPU(
ARM64
)

849 
	#ENABLE_EXECUTABLE_ALLOCATOR_FIXED
 1

	)

851 
	#ENABLE_EXECUTABLE_ALLOCATOR_DEMAND
 1

	)

856 #i‡!
	`deföed
(
ENABLE_CSS_SELECTOR_JIT
)

857 #i‡(
	`CPU
(
X86_64
Ë|| CPU(
ARM64
Ë|| (CPU(
ARM_THUMB2
Ë&& 
	`PLATFORM
(
IOS
))Ë&& 
	`ENABLE
(
JIT
Ë&& (
	`OS
(
DARWIN
Ë|| PLATFORM(
GTK
Ë|| PLATFORM(
EFL
))

858 
	#ENABLE_CSS_SELECTOR_JIT
 1

	)

860 
	#ENABLE_CSS_SELECTOR_JIT
 0

	)

864 #i‡
	`ENABLE
(
WEBGL
Ë&& !
	`deföed
(
WTF_USE_3D_GRAPHICS
)

865 
	#WTF_USE_3D_GRAPHICS
 1

	)

868 #i‡
	`ENABLE
(
WEBGL
Ë&& 
	`PLATFORM
(
WIN
)

869 
	#WTF_USE_OPENGL
 1

	)

870 
	#WTF_USE_OPENGL_ES_2
 1

	)

871 
	#WTF_USE_EGL
 1

	)

874 #i‡
	`ENABLE
(
VIDEO
Ë&& 
	`PLATFORM
(
WIN_CAIRO
)

875 #i‡
	`ENABLE
(
GSTREAMER_WINCAIRO
)

876 
	#WTF_USE_MEDIA_FOUNDATION
 0

	)

877 
	#WTF_USE_GLIB
 1

	)

878 
	#WTF_USE_GSTREAMER
 1

	)

880 
	#WTF_USE_MEDIA_FOUNDATION
 1

	)

884 #i‡
	`PLATFORM
(
WIN_CAIRO
)

885 
	#WTF_USE_TEXTURE_MAPPER
 1

	)

888 #i‡
	`USE
(
TEXTURE_MAPPER
Ë&& USE(3D
_GRAPHICS
Ë&& !
	`deföed
(
WTF_USE_TEXTURE_MAPPER_GL
)

889 
	#WTF_USE_TEXTURE_MAPPER_GL
 1

	)

893 #i‡
	`PLATFORM
(
COCOA
)

894 
	#WTF_USE_PROTECTION_SPACE_AUTH_CALLBACK
 1

	)

898 
	#WTF_PLATFORM_CFNETWORK
 
Eº‹
 
USE_ma¸o_should_be_u£d_wôh_CFNETWORK


	)

900 #i‡
	`PLATFORM
(
WIN
)

901 
	#WTF_USE_CROSS_PLATFORM_CONTEXT_MENUS
 1

	)

904 #i‡
	`PLATFORM
(
COCOA
Ë&& 
	`HAVE
(
ACCESSIBILITY
)

905 
	#WTF_USE_ACCESSIBILITY_CONTEXT_MENUS
 1

	)

908 #i‡
	`CPU
(
ARM_THUMB2
Ë|| CPU(
ARM64
)

909 
	#ENABLE_BRANCH_COMPACTION
 1

	)

912 #i‡!
	`deföed
(
ENABLE_THREADING_LIBDISPATCH
Ë&& 
	`HAVE
(
DISPATCH_H
)

913 
	#ENABLE_THREADING_LIBDISPATCH
 1

	)

914 #ñi‡!
	`deföed
(
ENABLE_THREADING_OPENMP
Ë&& deföed(
_OPENMP
)

915 
	#ENABLE_THREADING_OPENMP
 1

	)

916 #ñi‡!
	`deföed
(
THREADING_GENERIC
)

917 
	#ENABLE_THREADING_GENERIC
 1

	)

920 #i‡
	`USE
(
GLIB
)

921 
	~<wtf/gobje˘/GTy≥defs.h
>

924 #i‡
	`PLATFORM
(
EFL
)

925 
	~<wtf/eÊ/EÊTy≥defs.h
>

932 #i‡!
	`deföed
(
WTF_USE_EXPORT_MACROS
Ë&& (
	`PLATFORM
(
COCOA
Ë|| PLATFORM(
WIN
))

933 
	#WTF_USE_EXPORT_MACROS
 1

	)

936 #i‡!
	`deföed
(
WTF_USE_EXPORT_MACROS_FOR_TESTING
Ë&& (
	`PLATFORM
(
GTK
Ë|| PLATFORM(
WIN
))

937 
	#WTF_USE_EXPORT_MACROS_FOR_TESTING
 1

	)

940 #i‡
	`PLATFORM
(
GTK
Ë|| PLATFORM(
EFL
)

941 
	#WTF_USE_UNIX_DOMAIN_SOCKETS
 1

	)

944 #i‡!
	`deföed
(
WTF_USE_IMLANG_FONT_LINK2
)

945 
	#WTF_USE_IMLANG_FONT_LINK2
 1

	)

948 #i‡!
	`deföed
(
ENABLE_COMPARE_AND_SWAP
Ë&& (
	`OS
(
WINDOWS
Ë|| (
	`COMPILER
(
GCC
Ë&& (
	`CPU
(
X86
Ë|| CPU(
X86_64
Ë|| CPU(
ARM_THUMB2
Ë|| CPU(
ARM64
))))

949 
	#ENABLE_COMPARE_AND_SWAP
 1

	)

952 #i‡!
	`deföed
(
ENABLE_PARALLEL_GC
Ë&& (
	`OS
(
DARWIN
Ë|| 
	`PLATFORM
(
EFL
Ë|| PLATFORM(
GTK
)Ë&& 
	`ENABLE
(
COMPARE_AND_SWAP
)

953 
	#ENABLE_PARALLEL_GC
 1

	)

956 #i‡!
	`deföed
(
ENABLE_GC_VALIDATION
Ë&& !deföed(
NDEBUG
)

957 
	#ENABLE_GC_VALIDATION
 1

	)

960 #i‡!
	`deföed
(
ENABLE_BINDING_INTEGRITY
Ë&& !
	`OS
(
WINDOWS
)

961 
	#ENABLE_BINDING_INTEGRITY
 1

	)

964 #i‡
	`PLATFORM
(
COCOA
)

965 
	#WTF_USE_AVFOUNDATION
 1

	)

968 #i‡(
	`PLATFORM
(
IOS
Ë&& 
__IPHONE_OS_VERSION_MIN_REQUIRED
 >60000Ë|| (PLATFORM(
MAC
Ë&& 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1080)

969 
	#WTF_USE_COREMEDIA
 1

	)

970 
	#HAVE_AVFOUNDATION_VIDEO_OUTPUT
 1

	)

973 #i‡(
	`PLATFORM
(
IOS
Ë&& 
__IPHONE_OS_VERSION_MIN_REQUIRED
 >50000Ë|| (PLATFORM(
MAC
Ë|| (
	`OS
(
WINDOWS
Ë&& 
	`USE
(
CG
)Ë&& 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1080)

974 
	#HAVE_AVFOUNDATION_MEDIA_SELECTION_GROUP
 1

	)

977 #i‡(
	`PLATFORM
(
IOS
Ë&& 
__IPHONE_OS_VERSION_MIN_REQUIRED
 >70000Ë|| ((PLATFORM(
MAC
Ë|| (
	`OS
(
WINDOWS
Ë&& 
	`USE
(
CG
))Ë&& 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1090)

978 
	#HAVE_AVFOUNDATION_LEGIBLE_OUTPUT_SUPPORT
 1

	)

979 
	#HAVE_MEDIA_ACCESSIBILITY_FRAMEWORK
 1

	)

982 #i‡(
	`PLATFORM
(
IOS
Ë&& 
__IPHONE_OS_VERSION_MIN_REQUIRED
 >60000Ë|| (PLATFORM(
MAC
Ë&& 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1090)

983 
	#HAVE_AVFOUNDATION_LOADER_DELEGATE
 1

	)

986 #i‡
	`PLATFORM
(
MAC
Ë&& 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1080

987 
	#WTF_USE_VIDEOTOOLBOX
 1

	)

990 #i‡
	`PLATFORM
(
COCOA
Ë|| PLATFORM(
GTK
Ë|| (PLATFORM(
WIN
Ë&& !
	`USE
(
WINGDI
))

991 
	#WTF_USE_REQUEST_ANIMATION_FRAME_TIMER
 1

	)

994 #i‡
	`PLATFORM
(
COCOA
)

995 
	#WTF_USE_REQUEST_ANIMATION_FRAME_DISPLAY_MONITOR
 1

	)

998 #i‡
	`PLATFORM
(
MAC
)

999 
	#WTF_USE_COREAUDIO
 1

	)

1002 #i‡!
	`deföed
(
WTF_USE_ZLIB
)

1003 
	#WTF_USE_ZLIB
 1

	)

1006 #i‚de‡
HAVE_QOS_CLASSES


1007 #i‡
	`PLATFORM
(
IOS
Ë|| (PLATFORM(
MAC
Ë&& 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 101000)

1008 
	#HAVE_QOS_CLASSES
 1

	)

1012 #i‚de‡
HAVE_VOUCHERS


1013 #i‡
	`PLATFORM
(
IOS
Ë|| (PLATFORM(
MAC
Ë&& 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 101000)

1014 
	#HAVE_VOUCHERS
 1

	)

1018 
	#WTF_USE_GRAMMAR_CHECKING
 1

	)

1020 #i‡
	`PLATFORM
(
COCOA
Ë|| PLATFORM(
EFL
)

1021 
	#WTF_USE_UNIFIED_TEXT_CHECKING
 1

	)

1023 #i‡
	`PLATFORM
(
MAC
)

1024 
	#WTF_USE_AUTOMATIC_TEXT_REPLACEMENT
 1

	)

1027 #i‡
	`PLATFORM
(
MAC
)

1029 
	#WTF_USE_AUTOCORRECTION_PANEL
 1

	)

1032 #i‡
	`PLATFORM
(
COCOA
)

1034 
	#WTF_USE_MARKER_REMOVAL_UPON_EDITING
 1

	)

1037 #i‡
	`PLATFORM
(
MAC
Ë&& 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 101000

1038 
	#WTF_USE_INSERTION_UNDO_GROUPING
 1

	)

1041 #i‡
	`PLATFORM
(
IOS
)

1042 
	#WTF_USE_PLATFORM_TEXT_TRACK_MENU
 1

	)

1045 #i‡
	`PLATFORM
(
COCOA
)

1046 
	#WTF_USE_AUDIO_SESSION
 1

	)

1049 #i‡
	`PLATFORM
(
COCOA
Ë&& !PLATFORM(
IOS_SIMULATOR
)

1050 
	#WTF_USE_IOSURFACE
 1

	)

1053 #i‡
	`PLATFORM
(
GTK
Ë|| PLATFORM(
EFL
)

1054 #unde‡
ENABLE_OPENTYPE_VERTICAL


1055 
	#ENABLE_OPENTYPE_VERTICAL
 1

	)

1058 #i‡
	`PLATFORM
(
COCOA
)

1059 
	#ENABLE_CSS3_TEXT_DECORATION_SKIP_INK
 1

	)

1062 #i‡
	`COMPILER
(
MSVC
)

1063 #unde‡
__STDC_LIMIT_MACROS


1064 
	#__STDC_LIMIT_MACROS


	)

1065 #unde‡
_HAS_EXCEPTIONS


1066 
	#_HAS_EXCEPTIONS
 1

	)

1069 #i‡
	`PLATFORM
(
MAC
Ë&& 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1090

1070 
	#HAVE_NS_ACTIVITY
 1

	)

1073 #i‡
	`PLATFORM
(
MAC
Ë&& 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 101000

1074 
	#WTF_USE_ASYNC_NSTEXTINPUTCLIENT
 1

	)

1077 #i‡(
	`OS
(
DARWIN
Ë&& 
	`USE
(
CG
)Ë|| USE(
FREETYPE
Ë|| (
	`PLATFORM
(
WIN
Ë&& (USE(CGË|| USE(
CAIRO
)))

1078 #unde‡
ENABLE_OPENTYPE_MATH


1079 
	#ENABLE_OPENTYPE_MATH
 1

	)

1084 #i‡!
	`deföed
(
TARGET_OS_IPHONE
Ë&& !
	`OS
(
DARWIN
)

1085 
	#TARGET_OS_IPHONE
 0

	)

1088 #i‡
	`PLATFORM
(
IOS
Ë|| (PLATFORM(
COCOA
Ë&& 
__MAC_OS_X_VERSION_MIN_REQUIRED
 >= 1090)

1089 
	#WTF_USE_MEDIATOOLBOX
 1

	)

	@PossiblyNull.h

26 #i‚de‡
PossiblyNuŒ_h


27 
	#PossiblyNuŒ_h


	)

29 
	~<wtf/As£πi⁄s.h
>

31 
«me•a˚
 
	gWTF
 {

33 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	sPossiblyNuŒ
 {

34 
PossiblyNuŒ
(
T
 
d©a
)

35 : 
m_d©a
(
d©a
)

38 
PossiblyNuŒ
(c⁄° PossiblyNuŒ<
T
>& 
sour˚
)

39 : 
m_d©a
(
sour˚
.m_data)

41 
sour˚
.
m_d©a
 = 0;

43 ~
PossiblyNuŒ
(Ë{ 
ASSERT
(!
m_d©a
); }

44 
boﬁ
 
gëVÆue
(
T
& 
out
Ë
	gWARN_UNUSED_RETURN
;

45 
	g¥iv©e
:

46 
muèbÀ
 
T
 
m_d©a
;

49 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
boﬁ
 
	gPossiblyNuŒ
<T>::
gëVÆue
(
T
& 
out
)

51 
out
 = 
m_d©a
;

52 
boﬁ
 
	gªsu…
 = !!
m_d©a
;

53 
	gm_d©a
 = 0;

54  
	gªsu…
;

	@PrintStream.cpp

26 
	~"c⁄fig.h
"

27 
	~"PrötSåóm.h
"

29 
	~<°dio.h
>

30 
	~<wtf/ãxt/CSåög.h
>

31 
	~<wtf/ãxt/WTFSåög.h
>

33 
«me•a˚
 
	gWTF
 {

35 
	gPrötSåóm
::
PrötSåóm
() { }

36 
PrötSåóm
::~PrintStream() { }

38 
PrötSåóm
::
¥ötf
(c⁄° * 
f‹m©
, ...)

40 
va_li°
 
	g¨gLi°
;

41 
va_°¨t
(
¨gLi°
, 
f‹m©
);

42 
v¥ötf
(
f‹m©
, 
¨gLi°
);

43 
va_íd
(
¨gLi°
);

46 
	gPrötSåóm
::
Êush
()

50 
¥ötI¡î«l
(
PrötSåóm
& 
out
, c⁄° * 
°rög
)

52 
	gout
.
¥ötf
("%s", 
°rög
);

55 
¥ötI¡î«l
(
PrötSåóm
& 
out
, c⁄° 
CSåög
& 
°rög
)

57 
	gout
.
¥öt
(
°rög
.
d©a
());

60 
¥ötI¡î«l
(
PrötSåóm
& 
out
, c⁄° 
Såög
& 
°rög
)

62 
	gout
.
¥öt
(
°rög
.
utf8
());

65 
¥ötI¡î«l
(
PrötSåóm
& 
out
, c⁄° 
SåögIm∂
* 
°rög
)

67 i‡(!
	g°rög
) {

68 
	gout
.
¥öt
("(null StringImpl*)");

71 
	gout
.
¥öt
(
°rög
->
utf8
());

74 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
boﬁ
 
vÆue
)

76 i‡(
	gvÆue
)

77 
	gout
.
¥öt
("true");

79 
	gout
.
¥öt
("false");

82 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
vÆue
)

84 
	gout
.
¥ötf
("%d", 
vÆue
);

87 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
vÆue
)

89 
	gout
.
¥ötf
("%u", 
vÆue
);

92 
¥ötI¡î«l
(
PrötSåóm
& 
out
, sig√d 
vÆue
)

94 
	gout
.
¥ötf
("%d", 
°©ic_ˇ°
<>(
vÆue
));

97 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
vÆue
)

99 
	gout
.
¥ötf
("%u", 
°©ic_ˇ°
<>(
vÆue
));

102 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
vÆue
)

104 
	gout
.
¥ötf
("%d", 
°©ic_ˇ°
<>(
vÆue
));

107 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
vÆue
)

109 
	gout
.
¥ötf
("%u", 
°©ic_ˇ°
<>(
vÆue
));

112 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
vÆue
)

114 
	gout
.
¥ötf
("%ld", 
vÆue
);

117 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
vÆue
)

119 
	gout
.
¥ötf
("%lu", 
vÆue
);

122 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
vÆue
)

124 
	gout
.
¥ötf
("%Œd", 
vÆue
);

127 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
vÆue
)

129 
	gout
.
¥ötf
("%Œu", 
vÆue
);

132 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
vÆue
)

134 
	gout
.
¥öt
(
°©ic_ˇ°
<>(
vÆue
));

137 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
vÆue
)

139 
	gout
.
¥ötf
("%lf", 
vÆue
);

142 
¥ötI¡î«l
(
PrötSåóm
& 
out
, 
RawPoöãr
 
vÆue
)

144 
	gout
.
¥ötf
("%p", 
vÆue
.value());

147 
dumpCh¨a˘î
(
PrötSåóm
& 
out
, 
vÆue
)

149 
	gout
.
¥ötf
("%c", 
vÆue
);

	@PrintStream.h

26 #i‚de‡
PrötSåóm_h


27 
	#PrötSåóm_h


	)

29 
	~<°d¨g.h
>

30 
	~<wtf/Fa°MÆloc.h
>

31 
	~<wtf/N⁄c›yabÀ.h
>

32 
	~<wtf/RawPoöãr.h
>

33 
	~<wtf/StdLibExåas.h
>

35 
«me•a˚
 
	gWTF
 {

37 
˛ass
 
	gAtomicSåögIm∂
;

38 
˛ass
 
	gCSåög
;

39 
˛ass
 
	gSåög
;

40 
˛ass
 
	gSåögIm∂
;

42 ˛as†
	cPrötSåóm
 {

43 
	gWTF_MAKE_FAST_ALLOCATED
; 
WTF_MAKE_NONCOPYABLE
(
PrötSåóm
);

44 
	gpublic
:

45 
PrötSåóm
();

46 
	gvútuÆ
 ~
PrötSåóm
();

48 
WTF_EXPORT_PRIVATE
 
¥ötf
(c⁄° * 
f‹m©
, ...Ë
WTF_ATTRIBUTE_PRINTF
(2, 3);

49 
vútuÆ
 
v¥ötf
(c⁄° * 
f‹m©
, 
va_li°
Ë
WTF_ATTRIBUTE_PRINTF
(2, 0) = 0;

53 
vútuÆ
 
Êush
();

55 
	gãm∂©e
<
ty≥«me
 
	gT
>

56 
¥öt
(c⁄° 
T
& 
vÆue
)

58 
¥ötI¡î«l
(*
this
, 
vÆue
);

61 
	gãm∂©e
<
ty≥«me
 
	gT
, 
	gty≥«me
... 
	gTy≥s
>

62 
¥öt
(c⁄° 
T
& 
vÆue
, c⁄° 
Ty≥s
&... 
ªmaöögVÆues
)

64 
¥ötI¡î«l
(*
this
, 
vÆue
);

65 
¥öt
(
ªmaöögVÆues
...);

69 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, const *);

70 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, c⁄° 
CSåög
&);

71 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, c⁄° 
Såög
&);

72 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, c⁄° 
SåögIm∂
*);

73 
ölöe
 
	$¥ötI¡î«l
(
PrötSåóm
& 
out
, c⁄° 
AtomicSåögIm∂
* 
vÆue
Ë{ 
	`¥ötI¡î«l
(out, 
bôwi£_ˇ°
<c⁄° 
SåögIm∂
*>(vÆue)); 
	}
}

74 
ölöe
 
	$¥ötI¡î«l
(
PrötSåóm
& 
out
, * 
vÆue
Ë{ 
	`¥ötI¡î«l
(out, 
°©ic_ˇ°
<c⁄° *>(vÆue)); 
	}
}

75 
ölöe
 
	$¥ötI¡î«l
(
PrötSåóm
& 
out
, 
CSåög
& 
vÆue
Ë{ 
	`¥ötI¡î«l
(out, 
°©ic_ˇ°
<c⁄° CSåög&>(vÆue)); 
	}
}

76 
ölöe
 
	$¥ötI¡î«l
(
PrötSåóm
& 
out
, 
Såög
& 
vÆue
Ë{ 
	`¥ötI¡î«l
(out, 
°©ic_ˇ°
<c⁄° Såög&>(vÆue)); 
	}
}

77 
ölöe
 
	$¥ötI¡î«l
(
PrötSåóm
& 
out
, 
SåögIm∂
* 
vÆue
Ë{ 
	`¥ötI¡î«l
(out, 
°©ic_ˇ°
<c⁄° SåögIm∂*>(vÆue)); 
	}
}

78 
ölöe
 
	$¥ötI¡î«l
(
PrötSåóm
& 
out
, 
AtomicSåögIm∂
* 
vÆue
Ë{ 
	`¥ötI¡î«l
(out, 
°©ic_ˇ°
<c⁄° AtomicSåögIm∂*>(vÆue)); 
	}
}

79 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, 
boﬁ
);

80 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, signed );

81 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, );

82 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, );

83 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, );

84 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, );

85 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, );

86 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, );

87 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, );

88 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, );

89 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, );

90 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, );

91 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, );

92 
WTF_EXPORT_PRIVATE
 
¥ötI¡î«l
(
PrötSåóm
&, 
RawPoöãr
);

94 
	gãm∂©e
<
ty≥«me
 
	gT
>

95 
	$¥ötI¡î«l
(
PrötSåóm
& 
out
, c⁄° 
T
& 
vÆue
)

97 
vÆue
.
	`dump
(
out
);

98 
	}
}

100 
	#MAKE_PRINT_ADAPTOR
(
Name
, 
Ty≥
, 
fun˘i⁄
) \

101 ˛as†
	cName
 { \

102 
public
: \

103 
	`Name
(c⁄° 
Ty≥
& 
vÆue
) \

104 : 
	`m_vÆue
(
vÆue
) \

107 
	`dump
(
PrötSåóm
& 
out
) const \

109 
	`fun˘i⁄
(
out
, 
m_vÆue
); \

111 
¥iv©e
: \

112 
Ty≥
 
m_vÆue
; \

113 }

	)

115 
	#MAKE_PRINT_METHOD_ADAPTOR
(
Name
, 
Ty≥
, 
mëhod
) \

116 ˛as†
	cName
 { \

117 
public
: \

118 
	`Name
(c⁄° 
Ty≥
& 
vÆue
) \

119 : 
	`m_vÆue
(
vÆue
) \

122 
	`dump
(
PrötSåóm
& 
out
) const \

124 
m_vÆue
.
	`mëhod
(
out
); \

126 
¥iv©e
: \

127 c⁄° 
Ty≥
& 
m_vÆue
; \

128 }

	)

130 
	#MAKE_PRINT_METHOD
(
Ty≥
, 
dumpMëhod
, 
mëhod
) \

131 
	`MAKE_PRINT_METHOD_ADAPTOR
(
Dum≥rF‹_
##
mëhod
, 
Ty≥
, 
dumpMëhod
); \

132 
Dum≥rF‹_
##
mëhod
 
	$mëhod
(Ëc⁄° {  
Dum≥rF‹_
##
	`mëhod
(*
this
); 
	}

	)
}

137 
WTF_EXPORT_PRIVATE
 
dumpCh¨a˘î
(
PrötSåóm
&, );

138 
MAKE_PRINT_ADAPTOR
(
Ch¨a˘îDump
, , 
dumpCh¨a˘î
);

140 
	gãm∂©e
<
ty≥«me
 
	gT
>

141 ˛as†
	cPoöãrDump
 {

142 
	gpublic
:

143 
PoöãrDump
(c⁄° 
T
* 
±r
)

144 : 
m_±r
(
±r
)

148 
dump
(
PrötSåóm
& 
out
) const

150 i‡(
m_±r
)

151 
¥ötI¡î«l
(
out
, *
m_±r
);

153 
	gout
.
¥öt
("(null)");

155 
	g¥iv©e
:

156 c⁄° 
T
* 
m_±r
;

159 
	gãm∂©e
<
ty≥«me
 
	gT
>

160 
	gPoöãrDump
<
	gT
> 
	$poöãrDump
(c⁄° 
T
* 
±r
Ë{  
PoöãrDump
<T>’å); 
	}
}

162 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

163 ˛as†
	cVÆueInC⁄ãxt
 {

164 
	gpublic
:

165 
VÆueInC⁄ãxt
(c⁄° 
T
& 
vÆue
, 
U
* 
c⁄ãxt
)

166 : 
m_vÆue
(&
vÆue
)

167 , 
m_c⁄ãxt
(
c⁄ãxt
)

171 
dump
(
PrötSåóm
& 
out
) const

173 
	gm_vÆue
->
dumpInC⁄ãxt
(
out
, 
m_c⁄ãxt
);

176 
	g¥iv©e
:

177 c⁄° 
T
* 
m_vÆue
;

178 
U
* 
	gm_c⁄ãxt
;

181 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

182 
	gVÆueInC⁄ãxt
<
	gT
, 
	gU
> 
	$öC⁄ãxt
(c⁄° 
T
& 
vÆue
, 
U
* 
c⁄ãxt
)

184  
VÆueInC⁄ãxt
<
T
, 
U
>(
vÆue
, 
c⁄ãxt
);

185 
	}
}

187 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

188 ˛as†
	cPoöãrDumpInC⁄ãxt
 {

189 
	gpublic
:

190 
PoöãrDumpInC⁄ãxt
(c⁄° 
T
* 
±r
, 
U
* 
c⁄ãxt
)

191 : 
m_±r
(
±r
)

192 , 
m_c⁄ãxt
(
c⁄ãxt
)

196 
dump
(
PrötSåóm
& 
out
) const

198 i‡(
	gm_±r
)

199 
	gm_±r
->
dumpInC⁄ãxt
(
out
, 
m_c⁄ãxt
);

201 
	gout
.
¥öt
("(null)");

204 
	g¥iv©e
:

205 c⁄° 
T
* 
m_±r
;

206 
U
* 
	gm_c⁄ãxt
;

209 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

210 
	gPoöãrDumpInC⁄ãxt
<
	gT
, 
	gU
> 
	$poöãrDumpInC⁄ãxt
(c⁄° 
T
* 
±r
, 
U
* 
c⁄ãxt
)

212  
PoöãrDumpInC⁄ãxt
<
T
, 
U
>(
±r
, 
c⁄ãxt
);

213 
	}
}

215 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

216 ˛as†
	cVÆueIgn‹ögC⁄ãxt
 {

217 
	gpublic
:

218 
VÆueIgn‹ögC⁄ãxt
(c⁄° 
U
& 
vÆue
)

219 : 
m_vÆue
(&
vÆue
)

223 
dump
(
PrötSåóm
& 
out
) const

225 
T
 
c⁄ãxt
;

226 
	gm_vÆue
->
dumpInC⁄ãxt
(
out
, &
c⁄ãxt
);

229 
	g¥iv©e
:

230 c⁄° 
U
* 
m_vÆue
;

233 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
>

234 
	gVÆueIgn‹ögC⁄ãxt
<
	gT
, 
	gU
> 
	$ign‹ögC⁄ãxt
(c⁄° 
U
& 
vÆue
)

236  
VÆueIgn‹ögC⁄ãxt
<
T
, 
U
>(
vÆue
);

237 
	}
}

241 
usög
 
	gWTF
::
Ch¨a˘îDump
;

242 
usög
 
	gWTF
::
PoöãrDump
;

243 
usög
 
	gWTF
::
PrötSåóm
;

244 
usög
 
	gWTF
::
ign‹ögC⁄ãxt
;

245 
usög
 
	gWTF
::
öC⁄ãxt
;

246 
usög
 
	gWTF
::
poöãrDump
;

247 
usög
 
	gWTF
::
poöãrDumpInC⁄ãxt
;

	@ProcessID.h

26 #i‚de‡
Pro˚ssID_h


27 
	#Pro˚ssID_h


	)

29 #i‡
OS
(
UNIX
)

30 
	~<uni°d.h
>

33 #i‡
OS
(
WINDOWS
)

34 
	~<wödows.h
>

37 
«me•a˚
 
	gWTF
 {

39 
ölöe
 
gëCuºítPro˚ssID
()

41 #i‡
OS
(
WINDOWS
)

42  
GëCuºítPro˚ssId
();

44  
gëpid
();

50 
usög
 
	gWTF
::
gëCuºítPro˚ssID
;

	@RAMSize.cpp

26 
	~"c⁄fig.h
"

27 
	~"RAMSize.h
"

29 
	~"StdLibExåas.h
"

30 #i‡
OS
(
DARWIN
)

31 
	~<sys/∑øm.h
>

32 
	~<sys/ty≥s.h
>

33 
	~<sys/sys˘l.h
>

34 #ñi‡
OS
(
UNIX
)

35 
	~<uni°d.h
>

36 #ñi‡
OS
(
WINDOWS
)

37 
	~<wödows.h
>

40 
«me•a˚
 
	gWTF
 {

42 c⁄° 
size_t
 
	gømSizeGuess
 = 128 * 
MB
;

44 
size_t
 
compuãRAMSize
()

46 #i‡
OS
(
DARWIN
)

47 
	gmib
[2];

48 
uöt64_t
 
	gømSize
;

49 
size_t
 
	gÀngth
;

51 
	gmib
[0] = 
CTL_HW
;

52 
	gmib
[1] = 
HW_MEMSIZE
;

53 
	gÀngth
 = (
öt64_t
);

54 
	gsys˘lResu…
 = 
sys˘l
(
mib
, 2, &
ømSize
, &
Àngth
, 0, 0);

55 i‡(
	gsys˘lResu…
 == -1)

56  
ømSizeGuess
;

57  
	gømSize
 > 
	g°d
::
numîic_limôs
<
size_t
>::
max
(Ë? 
°d
::numîic_limôs<size_t>::max(Ë: 
°©ic_ˇ°
<size_t>(
ømSize
);

58 #ñi‡
OS
(
UNIX
)

59 
	g∑ges
 = 
sysc⁄f
(
_SC_PHYS_PAGES
);

60 
	g∑geSize
 = 
sysc⁄f
(
_SC_PAGE_SIZE
);

61 i‡(
	g∑ges
 =-1 || 
∑geSize
 == -1)

62  
ømSizeGuess
;

63  
∑ges
 * 
	g∑geSize
;

64 #ñi‡
OS
(
WINDOWS
)

65 
MEMORYSTATUSEX
 
	g°©us
;

66 
	g°©us
.
	gdwLígth
 = (
°©us
);

67 
boﬁ
 
	gªsu…
 = 
GlobÆMem‹ySètusEx
(&
°©us
);

68 i‡(!
	gªsu…
)

69  
	gømSizeGuess
;

70  
	g°©us
.
	guŒTŸÆPhys
;

74 
size_t
 
ømSize
()

76 c⁄° 
size_t
 
	gømSize
 = 
compuãRAMSize
();

77  
	gømSize
;

	@RAMSize.h

26 #i‚de‡
RAMSize_h


27 
	#RAMSize_h


	)

29 
«me•a˚
 
	gWTF
 {

31 
WTF_EXPORT_PRIVATE
 
size_t
 
ømSize
();

35 
usög
 
	gWTF
::
ømSize
;

	@RandomNumber.cpp

28 
	~"c⁄fig.h
"

29 
	~"R™domNumbî.h
"

31 
	~"Cry±ogøphiˇŒyR™domNumbî.h
"

32 
	~"R™domNumbîSìd.h
"

34 
	~<limôs
>

35 
	~<limôs.h
>

36 
	~<°döt.h
>

37 
	~<°dlib.h
>

39 
«me•a˚
 
	gWTF
 {

41 
øndomNumbî
()

43 
uöt32_t
 
	gbôs
 = 
¸y±ogøphiˇŒyR™domNumbî
();

44  
	g°©ic_ˇ°
<>(
	gbôs
Ë/ (°©ic_ˇ°<>(
	g°d
::
numîic_limôs
<
uöt32_t
>::
max
()) + 1.0);

	@RandomNumber.h

26 #i‚de‡
WTF_R™domNumbî_h


27 
	#WTF_R™domNumbî_h


	)

29 
«me•a˚
 
	gWTF
 {

33 
WTF_EXPORT_PRIVATE
 
øndomNumbî
();

37 
usög
 
	gWTF
::
øndomNumbî
;

	@RandomNumberSeed.h

26 #i‚de‡
WTF_R™domNumbîSìd_h


27 
	#WTF_R™domNumbîSìd_h


	)

29 
	~"R™domNumbî.h
"

30 
	~<°dlib.h
>

31 
	~<time.h
>

33 #i‡
HAVE
(
SYS_TIME_H
)

34 
	~<sys/time.h
>

37 #i‡
OS
(
UNIX
)

38 
	~<sys/ty≥s.h
>

39 
	~<uni°d.h
>

42 
«me•a˚
 
	gWTF
 {

44 
ölöe
 
öôülizeR™domNumbîGíî©‹
()

46 #i‡
OS
(
DARWIN
)

48 #ñi‡
COMPILER
(
MSVC
Ë&& 
deföed
(
_CRT_RAND_S
)

50 #ñi‡
OS
(
UNIX
)

52 
timevÆ
 
	gtime
;

53 
gëtimeofday
(&
time
, 0);

54 
§™dom
(
°©ic_ˇ°
<>(
time
.
tv_u£c
 * 
gëpid
()));

56 
§™d
(
°©ic_ˇ°
<>(
time
(0)));

	@RawPointer.h

26 #i‚de‡
RawPoöãr_h


27 
	#RawPoöãr_h


	)

29 
«me•a˚
 
	gWTF
 {

31 ˛as†
	cRawPoöãr
 {

32 
	gpublic
:

33 
RawPoöãr
()

34 : 
m_vÆue
(0)

38 
ex∂icô
 
RawPoöãr
(* 
vÆue
)

39 : 
m_vÆue
(
vÆue
)

43 
ex∂icô
 
RawPoöãr
(c⁄° * 
vÆue
)

44 : 
m_vÆue
(
vÆue
)

48 c⁄° * 
vÆue
(Ëc⁄° {  
m_vÆue
; }

50 
	g¥iv©e
:

51 c⁄° * 
m_vÆue
;

56 
usög
 
	gWTF
::
RawPoöãr
;

	@RedBlackTree.h

29 #i‚de‡
RedBœckTªe_h


30 
	#RedBœckTªe_h


	)

32 
	~<wtf/As£πi⁄s.h
>

33 
	~<wtf/N⁄c›yabÀ.h
>

35 
«me•a˚
 
	gWTF
 {

44 
	gãm∂©e
<
˛ass
 
	gNodeTy≥
, 
ty≥«me
 
	gKeyTy≥
>

45 ˛as†
	cRedBœckTªe
 {

46 
WTF_MAKE_NONCOPYABLE
(
RedBœckTªe
);

47 
	g¥iv©e
:

48 
	eCﬁ‹
 {

49 
Red
 = 1,

50 
	gBœck


53 
	gpublic
:

54 ˛as†
	cNode
 {

55 
‰õnd
 
˛ass
 
RedBœckTªe
;

57 
	gpublic
:

58 c⁄° 
NodeTy≥
* 
suc˚ss‹
() const

60 c⁄° 
Node
* 
x
 = 
this
;

61 i‡(
	gx
->
right
())

62  
åìMöimum
(
x
->
right
());

63 c⁄° 
NodeTy≥
* 
	gy
 = 
x
->
∑ª¡
();

64 
	gy
 && 
	gx
 =
y
->
right
()) {

65 
x
 = 
y
;

66 
	gy
 = 
y
->
∑ª¡
();

68  
	gy
;

71 c⁄° 
NodeTy≥
* 
¥ede˚ss‹
() const

73 c⁄° 
Node
* 
	gx
 = 
this
;

74 i‡(
	gx
->
À·
())

75  
åìMaximum
(
x
->
À·
());

76 c⁄° 
NodeTy≥
* 
	gy
 = 
x
->
∑ª¡
();

77 
	gy
 && 
	gx
 =
y
->
À·
()) {

78 
x
 = 
y
;

79 
	gy
 = 
y
->
∑ª¡
();

81  
	gy
;

84 
NodeTy≥
* 
suc˚ss‹
()

86  
	gc⁄°_ˇ°
<
	gNodeTy≥
*>(c⁄°_ˇ°<c⁄° 
	gNode
*>(
	gthis
)->
suc˚ss‹
());

89 
NodeTy≥
* 
¥ede˚ss‹
()

91  
	gc⁄°_ˇ°
<
	gNodeTy≥
*>(c⁄°_ˇ°<c⁄° 
	gNode
*>(
	gthis
)->
¥ede˚ss‹
());

94 
	g¥iv©e
:

95 
ª£t
()

97 
m_À·
 = 0;

98 
	gm_right
 = 0;

99 
	gm_∑ª¡AndRed
 = 1;

104 
NodeTy≥
* 
∑ª¡
() const

106  
	gªöãΩªt_ˇ°
<
	gNodeTy≥
*>(
	gm_∑ª¡AndRed
 & ~
	g°©ic_ˇ°
<
	guöçå_t
>(1));

109 
£tP¨ít
(
NodeTy≥
* 
√wP¨ít
)

111 
	gm_∑ª¡AndRed
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
√wP¨ít
Ë| (
m_∑ª¡AndRed
 & 1);

114 
NodeTy≥
* 
À·
() const

116  
	gm_À·
;

119 
£tLe·
(
NodeTy≥
* 
node
)

121 
	gm_À·
 = 
node
;

124 
NodeTy≥
* 
right
() const

126  
	gm_right
;

129 
£tRight
(
NodeTy≥
* 
node
)

131 
	gm_right
 = 
node
;

134 
Cﬁ‹
 
cﬁ‹
() const

136 i‡(
	gm_∑ª¡AndRed
 & 1)

137  
	gRed
;

138  
	gBœck
;

141 
£tCﬁ‹
(
Cﬁ‹
 
vÆue
)

143 i‡(
	gvÆue
 =
Red
)

144 
m_∑ª¡AndRed
 |= 1;

146 
	gm_∑ª¡AndRed
 &~
°©ic_ˇ°
<
uöçå_t
>(1);

149 
NodeTy≥
* 
	gm_À·
;

150 
NodeTy≥
* 
	gm_right
;

151 
uöçå_t
 
	gm_∑ª¡AndRed
;

154 
RedBœckTªe
()

155 : 
m_roŸ
(0)

159 
ö£π
(
NodeTy≥
* 
x
)

161 
x
->
ª£t
();

162 
åìIn£π
(
x
);

163 
	gx
->
£tCﬁ‹
(
Red
);

165 
	gx
 !
m_roŸ
 && 
x
->
∑ª¡
()->
cﬁ‹
(Ë=
Red
) {

166 i‡(
x
->
∑ª¡
(Ë=x->∑ª¡()->∑ª¡()->
À·
()) {

167 
NodeTy≥
* 
y
 = 
x
->
∑ª¡
()->∑ª¡()->
right
();

168 i‡(
	gy
 && y->
cﬁ‹
(Ë=
Red
) {

170 
x
->
∑ª¡
()->
£tCﬁ‹
(
Bœck
);

171 
	gy
->
£tCﬁ‹
(
Bœck
);

172 
	gx
->
∑ª¡
()->∑ª¡()->
£tCﬁ‹
(
Red
);

173 
	gx
 = 
x
->
∑ª¡
()->parent();

175 i‡(
	gx
 =
x
->
∑ª¡
()->
right
()) {

177 
x
 = x->
∑ª¡
();

178 
À·RŸ©e
(
x
);

181 
	gx
->
∑ª¡
()->
£tCﬁ‹
(
Bœck
);

182 
	gx
->
∑ª¡
()->∑ª¡()->
£tCﬁ‹
(
Red
);

183 
rightRŸ©e
(
x
->
∑ª¡
()->parent());

187 
NodeTy≥
* 
	gy
 = 
x
->
∑ª¡
()->∑ª¡()->
À·
();

188 i‡(
	gy
 && y->
cﬁ‹
(Ë=
Red
) {

190 
x
->
∑ª¡
()->
£tCﬁ‹
(
Bœck
);

191 
	gy
->
£tCﬁ‹
(
Bœck
);

192 
	gx
->
∑ª¡
()->∑ª¡()->
£tCﬁ‹
(
Red
);

193 
	gx
 = 
x
->
∑ª¡
()->parent();

195 i‡(
	gx
 =
x
->
∑ª¡
()->
À·
()) {

197 
x
 = x->
∑ª¡
();

198 
rightRŸ©e
(
x
);

201 
	gx
->
∑ª¡
()->
£tCﬁ‹
(
Bœck
);

202 
	gx
->
∑ª¡
()->∑ª¡()->
£tCﬁ‹
(
Red
);

203 
À·RŸ©e
(
x
->
∑ª¡
()->parent());

208 
	gm_roŸ
->
£tCﬁ‹
(
Bœck
);

211 
NodeTy≥
* 
ªmove
(NodeTy≥* 
z
)

213 
ASSERT
(
z
);

214 
ASSERT
(
z
->
∑ª¡
(Ë|| z =
m_roŸ
);

217 
NodeTy≥
* 
	gy
;

218 i‡(!
	gz
->
À·
(Ë|| !z->
right
())

219 
	gy
 = 
z
;

221 
	gy
 = 
z
->
suc˚ss‹
();

224 
NodeTy≥
* 
	gx
;

225 i‡(
	gy
->
À·
())

226 
	gx
 = 
y
->
À·
();

228 
	gx
 = 
y
->
right
();

232 
NodeTy≥
* 
	gxP¨ít
;

233 i‡(
	gx
) {

234 
	gx
->
£tP¨ít
(
y
->
∑ª¡
());

235 
	gxP¨ít
 = 
x
->
∑ª¡
();

237 
	gxP¨ít
 = 
y
->
∑ª¡
();

238 i‡(!
	gy
->
∑ª¡
())

239 
	gm_roŸ
 = 
x
;

241 i‡(
	gy
 =
y
->
∑ª¡
()->
À·
())

242 
y
->
∑ª¡
()->
£tLe·
(
x
);

244 
	gy
->
∑ª¡
()->
£tRight
(
x
);

247 i‡(
	gy
 !
z
) {

248 i‡(
y
->
cﬁ‹
(Ë=
Bœck
)

249 
ªmoveFixup
(
x
, 
xP¨ít
);

251 
	gy
->
£tP¨ít
(
z
->
∑ª¡
());

252 
	gy
->
£tCﬁ‹
(
z
->
cﬁ‹
());

253 
	gy
->
£tLe·
(
z
->
À·
());

254 
	gy
->
£tRight
(
z
->
right
());

256 i‡(
	gz
->
À·
())

257 
	gz
->
À·
()->
£tP¨ít
(
y
);

258 i‡(
	gz
->
right
())

259 
	gz
->
right
()->
£tP¨ít
(
y
);

260 i‡(
	gz
->
∑ª¡
()) {

261 i‡(
	gz
->
∑ª¡
()->
À·
(Ë=
z
)

262 
z
->
∑ª¡
()->
£tLe·
(
y
);

264 
	gz
->
∑ª¡
()->
£tRight
(
y
);

266 
ASSERT
(
m_roŸ
 =
z
);

267 
	gm_roŸ
 = 
y
;

269 } i‡(
	gy
->
cﬁ‹
(Ë=
Bœck
)

270 
ªmoveFixup
(
x
, 
xP¨ít
);

272  
	gz
;

275 
NodeTy≥
* 
ªmove
(c⁄° 
KeyTy≥
& 
key
)

277 
NodeTy≥
* 
	gªsu…
 = 
födExa˘
(
key
);

278 i‡(!
	gªsu…
)

280  
ªmove
(
ªsu…
);

283 
NodeTy≥
* 
födExa˘
(c⁄° 
KeyTy≥
& 
key
) const

285 
NodeTy≥
* 
	gcuºít
 = 
m_roŸ
; current;) {

286 i‡(
	gcuºít
->
key
() == key)

287  
cuºít
;

288 i‡(
	gkey
 < 
	gcuºít
->
key
())

289 
	gcuºít
 = 
cuºít
->
À·
();

291 
	gcuºít
 = 
cuºít
->
right
();

296 
NodeTy≥
* 
födLó°Gª©îTh™OrEquÆ
(c⁄° 
KeyTy≥
& 
key
) const

298 
NodeTy≥
* 
	gbe°
 = 0;

299 
NodeTy≥
* 
	gcuºít
 = 
m_roŸ
; current;) {

300 i‡(
	gcuºít
->
key
() == key)

301  
cuºít
;

302 i‡(
	gcuºít
->
key
(Ë< 
	gkey
)

303 
	gcuºít
 = 
cuºít
->
right
();

305 
	gbe°
 = 
cuºít
;

306 
	gcuºít
 = 
cuºít
->
À·
();

309  
	gbe°
;

312 
NodeTy≥
* 
födGª©e°LessTh™OrEquÆ
(c⁄° 
KeyTy≥
& 
key
) const

314 
NodeTy≥
* 
	gbe°
 = 0;

315 
NodeTy≥
* 
	gcuºít
 = 
m_roŸ
; current;) {

316 i‡(
	gcuºít
->
key
() == key)

317  
cuºít
;

318 i‡(
	gcuºít
->
key
(Ë> 
	gkey
)

319 
	gcuºít
 = 
cuºít
->
À·
();

321 
	gbe°
 = 
cuºít
;

322 
	gcuºít
 = 
cuºít
->
right
();

325  
	gbe°
;

328 
NodeTy≥
* 
fú°
() const

330 i‡(!
	gm_roŸ
)

332  
åìMöimum
(
m_roŸ
);

335 
NodeTy≥
* 
œ°
() const

337 i‡(!
	gm_roŸ
)

339  
åìMaximum
(
m_roŸ
);

343 
size_t
 
size
()

345 
size_t
 
	gªsu…
 = 0;

346 
NodeTy≥
* 
	gcuºít
 = 
fú°
(); cuºít; cuºíà
cuºít
->
suc˚ss‹
())

347 
ªsu…
++;

348  
	gªsu…
;

352 
boﬁ
 
isEm±y
()

354  !
	gm_roŸ
;

357 
	g¥iv©e
:

360 
NodeTy≥
* 
åìMöimum
(NodeTy≥* 
x
)

362 
x
->
À·
())

363 
x
 = x->
À·
();

364  
	gx
;

367 
NodeTy≥
* 
åìMaximum
(NodeTy≥* 
x
)

369 
	gx
->
right
())

370 
	gx
 = 
x
->
right
();

371  
	gx
;

374 c⁄° 
NodeTy≥
* 
åìMöimum
(c⁄° NodeTy≥* 
x
)

376 
	gx
->
À·
())

377 
	gx
 = 
x
->
À·
();

378  
	gx
;

381 c⁄° 
NodeTy≥
* 
åìMaximum
(c⁄° NodeTy≥* 
x
)

383 
	gx
->
right
())

384 
	gx
 = 
x
->
right
();

385  
	gx
;

388 
åìIn£π
(
NodeTy≥
* 
z
)

390 
ASSERT
(!
z
->
À·
());

391 
ASSERT
(!
z
->
right
());

392 
ASSERT
(!
z
->
∑ª¡
());

393 
ASSERT
(
z
->
cﬁ‹
(Ë=
Red
);

395 
NodeTy≥
* 
	gy
 = 0;

396 
NodeTy≥
* 
	gx
 = 
m_roŸ
;

397 
	gx
) {

398 
	gy
 = 
x
;

399 i‡(
	gz
->
key
(Ë< 
	gx
->key())

400 
	gx
 = 
x
->
À·
();

402 
	gx
 = 
x
->
right
();

404 
	gz
->
£tP¨ít
(
y
);

405 i‡(!
	gy
)

406 
	gm_roŸ
 = 
z
;

408 i‡(
	gz
->
key
(Ë< 
	gy
->key())

409 
	gy
->
£tLe·
(
z
);

411 
	gy
->
£tRight
(
z
);

421 
NodeTy≥
* 
À·RŸ©e
(NodeTy≥* 
x
)

424 
NodeTy≥
* 
	gy
 = 
x
->
right
();

427 
	gx
->
£tRight
(
y
->
À·
());

428 i‡(
	gy
->
À·
())

429 
	gy
->
À·
()->
£tP¨ít
(
x
);

432 
	gy
->
£tP¨ít
(
x
->
∑ª¡
());

433 i‡(!
	gx
->
∑ª¡
())

434 
	gm_roŸ
 = 
y
;

436 i‡(
	gx
 =
x
->
∑ª¡
()->
À·
())

437 
x
->
∑ª¡
()->
£tLe·
(
y
);

439 
	gx
->
∑ª¡
()->
£tRight
(
y
);

443 
	gy
->
£tLe·
(
x
);

444 
	gx
->
£tP¨ít
(
y
);

446  
	gy
;

451 
NodeTy≥
* 
rightRŸ©e
(NodeTy≥* 
y
)

454 
NodeTy≥
* 
	gx
 = 
y
->
À·
();

457 
	gy
->
£tLe·
(
x
->
right
());

458 i‡(
	gx
->
right
())

459 
	gx
->
right
()->
£tP¨ít
(
y
);

462 
	gx
->
£tP¨ít
(
y
->
∑ª¡
());

463 i‡(!
	gy
->
∑ª¡
())

464 
	gm_roŸ
 = 
x
;

466 i‡(
	gy
 =
y
->
∑ª¡
()->
À·
())

467 
y
->
∑ª¡
()->
£tLe·
(
x
);

469 
	gy
->
∑ª¡
()->
£tRight
(
x
);

473 
	gx
->
£tRight
(
y
);

474 
	gy
->
£tP¨ít
(
x
);

476  
	gx
;

482 
ªmoveFixup
(
NodeTy≥
* 
x
, NodeTy≥* 
xP¨ít
)

484 
	gx
 !
m_roŸ
 && (!
x
 || x->
cﬁ‹
(Ë=
Bœck
)) {

485 i‡(
x
 =
xP¨ít
->
À·
()) {

490 
NodeTy≥
* 
w
 = 
xP¨ít
->
right
();

491 
ASSERT
(
w
);

492 i‡(
	gw
->
cﬁ‹
(Ë=
Red
) {

494 
w
->
£tCﬁ‹
(
Bœck
);

495 
	gxP¨ít
->
£tCﬁ‹
(
Red
);

496 
À·RŸ©e
(
xP¨ít
);

497 
	gw
 = 
xP¨ít
->
right
();

499 i‡((!
	gw
->
À·
(Ë|| w->À·()->
cﬁ‹
(Ë=
Bœck
)

500 && (!
w
->
right
(Ë|| w->right()->
cﬁ‹
(Ë=
Bœck
)) {

502 
w
->
£tCﬁ‹
(
Red
);

503 
	gx
 = 
xP¨ít
;

504 
	gxP¨ít
 = 
x
->
∑ª¡
();

506 i‡(!
	gw
->
right
(Ë|| w->right()->
cﬁ‹
(Ë=
Bœck
) {

508 
w
->
À·
()->
£tCﬁ‹
(
Bœck
);

509 
	gw
->
£tCﬁ‹
(
Red
);

510 
rightRŸ©e
(
w
);

511 
	gw
 = 
xP¨ít
->
right
();

514 
	gw
->
£tCﬁ‹
(
xP¨ít
->
cﬁ‹
());

515 
	gxP¨ít
->
£tCﬁ‹
(
Bœck
);

516 i‡(
	gw
->
right
())

517 
	gw
->
right
()->
£tCﬁ‹
(
Bœck
);

518 
À·RŸ©e
(
xP¨ít
);

519 
	gx
 = 
m_roŸ
;

520 
	gxP¨ít
 = 
x
->
∑ª¡
();

530 
NodeTy≥
* 
	gw
 = 
xP¨ít
->
À·
();

531 
ASSERT
(
w
);

532 i‡(
	gw
->
cﬁ‹
(Ë=
Red
) {

534 
w
->
£tCﬁ‹
(
Bœck
);

535 
	gxP¨ít
->
£tCﬁ‹
(
Red
);

536 
rightRŸ©e
(
xP¨ít
);

537 
	gw
 = 
xP¨ít
->
À·
();

539 i‡((!
	gw
->
right
(Ë|| w->right()->
cﬁ‹
(Ë=
Bœck
)

540 && (!
w
->
À·
(Ë|| w->À·()->
cﬁ‹
(Ë=
Bœck
)) {

542 
w
->
£tCﬁ‹
(
Red
);

543 
	gx
 = 
xP¨ít
;

544 
	gxP¨ít
 = 
x
->
∑ª¡
();

546 i‡(!
	gw
->
À·
(Ë|| w->À·()->
cﬁ‹
(Ë=
Bœck
) {

548 
w
->
right
()->
£tCﬁ‹
(
Bœck
);

549 
	gw
->
£tCﬁ‹
(
Red
);

550 
À·RŸ©e
(
w
);

551 
	gw
 = 
xP¨ít
->
À·
();

554 
	gw
->
£tCﬁ‹
(
xP¨ít
->
cﬁ‹
());

555 
	gxP¨ít
->
£tCﬁ‹
(
Bœck
);

556 i‡(
	gw
->
À·
())

557 
	gw
->
À·
()->
£tCﬁ‹
(
Bœck
);

558 
rightRŸ©e
(
xP¨ít
);

559 
	gx
 = 
m_roŸ
;

560 
	gxP¨ít
 = 
x
->
∑ª¡
();

564 i‡(
	gx
)

565 
	gx
->
£tCﬁ‹
(
Bœck
);

568 
NodeTy≥
* 
	gm_roŸ
;

	@Ref.h

26 #i‚de‡
WTF_Ref_h


27 
	#WTF_Ref_h


	)

29 
	~<wtf/GëPå.h
>

30 
	~<wtf/N⁄c›yabÀ.h
>

32 
«me•a˚
 
	gWTF
 {

34 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gPassRef
;

36 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cRef
 {

37 
WTF_MAKE_NONCOPYABLE
(
Ref
)

38 
	gpublic
:

39 
Ref
(
T
& 
obje˘
Ë: 
m_±r
(&obje˘Ë{ m_±r->
ªf
(); }

40 
	gãm∂©e
<
ty≥«me
 
	gU
> 
Ref
(
PassRef
<
U
> 
ª„ªn˚
Ë: 
m_±r
(&ª„ªn˚.
ÀakRef
()) { }

42 ~
Ref
(Ë{ 
m_±r
->
dîef
(); }

44 
	gRef
& 
	g›î©‹
=(
T
& 
obje˘
)

46 
obje˘
.
ªf
();

47 
	gm_±r
->
dîef
();

48 
	gm_±r
 = &
obje˘
;

49  *
	gthis
;

51 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gRef
& 
	g›î©‹
=(
PassRef
<
U
> 
ª„ªn˚
)

53 
m_±r
->
dîef
();

54 
	gm_±r
 = &
ª„ªn˚
.
ÀakRef
();

55  *
	gthis
;

58 c⁄° 
T
* 
	g›î©‹
->(Ëc⁄° {  
	gm_±r
; }

59 
T
* 
	g›î©‹
->(Ë{  
	gm_±r
; }

61 c⁄° 
	gT
& 
gë
(Ëc⁄° {  *
	gm_±r
; }

62 
	gT
& 
gë
(Ë{  *
	gm_±r
; }

64 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gPassRef
<
	gT
> 
ª∂a˚
(
PassRef
<
U
>Ë
	gWARN_UNUSED_RETURN
;

66 
	g¥iv©e
:

67 
T
* 
m_±r
;

70 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gPassRef
<T> 
	gRef
<T>::
ª∂a˚
(
PassRef
<
U
> 
ª„ªn˚
)

72 autÿ
ﬁdRe„ªn˚
 = 
ad›tRef
(*
m_±r
);

73 
	gm_±r
 = &
ª„ªn˚
.
ÀakRef
();

74  
	gﬁdRe„ªn˚
;

77 
	gãm∂©e
 <
ty≥«me
 
	gT
>

78 
	gGëPåHñ≥r
<
	gRef
<
	gT
>> {

79 
T
* 
	tPåTy≥
;

80 
T
* 
gëPå
(c⁄° 
Ref
<T>& 
p
Ë{  
	gc⁄°_ˇ°
<
	gT
*>(&
	gp
.
gë
()); }

85 
usög
 
	gWTF
::
Ref
;

	@RefCounted.h

21 #i‚de‡
RefCou¡ed_h


22 
	#RefCou¡ed_h


	)

24 
	~<wtf/As£πi⁄s.h
>

25 
	~<wtf/Fa°MÆloc.h
>

26 
	~<wtf/N⁄c›yabÀ.h
>

28 
«me•a˚
 
	gWTF
 {

30 #ifde‡
NDEBUG


31 
	#CHECK_REF_COUNTED_LIFECYCLE
 0

	)

33 
	#CHECK_REF_COUNTED_LIFECYCLE
 1

	)

39 ˛as†
	cRefCou¡edBa£
 {

40 
	gpublic
:

41 
ªf
()

43 #i‡
CHECK_REF_COUNTED_LIFECYCLE


44 
ASSERT
(!
m_dñëi⁄HasBegun
);

45 
ASSERT
(!
m_ad›ti⁄IsRequúed
);

47 ++
	gm_ªfCou¡
;

50 
boﬁ
 
hasO√Ref
() const

52 #i‡
CHECK_REF_COUNTED_LIFECYCLE


53 
ASSERT
(!
m_dñëi⁄HasBegun
);

55  
	gm_ªfCou¡
 == 1;

58 
ªfCou¡
() const

60  
	gm_ªfCou¡
;

63 
ªœxAd›ti⁄Requúemít
()

65 #i‡
CHECK_REF_COUNTED_LIFECYCLE


66 
ASSERT
(!
m_dñëi⁄HasBegun
);

67 
ASSERT
(
m_ad›ti⁄IsRequúed
);

68 
	gm_ad›ti⁄IsRequúed
 = 
Ál£
;

72 
	g¥Ÿe˘ed
:

73 
RefCou¡edBa£
()

74 : 
m_ªfCou¡
(1)

75 #i‡
CHECK_REF_COUNTED_LIFECYCLE


76 , 
m_dñëi⁄HasBegun
(
Ál£
)

77 , 
m_ad›ti⁄IsRequúed
(
åue
)

82 ~
RefCou¡edBa£
()

84 #i‡
CHECK_REF_COUNTED_LIFECYCLE


85 
ASSERT
(
m_dñëi⁄HasBegun
);

86 
ASSERT
(!
m_ad›ti⁄IsRequúed
);

91 
boﬁ
 
dîefBa£
()

93 #i‡
CHECK_REF_COUNTED_LIFECYCLE


94 
ASSERT
(!
m_dñëi⁄HasBegun
);

95 
ASSERT
(!
m_ad›ti⁄IsRequúed
);

98 
ASSERT
(
m_ªfCou¡
);

99 
	gãmpRefCou¡
 = 
m_ªfCou¡
 - 1;

100 i‡(!
	gãmpRefCou¡
) {

101 #i‡
CHECK_REF_COUNTED_LIFECYCLE


102 
	gm_dñëi⁄HasBegun
 = 
åue
;

104  
	gåue
;

106 
	gm_ªfCou¡
 = 
ãmpRefCou¡
;

107  
	gÁl£
;

110 #i‡
CHECK_REF_COUNTED_LIFECYCLE


111 
boﬁ
 
dñëi⁄HasBegun
() const

113  
	gm_dñëi⁄HasBegun
;

117 
	g¥iv©e
:

119 #i‡
CHECK_REF_COUNTED_LIFECYCLE


120 
‰õnd
 
ad›ãd
(
RefCou¡edBa£
*);

123 
	gm_ªfCou¡
;

124 #i‡
CHECK_REF_COUNTED_LIFECYCLE


125 
boﬁ
 
	gm_dñëi⁄HasBegun
;

126 
boﬁ
 
	gm_ad›ti⁄IsRequúed
;

130 #i‡
CHECK_REF_COUNTED_LIFECYCLE


131 
ölöe
 
	$ad›ãd
(
RefCou¡edBa£
* 
obje˘
)

133 i‡(!
obje˘
)

135 
	`ASSERT
(!
obje˘
->
m_dñëi⁄HasBegun
);

136 
obje˘
->
m_ad›ti⁄IsRequúed
 = 
Ál£
;

137 
	}
}

140 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cRefCou¡ed
 : 
public
 
RefCou¡edBa£
 {

141 
WTF_MAKE_NONCOPYABLE
(
RefCou¡ed
); 
	gWTF_MAKE_FAST_ALLOCATED
;

142 
	gpublic
:

143 
dîef
()

145 i‡(
dîefBa£
())

146 
dñëe
 
°©ic_ˇ°
<
T
*>(
this
);

149 
	g¥Ÿe˘ed
:

150 
RefCou¡ed
() { }

151 ~
RefCou¡ed
()

158 
usög
 
	gWTF
::
RefCou¡ed
;

	@RefCountedArray.h

26 #i‚de‡
RefCou¡edAºay_h


27 
	#RefCou¡edAºay_h


	)

29 
	~<wtf/Fa°MÆloc.h
>

30 
	~<wtf/StdLibExåas.h
>

31 
	~<wtf/Ve˘‹.h
>

44 
«me•a˚
 
	gWTF
 {

46 
	gãm∂©e
<
ty≥«me
 
	gT
>

47 ˛as†
	cRefCou¡edAºay
 {

48 
	gpublic
:

49 
RefCou¡edAºay
()

50 : 
m_d©a
(0)

54 
RefCou¡edAºay
(c⁄° RefCou¡edAºay& 
Ÿhî
)

55 : 
m_d©a
(
Ÿhî
.m_data)

57 i‡(
m_d©a
)

58 
Hódî
::
‰omPaylﬂd
(
m_d©a
)->
ªfCou¡
++;

61 
ex∂icô
 
RefCou¡edAºay
(
size_t
 
size
)

63 i‡(!
	gsize
) {

64 
	gm_d©a
 = 0;

68 
	gm_d©a
 = (
°©ic_ˇ°
<
Hódî
*>(
Á°MÆloc
(Hódî::
size
(Ë+ (
T
Ë* size)))->
∑ylﬂd
();

69 
	gHódî
::
‰omPaylﬂd
(
m_d©a
)->
ªfCou¡
 = 1;

70 
	gHódî
::
‰omPaylﬂd
(
m_d©a
)->
Àngth
 = 
size
;

71 
ASSERT
(
Hódî
::
‰omPaylﬂd
(
m_d©a
)->
Àngth
 =
size
);

72 
	gVe˘‹Ty≥O≥øti⁄s
<
	gT
>::
öôülize
(
begö
(), 
íd
());

75 
ex∂icô
 
RefCou¡edAºay
(c⁄° 
Ve˘‹
<
T
>& 
Ÿhî
)

77 i‡(
	gŸhî
.
isEm±y
()) {

78 
	gm_d©a
 = 0;

82 
	gm_d©a
 = (
°©ic_ˇ°
<
Hódî
*>(
Á°MÆloc
(Hódî::
size
(Ë+ (
T
Ë* 
Ÿhî
.size())))->
∑ylﬂd
();

83 
	gHódî
::
‰omPaylﬂd
(
m_d©a
)->
ªfCou¡
 = 1;

84 
	gHódî
::
‰omPaylﬂd
(
m_d©a
)->
Àngth
 = 
Ÿhî
.
size
();

85 
ASSERT
(
Hódî
::
‰omPaylﬂd
(
m_d©a
)->
Àngth
 =
Ÿhî
.
size
());

86 
	gVe˘‹Ty≥O≥øti⁄s
<
	gT
>::
unöôülizedC›y
(
Ÿhî
.
begö
(), othî.
íd
(), 
m_d©a
);

89 
	gRefCou¡edAºay
& 
	g›î©‹
=(c⁄° 
RefCou¡edAºay
& 
Ÿhî
)

91 
T
* 
ﬁdD©a
 = 
m_d©a
;

92 
	gm_d©a
 = 
Ÿhî
.
m_d©a
;

93 i‡(
	gm_d©a
)

94 
	gHódî
::
‰omPaylﬂd
(
m_d©a
)->
ªfCou¡
++;

96 i‡(!
	gﬁdD©a
)

97  *
	gthis
;

98 i‡(--
	gHódî
::
‰omPaylﬂd
(
ﬁdD©a
)->
ªfCou¡
)

99  *
this
;

100 
	gVe˘‹Ty≥O≥øti⁄s
<
	gT
>::
de°ru˘
(
ﬁdD©a
, oldD©®+ 
Hódî
::
‰omPaylﬂd
(ﬁdD©a)->
Àngth
);

101 
Á°Fªe
(
Hódî
::
‰omPaylﬂd
(
ﬁdD©a
));

102  *
	gthis
;

105 ~
RefCou¡edAºay
()

107 i‡(!
	gm_d©a
)

109 i‡(--
	gHódî
::
‰omPaylﬂd
(
m_d©a
)->
ªfCou¡
)

111 
	gVe˘‹Ty≥O≥øti⁄s
<
	gT
>::
de°ru˘
(
begö
(), 
íd
());

112 
Á°Fªe
(
Hódî
::
‰omPaylﬂd
(
m_d©a
));

115 
ªfCou¡
() const

117 i‡(!
	gm_d©a
)

119  
	gHódî
::
‰omPaylﬂd
(
m_d©a
)->
ªfCou¡
;

122 
size_t
 
size
() const

124 i‡(!
	gm_d©a
)

126  
	gHódî
::
‰omPaylﬂd
(
m_d©a
)->
Àngth
;

129 
size_t
 
byãSize
(Ëc⁄° {  
size
(Ë* (
	gT
); }

131 
T
* 
d©a
(Ë{  
	gm_d©a
; }

132 
T
* 
begö
(Ë{  
	gm_d©a
; }

133 
T
* 
íd
()

135 i‡(!
	gm_d©a
)

137  
	gm_d©a
 + 
	gHódî
::
‰omPaylﬂd
(
m_d©a
)->
Àngth
;

140 c⁄° 
T
* 
d©a
(Ëc⁄° {  
	gm_d©a
; }

141 c⁄° 
T
* 
begö
(Ëc⁄° {  
	gm_d©a
; }

142 c⁄° 
T
* 
íd
(Ëc⁄° {  
	gc⁄°_ˇ°
<
	gRefCou¡edAºay
*>(
	gthis
)->end(); }

144 
	gT
& 
©
(
size_t
 
i
)

146 
ASSERT_WITH_SECURITY_IMPLICATION
(
i
 < 
size
());

147  
begö
()[
i
];

150 c⁄° 
	gT
& 
©
(
size_t
 
i
) const

152 
ASSERT_WITH_SECURITY_IMPLICATION
(
i
 < 
size
());

153  
begö
()[
i
];

156 
	gT
& 
	g›î©‹
[](
size_t
 
	gi
Ë{  
©
(
i
); }

157 c⁄° 
	gT
& 
	g›î©‹
[](
size_t
 
	gi
Ëc⁄° {  
©
(
i
); }

159 
boﬁ
 
	g›î©‹
==(c⁄° 
RefCou¡edAºay
& 
Ÿhî
) const

161 i‡(
m_d©a
 =
Ÿhî
.m_data)

162  
åue
;

163 i‡(!
	gm_d©a
 || !
	gŸhî
.m_data)

164  
	gÁl£
;

165 
	gÀngth
 = 
Hódî
::
‰omPaylﬂd
(
m_d©a
)->
Àngth
;

166 i‡(
	gÀngth
 !
Hódî
::
‰omPaylﬂd
(
Ÿhî
.
m_d©a
)->
Àngth
)

167  
Ál£
;

168 
	gi
 = 0; i < 
	gÀngth
; ++i) {

169 i‡(
	gm_d©a
[
i
] !
Ÿhî
.
m_d©a
[i])

170  
Ál£
;

172  
	gåue
;

175 
	g¥iv©e
:

176 
	sHódî
 {

177 
ªfCou¡
;

178 
	gÀngth
;

180 
size_t
 
size
()

182  ((
	gHódî
) + 7) & ~7;

185 
T
* 
∑ylﬂd
()

187 * 
	gªsu…
 = 
ªöãΩªt_ˇ°
<*>(
this
Ë+ 
size
();

188 
ASSERT
(!(
bôwi£_ˇ°
<
uöçå_t
>(
ªsu…
) & 7));

189  
	gªöãΩªt_ˇ°_±r
<
	gT
*>(
	gªsu…
);

192 
Hódî
* 
‰omPaylﬂd
(
T
* 
∑ylﬂd
)

194  
	gªöãΩªt_ˇ°_±r
<
	gHódî
*>(
	gªöãΩªt_ˇ°
<*>(
	g∑ylﬂd
Ë- 
size
());

198 
T
* 
	gm_d©a
;

203 
usög
 
	gWTF
::
RefCou¡edAºay
;

	@RefCountedLeakCounter.cpp

21 
	~"c⁄fig.h
"

22 
	~"RefCou¡edLókCou¡î.h
"

24 
	~<wtf/HashCou¡edSë.h
>

26 
«me•a˚
 
	gWTF
 {

28 #ifde‡
NDEBUG


30 
	gRefCou¡edLókCou¡î
::
suµªssMesßges
(const *) { }

31 
RefCou¡edLókCou¡î
::
ˇn˚lMesßgeSuµªssi⁄
(const *) { }

33 
RefCou¡edLókCou¡î
::RefCountedLeakCounter(const *) { }

34 
RefCou¡edLókCou¡î
::~RefCountedLeakCounter() { }

36 
RefCou¡edLókCou¡î
::
ö¸emít
() { }

37 
RefCou¡edLókCou¡î
::
de¸emít
() { }

41 
	#LOG_CHANNEL_PREFIX
 
Log


	)

42 
WTFLogCh™√l
 
LogRefCou¡edLóks
 = { 
WTFLogCh™√lOn
, "RefCountedLeaks" };

44 
	gHashCou¡edSë
<c⁄° *, 
	tPåHash
<c⁄° *>> 
	tRós⁄Së
;

45 
Rós⁄Së
* 
	gÀakMesßgeSuµªssi⁄Rós⁄s
;

47 
	gRefCou¡edLókCou¡î
::
suµªssMesßges
(c⁄° * 
ªas⁄
)

49 i‡(!
ÀakMesßgeSuµªssi⁄Rós⁄s
)

50 
ÀakMesßgeSuµªssi⁄Rós⁄s
 = 
√w
 
Rós⁄Së
;

51 
	gÀakMesßgeSuµªssi⁄Rós⁄s
->
add
(
ªas⁄
);

54 
	gRefCou¡edLókCou¡î
::
ˇn˚lMesßgeSuµªssi⁄
(c⁄° * 
ªas⁄
)

56 
ASSERT
(
ÀakMesßgeSuµªssi⁄Rós⁄s
);

57 
ASSERT
(
ÀakMesßgeSuµªssi⁄Rós⁄s
->
c⁄èös
(
ªas⁄
));

58 
	gÀakMesßgeSuµªssi⁄Rós⁄s
->
ªmove
(
ªas⁄
);

61 
	gRefCou¡edLókCou¡î
::
RefCou¡edLókCou¡î
(c⁄° * 
des¸ùti⁄
)

62 : 
m_des¸ùti⁄
(
des¸ùti⁄
)

66 
RefCou¡edLókCou¡î
::~RefCountedLeakCounter()

68 
boﬁ
 
loggedSuµªssi⁄Rós⁄
;

69 i‡(
	gm_cou¡
) {

70 i‡(!
	gÀakMesßgeSuµªssi⁄Rós⁄s
 ||ÜókMesßgeSuµªssi⁄Rós⁄s->
isEm±y
())

71 
LOG
(
RefCou¡edLóks
, "LEAK: %u %s", 
m_cou¡
.
lﬂd
(), 
m_des¸ùti⁄
);

72 i‡(!
	gloggedSuµªssi⁄Rós⁄
) {

74 
LOG
(
RefCou¡edLóks
, "NÿÀak checkög d⁄e: %s", 
ÀakMesßgeSuµªssi⁄Rós⁄s
->
begö
()->
key
);

75 
	gloggedSuµªssi⁄Rós⁄
 = 
åue
;

80 
	gRefCou¡edLókCou¡î
::
ö¸emít
()

82 ++
m_cou¡
;

85 
	gRefCou¡edLókCou¡î
::
de¸emít
()

87 --
m_cou¡
;

	@RefCountedLeakCounter.h

21 #i‚de‡
RefCou¡edLókCou¡î_h


22 
	#RefCou¡edLókCou¡î_h


	)

24 
	~<©omic
>

25 
	~<wtf/As£πi⁄s.h
>

27 
«me•a˚
 
	gWTF
 {

29 
	sRefCou¡edLókCou¡î
 {

30 
WTF_EXPORT_PRIVATE
 
suµªssMesßges
(const *);

31 
WTF_EXPORT_PRIVATE
 
ˇn˚lMesßgeSuµªssi⁄
(const *);

33 
WTF_EXPORT_PRIVATE
 
ex∂icô
 
RefCou¡edLókCou¡î
(c⁄° * 
des¸ùti⁄
);

34 
	gWTF_EXPORT_PRIVATE
 ~
RefCou¡edLókCou¡î
();

36 
WTF_EXPORT_PRIVATE
 
ö¸emít
();

37 
WTF_EXPORT_PRIVATE
 
de¸emít
();

39 #i‚de‡
NDEBUG


40 
	g¥iv©e
:

41 
°d
::
©omic
<> 
m_cou¡
;

42 c⁄° * 
	gm_des¸ùti⁄
;

	@RefPtr.h

23 #i‚de‡
WTF_RefPå_h


24 
	#WTF_RefPå_h


	)

26 
	~<Æg‹ôhm
>

27 
	~<utûôy
>

28 
	~<wtf/Fa°MÆloc.h
>

29 
	~<wtf/GëPå.h
>

30 
	~<wtf/PassRefPå.h
>

32 
«me•a˚
 
	gWTF
 {

34 
	eHashTabÀDñëedVÆueTy≥
 { 
	gHashTabÀDñëedVÆue
 };

36 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cRefPå
 {

37 
	gWTF_MAKE_FAST_ALLOCATED
;

38 
	gpublic
:

39 
T
 
	tVÆueTy≥
;

40 
VÆueTy≥
* 
	tPåTy≥
;

42 
ALWAYS_INLINE
 
RefPå
(Ë: 
m_±r
(
nuŒ±r
) { }

43 
ALWAYS_INLINE
 
RefPå
(
T
* 
±r
Ë: 
m_±r
’åË{ 
ªfIfNŸNuŒ
(ptr); }

44 
ALWAYS_INLINE
 
RefPå
(c⁄° RefPå& 
o
Ë: 
m_±r
(o.m_±rË{ 
ªfIfNŸNuŒ
(m_ptr); }

45 
	gãm∂©e
<
ty≥«me
 
	gU
> 
RefPå
(c⁄° RefPå<
U
>& 
o
Ë: 
m_±r
(o.
gë
()Ë{ 
ªfIfNŸNuŒ
(m_ptr); }

47 
ALWAYS_INLINE
 
RefPå
(RefPå&& 
o
Ë: 
m_±r
(o.
ªÀa£
().
ÀakRef
()) { }

48 
ãm∂©e
<
ty≥«me
 
U
> 
RefPå
(RefPå<U>&& 
o
Ë: 
m_±r
(o.
ªÀa£
().
ÀakRef
()) { }

51 
ãm∂©e
<
ty≥«me
 
U
> 
RefPå
(c⁄° 
PassRefPå
<U>&);

53 
	gãm∂©e
<
ty≥«me
 
	gU
> 
RefPå
(
PassRef
<
U
>&&);

56 
RefPå
(
HashTabÀDñëedVÆueTy≥
Ë: 
m_±r
(
hashTabÀDñëedVÆue
()) { }

57 
boﬁ
 
isHashTabÀDñëedVÆue
(Ëc⁄° {  
m_±r
 =
hashTabÀDñëedVÆue
(); }

59 
	gALWAYS_INLINE
 ~
RefPå
(Ë{ 
dîefIfNŸNuŒ
(
m_±r
); }

61 
T
* 
gë
(Ëc⁄° {  
	gm_±r
; }

63 
˛ór
();

64 
	gPassRefPå
<
	gT
> 
ªÀa£
(Ë{ PassRefPå<T> 
	gtmp
 = 
ad›tRef
(
m_±r
); 
	gm_±r
 = 
nuŒ±r
; Åmp; }

65 
	gPassRef
<
	gT
> 
ªÀa£N⁄NuŒ
(Ë{ 
ASSERT
(
m_±r
); PassRef<T> 
	gtmp
 = 
ad›tRef
(*m_±r); 
	gm_±r
 = 
nuŒ±r
; Åmp; }

67 
	gT
& 
	g›î©‹
*(Ëc⁄° {  *
	gm_±r
; }

68 
ALWAYS_INLINE
 
T
* 
	g›î©‹
->(Ëc⁄° {  
	gm_±r
; }

70 
boﬁ
 
	g›î©‹
!(Ëc⁄° {  !
	gm_±r
; }

73 
	gT
* (
	tRefPå
::*
	tUn•ecifõdBoﬁTy≥
);

74 
›î©‹
 
Un•ecifõdBoﬁTy≥
(Ëc⁄° {  
	gm_±r
 ? &
	gRefPå
::
m_±r
 : 
nuŒ±r
; }

76 
	gRefPå
& 
	g›î©‹
=(c⁄° 
RefPå
&);

77 
	gRefPå
& 
	g›î©‹
=(
T
*);

78 
	gRefPå
& 
	g›î©‹
=(c⁄° 
PassRefPå
<
T
>&);

79 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gRefPå
& 
	g›î©‹
=(c⁄° 
RefPå
<
U
>&);

80 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gRefPå
& 
	g›î©‹
=(c⁄° 
PassRefPå
<
U
>&);

81 
	gRefPå
& 
	g›î©‹
=(
RefPå
&&);

82 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gRefPå
& 
	g›î©‹
=(
RefPå
<
U
>&&);

83 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gRefPå
& 
	g›î©‹
=(
PassRef
<
U
>);

85 
sw≠
(
RefPå
&);

87 
T
* 
hashTabÀDñëedVÆue
(Ë{  
	gªöãΩªt_ˇ°
<
	gT
*>(-1); }

89 
	g¥iv©e
:

90 
T
* 
m_±r
;

93 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gRefPå
<T>::
RefPå
(c⁄° 
PassRefPå
<
U
>& 
o
)

94 : 
m_±r
(
o
.
	$ÀakRef
())

96 
	}
}

98 
ãm∂©e
<
ty≥«me
 
T
>Åem∂©e<ty≥«mê
U
> 
ölöe
 
RefPå
<T>::RefPå(
PassRef
<U>&& 
ª„ªn˚
)

99 : 
m_±r
(&
ª„ªn˚
.
	$ÀakRef
())

101 
	}
}

103 
ãm∂©e
<
ty≥«me
 
T
> 
ölöe
 
RefPå
<T>::
	$˛ór
()

105 
T
* 
±r
 = 
m_±r
;

106 
m_±r
 = 
nuŒ±r
;

107 
	`dîefIfNŸNuŒ
(
±r
);

108 
	}
}

110 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRefPå
<T>& RefPå<T>::
›î©‹
=(c⁄° 
RefPå
& 
o
)

112 
RefPå
 
±r
 = 
o
;

113 
sw≠
(
±r
);

114  *
	gthis
;

117 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gRefPå
<T>& RefPå<T>::
›î©‹
=(c⁄° 
RefPå
<
U
>& 
o
)

119 
RefPå
 
±r
 = 
o
;

120 
sw≠
(
±r
);

121  *
	gthis
;

124 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRefPå
<T>& RefPå<T>::
›î©‹
=(
T
* 
›å
)

126 
RefPå
 
±r
 = 
›å
;

127 
sw≠
(
±r
);

128  *
	gthis
;

131 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRefPå
<T>& RefPå<T>::
›î©‹
=(c⁄° 
PassRefPå
<
T
>& 
o
)

133 
RefPå
 
±r
 = 
o
;

134 
sw≠
(
±r
);

135  *
	gthis
;

138 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gRefPå
<T>& RefPå<T>::
›î©‹
=(c⁄° 
PassRefPå
<
U
>& 
o
)

140 
RefPå
 
±r
 = 
o
;

141 
sw≠
(
±r
);

142  *
	gthis
;

145 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRefPå
<T>& RefPå<T>::
›î©‹
=(
RefPå
&& 
o
)

147 
RefPå
 
±r
 = 
WTF
::
move
(
o
);

148 
sw≠
(
±r
);

149  *
	gthis
;

152 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gRefPå
<T>& RefPå<T>::
›î©‹
=(
RefPå
<
U
>&& 
o
)

154 
RefPå
 
±r
 = 
WTF
::
move
(
o
);

155 
sw≠
(
±r
);

156  *
	gthis
;

159 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gRefPå
<T>& RefPå<T>::
›î©‹
=(
PassRef
<
U
> 
ª„ªn˚
)

161 
RefPå
 
±r
 = 
WTF
::
move
(
ª„ªn˚
);

162 
sw≠
(
±r
);

163  *
	gthis
;

166 
	gãm∂©e
<
˛ass
 
	gT
> 
ölöe
 
	gRefPå
<T>::
	$sw≠
(
RefPå
& 
o
)

168 
°d
::
	`sw≠
(
m_±r
, 
o
.m_ptr);

169 
	}
}

171 
	gãm∂©e
<
˛ass
 
	gT
> 
ölöe
 
sw≠
(
RefPå
<
T
>& 
a
, RefPå<T>& 
b
)

173 
	ga
.
sw≠
(
b
);

176 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
RefPå
<
T
>& 
a
, c⁄° 
	gRefPå
<U>& 
	gb
)

178  
	ga
.
gë
(Ë=
b
.get();

181 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
RefPå
<
T
>& 
a
, 
U
* 
	gb
)

183  
	ga
.
gë
(Ë=
b
;

186 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(
T
* 
a
, c⁄° 
	gRefPå
<U>& 
	gb
)

188  
	ga
 =
b
.
gë
();

191 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
RefPå
<
T
>& 
a
, c⁄° 
	gRefPå
<U>& 
	gb
)

193  
	ga
.
gë
(Ë!
b
.get();

196 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
RefPå
<
T
>& 
a
, 
U
* 
	gb
)

198  
	ga
.
gë
(Ë!
b
;

201 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(
T
* 
a
, c⁄° 
	gRefPå
<U>& 
	gb
)

203  
	ga
 !
b
.
gë
();

206 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
	gRefPå
<T> 
°©ic_poöãr_ˇ°
(c⁄° 
RefPå
<
U
>& 
p
)

208  
	gRefPå
<
	gT
>(
	g°©ic_ˇ°
<T*>(
	gp
.
gë
()));

211 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gIsSm¨tPå
<
	gRefPå
<T>> {

212 c⁄° 
boﬁ
 
	gvÆue
 = 
åue
;

217 
usög
 
	gWTF
::
RefPå
;

218 
usög
 
	gWTF
::
°©ic_poöãr_ˇ°
;

	@RefPtrHashMap.h

21 #i‚de‡
RefPåHashM≠_h


22 
	#RefPåHashM≠_h


	)

24 
«me•a˚
 
	gWTF
 {

31 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

32 
˛ass
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
> {

33 
	gWTF_MAKE_FAST_ALLOCATED
;

34 
	g¥iv©e
:

35 
KeyTøôsArg
 
	tKeyTøôs
;

36 
M≠≥dTøôsArg
 
	tM≠≥dTøôs
;

37 
	gKeyVÆuePaúHashTøôs
<
	tKeyTøôs
, 
	tM≠≥dTøôs
> 
	tVÆueTøôs
;

39 
	gpublic
:

40 
ty≥«me
 
	tKeyTøôs
::
	tTøôTy≥
 
	tKeyTy≥
;

41 
T
* 
	tRawKeyTy≥
;

42 
ty≥«me
 
	tM≠≥dTøôs
::
	tTøôTy≥
 
	tM≠≥dTy≥
;

43 
ty≥«me
 
	tVÆueTøôs
::
	tTøôTy≥
 
	tVÆueTy≥
;

45 
	g¥iv©e
:

46 
ty≥«me
 
	tM≠≥dTøôs
::
	tPìkTy≥
 
	tM≠≥dPìkTy≥
;

48 
HashArg
 
	tHashFun˘i⁄s
;

50 
	gHashTabÀ
<
	tKeyTy≥
, 
	tVÆueTy≥
, 
	tKeyVÆuePaúKeyExåa˘‹
<ValueType>,

51 
	tHashFun˘i⁄s
, 
	tVÆueTøôs
, 
	tKeyTøôs
> 
	tHashTabÀTy≥
;

53 
	gHashM≠Tøn¶©‹
<
	tVÆueTøôs
, 
	tHashFun˘i⁄s
>

54 
	tTøn¶©‹
;

56 
	gpublic
:

57 
HashTabÀIãøt‹Ad≠ãr
<
	tHashTabÀTy≥
, 
	tVÆueTy≥
> 
	tôî©‹
;

58 
	gHashTabÀC⁄°Iãøt‹Ad≠ãr
<
	tHashTabÀTy≥
, 
	tVÆueTy≥
> 
	tc⁄°_ôî©‹
;

59 
ty≥«me
 
	tHashTabÀTy≥
::
	tAddResu…
 AddResult;

61 
sw≠
(
HashM≠
&);

63 
size
() const;

64 
ˇ∑côy
() const;

65 
boﬁ
 
isEm±y
() const;

68 
ôî©‹
 
begö
();

69 
ôî©‹
 
íd
();

70 
c⁄°_ôî©‹
 
begö
() const;

71 
c⁄°_ôî©‹
 
íd
() const;

73 
	gIãøt‹R™ge
<
ty≥«me
 
	gôî©‹
::
Keys
> 
keys
(Ë{  
makeIãøt‹R™ge
(
begö
().keys(), 
íd
().keys()); }

74 c⁄° 
	gIãøt‹R™ge
<
ty≥«me
 
	gc⁄°_ôî©‹
::
Keys
> 
keys
(Ëc⁄° {  
makeIãøt‹R™ge
(
begö
().keys(), 
íd
().keys()); }

76 
	gIãøt‹R™ge
<
ty≥«me
 
	gôî©‹
::
VÆues
> 
vÆues
(Ë{  
makeIãøt‹R™ge
(
begö
().vÆues(), 
íd
().values()); }

77 c⁄° 
	gIãøt‹R™ge
<
ty≥«me
 
	gc⁄°_ôî©‹
::
VÆues
> 
vÆues
(Ëc⁄° {  
makeIãøt‹R™ge
(
begö
().vÆues(), 
íd
().values()); }

79 
ôî©‹
 
föd
(c⁄° 
KeyTy≥
&);

80 
ôî©‹
 
föd
(
RawKeyTy≥
);

81 
c⁄°_ôî©‹
 
föd
(c⁄° 
KeyTy≥
&) const;

82 
c⁄°_ôî©‹
 
föd
(
RawKeyTy≥
) const;

83 
boﬁ
 
c⁄èös
(c⁄° 
KeyTy≥
&) const;

84 
boﬁ
 
c⁄èös
(
RawKeyTy≥
) const;

85 
M≠≥dPìkTy≥
 
gë
(c⁄° 
KeyTy≥
&) const;

86 
M≠≥dPìkTy≥
 
gë
(
RawKeyTy≥
) const;

87 
M≠≥dPìkTy≥
 
ölöeGë
(
RawKeyTy≥
) const;

92 
	gãm∂©e
<
ty≥«me
 
	gV
> 
AddResu…
 
£t
(c⁄° 
KeyTy≥
&, 
V
&&);

93 
	gãm∂©e
<
ty≥«me
 
	gV
> 
AddResu…
 
£t
(
RawKeyTy≥
, 
V
&&);

98 
	gãm∂©e
<
ty≥«me
 
	gV
> 
AddResu…
 
add
(c⁄° 
KeyTy≥
&, 
V
&&);

99 
	gãm∂©e
<
ty≥«me
 
	gV
> 
AddResu…
 
add
(
RawKeyTy≥
, 
V
&&);

101 
boﬁ
 
ªmove
(c⁄° 
KeyTy≥
&);

102 
boﬁ
 
ªmove
(
RawKeyTy≥
);

103 
boﬁ
 
ªmove
(
ôî©‹
);

104 
˛ór
();

106 
M≠≥dTy≥
 
èke
(c⁄° 
KeyTy≥
&);

107 
M≠≥dTy≥
 
èke
(
RawKeyTy≥
);

109 
	g¥iv©e
:

110 
ãm∂©e
<
ty≥«me
 
V
>

111 
AddResu…
 
ölöeAdd
(c⁄° 
KeyTy≥
&, 
V
&&);

113 
	gãm∂©e
<
ty≥«me
 
	gV
>

114 
AddResu…
 
ölöeAdd
(
RawKeyTy≥
, 
V
&&);

116 
HashTabÀTy≥
 
	gm_im∂
;

119 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

120 
ölöe
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
sw≠
(
HashM≠
& 
Ÿhî
)

122 
m_im∂
.
sw≠
(
Ÿhî
.m_impl);

125 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

126 
ölöe
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
size
() const

128  
m_im∂
.
size
();

131 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

132 
ölöe
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
ˇ∑côy
() const

134  
m_im∂
.
ˇ∑côy
();

137 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

138 
ölöe
 
boﬁ
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
isEm±y
() const

140  
m_im∂
.
isEm±y
();

143 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

144 
ölöe
 
ty≥«me
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
ôî©‹
 
HashM≠
<
RefPå
<
T
>, U, V, W, X>::
begö
()

146  
m_im∂
.
begö
();

149 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

150 
ölöe
 
ty≥«me
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
ôî©‹
 
HashM≠
<
RefPå
<
T
>, U, V, W, X>::
íd
()

152  
m_im∂
.
íd
();

155 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

156 
ölöe
 
ty≥«me
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
c⁄°_ôî©‹
 
HashM≠
<
RefPå
<
T
>, U, V, W, X>::
begö
() const

158  
m_im∂
.
begö
();

161 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

162 
ölöe
 
ty≥«me
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
c⁄°_ôî©‹
 
HashM≠
<
RefPå
<
T
>, U, V, W, X>::
íd
() const

164  
m_im∂
.
íd
();

167 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

168 
ölöe
 
ty≥«me
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
ôî©‹
 
HashM≠
<
RefPå
<
T
>, U, V, W, X>::
föd
(c⁄° 
KeyTy≥
& 
key
)

170  
m_im∂
.
föd
(
key
);

173 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

174 
ölöe
 
ty≥«me
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
ôî©‹
 
HashM≠
<
RefPå
<
T
>, U, V, W, X>::
föd
(
RawKeyTy≥
 
key
)

176  
m_im∂
.
ãm∂©e
 
föd
<
Tøn¶©‹
>(
key
);

179 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

180 
ölöe
 
ty≥«me
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
c⁄°_ôî©‹
 
HashM≠
<
RefPå
<
T
>, U, V, W, X>::
föd
(c⁄° 
KeyTy≥
& 
key
) const

182  
m_im∂
.
föd
(
key
);

185 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

186 
ölöe
 
ty≥«me
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
c⁄°_ôî©‹
 
HashM≠
<
RefPå
<
T
>, U, V, W, X>::
föd
(
RawKeyTy≥
 
key
) const

188  
m_im∂
.
ãm∂©e
 
föd
<
Tøn¶©‹
>(
key
);

191 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

192 
ölöe
 
boﬁ
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
c⁄èös
(c⁄° 
KeyTy≥
& 
key
) const

194  
m_im∂
.
c⁄èös
(
key
);

197 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

198 
ölöe
 
boﬁ
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
c⁄èös
(
RawKeyTy≥
 
key
) const

200  
m_im∂
.
ãm∂©e
 
c⁄èös
<
Tøn¶©‹
>(
key
);

203 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

204 
	gãm∂©e
<
ty≥«me
 
	gV
>

205 autÿ
	gHashM≠
<
	gRefPå
<
	gKeyArg
>, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
ölöeAdd
(c⁄° 
KeyTy≥
& 
key
, 
V
&& 
m≠≥d
Ë-> 
	gAddResu…


207  
	gm_im∂
.
ãm∂©e
 
	gadd
<
	gTøn¶©‹
>(
	gkey
, 
	g°d
::
f‹w¨d
<
V
>(
m≠≥d
));

210 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

211 
	gãm∂©e
<
ty≥«me
 
	gV
>

212 autÿ
	gHashM≠
<
	gRefPå
<
	gKeyArg
>, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
ölöeAdd
(
RawKeyTy≥
 
key
, 
V
&& 
m≠≥d
Ë-> 
	gAddResu…


214  
	gm_im∂
.
ãm∂©e
 
	gadd
<
	gTøn¶©‹
>(
	gkey
, 
	g°d
::
f‹w¨d
<
V
>(
m≠≥d
));

217 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

218 
	gãm∂©e
<
ty≥«me
 
	gV
>

219 autÿ
	gHashM≠
<
	gRefPå
<
	gKeyArg
>, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
£t
(c⁄° 
KeyTy≥
& 
key
, 
V
&& 
vÆue
Ë-> 
	gAddResu…


221 
AddResu…
 
	gªsu…
 = 
ölöeAdd
(
key
, 
°d
::
f‹w¨d
<
V
>(
vÆue
));

222 i‡(!
	gªsu…
.
	gisNewE¡ry
) {

224 
	gªsu…
.
	gôî©‹
->
	gvÆue
 = 
°d
::
f‹w¨d
<
V
>(
vÆue
);

226  
	gªsu…
;

229 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

230 
	gãm∂©e
<
ty≥«me
 
	gV
>

231 autÿ
	gHashM≠
<
	gRefPå
<
	gKeyArg
>, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
£t
(
RawKeyTy≥
 
key
, 
V
&& 
vÆue
Ë-> 
	gAddResu…


233 
AddResu…
 
	gªsu…
 = 
ölöeAdd
(
key
, 
°d
::
f‹w¨d
<
V
>(
vÆue
));

234 i‡(!
	gªsu…
.
	gisNewE¡ry
) {

236 
	gªsu…
.
	gôî©‹
->
	gvÆue
 = 
°d
::
f‹w¨d
<
V
>(
vÆue
);

238  
	gªsu…
;

241 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

242 
	gãm∂©e
<
ty≥«me
 
	gV
>

243 autÿ
	gHashM≠
<
	gRefPå
<
	gKeyArg
>, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
add
(c⁄° 
KeyTy≥
& 
key
, 
V
&& 
vÆue
Ë-> 
	gAddResu…


245  
ölöeAdd
(
key
, 
°d
::
f‹w¨d
<
V
>(
vÆue
));

248 
	gãm∂©e
<
ty≥«me
 
	gKeyArg
,Åy≥«mê
	gM≠≥dArg
,Åy≥«mê
	gHashArg
,Åy≥«mê
	gKeyTøôsArg
,Åy≥«mê
	gM≠≥dTøôsArg
>

249 
	gãm∂©e
<
ty≥«me
 
	gV
>

250 autÿ
	gHashM≠
<
	gRefPå
<
	gKeyArg
>, 
	gM≠≥dArg
, 
	gHashArg
, 
	gKeyTøôsArg
, 
	gM≠≥dTøôsArg
>::
add
(
RawKeyTy≥
 
key
, 
V
&& 
vÆue
Ë-> 
	gAddResu…


252  
ölöeAdd
(
key
, 
°d
::
f‹w¨d
<
V
>(
vÆue
));

255 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gM≠≥dTøôs
>

256 
ty≥«me
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gM≠≥dTøôs
>::
M≠≥dPìkTy≥


257 
HashM≠
<
RefPå
<
T
>, 
	gU
, 
	gV
, 
	gW
, 
	gM≠≥dTøôs
>::
gë
(c⁄° 
KeyTy≥
& 
key
) const

259 
VÆueTy≥
* 
íåy
 = 
c⁄°_ˇ°
<
HashTabÀTy≥
&>(
m_im∂
).
lookup
(
key
);

260 i‡(!
	gíåy
)

261  
	gM≠≥dTøôs
::
≥ek
(
M≠≥dTøôs
::
em±yVÆue
());

262  
	gM≠≥dTøôs
::
≥ek
(
íåy
->
vÆue
);

265 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gM≠≥dTøôs
>

266 
ty≥«me
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gM≠≥dTøôs
>::
M≠≥dPìkTy≥


267 
ölöe
 
HashM≠
<
RefPå
<
T
>, 
	gU
, 
	gV
, 
	gW
, 
	gM≠≥dTøôs
>::
ölöeGë
(
RawKeyTy≥
 
key
) const

269 
VÆueTy≥
* 
íåy
 = 
c⁄°_ˇ°
<
HashTabÀTy≥
&>(
m_im∂
).
ãm∂©e
 
lookup
<
Tøn¶©‹
>(
key
);

270 i‡(!
	gíåy
)

271  
	gM≠≥dTøôs
::
≥ek
(
M≠≥dTøôs
::
em±yVÆue
());

272  
	gM≠≥dTøôs
::
≥ek
(
íåy
->
vÆue
);

275 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gM≠≥dTøôs
>

276 
ty≥«me
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gM≠≥dTøôs
>::
M≠≥dPìkTy≥


277 
HashM≠
<
RefPå
<
T
>, 
	gU
, 
	gV
, 
	gW
, 
	gM≠≥dTøôs
>::
gë
(
RawKeyTy≥
 
key
) const

279  
ölöeGë
(
key
);

282 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

283 
ölöe
 
boﬁ
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
ªmove
(
ôî©‹
 
ô
)

285 i‡(
ô
.
m_im∂
 =m_im∂.
íd
())

286  
Ál£
;

287 
	gm_im∂
.
öã∫ÆCheckTabÀC⁄si°ícy
();

288 
	gm_im∂
.
ªmoveWôhoutE¡ryC⁄si°ícyCheck
(
ô
.
m_im∂
);

289  
	gåue
;

292 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

293 
ölöe
 
boﬁ
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
ªmove
(c⁄° 
KeyTy≥
& 
key
)

295  
ªmove
(
föd
(
key
));

298 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

299 
ölöe
 
boﬁ
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
ªmove
(
RawKeyTy≥
 
key
)

301  
ªmove
(
föd
(
key
));

304 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gX
>

305 
ölöe
 
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gX
>::
˛ór
()

307 
m_im∂
.
˛ór
();

310 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gM≠≥dTøôs
>

311 autÿ
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gM≠≥dTøôs
>::
èke
(c⁄° 
KeyTy≥
& 
key
Ë-> 
M≠≥dTy≥


313 
ôî©‹
 
ô
 = 
föd
(
key
);

314 i‡(
	gô
 =
íd
())

315  
M≠≥dTøôs
::
em±yVÆue
();

316 
M≠≥dTy≥
 
	gvÆue
 = 
WTF
::
move
(
ô
->
vÆue
);

317 
ªmove
(
ô
);

318  
	gvÆue
;

321 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
,Åy≥«mê
	gM≠≥dTøôs
>

322 autÿ
	gHashM≠
<
	gRefPå
<
	gT
>, 
	gU
, 
	gV
, 
	gW
, 
	gM≠≥dTøôs
>::
èke
(
RawKeyTy≥
 
key
Ë-> 
M≠≥dTy≥


324 
ôî©‹
 
ô
 = 
föd
(
key
);

325 i‡(
	gô
 =
íd
())

326  
M≠≥dTøôs
::
em±yVÆue
();

327 
M≠≥dTy≥
 
	gvÆue
 = 
WTF
::
move
(
ô
->
vÆue
);

328 
ªmove
(
ô
);

329  
	gvÆue
;

	@RetainPtr.h

21 #i‚de‡
RëaöPå_h


22 
	#RëaöPå_h


	)

24 #i‡
USE
(
CF
Ë|| 
deföed
(
__OBJC__
)

26 
	~<wtf/HashTøôs.h
>

27 
	~<Æg‹ôhm
>

28 
	~<c°ddef
>

30 #i‡
USE
(
CF
)

31 
	~<C‹eFound©i⁄/C‹eFound©i⁄.h
>

34 #ifde‡
__OBJC__


35 #imp‹à<
Found©i⁄
/Found©i⁄.
h
>

38 #i‚de‡
CF_RELEASES_ARGUMENT


39 
	#CF_RELEASES_ARGUMENT


	)

42 #i‚de‡
NS_RELEASES_ARGUMENT


43 
	#NS_RELEASES_ARGUMENT


	)

46 
«me•a˚
 
	gWTF
 {

51 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gRëaöPå
;

53 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gRëaöPå
<T> 
ad›tOS
(
T
 
CF_RELEASES_ARGUMENT
Ë
	gWARN_UNUSED_RETURN
;

54 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gRëaöPå
<T> 
ad›tCF
(
T
 
CF_RELEASES_ARGUMENT
Ë
	gWARN_UNUSED_RETURN
;

55 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gRëaöPå
<T> 
ad›tNS
(
T
 
NS_RELEASES_ARGUMENT
Ë
	gWARN_UNUSED_RETURN
;

57 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cRëaöPå
 {

58 
	gpublic
:

59 
ty≥«me
 
	t°d
::
	tªmove_poöãr
<
	tT
>::
	tty≥
 
	tVÆueTy≥
;

60 
VÆueTy≥
* 
	tPåTy≥
;

61 
CFTy≥Ref
 
	tSt‹ageTy≥
;

63 
RëaöPå
(Ë: 
m_±r
(
nuŒ±r
) { }

64 
RëaöPå
(
PåTy≥
 
±r
Ë: 
m_±r
(
toSt‹ageTy≥
’å)Ë{ i‡(m_±rË
CFRëaö
(m_ptr); }

66 
RëaöPå
(c⁄° RëaöPå& 
o
Ë: 
m_±r
(o.m_±rË{ i‡(
St‹ageTy≥
 
±r
 = m_±rË
CFRëaö
(ptr); }

68 
RëaöPå
(RëaöPå&& 
o
Ë: 
m_±r
(
toSt‹ageTy≥
(o.
ÀakRef
())) { }

69 
ãm∂©e
<
ty≥«me
 
U
> 
RëaöPå
(RëaöPå<U>&& 
o
Ë: 
m_±r
(
toSt‹ageTy≥
(o.
ÀakRef
())) { }

72 
RëaöPå
(
HashTabÀDñëedVÆueTy≥
Ë: 
m_±r
(
hashTabÀDñëedVÆue
()) { }

73 
boﬁ
 
isHashTabÀDñëedVÆue
(Ëc⁄° {  
m_±r
 =
hashTabÀDñëedVÆue
(); }

75 ~
RëaöPå
(Ë{ i‡(
St‹ageTy≥
 
	g±r
 = 
m_±r
Ë
CFRñó£
(
±r
); }

77 
	gãm∂©e
<
ty≥«me
 
	gU
> 
RëaöPå
(c⁄° RëaöPå<
U
>&);

79 
˛ór
();

80 
PåTy≥
 
ÀakRef
(Ë
	gWARN_UNUSED_RETURN
;

81 
PåTy≥
 
aut‹ñó£
();

83 
PåTy≥
 
gë
(Ëc⁄° {  
‰omSt‹ageTy≥
(
m_±r
); }

84 
PåTy≥
 
	g›î©‹
->(Ëc⁄° {  
‰omSt‹ageTy≥
(
m_±r
); }

85 
ex∂icô
 
›î©‹
 
PåTy≥
(Ëc⁄° {  
‰omSt‹ageTy≥
(
m_±r
); }

86 
ex∂icô
 
›î©‹
 
boﬁ
(Ëc⁄° {  
	gm_±r
; }

88 
boﬁ
 
	g›î©‹
!(Ëc⁄° {  !
	gm_±r
; }

91 
St‹ageTy≥
 
	tRëaöPå
::*
	tUn•ecifõdBoﬁTy≥
;

92 
›î©‹
 
Un•ecifõdBoﬁTy≥
(Ëc⁄° {  
	gm_±r
 ? &
	gRëaöPå
::
m_±r
 : 
nuŒ±r
; }

94 
	gRëaöPå
& 
	g›î©‹
=(c⁄° 
RëaöPå
&);

95 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gRëaöPå
& 
	g›î©‹
=(c⁄° 
RëaöPå
<
U
>&);

96 
	gRëaöPå
& 
	g›î©‹
=(
PåTy≥
);

97 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gRëaöPå
& 
	g›î©‹
=(
U
*);

99 
	gRëaöPå
& 
	g›î©‹
=(
RëaöPå
&&);

100 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gRëaöPå
& 
	g›î©‹
=(
RëaöPå
<
U
>&&);

102 
sw≠
(
RëaöPå
&);

104 
	gãm∂©e
<
ty≥«me
 
	gU
> 
‰õnd
 
	gRëaöPå
<U> 
ad›tOS
(
U
 
CF_RELEASES_ARGUMENT
Ë
	gWARN_UNUSED_RETURN
;

105 
	gãm∂©e
<
ty≥«me
 
	gU
> 
‰õnd
 
	gRëaöPå
<U> 
ad›tCF
(
U
 
CF_RELEASES_ARGUMENT
Ë
	gWARN_UNUSED_RETURN
;

106 
	gãm∂©e
<
ty≥«me
 
	gU
> 
‰õnd
 
	gRëaöPå
<U> 
ad›tNS
(
U
 
NS_RELEASES_ARGUMENT
Ë
	gWARN_UNUSED_RETURN
;

108 
	g¥iv©e
:

109 
	eAd›tTag
 { 
Ad›t
 };

110 
RëaöPå
(
PåTy≥
 
±r
, 
Ad›tTag
Ë: 
m_±r
(
toSt‹ageTy≥
(ptr)) { }

112 
PåTy≥
 
hashTabÀDñëedVÆue
(Ë{  
ªöãΩªt_ˇ°
<PtrType>(-1); }

114 #i‡
deföed
 (
__OBJC__
Ë&& 
__has_„©uª
(
objc_¨c
)

115 
	gãm∂©e
<
ty≥«me
 
	gU
>

116 
ty≥«me
 
	g°d
::
íabÀ_if
<
°d
::
is_c⁄vîtibÀ
<
U
, 
	gid
>::
vÆue
, 
	gPåTy≥
>::
ty≥


117 
‰omSt‹ageTy≥Hñ≥r
(
St‹ageTy≥
 
±r
) const

119  (
__bridge
 
PåTy≥
)
±r
;

122 
	gãm∂©e
<
ty≥«me
 
	gU
>

123 
ty≥«me
 
	g°d
::
íabÀ_if
<!
°d
::
is_c⁄vîtibÀ
<
U
, 
	gid
>::
vÆue
, 
	gPåTy≥
>::
ty≥


124 
‰omSt‹ageTy≥Hñ≥r
(
St‹ageTy≥
 
±r
) const

126  (
PåTy≥
)
±r
;

129 
PåTy≥
 
‰omSt‹ageTy≥
(
St‹ageTy≥
 
±r
Ëc⁄° {  
	g‰omSt‹ageTy≥Hñ≥r
<
	gPåTy≥
>(
	g±r
); }

130 
St‹ageTy≥
 
toSt‹ageTy≥
(
id
 
±r
Ëc⁄° {  (
__bridge
 
	gSt‹ageTy≥
)
	g±r
; }

131 
St‹ageTy≥
 
toSt‹ageTy≥
(
CFTy≥Ref
 
±r
Ëc⁄° {  (
	gSt‹ageTy≥
)
	g±r
; }

133 
PåTy≥
 
‰omSt‹ageTy≥
(
St‹ageTy≥
 
±r
Ëc⁄° {  (
	gPåTy≥
)
	g±r
; }

134 
St‹ageTy≥
 
toSt‹ageTy≥
(
PåTy≥
 
±r
Ëc⁄° {  (
	gSt‹ageTy≥
)
	g±r
; }

137 
St‹ageTy≥
 
	gm_±r
;

141 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRëaöPå
<T> 
	$ªèöPå
(
T
Ë
WARN_UNUSED_RETURN
;

143 
ãm∂©e
<
ty≥«me
 
T
>Åem∂©e<ty≥«mê
U
> 
ölöe
 
RëaöPå
<T>::
	`RëaöPå
(c⁄° RëaöPå<U>& 
o
)

144 : 
	`m_±r
(
	`toSt‹ageTy≥
(
o
.
	$gë
()))

146 i‡(
St‹ageTy≥
 
±r
 = 
m_±r
)

147 
	`CFRëaö
(
±r
);

148 
	}
}

150 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRëaöPå
<T>::
	$˛ór
()

152 i‡(
St‹ageTy≥
 
±r
 = 
m_±r
) {

153 
m_±r
 = 
nuŒ±r
;

154 
	`CFRñó£
(
±r
);

156 
	}
}

158 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
Åy≥«mê
	gRëaöPå
<T>::
PåTy≥
 
RëaöPå
<
T
>::
	$ÀakRef
()

160 
PåTy≥
 
±r
 = 
	`‰omSt‹ageTy≥
(
m_±r
);

161 
m_±r
 = 
nuŒ±r
;

162  
±r
;

163 
	}
}

165 #ifde‡
__OBJC__


166 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
áutÿ
	gRëaöPå
<T>::
aut‹ñó£
(Ë-> 
PåTy≥


168  (
__bridge
 
PåTy≥
)
CFBridgögRñó£
(
ÀakRef
());

172 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRëaöPå
<T>& RëaöPå<T>::
›î©‹
=(c⁄° 
RëaöPå
& 
o
)

174 
RëaöPå
 
±r
 = 
o
;

175 
sw≠
(
±r
);

176  *
	gthis
;

179 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gRëaöPå
<T>& RëaöPå<T>::
›î©‹
=(c⁄° 
RëaöPå
<
U
>& 
o
)

181 
RëaöPå
 
±r
 = 
o
;

182 
sw≠
(
±r
);

183  *
	gthis
;

186 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRëaöPå
<T>& RëaöPå<T>::
›î©‹
=(
PåTy≥
 
›å
)

188 
RëaöPå
 
±r
 = 
›å
;

189 
sw≠
(
±r
);

190  *
	gthis
;

193 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gRëaöPå
<T>& RëaöPå<T>::
›î©‹
=(
U
* 
›å
)

195 
RëaöPå
 
±r
 = 
›å
;

196 
sw≠
(
±r
);

197  *
	gthis
;

200 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRëaöPå
<T>& RëaöPå<T>::
›î©‹
=(
RëaöPå
&& 
o
)

202 
RëaöPå
 
±r
 = 
WTF
::
move
(
o
);

203 
sw≠
(
±r
);

204  *
	gthis
;

207 
	gãm∂©e
<
ty≥«me
 
	gT
>Åem∂©e<ty≥«mê
	gU
> 
ölöe
 
	gRëaöPå
<T>& RëaöPå<T>::
›î©‹
=(
RëaöPå
<
U
>&& 
o
)

209 
RëaöPå
 
±r
 = 
WTF
::
move
(
o
);

210 
sw≠
(
±r
);

211  *
	gthis
;

214 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRëaöPå
<T>::
	$sw≠
(
RëaöPå
& 
o
)

216 
°d
::
	`sw≠
(
m_±r
, 
o
.m_ptr);

217 
	}
}

219 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
sw≠
(
RëaöPå
<
T
>& 
a
, RëaöPå<T>& 
b
)

221 
	ga
.
sw≠
(
b
);

224 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
RëaöPå
<
T
>& 
a
, c⁄° 
	gRëaöPå
<U>& 
	gb
)

226  
	ga
.
gë
(Ë=
b
.get();

229 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
RëaöPå
<
T
>& 
a
, 
U
* 
	gb
)

231  
	ga
.
gë
(Ë=
b
;

234 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(
T
* 
a
, c⁄° 
	gRëaöPå
<U>& 
	gb
)

236  
	ga
 =
b
.
gë
();

239 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
RëaöPå
<
T
>& 
a
, c⁄° 
	gRëaöPå
<U>& 
	gb
)

241  
	ga
.
gë
(Ë!
b
.get();

244 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
RëaöPå
<
T
>& 
a
, 
U
* 
	gb
)

246  
	ga
.
gë
(Ë!
b
;

249 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(
T
* 
a
, c⁄° 
	gRëaöPå
<U>& 
	gb
)

251  
	ga
 !
b
.
gë
();

254 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRëaöPå
<T> 
	$ad›tOS
(
T
 
CF_RELEASES_ARGUMENT
 
±r
)

256  
RëaöPå
<
T
>(
±r
, RëaöPå<T>::
Ad›t
);

257 
	}
}

259 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRëaöPå
<T> 
	$ad›tCF
(
T
 
CF_RELEASES_ARGUMENT
 
±r
)

261 #ifde‡
__OBJC__


262 
	`°©ic_as£π
((!
°d
::
is_c⁄vîtibÀ
<
T
, 
id
>::
vÆue
), "Don't useádoptCF with Objective-CÖointerÅypes, useádoptNS.");

264  
RëaöPå
<
T
>(
±r
, RëaöPå<T>::
Ad›t
);

265 
	}
}

267 #ifde‡
__OBJC__


268 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRëaöPå
<T> 
	$ad›tNS
(
T
 
NS_RELEASES_ARGUMENT
 
±r
)

270 #i‡
	`__has_„©uª
(
objc_¨c
)

271  
±r
;

272 #ñi‡
	`deföed
(
OBJC_NO_GC
)

273  
RëaöPå
<
T
>(
±r
, RëaöPå<T>::
Ad›t
);

275 
RëaöPå
<
T
> 
ªsu…
 = 
±r
;

276 [
±r
 
ªÀa£
];

277  
ªsu…
;

279 
	}
}

282 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gRëaöPå
<T> 
	$ªèöPå
(
T
 
±r
)

284  
±r
;

285 
	}
}

287 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gIsSm¨tPå
<
	gRëaöPå
<T>> {

288 c⁄° 
boﬁ
 
	gvÆue
 = 
åue
;

291 
	gãm∂©e
<
ty≥«me
 
	gP
> 
	gHashTøôs
<
	gRëaöPå
<P>> : 
Sim∂eCœssHashTøôs
<
RëaöPå
<
P
>> {

294 
	gãm∂©e
<
ty≥«me
 
	gP
> 
	gDeÁu…Hash
<
	gRëaöPå
<P>> {

295 
	gPåHash
<
	tRëaöPå
<
	tP
>> 
	tHash
;

298 
	gãm∂©e
 <
ty≥«me
 
	gP
>

299 
	gRëaöPåObje˘HashTøôs
 : 
Sim∂eCœssHashTøôs
<
RëaöPå
<
P
>> {

300 c⁄° 
RëaöPå
<
P
>& 
em±yVÆue
()

302 
RëaöPå
<
P
>& 
nuŒ
 = *(
√w
 RetainPtr<P>);

303  
	gnuŒ
;

307 
	gãm∂©e
 <
ty≥«me
 
	gP
>

308 
	sRëaöPåObje˘Hash
 {

309 
hash
(c⁄° 
RëaöPå
<
P
>& 
o
)

311 
ASSERT_WITH_MESSAGE
(
o
.
gë
(), "attemptÅo useÇull RetainPtr in HashTable");

312  
	g°©ic_ˇ°
<>(
CFHash
(
o
.
gë
()));

314 
boﬁ
 
equÆ
(c⁄° 
RëaöPå
<
P
>& 
a
, c⁄° RëaöPå<P>& 
b
)

316  
CFEquÆ
(
a
.
gë
(), 
b
.get());

318 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
Ál£
;

323 
usög
 
	gWTF
::
RëaöPå
;

324 
usög
 
	gWTF
::
ad›tOS
;

325 
usög
 
	gWTF
::
ad›tCF
;

326 
usög
 
	gWTF
::
ad›tNS
;

327 
usög
 
	gWTF
::
ªèöPå
;

	@RunLoop.cpp

26 
	~"c⁄fig.h
"

27 
	~"RunLo›.h
"

29 
	~<wtf/StdLibExåas.h
>

30 
	~<wtf/ThªadS≥cific.h
>

32 
«me•a˚
 
	gWTF
 {

34 
RunLo›
* 
	gs_maöRunLo›
;

37 ˛as†
	cRunLo›
::
Hﬁdî
 {

38 
public
:

39 
Hﬁdî
()

40 : 
m_runLo›
(
ad›tRef
(*
√w
 
RunLo›
))

44 
RunLo›
& 
runLo›
(Ë{  
m_runLo›
.
gë
(); }

46 
	g¥iv©e
:

47 
Ref
<
RunLo›
> 
m_runLo›
;

50 
	gRunLo›
::
	$öôülizeMaöRunLo›
()

52 i‡(
s_maöRunLo›
)

54 
s_maöRunLo›
 = &
RunLo›
::
	`cuºít
();

55 
	}
}

57 
	gRunLo›
& RunLo›::
	$cuºít
()

59 
	`DEPRECATED_DEFINE_STATIC_LOCAL
(
WTF
::
ThªadS≥cific
<
RunLo›
::
Hﬁdî
>, 
runLo›Hﬁdî
, ());

60  
runLo›Hﬁdî
->
	`runLo›
();

61 
	}
}

63 
	gRunLo›
& RunLo›::
	$maö
()

65 
	`ASSERT
(
s_maöRunLo›
);

66  *
s_maöRunLo›
;

67 
	}
}

69 
boﬁ
 
	gRunLo›
::
	$isMaö
()

71 
	`ASSERT
(
s_maöRunLo›
);

72  
s_maöRunLo›
 =&
RunLo›
::
	`cuºít
();

73 
	}
}

75 
	gRunLo›
::
	$≥rf‹mW‹k
()

91 
°d
::
fun˘i⁄
<()> function;

92 
size_t
 
fun˘i⁄sToH™dÀ
 = 0;

95 
MuãxLockî
 
	`lockî
(
m_fun˘i⁄QueueLock
);

96 
fun˘i⁄sToH™dÀ
 = 
m_fun˘i⁄Queue
.
	`size
();

98 i‡(
m_fun˘i⁄Queue
.
	`isEm±y
())

101 
fun˘i⁄
 = 
m_fun˘i⁄Queue
.
	`èkeFú°
();

104 
	`fun˘i⁄
();

106 
size_t
 
fun˘i⁄sH™dÀd
 = 1; fun˘i⁄sH™dÀd < 
fun˘i⁄sToH™dÀ
; ++functionsHandled) {

108 
MuãxLockî
 
	`lockî
(
m_fun˘i⁄QueueLock
);

113 i‡(
m_fun˘i⁄Queue
.
	`isEm±y
())

116 
fun˘i⁄
 = 
m_fun˘i⁄Queue
.
	`èkeFú°
();

119 
	`fun˘i⁄
();

121 
	}
}

123 
	gRunLo›
::
di•©ch
(
°d
::
fun˘i⁄
<()> function)

125 
MuãxLockî
 
lockî
(
m_fun˘i⁄QueueLock
);

126 
	gm_fun˘i⁄Queue
.
≠≥nd
(
WTF
::
move
(
fun˘i⁄
));

128 
wakeUp
();

	@RunLoop.h

28 #i‚de‡
RunLo›_h


29 
	#RunLo›_h


	)

31 
	~<wtf/Deque.h
>

32 
	~<wtf/F‹w¨d.h
>

33 
	~<wtf/Fun˘i⁄Di•©chî.h
>

34 
	~<wtf/Fun˘i⁄Æ.h
>

35 
	~<wtf/HashM≠.h
>

36 
	~<wtf/RëaöPå.h
>

37 
	~<wtf/Thªadög.h
>

39 #i‡
USE
(
GLIB
)

40 
	~<wtf/gobje˘/GMaöLo›Sour˚.h
>

43 #i‡
PLATFORM
(
EFL
)

44 
	~<Ec‹e.h
>

45 
	~<wtf/eÊ/UniquePåEÊ.h
>

48 
«me•a˚
 
	gWTF
 {

50 ˛as†
	cRunLo›
 : 
public
 
Fun˘i⁄Di•©chî
 {

51 
WTF_MAKE_NONCOPYABLE
(
RunLo›
);

52 
	gpublic
:

55 
WTF_EXPORT_PRIVATE
 
öôülizeMaöRunLo›
();

57 
WTF_EXPORT_PRIVATE
 
	gRunLo›
& 
cuºít
();

58 
WTF_EXPORT_PRIVATE
 
	gRunLo›
& 
maö
();

59 
WTF_EXPORT_PRIVATE
 
boﬁ
 
isMaö
();

60 ~
RunLo›
();

62 
vútuÆ
 
di•©ch
(
°d
::
fun˘i⁄
<()>Ë
ovîride
;

64 
WTF_EXPORT_PRIVATE
 
run
();

65 
WTF_EXPORT_PRIVATE
 
°›
();

66 
WTF_EXPORT_PRIVATE
 
wakeUp
();

68 #i‡
PLATFORM
(
COCOA
)

69 
WTF_EXPORT_PRIVATE
 
runF‹Duøti⁄
(
duøti⁄
);

72 ˛as†
	cTimîBa£
 {

73 
‰õnd
 
˛ass
 
	gRunLo›
;

74 
	gpublic
:

75 
WTF_EXPORT_PRIVATE
 
ex∂icô
 
TimîBa£
(
RunLo›
&);

76 
WTF_EXPORT_PRIVATE
 
	gvútuÆ
 ~
TimîBa£
();

78 
°¨tRïótög
(
ª≥©I¡îvÆ
Ë{ 
°¨t
‘ïótI¡îvÆ, 
åue
); }

79 
°¨tRïótög
(
°d
::
chr⁄o
::
mûli£c⁄ds
 
ª≥©I¡îvÆ
Ë{ sèπRïótög‘ïótI¡îvÆ.
cou¡
() * 0.001); }

80 
°¨tO√ShŸ
(
öãrvÆ
Ë{ 
°¨t
(öãrvÆ, 
Ál£
); }

82 
WTF_EXPORT_PRIVATE
 
°›
();

83 
WTF_EXPORT_PRIVATE
 
boﬁ
 
isA˘ive
() const;

85 
vútuÆ
 
fúed
() = 0;

87 
	g¥iv©e
:

88 
WTF_EXPORT_PRIVATE
 
°¨t
(
√xtFúeI¡îvÆ
, 
boﬁ
 
ª≥©
);

90 
	gRunLo›
& 
	gm_runLo›
;

92 #i‡
PLATFORM
(
WIN
)

93 
timîFúed
(
RunLo›
*, 
uöt64_t
 
ID
);

94 
uöt64_t
 
	gm_ID
;

95 
boﬁ
 
	gm_isRïótög
;

96 #ñi‡
PLATFORM
(
COCOA
)

97 
timîFúed
(
CFRunLo›TimîRef
, *);

98 
	gRëaöPå
<
	gCFRunLo›TimîRef
> 
	gm_timî
;

99 #ñi‡
PLATFORM
(
EFL
)

100 
boﬁ
 
timîFúed
(* 
d©a
);

101 
Ec‹e_Timî
* 
	gm_timî
;

102 
boﬁ
 
	gm_isRïótög
;

103 #ñi‡
USE
(
GLIB
)

104 
GMaöLo›Sour˚
 
	gm_timîSour˚
;

108 
	gãm∂©e
 <
ty≥«me
 
	gTimîFúedCœss
>

109 ˛as†
	cTimî
 : 
public
 
TimîBa£
 {

110 
public
:

111 (
TimîFúedCœss
::*
	tTimîFúedFun˘i⁄
)();

113 
Timî
(
RunLo›
& 
runLo›
, 
TimîFúedCœss
* 
o
, 
TimîFúedFun˘i⁄
 
f
)

114 : 
TimîBa£
(
runLo›
)

115 , 
m_obje˘
(
o
)

116 , 
m_fun˘i⁄
(
f
)

120 
	g¥iv©e
:

121 
vútuÆ
 
fúed
(Ë{ (
m_obje˘
->*
m_fun˘i⁄
)(); }

123 
TimîFúedCœss
* 
	gm_obje˘
;

124 
TimîFúedFun˘i⁄
 
	gm_fun˘i⁄
;

127 
˛ass
 
	gHﬁdî
;

129 
	g¥iv©e
:

130 
RunLo›
();

132 
≥rf‹mW‹k
();

134 
Muãx
 
	gm_fun˘i⁄QueueLock
;

135 
	gDeque
<
	g°d
::
fun˘i⁄
<()>> 
m_fun˘i⁄Queue
;

137 #i‡
PLATFORM
(
WIN
)

138 
boﬁ
 
ªgi°îRunLo›MesßgeWödowCœss
();

139 
LRESULT
 
CALLBACK
 
RunLo›WndProc
(
HWND
, 
UINT
, 
WPARAM
, 
LPARAM
);

140 
LRESULT
 
wndProc
(
HWND
 
hWnd
, 
UINT
 
mesßge
, 
WPARAM
 
wP¨am
, 
LPARAM
 
lP¨am
);

141 
HWND
 
	gm_runLo›MesßgeWödow
;

143 
	gHashM≠
<
	tuöt64_t
, 
	tTimîBa£
*> 
	tTimîM≠
;

144 
TimîM≠
 
	gm_a˘iveTimîs
;

145 #ñi‡
PLATFORM
(
COCOA
)

146 
≥rf‹mW‹k
(*);

147 
	gRëaöPå
<
	gCFRunLo›Ref
> 
	gm_runLo›
;

148 
	gRëaöPå
<
	gCFRunLo›Sour˚Ref
> 
	gm_runLo›Sour˚
;

149 
	gm_√°ögLevñ
;

150 #ñi‡
PLATFORM
(
EFL
)

151 
Muãx
 
	gm_pùeLock
;

152 
	gEÊUniquePå
<
	gEc‹e_Pùe
> 
	gm_pùe
;

154 
Muãx
 
	gm_wakeUpEvítReque°edLock
;

155 
boﬁ
 
	gm_wakeUpEvítReque°ed
;

157 
wakeUpEvít
(* 
d©a
, *, );

158 #ñi‡
USE
(
GLIB
)

159 
	gpublic
:

160 
gboﬁón
 
queueW‹k
(
RunLo›
*);

161 
GMaöLo›
* 
ö√rmo°Lo›
();

162 
pushNe°edMaöLo›
(
GMaöLo›
*);

163 
p›Ne°edMaöLo›
();

164 
	g¥iv©e
:

165 
GRefPå
<
GMaöC⁄ãxt
> 
m_runLo›C⁄ãxt
;

166 
	gVe˘‹
<
	gGRefPå
<
	gGMaöLo›
>> 
	gm_runLo›MaöLo›s
;

172 
usög
 
	gWTF
::
RunLo›
;

	@RunLoopTimer.h

29 #i‚de‡
RunLo›Timî_h


30 
	#RunLo›Timî_h


	)

32 
	~<wtf/ScheduÀPaú.h
>

33 
	~<wtf/RëaöPå.h
>

35 
«me•a˚
 
	gWTF
 {

39 ˛as†
	cWTF_EXPORT_PRIVATE
 
	gRunLo›TimîBa£
 {

40 
WTF_MAKE_NONCOPYABLE
(
RunLo›TimîBa£
);

41 
	gpublic
:

42 
RunLo›TimîBa£
() { }

43 
WTF_EXPORT_PRIVATE
 
vútuÆ
 ~
RunLo›TimîBa£
();

45 
WTF_EXPORT_PRIVATE
 
scheduÀ
(c⁄° 
ScheduÀPaú
*);

46 
WTF_EXPORT_PRIVATE
 
scheduÀ
(c⁄° 
ScheduÀPaúHashSë
&);

48 
WTF_EXPORT_PRIVATE
 
°¨t
(
√xtFúeI¡îvÆ
, 
ª≥©I¡îvÆ
);

50 
°¨tRïótög
(
ª≥©I¡îvÆ
Ë{ 
°¨t
(repeatInterval,ÑepeatInterval); }

51 
°¨tO√ShŸ
(
öãrvÆ
Ë{ 
°¨t
(interval, 0); }

53 
WTF_EXPORT_PRIVATE
 
°›
();

54 
boﬁ
 
isA˘ive
() const;

56 
vútuÆ
 
fúed
() = 0;

58 
	g¥iv©e
:

59 #i‡
USE
(
CF
)

60 
RëaöPå
<
CFRunLo›TimîRef
> 
m_timî
;

64 
	gãm∂©e
 <
ty≥«me
 
	gTimîFúedCœss
> cœs†
	cRunLo›Timî
 : 
public
 
RunLo›TimîBa£
 {

65 
public
:

66 (
TimîFúedCœss
::*
	tTimîFúedFun˘i⁄
)(
	tRunLo›Timî
*);

68 
RunLo›Timî
(
TimîFúedCœss
* 
o
, 
TimîFúedFun˘i⁄
 
f
)

69 : 
m_obje˘
(
o
), 
m_fun˘i⁄
(
f
) { }

71 
vútuÆ
 
fúed
(Ë{ (
	gm_obje˘
->*
	gm_fun˘i⁄
)(
	gthis
); }

73 
	g¥iv©e
:

74 
TimîFúedCœss
* 
m_obje˘
;

75 
TimîFúedFun˘i⁄
 
	gm_fun˘i⁄
;

80 
usög
 
	gWTF
::
RunLo›Timî
;

	@RunLoopTimerCF.cpp

29 
	~"c⁄fig.h
"

31 #i‡
PLATFORM
(
COCOA
Ë&& 
HAVE
(
RUNLOOP_TIMER
)

33 
	~"RunLo›Timî.h
"

35 
	~"AutodøöedPoﬁ.h
"

37 
«me•a˚
 
	gWTF
 {

39 
	gRunLo›TimîBa£
::~
RunLo›TimîBa£
()

41 
°›
();

44 
timîFúed
(
CFRunLo›TimîRef
, * 
c⁄ãxt
)

50 
AutodøöedPoﬁ
 
	gpoﬁ
;

51 
RunLo›TimîBa£
* 
	gtimî
 = 
°©ic_ˇ°
<RunLo›TimîBa£*>(
c⁄ãxt
);

52 
	gtimî
->
fúed
();

55 
	gRunLo›TimîBa£
::
°¨t
(
√xtFúeI¡îvÆ
, 
ª≥©I¡îvÆ
)

57 i‡(
	gm_timî
)

58 
CFRunLo›TimîInvÆid©e
(
m_timî
.
gë
());

59 
CFRunLo›TimîC⁄ãxt
 
	gc⁄ãxt
 = { 0, 
this
, 0, 0, 0 };

60 
	gm_timî
 = 
ad›tCF
(
CFRunLo›TimîCª©e
(0, 
CFAbsﬁuãTimeGëCuºít
(Ë+ 
√xtFúeI¡îvÆ
, 
ª≥©I¡îvÆ
, 0, 0, 
timîFúed
, &
c⁄ãxt
));

63 
	gRunLo›TimîBa£
::
scheduÀ
(c⁄° 
ScheduÀPaú
* 
scheduÀPaú
)

65 
ASSERT_ARG
(
scheduÀPaú
, schedulePair);

66 
ASSERT_WITH_MESSAGE
(
m_timî
, "Timer must have one ofÅhe start functions called before calling schedule().");

67 
CFRunLo›AddTimî
(
scheduÀPaú
->
runLo›
(), 
m_timî
.
gë
(), scheduÀPaú->
mode
());

70 
	gRunLo›TimîBa£
::
scheduÀ
(c⁄° 
ScheduÀPaúHashSë
& 
scheduÀPaús
)

72 
ScheduÀPaúHashSë
::
c⁄°_ôî©‹
 
íd
 = 
scheduÀPaús
.end();

73 
	gScheduÀPaúHashSë
::
c⁄°_ôî©‹
 
ô
 = 
scheduÀPaús
.
begö
(); 
	gô
 !
íd
; ++it)

74 
scheduÀ
((*
ô
).
gë
());

77 
	gRunLo›TimîBa£
::
°›
()

79 i‡(!
m_timî
)

81 
CFRunLo›TimîInvÆid©e
(
m_timî
.
gë
());

82 
	gm_timî
 = 0;

85 
boﬁ
 
	gRunLo›TimîBa£
::
isA˘ive
() const

87  
m_timî
 && 
CFRunLo›TimîIsVÆid
(m_timî.
gë
());

	@SHA1.cpp

35 
	~"c⁄fig.h
"

36 
	~"SHA1.h
"

38 
	~"As£πi⁄s.h
"

40 
	~"SåögExåas.h
"

41 
	~"ãxt/CSåög.h
"

43 
«me•a˚
 
	gWTF
 {

45 
ölöe
 
uöt32_t
 
f
(
t
, uöt32_à
b
, uöt32_à
c
, uöt32_à
d
)

47 
ASSERT
(
t
 >= 0 &&Å < 80);

48 i‡(
	gt
 < 20)

49  (
	gb
 & 
	gc
Ë| ((~bË& 
	gd
);

50 i‡(
	gt
 < 40)

51  
	gb
 ^ 
	gc
 ^ 
	gd
;

52 i‡(
	gt
 < 60)

53  (
	gb
 & 
	gc
Ë| (b & 
	gd
) | (c & d);

54  
	gb
 ^ 
	gc
 ^ 
	gd
;

57 
ölöe
 
uöt32_t
 
k
(
t
)

59 
ASSERT
(
t
 >= 0 &&Å < 80);

60 i‡(
	gt
 < 20)

62 i‡(
	gt
 < 40)

64 i‡(
	gt
 < 60)

69 
ölöe
 
uöt32_t
 
rŸ©eLe·
(
n
, uöt32_à
x
)

71 
ASSERT
(
n
 >= 0 &&Ç < 32);

72  (
	gx
 << 
	gn
) | (x >> (32 -Ç));

75 
	gSHA1
::
SHA1
()

77 
ª£t
();

80 
	gSHA1
::
addByãs
(c⁄° 
uöt8_t
* 
öput
, 
size_t
 
Àngth
)

82 
	gÀngth
--) {

83 
ASSERT
(
m_curs‹
 < 64);

84 
	gm_buf„r
[
m_curs‹
++] = *
öput
++;

85 ++
	gm_tŸÆByãs
;

86 i‡(
	gm_curs‹
 == 64)

87 
¥o˚ssBlock
();

91 
	gSHA1
::
compuãHash
(
Dige°
& 
dige°
)

93 
föÆize
();

95 
size_t
 
	gi
 = 0; i < 5; ++i) {

97 
uöt32_t
 
	ghashVÆue
 = 
m_hash
[
i
];

98 
	gj
 = 0; j < 4; ++j) {

99 
	gdige°
[4 * 
i
 + (3 - 
j
)] = 
hashVÆue
 & 0xFF;

100 
	ghashVÆue
 >>= 8;

104 
ª£t
();

107 
CSåög
 
	gSHA1
::
hexDige°
(c⁄° 
Dige°
& 
dige°
)

109 * 
°¨t
 = 0;

110 
CSåög
 
	gªsu…
 = CSåög::
√wUnöôülized
(40, 
°¨t
);

111 * 
	gbuf„r
 = 
°¨t
;

112 
size_t
 
	gi
 = 0; i < 
	ghashSize
; ++i) {

113 
¢¥ötf
(
buf„r
, 3, "%02X", 
dige°
.
©
(
i
));

114 
	gbuf„r
 += 2;

116  
	gªsu…
;

119 
CSåög
 
	gSHA1
::
compuãHexDige°
()

121 
Dige°
 
dige°
;

122 
compuãHash
(
dige°
);

123  
hexDige°
(
dige°
);

126 
	gSHA1
::
föÆize
()

128 
ASSERT
(
m_curs‹
 < 64);

129 
	gm_buf„r
[
m_curs‹
++] = 0x80;

130 i‡(
	gm_curs‹
 > 56) {

132 
	gm_curs‹
 < 64)

133 
	gm_buf„r
[
m_curs‹
++] = 0x00;

134 
¥o˚ssBlock
();

137 
size_t
 
	gi
 = 
m_curs‹
; i < 56; ++i)

138 
	gm_buf„r
[
i
] = 0x00;

141 
uöt64_t
 
	gbôs
 = 
m_tŸÆByãs
 * 8;

142 
	gi
 = 0; i < 8; ++i) {

143 
	gm_buf„r
[56 + (7 - 
i
)] = 
bôs
 & 0xFF;

144 
	gbôs
 >>= 8;

146 
	gm_curs‹
 = 64;

147 
¥o˚ssBlock
();

150 
	gSHA1
::
¥o˚ssBlock
()

152 
ASSERT
(
m_curs‹
 == 64);

154 
uöt32_t
 
	gw
[80] = { 0 };

155 
	gt
 = 0;Å < 16; ++t)

156 
	gw
[
t
] = (
m_buf„r
[t * 4] << 24) | (m_buffer[t * 4 + 1] << 16) | (m_buffer[t * 4 + 2] << 8) | m_buffer[t * 4 + 3];

157 
	gt
 = 16;Å < 80; ++t)

158 
	gw
[
t
] = 
rŸ©eLe·
(1, 
w
[t - 3] ^ w[t - 8] ^ w[t - 14] ^ w[t - 16]);

160 
uöt32_t
 
	ga
 = 
m_hash
[0];

161 
uöt32_t
 
	gb
 = 
m_hash
[1];

162 
uöt32_t
 
	gc
 = 
m_hash
[2];

163 
uöt32_t
 
	gd
 = 
m_hash
[3];

164 
uöt32_t
 
	ge
 = 
m_hash
[4];

166 
	gt
 = 0;Å < 80; ++t) {

167 
uöt32_t
 
	gãmp
 = 
rŸ©eLe·
(5, 
a
Ë+ 
f
(
t
, 
b
, 
c
, 
d
Ë+ 
	ge
 + 
	gw
[t] + 
k
(t);

168 
	ge
 = 
d
;

169 
	gd
 = 
c
;

170 
	gc
 = 
rŸ©eLe·
(30, 
b
);

171 
	gb
 = 
a
;

172 
	ga
 = 
ãmp
;

175 
	gm_hash
[0] +
a
;

176 
	gm_hash
[1] +
b
;

177 
	gm_hash
[2] +
c
;

178 
	gm_hash
[3] +
d
;

179 
	gm_hash
[4] +
e
;

181 
	gm_curs‹
 = 0;

184 
	gSHA1
::
ª£t
()

186 
m_curs‹
 = 0;

187 
	gm_tŸÆByãs
 = 0;

188 
	gm_hash
[0] = 0x67452301;

189 
	gm_hash
[1] = 0xefcdab89;

190 
	gm_hash
[2] = 0x98badcfe;

191 
	gm_hash
[3] = 0x10325476;

192 
	gm_hash
[4] = 0xc3d2e1f0;

195 
mem£t
(
m_buf„r
, 0, (m_buffer));

	@SHA1.h

31 #i‚de‡
WTF_SHA1_h


32 
	#WTF_SHA1_h


	)

34 
	~<¨øy
>

35 
	~<wtf/Ve˘‹.h
>

36 
	~<wtf/ãxt/CSåög.h
>

38 
«me•a˚
 
	gWTF
 {

40 ˛as†
	cSHA1
 {

41 
	gpublic
:

42 
WTF_EXPORT_PRIVATE
 
SHA1
();

44 
addByãs
(c⁄° 
Ve˘‹
<
uöt8_t
>& 
öput
)

46 
addByãs
(
öput
.
d©a
(), i≈ut.
size
());

48 
addByãs
(c⁄° 
CSåög
& 
öput
)

50 c⁄° * 
	g°rög
 = 
öput
.
d©a
();

55 
ASSERT
(
öput
.
Àngth
(Ë=
°æí
(
°rög
));

56 
addByãs
(
ªöãΩªt_ˇ°
<c⁄° 
uöt8_t
*>(
°rög
), 
öput
.
Àngth
());

58 
WTF_EXPORT_PRIVATE
 
addByãs
(c⁄° 
uöt8_t
* 
öput
, 
size_t
 
Àngth
);

61 
WTF_EXPORT_PRIVATE
 c⁄° 
size_t
 
	ghashSize
 = 20;

64 
	g°d
::
	t¨øy
<
	tuöt8_t
, 
	thashSize
> 
	tDige°
;

67 
WTF_EXPORT_PRIVATE
 
compuãHash
(
Dige°
&);

70 
WTF_EXPORT_PRIVATE
 
CSåög
 
hexDige°
(c⁄° 
Dige°
&);

73 
WTF_EXPORT_PRIVATE
 
CSåög
 
compuãHexDige°
();

75 
	g¥iv©e
:

76 
föÆize
();

77 
¥o˚ssBlock
();

78 
ª£t
();

80 
uöt8_t
 
	gm_buf„r
[64];

81 
size_t
 
	gm_curs‹
;

82 
uöt64_t
 
	gm_tŸÆByãs
;

83 
uöt32_t
 
	gm_hash
[5];

88 
usög
 
	gWTF
::
SHA1
;

	@SaturatedArithmetic.h

31 #i‚de‡
S©uøãdArôhmëic_h


32 
	#S©uøãdArôhmëic_h


	)

34 
	~<limôs
>

35 
	~<°döt.h
>

36 
	~<°dlib.h
>

38 
ölöe
 
öt32_t
 
	$ßtuøãdAddôi⁄
(
öt32_t
 
a
, i¡32_à
b
)

40 
uöt32_t
 
ua
 = 
a
;

41 
uöt32_t
 
ub
 = 
b
;

42 
uöt32_t
 
ªsu…
 = 
ua
 + 
ub
;

46 i‡(!((
ua
 ^ 
ub
Ë>> 31Ë& (
ªsu…
 ^ ua) >> 31)

47 
ªsu…
 = 
°d
::
numîic_limôs
<>::
	`max
(Ë+ (
ua
 >> 31);

49  
ªsu…
;

50 
	}
}

52 
ölöe
 
öt32_t
 
	$ßtuøãdSubåa˘i⁄
(
öt32_t
 
a
, i¡32_à
b
)

54 
uöt32_t
 
ua
 = 
a
;

55 
uöt32_t
 
ub
 = 
b
;

56 
uöt32_t
 
ªsu…
 = 
ua
 - 
ub
;

60 i‡((
ua
 ^ 
ub
Ë>> 31 & (
ªsu…
 ^ ua) >> 31)

61 
ªsu…
 = 
°d
::
numîic_limôs
<>::
	`max
(Ë+ (
ua
 >> 31);

63  
ªsu…
;

64 
	}
}

	@SchedulePair.h

29 #i‚de‡
ScheduÀPaú_h


30 
	#ScheduÀPaú_h


	)

32 
	~<wtf/HashSë.h
>

33 
	~<wtf/RefCou¡ed.h
>

34 
	~<wtf/RëaöPå.h
>

35 
	~<wtf/ãxt/SåögHash.h
>

36 
	~<wtf/ãxt/WTFSåög.h
>

38 #i‡
USE
(
FOUNDATION
)

39 
OBJC_CLASS
 
	gNSRunLo›
;

42 
«me•a˚
 
	gWTF
 {

44 
˛ass
 
	gScheduÀPaú
 : 
public
 
RefCou¡ed
<
ScheduÀPaú
> {

45 
public
:

46 
PassRefPå
<
ScheduÀPaú
> 
¸óã
(
CFRunLo›Ref
 
runLo›
, 
CFSåögRef
 
mode
Ë{  
ad›tRef
(
√w
 SchedulePair(runLoop, mode)); }

48 #i‡
USE
(
FOUNDATION
Ë&& !USE(
CFNETWORK
)

49 
	gPassRefPå
<
	gScheduÀPaú
> 
¸óã
(
NSRunLo›
* 
runLo›
, 
CFSåögRef
 
mode
Ë{  
ad›tRef
(
√w
 
ScheduÀPaú
(runLoop, mode)); }

50 
NSRunLo›
* 
nsRunLo›
(Ëc⁄° {  
	gm_nsRunLo›
.
gë
(); }

53 
CFRunLo›Ref
 
runLo›
(Ëc⁄° {  
	gm_runLo›
.
gë
(); }

54 
CFSåögRef
 
mode
(Ëc⁄° {  
	gm_mode
.
gë
(); }

56 
WTF_EXPORT_PRIVATE
 
boﬁ
 
	g›î©‹
==(c⁄° 
ScheduÀPaú
& 
Ÿhî
) const;

58 
	g¥iv©e
:

59 
ScheduÀPaú
(
CFRunLo›Ref
 
runLo›
, 
CFSåögRef
 
mode
)

60 : 
m_runLo›
(
runLo›
)

62 i‡(
mode
)

63 
m_mode
 = 
ad›tCF
(
CFSåögCª©eC›y
(0, 
mode
));

66 #i‡
USE
(
FOUNDATION
Ë&& !USE(
CFNETWORK
)

67 
WTF_EXPORT_PRIVATE
 
ScheduÀPaú
(
NSRunLo›
*, 
CFSåögRef
);

68 
	gRëaöPå
<
	gNSRunLo›
*> 
	gm_nsRunLo›
;

71 
	gRëaöPå
<
	gCFRunLo›Ref
> 
	gm_runLo›
;

72 
	gRëaöPå
<
	gCFSåögRef
> 
	gm_mode
;

75 
	sScheduÀPaúHash
 {

76 
hash
(c⁄° 
RefPå
<
ScheduÀPaú
>& 
∑ú
)

78 
uöçå_t
 
	ghashCodes
[2] = { 
ªöãΩªt_ˇ°
<uöçå_t>(
∑ú
->
runLo›
()),Öaú->
mode
(Ë? 
CFHash
(pair->mode()) : 0 };

79  
	gSåögHashî
::
hashMem‹y
<(
hashCodes
)>(hashCodes);

82 
boﬁ
 
equÆ
(c⁄° 
RefPå
<
ScheduÀPaú
>& 
a
, c⁄° RefPå<ScheduÀPaú>& 
b
Ë{  
	ga
 == b; }

84 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
åue
;

87 
	gHashSë
<
	tRefPå
<
	tScheduÀPaú
>, 
	tScheduÀPaúHash
> 
	tScheduÀPaúHashSë
;

91 
usög
 
	gWTF
::
ScheduÀPaú
;

92 
usög
 
	gWTF
::
ScheduÀPaúHashSë
;

	@SchedulePairCF.cpp

29 
	~"c⁄fig.h
"

30 
	~"ScheduÀPaú.h
"

32 
«me•a˚
 
	gWTF
 {

34 
boﬁ
 
	gScheduÀPaú
::
›î©‹
==(c⁄° 
ScheduÀPaú
& 
Ÿhî
) const

36 i‡(
runLo›
(Ë!
Ÿhî
.runLoop())

37  
Ál£
;

38 
CFSåögRef
 
	gthisMode
 = 
mode
();

39 
CFSåögRef
 
	gŸhîMode
 = 
Ÿhî
.
mode
();

40 i‡(!
	gthisMode
 || !
	gŸhîMode
)

41  
	gthisMode
 =
ŸhîMode
;

42  
CFEquÆ
(
thisMode
, 
ŸhîMode
);

	@SegmentedVector.h

29 #i‚de‡
SegmíãdVe˘‹_h


30 
	#SegmíãdVe˘‹_h


	)

32 
	~<wtf/N⁄c›yabÀ.h
>

33 
	~<wtf/Ve˘‹.h
>

35 
«me•a˚
 
	gWTF
 {

38 
	gãm∂©e
 <
ty≥«me
 
	gT
, 
size_t
 
	gSegmítSize
 = 8, size_à
	gI∆öeC≠acôy
 = 32> 
˛ass
 
SegmíãdVe˘‹
;

39 
	gãm∂©e
 <
ty≥«me
 
	gT
, 
size_t
 
	gSegmítSize
 = 8, size_à
	gI∆öeC≠acôy
 = 32> cœs†
	cSegmíãdVe˘‹Iãøt‹
 {

40 
¥iv©e
:

41 
‰õnd
 
˛ass
 
SegmíãdVe˘‹
<
T
, 
SegmítSize
, 
I∆öeC≠acôy
>;

42 
	gpublic
:

43 
SegmíãdVe˘‹Iãøt‹
<
	tT
, 
	tSegmítSize
, 
	tI∆öeC≠acôy
> 
	tIãøt‹
;

45 ~
SegmíãdVe˘‹Iãøt‹
() { }

47 
	gT
& 
	g›î©‹
*(Ëc⁄° {  
	gm_ve˘‹
.
	gm_£gmíts
.
©
(
m_£gmít
)->©(
m_ödex
); }

48 
T
* 
	g›î©‹
->(Ëc⁄° {  &
	gm_ve˘‹
.
	gm_£gmíts
.
©
(
m_£gmít
)->©(
m_ödex
); }

51 
	gIãøt‹
& 
	g›î©‹
++()

53 
ASSERT
(
m_ödex
 !
SegmítSize
);

54 ++
	gm_ödex
;

55 i‡(
	gm_ödex
 >
m_ve˘‹
.
m_£gmíts
.
©
(
m_£gmít
)->
size
()) {

56 i‡(
m_£gmít
 + 1 < 
m_ve˘‹
.
m_£gmíts
.
size
()) {

57 
ASSERT
(
m_ve˘‹
.
m_£gmíts
.
©
(
m_£gmít
)->
size
() > 0);

58 ++
	gm_£gmít
;

59 
	gm_ödex
 = 0;

62 
	gm_£gmít
 = 0;

63 
	gm_ödex
 = 
SegmítSize
;

66  *
	gthis
;

69 
boﬁ
 
	g›î©‹
==(c⁄° 
Iãøt‹
& 
Ÿhî
) const

71  
m_ödex
 =
Ÿhî
.m_ödex && 
m_£gmít
 =Ÿhî.m_£gmíà&& &
m_ve˘‹
 == &other.m_vector;

74 
boﬁ
 
	g›î©‹
!=(c⁄° 
Iãøt‹
& 
Ÿhî
) const

76  
m_ödex
 !
Ÿhî
.m_ödex || 
m_£gmít
 !Ÿhî.m_£gmíà|| &
m_ve˘‹
 != &other.m_vector;

79 
	gSegmíãdVe˘‹Iãøt‹
& 
	g›î©‹
=(c⁄° 
SegmíãdVe˘‹Iãøt‹
<
T
, 
	gSegmítSize
, 
	gI∆öeC≠acôy
>& 
	gŸhî
)

81 
	gm_ve˘‹
 = 
Ÿhî
.
m_ve˘‹
;

82 
	gm_£gmít
 = 
Ÿhî
.
m_£gmít
;

83 
	gm_ödex
 = 
Ÿhî
.
m_ödex
;

84  *
	gthis
;

87 
	g¥iv©e
:

88 
SegmíãdVe˘‹Iãøt‹
(
SegmíãdVe˘‹
<
T
, 
SegmítSize
, 
I∆öeC≠acôy
>& 
ve˘‹
, 
size_t
 
£gmít
, size_à
ödex
)

89 : 
m_ve˘‹
(
ve˘‹
)

90 , 
m_£gmít
(
£gmít
)

91 , 
m_ödex
(
ödex
)

95 
	gSegmíãdVe˘‹
<
	gT
, 
	gSegmítSize
, 
	gI∆öeC≠acôy
>& 
	gm_ve˘‹
;

96 
size_t
 
	gm_£gmít
;

97 
size_t
 
	gm_ödex
;

105 
	gãm∂©e
 <
ty≥«me
 
	gT
, 
size_t
 
	gSegmítSize
, size_à
	gI∆öeC≠acôy
>

106 ˛as†
	cSegmíãdVe˘‹
 {

107 
‰õnd
 
˛ass
 
	gSegmíãdVe˘‹Iãøt‹
<
	gT
, 
	gSegmítSize
, 
	gI∆öeC≠acôy
>;

108 
WTF_MAKE_NONCOPYABLE
(
SegmíãdVe˘‹
);

110 
	gpublic
:

111 
SegmíãdVe˘‹Iãøt‹
<
	tT
, 
	tSegmítSize
, 
	tI∆öeC≠acôy
> 
	tIãøt‹
;

113 
SegmíãdVe˘‹
()

114 : 
m_size
(0)

118 ~
SegmíãdVe˘‹
()

120 
dñëeAŒSegmíts
();

123 
size_t
 
size
(Ëc⁄° {  
	gm_size
; }

124 
boﬁ
 
isEm±y
(Ëc⁄° {  !
size
(); }

126 
	gT
& 
©
(
size_t
 
ödex
)

128  
£gmítF‹
(
ödex
)->
©
(
subs¸ùtF‹
(index));

131 c⁄° 
	gT
& 
©
(
size_t
 
ödex
) const

133  
	gc⁄°_ˇ°
<
	gSegmíãdVe˘‹
<
	gT
, 
	gSegmítSize
, 
	gI∆öeC≠acôy
>*>(
	gthis
)->
©
(
ödex
);

136 
	gT
& 
	g›î©‹
[](
size_t
 
	gödex
)

138  
©
(
ödex
);

141 c⁄° 
	gT
& 
	g›î©‹
[](
size_t
 
	gödex
) const

143  
©
(
ödex
);

146 
	gT
& 
œ°
()

148  
©
(
size
() - 1);

151 
	gãm∂©e
 <
ty≥«me
 
	gU
> 
≠≥nd
(
U
&& 
vÆue
)

153 ++
	gm_size
;

155 i‡(!
£gmítExi°sF‹
(
m_size
 - 1))

156 
	gm_£gmíts
.
≠≥nd
(
√w
 
Segmít
);

157 
£gmítF‹
(
m_size
 - 1)->
uncheckedAµíd
(
°d
::
f‹w¨d
<
U
>(
vÆue
));

160 
	gãm∂©e
<
	gty≥«me
... 
	gArgs
>

161 
	gT
& 
Æloc
(
Args
... 
¨gs
)

163 
	g≠≥nd
<
	gT
>(
T
(
¨gs
...));

164  
œ°
();

167 
ªmoveLa°
()

169 
£gmítF‹
(
m_size
 - 1)->
ªmoveLa°
();

170 --
	gm_size
;

173 
grow
(
size_t
 
size
)

175 
ASSERT
(
size
 > 
m_size
);

176 
ísuªSegmítsF‹
(
size
);

177 
	gm_size
 = 
size
;

180 
˛ór
()

182 
dñëeAŒSegmíts
();

183 
	gm_£gmíts
.
˛ór
();

184 
	gm_size
 = 0;

187 
Iãøt‹
 
begö
()

189  
Iãøt‹
(*
this
, 0, 
m_size
 ? 0 : 
SegmítSize
);

192 
Iãøt‹
 
íd
()

194  
Iãøt‹
(*
this
, 0, 
SegmítSize
);

197 
shrökToFô
()

199 
	gm_£gmíts
.
shrökToFô
();

202 
	g¥iv©e
:

203 
Ve˘‹
<
	tT
, 
	tSegmítSize
> 
	tSegmít
;

205 
dñëeAŒSegmíts
()

207 
size_t
 
	gi
 = 0; i < 
	gm_£gmíts
.
size
(); i++)

208 
dñëe
 
	gm_£gmíts
[
i
];

211 
boﬁ
 
£gmítExi°sF‹
(
size_t
 
ödex
)

213  
	gödex
 / 
	gSegmítSize
 < 
	gm_£gmíts
.
size
();

216 
Segmít
* 
£gmítF‹
(
size_t
 
ödex
)

218  
	gm_£gmíts
[
ödex
 / 
SegmítSize
];

221 
size_t
 
subs¸ùtF‹
(size_à
ödex
)

223  
	gödex
 % 
	gSegmítSize
;

226 
ísuªSegmítsF‹
(
size_t
 
size
)

228 
size_t
 
	g£gmítCou¡
 = (
m_size
 + 
SegmítSize
 - 1) / SegmentSize;

229 
size_t
 
	g√ededSegmítCou¡
 = (
size
 + 
SegmítSize
 - 1) / SegmentSize;

232 
size_t
 
	gíd
 = 
√ededSegmítCou¡
 - 1;

233 
size_t
 
	gi
 = 
£gmítCou¡
 ? segmítCou¡ - 1 : 0; i < 
	gíd
; ++i)

234 
ísuªSegmít
(
i
, 
SegmítSize
);

237 
ísuªSegmít
(
íd
, 
subs¸ùtF‹
(
size
 - 1) + 1);

240 
ísuªSegmít
(
size_t
 
£gmítIndex
, size_à
size
)

242 
ASSERT_WITH_SECURITY_IMPLICATION
(
£gmítIndex
 <
m_£gmíts
.
size
());

243 i‡(
	g£gmítIndex
 =
m_£gmíts
.
size
())

244 
m_£gmíts
.
≠≥nd
(
√w
 
Segmít
);

245 
	gm_£gmíts
[
£gmítIndex
]->
grow
(
size
);

248 
size_t
 
	gm_size
;

249 
	gVe˘‹
<
	gSegmít
*> 
	gm_£gmíts
;

254 
usög
 
	gWTF
::
SegmíãdVe˘‹
;

	@SentinelLinkedList.h

37 #i‚de‡
SítöñLökedLi°_h


38 
	#SítöñLökedLi°_h


	)

40 
«me•a˚
 
	gWTF
 {

42 
	eSítöñTag
 { 
	gSítöñ
 };

44 
	gãm∂©e
<
ty≥«me
 
	gT
>

45 ˛as†
	cBasicRawSítöñNode
 {

46 
	gpublic
:

47 
BasicRawSítöñNode
(
SítöñTag
)

48 : 
m_√xt
(0)

49 , 
m_¥ev
(0)

53 
BasicRawSítöñNode
()

54 : 
m_√xt
(0)

55 , 
m_¥ev
(0)

59 
£tPªv
(
BasicRawSítöñNode
* 
¥ev
Ë{ 
	gm_¥ev
 =Örev; }

60 
£tNext
(
BasicRawSítöñNode
* 
√xt
Ë{ 
	gm_√xt
 =Çext; }

62 
T
* 
¥ev
(Ë{  
	g°©ic_ˇ°
<
	gT
*>(
	gm_¥ev
); }

63 
T
* 
√xt
(Ë{  
	g°©ic_ˇ°
<
	gT
*>(
	gm_√xt
); }

65 
boﬁ
 
isOnLi°
() const

67 
ASSERT
(!!
m_¥ev
 =!!
m_√xt
);

68  !!
	gm_¥ev
;

71 
ªmove
();

73 
	g¥iv©e
:

74 
BasicRawSítöñNode
* 
m_√xt
;

75 
BasicRawSítöñNode
* 
	gm_¥ev
;

78 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gRawNode
 = 
T
> cœs†
	cSítöñLökedLi°
 {

79 
public
:

80 
T
* 
	tôî©‹
;

82 
SítöñLökedLi°
();

84 
push
(
T
*);

85 
ªmove
(
T
*);

87 
boﬁ
 
isOnLi°
(
T
*);

89 
ôî©‹
 
begö
();

90 
ôî©‹
 
íd
();

92 
boﬁ
 
isEm±y
(Ë{  
begö
(Ë=
íd
(); }

94 
	g¥iv©e
:

95 
RawNode
 
m_hódSítöñ
;

96 
RawNode
 
	gm_èûSítöñ
;

99 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gBasicRawSítöñNode
<T>::
	$ªmove
()

101 
SítöñLökedLi°
<
T
, 
BasicRawSítöñNode
<T>>::
	`ªmove
(
°©ic_ˇ°
<T*>(
this
));

102 
	}
}

104 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gRawNode
> 
ölöe
 
	gSítöñLökedLi°
<T, RawNode>::
	$SítöñLökedLi°
()

105 : 
	`m_hódSítöñ
(
Sítöñ
)

106 , 
	$m_èûSítöñ
(
Sítöñ
)

108 
m_hódSítöñ
.
	`£tNext
(&
m_èûSítöñ
);

109 
m_hódSítöñ
.
	`£tPªv
(0);

111 
m_èûSítöñ
.
	`£tPªv
(&
m_hódSítöñ
);

112 
m_èûSítöñ
.
	`£tNext
(0);

113 
	}
}

115 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gRawNode
> 
ölöe
Åy≥«mê
	gSítöñLökedLi°
<T, RawNode>::
ôî©‹
 
SítöñLökedLi°
<
T
, RawNode>::
	$begö
()

117  
°©ic_ˇ°
<
T
*>(
m_hódSítöñ
.
	`√xt
());

118 
	}
}

120 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gRawNode
> 
ölöe
Åy≥«mê
	gSítöñLökedLi°
<T, RawNode>::
ôî©‹
 
SítöñLökedLi°
<
T
, RawNode>::
	$íd
()

122  
°©ic_ˇ°
<
T
*>(&
m_èûSítöñ
);

123 
	}
}

125 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gRawNode
> 
ölöe
 
	gSítöñLökedLi°
<T, RawNode>::
	$push
(
T
* 
node
)

127 
	`ASSERT
(
node
);

128 
	`ASSERT
(!
node
->
	`¥ev
());

129 
	`ASSERT
(!
node
->
	`√xt
());

131 
RawNode
* 
¥ev
 = &
m_hódSítöñ
;

132 
RawNode
* 
√xt
 = 
m_hódSítöñ
.
	`√xt
();

134 
node
->
	`£tPªv
(
¥ev
);

135 
node
->
	`£tNext
(
√xt
);

137 
¥ev
->
	`£tNext
(
node
);

138 
√xt
->
	`£tPªv
(
node
);

139 
	}
}

141 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gRawNode
> 
ölöe
 
	gSítöñLökedLi°
<T, RawNode>::
	$ªmove
(
T
* 
node
)

143 
	`ASSERT
(
node
);

144 
	`ASSERT
(!!
node
->
	`¥ev
());

145 
	`ASSERT
(!!
node
->
	`√xt
());

147 
RawNode
* 
¥ev
 = 
node
->
	`¥ev
();

148 
RawNode
* 
√xt
 = 
node
->
	`√xt
();

150 
¥ev
->
	`£tNext
(
√xt
);

151 
√xt
->
	`£tPªv
(
¥ev
);

153 
node
->
	`£tPªv
(0);

154 
node
->
	`£tNext
(0);

155 
	}
}

157 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gRawNode
> 
ölöe
 
boﬁ
 
	gSítöñLökedLi°
<T, RawNode>::
	$isOnLi°
(
T
* 
node
)

159 i‡(!
node
->
	`isOnLi°
())

160  
Ál£
;

162 
T
* 
ôî
 = 
	`begö
(); iã∏!
	`íd
(); iã∏ôî->
	`√xt
()) {

163 i‡(
ôî
 =
node
)

164  
åue
;

167  
Ál£
;

168 
	}
}

172 
usög
 
	gWTF
::
BasicRawSítöñNode
;

173 
usög
 
	gWTF
::
SítöñLökedLi°
;

	@SimpleStats.h

26 #i‚de‡
Sim∂eSèts_h


27 
	#Sim∂eSèts_h


	)

29 
	~<wtf/M©hExåas.h
>

30 
	~<wtf/StdLibExåas.h
>

32 
«me•a˚
 
	gWTF
 {

36 ˛as†
	cSim∂eSèts
 {

37 
	gpublic
:

38 
Sim∂eSèts
()

39 : 
m_cou¡
(0)

40 , 
m_sum
(0)

41 , 
m_sumOfSqu¨es
(0)

45 
add
(
vÆue
)

47 
	gm_cou¡
++;

48 
	gm_sum
 +
vÆue
;

49 
	gm_sumOfSqu¨es
 +
vÆue
 * value;

52 
boﬁ
 
	g›î©‹
!() const

54  !
	gm_cou¡
;

57 
cou¡
() const

59  
	gm_cou¡
;

62 
sum
() const

64  
	gm_sum
;

67 
sumOfSqu¨es
() const

69  
	gm_sumOfSqu¨es
;

72 
món
() const

74  
	gm_sum
 / 
	gm_cou¡
;

80 
v¨ün˚
() const

82 i‡(
	gm_cou¡
 < 2)

86 
	g£c⁄dMomít
 = 
m_sumOfSqu¨es
 / 
m_cou¡
;

87 
	gfú°Momít
 = 
m_sum
 / 
m_cou¡
;

89 
	gªsu…
 = 
£c⁄dMomít
 - 
fú°Momít
 * firstMoment;

93 i‡(
	gªsu…
 <= 0)

96  
	gªsu…
;

100 
°™d¨dDevüti⁄
() const

102  
sqπ
(
v¨ün˚
());

105 
	g¥iv©e
:

106 
m_cou¡
;

107 
	gm_sum
;

108 
	gm_sumOfSqu¨es
;

	@SinglyLinkedList.h

26 #i‚de‡
SöglyLökedLi°_h


27 
	#SöglyLökedLi°_h


	)

29 
«me•a˚
 
	gWTF
 {

31 
	gãm∂©e
 <
ty≥«me
 
	gNode
> cœs†
	cSöglyLökedLi°
 {

32 
	gpublic
:

33 
SöglyLökedLi°
();

35 
boﬁ
 
isEm±y
();

37 
push
(
Node
*);

38 
Node
* 
p›
();

40 
	g¥iv©e
:

41 
Node
* 
m_hód
;

44 
	gãm∂©e
 <
ty≥«me
 
	gNode
> 
ölöe
 
	gSöglyLökedLi°
<Node>::
	$SöglyLökedLi°
()

45 : 
	$m_hód
(0)

47 
	}
}

49 
ãm∂©e
 <
ty≥«me
 
Node
> 
ölöe
 
boﬁ
 
SöglyLökedLi°
<Node>::
	$isEm±y
()

51  !
m_hód
;

52 
	}
}

54 
	gãm∂©e
 <
ty≥«me
 
	gNode
> 
ölöe
 
	gSöglyLökedLi°
<Node>::
	$push
(
Node
* 
node
)

56 
	`ASSERT
(
node
);

57 
node
->
	`£tNext
(
m_hód
);

58 
m_hód
 = 
node
;

59 
	}
}

61 
	gãm∂©e
 <
ty≥«me
 
	gNode
> 
ölöe
 
Node
* 
	gSöglyLökedLi°
<Node>::
	$p›
()

63 
Node
* 
tmp
 = 
m_hód
;

64 
m_hód
 = m_hód->
	`√xt
();

65  
tmp
;

66 
	}
}

70 
usög
 
	gWTF
::
SöglyLökedLi°
;

	@SixCharacterHash.cpp

26 
	~"c⁄fig.h
"

27 
	~"SixCh¨a˘îHash.h
"

29 
	~<wtf/StdLibExåas.h
>

31 
	~<°rög.h
>

33 
«me•a˚
 
	gWTF
 {

35 
	#TABLE
 ("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmn›qr°uvwxyz0123456789")

	)

37 
sixCh¨a˘îHashSåögToI¡egî
(c⁄° * 
°rög
)

39 
	ghash
 = 0;

41 
RELEASE_ASSERT
(
°æí
(
°rög
) == 6);

43 
	gi
 = 0; i < 6; ++i) {

44 
	ghash
 *= 62;

45 
	gc
 = 
°rög
[
i
];

46 i‡(
	gc
 >'A' && 
c
 <= 'Z') {

47 
hash
 +
c
 - 'A';

50 i‡(
	gc
 >'a' && 
c
 <= 'z') {

51 
hash
 +
c
 - 'a' + 26;

54 
ASSERT
(
c
 >= '0' && c <= '9');

55 
	ghash
 +
c
 - '0' + 26 * 2;

58  
	ghash
;

61 
	g°d
::
¨øy
<, 7> 
öãgîToSixCh¨a˘îHashSåög
(
hash
)

63 
°©ic_as£π
(
WTF_ARRAY_LENGTH
(
TABLE
) - 1 == 62, "Six character hashÅable isÇot 62 charactersÜong.");

65 
	g°d
::
¨øy
<, 7> 
	gbuf„r
;

66 
	gaccumuœt‹
 = 
hash
;

67 
	gi
 = 6; i--;) {

68 
	gbuf„r
[
i
] = 
TABLE
[
accumuœt‹
 % 62];

69 
	gaccumuœt‹
 /= 62;

71 
	gbuf„r
[6] = 0;

72  
	gbuf„r
;

	@SixCharacterHash.h

26 #i‚de‡
SixCh¨a˘îHash_h


27 
	#SixCh¨a˘îHash_h


	)

29 
	~<¨øy
>

31 
«me•a˚
 
	gWTF
 {

36 
WTF_EXPORT_PRIVATE
 
sixCh¨a˘îHashSåögToI¡egî
(const *);

40 
WTF_EXPORT_PRIVATE
 
	g°d
::
¨øy
<, 7> 
öãgîToSixCh¨a˘îHashSåög
();

44 
usög
 
	gWTF
::
sixCh¨a˘îHashSåögToI¡egî
;

45 
usög
 
	gWTF
::
öãgîToSixCh¨a˘îHashSåög
;

	@SizeLimits.cpp

31 
	~"c⁄fig.h
"

33 
	~<ty≥_åaôs
>

34 
	~<utûôy
>

35 
	~<wtf/As£πi⁄s.h
>

36 
	~<wtf/OwnPå.h
>

37 
	~<wtf/PassRefPå.h
>

38 
	~<wtf/RefCou¡ed.h
>

39 
	~<wtf/RefPå.h
>

40 
	~<wtf/Ve˘‹.h
>

42 
«me•a˚
 
	gWTF
 {

44 #i‚de‡
NDEBUG


45 
	sSameSizeAsRefCou¡ed
 {

46 
	ga
;

47 
boﬁ
 
	gb
;

48 
boﬁ
 
	gc
;

52 
	sSameSizeAsRefCou¡ed
 {

53 
	ga
;

57 
	gãm∂©e
<
ty≥«me
 
	gT
, 
	gölöeC≠acôy
 = 0>

58 
SameSizeAsVe˘‹WôhI∆öeC≠acôy
;

60 
	gãm∂©e
<
ty≥«me
 
	gT
>

61 
	gSameSizeAsVe˘‹WôhI∆öeC≠acôy
<
	gT
, 0> {

62 * 
	gbuf„rPoöãr
;

63 
	gˇ∑côy
;

64 
	gsize
;

67 
	gãm∂©e
<
ty≥«me
 
	gT
, 
	gölöeC≠acôy
>

68 
	sSameSizeAsVe˘‹WôhI∆öeC≠acôy
 {

69 
	gSameSizeAsVe˘‹WôhI∆öeC≠acôy
<
	gT
, 0> 
	gba£C≠acôy
;

70 
ty≥«me
 
	g°d
::
Æig√d_°‹age
<(
T
), std::
Æignmít_of
<T>::
vÆue
>::
ty≥
 
ölöeBuf„r
[
ölöeC≠acôy
];

73 
°©ic_as£π
((
OwnPå
<>) == (*), "OwnPtr should stay small!");

74 
°©ic_as£π
((
PassRefPå
<
RefCou¡ed
<>>) == (*), "PassRefPtr should stay small!");

75 
°©ic_as£π
((
RefCou¡ed
<>Ë=(
SameSizeAsRefCou¡ed
), "RefCounted should stay small!");

76 
°©ic_as£π
((
RefPå
<
RefCou¡ed
<>>) == (*), "RefPtr should stay small!");

77 
°©ic_as£π
((
Ve˘‹
<>Ë=(
SameSizeAsVe˘‹WôhI∆öeC≠acôy
<>), "Vector should stay small!");

78 
°©ic_as£π
((
Ve˘‹
<, 1>Ë=(
SameSizeAsVe˘‹WôhI∆öeC≠acôy
<, 1>), "Vector should stay small!");

79 
°©ic_as£π
((
Ve˘‹
<, 2>Ë=(
SameSizeAsVe˘‹WôhI∆öeC≠acôy
<, 2>), "Vector should stay small!");

80 
°©ic_as£π
((
Ve˘‹
<, 3>Ë=(
SameSizeAsVe˘‹WôhI∆öeC≠acôy
<, 3>), "Vector should stay small!");

	@Spectrum.h

26 #i‚de‡
S≥˘rum_h


27 
	#S≥˘rum_h


	)

29 
	~<wtf/HashM≠.h
>

30 
	~<wtf/Ve˘‹.h
>

31 
	~<Æg‹ôhm
>

33 
«me•a˚
 
	gWTF
 {

35 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gCou¡îTy≥
 = >

36 ˛as†
	cS≥˘rum
 {

37 
public
:

38 
ty≥«me
 
	tHashM≠
<
	tT
, 
	tCou¡îTy≥
>::
	tôî©‹
 iterator;

39 
ty≥«me
 
	tHashM≠
<
	tT
, 
	tCou¡îTy≥
>::
	tc⁄°_ôî©‹
 const_iterator;

41 
S≥˘rum
() { }

43 
add
(c⁄° 
T
& 
key
, 
Cou¡îTy≥
 
cou¡
 = 1)

45 i‡(!
cou¡
)

47 
ty≥«me
 
	gHashM≠
<
	gT
, 
	gCou¡îTy≥
>::
AddResu…
 
ªsu…
 = 
m_m≠
.
add
(
key
, 
cou¡
);

48 i‡(!
	gªsu…
.
	gisNewE¡ry
)

49 
	gªsu…
.
	gôî©‹
->
	gvÆue
 +
cou¡
;

52 
	gãm∂©e
<
ty≥«me
 
	gU
>

53 
addAŒ
(c⁄° 
S≥˘rum
<
T
, 
U
>& 
ŸhîS≥˘rum
)

55 auto& 
	gíåy
 : 
ŸhîS≥˘rum
)

56 
add
(
íåy
.
key
,É¡ry.
cou¡
);

59 
Cou¡îTy≥
 
gë
(c⁄° 
T
& 
key
) const

61 
c⁄°_ôî©‹
 
	gôî
 = 
m_m≠
.
föd
(
key
);

62 i‡(
	gôî
 =
m_m≠
.
íd
())

64  
	gôî
->
	gvÆue
;

67 
size_t
 
size
(Ëc⁄° {  
	gm_m≠
.size(); }

69 
ôî©‹
 
begö
(Ë{  
	gm_m≠
.begin(); }

70 
ôî©‹
 
íd
(Ë{  
	gm_m≠
.end(); }

71 
c⁄°_ôî©‹
 
begö
(Ëc⁄° {  
	gm_m≠
.begin(); }

72 
c⁄°_ôî©‹
 
íd
(Ëc⁄° {  
	gm_m≠
.end(); }

74 
	sKeyAndCou¡
 {

75 
KeyAndCou¡
() { }

77 
KeyAndCou¡
(c⁄° 
T
& 
key
, 
Cou¡îTy≥
 
cou¡
)

78 : 
key
(key)

79 , 
cou¡
(count)

83 
boﬁ
 
	g›î©‹
<(c⁄° 
	gKeyAndCou¡
& 
	gŸhî
) const

85 i‡(
	gcou¡
 !
Ÿhî
.
cou¡
)

86  
cou¡
 < 
Ÿhî
.count;

90  
	gkey
 > 
	gŸhî
.key;

93 
T
 
	gkey
;

94 
Cou¡îTy≥
 
	gcou¡
;

98 
	gVe˘‹
<
	gKeyAndCou¡
> 
buûdLi°
() const

100 
	gVe˘‹
<
	gKeyAndCou¡
> 
	gli°
;

101 
c⁄°_ôî©‹
 
	gôî
 = 
begö
(); iã∏!
íd
(); ++iter)

102 
	gli°
.
≠≥nd
(
KeyAndCou¡
(
ôî
->
key
, iãr->
vÆue
));

104 
	g°d
::
s‹t
(
li°
.
begö
(),Üi°.
íd
());

105  
	gli°
;

108 
˛ór
(Ë{ 
	gm_m≠
.clear(); }

110 
	gãm∂©e
<
ty≥«me
 
	gFun˘‹
>

111 
ªmoveIf
(c⁄° 
Fun˘‹
& 
fun˘‹
)

113 
	gm_m≠
.
ªmoveIf
([&
fun˘‹
] (
ty≥«me
 
HashM≠
<
T
, 
Cou¡îTy≥
>::
KeyVÆuePaúTy≥
& 
∑ú
) {

114  
fun˘‹
(
KeyAndCou¡
(
∑ú
.
key
,Öaú.
vÆue
));

118 
	g¥iv©e
:

119 
HashM≠
<
T
, 
	gCou¡îTy≥
> 
	gm_m≠
;

124 
usög
 
	gWTF
::
S≥˘rum
;

	@StackBounds.cpp

21 
	~"c⁄fig.h
"

22 
	~"SèckBounds.h
"

24 #i‡
OS
(
DARWIN
)

26 
	~<mach/èsk.h
>

27 
	~<mach/thªad_a˘.h
>

28 
	~<±hªad.h
>

30 #ñi‡
OS
(
WINDOWS
)

32 
	~<wödows.h
>

34 #ñi‡
OS
(
SOLARIS
)

36 
	~<thªad.h
>

38 #ñi‡
OS
(
UNIX
)

40 
	~<±hªad.h
>

41 #i‡
HAVE
(
PTHREAD_NP_H
)

42 
	~<±hªad_≈.h
>

47 
«me•a˚
 
	gWTF
 {

49 #i‡
OS
(
DARWIN
)

51 
	gSèckBounds
::
öôülize
()

53 
±hªad_t
 
thªad
 = 
±hªad_£lf
();

54 
	gm_‹igö
 = 
±hªad_gë_°ackaddr_≈
(
thªad
);

55 
æim_t
 
	gsize
 = 0;

56 i‡(
±hªad_maö_≈
()) {

59 
æimô
 
	glimô
;

60 
gëæimô
(
RLIMIT_STACK
, &
limô
);

61 
	gsize
 = 
limô
.
æim_cur
;

63 
	gsize
 = 
±hªad_gë_°acksize_≈
(
thªad
);

65 
	gm_bound
 = 
°©ic_ˇ°
<*>(
m_‹igö
Ë- 
size
;

68 #ñi‡
OS
(
SOLARIS
)

70 
	gSèckBounds
::
öôülize
()

72 
°ack_t
 
s
;

73 
thr_°k£gmít
(&
s
);

74 
	gm_‹igö
 = 
s
.
ss_•
;

75 
	gm_bound
 = 
°©ic_ˇ°
<*>(
m_‹igö
Ë- 
s
.
ss_size
;

78 #ñi‡
OS
(
OPENBSD
)

80 
	gSèckBounds
::
öôülize
()

82 
±hªad_t
 
thªad
 = 
±hªad_£lf
();

83 
°ack_t
 
	g°ack
;

84 
±hªad_°ack£g_≈
(
thªad
, &
°ack
);

85 
	gm_‹igö
 = 
°ack
.
ss_•
;

86 #i‡
CPU
(
HPPA
)

87 
	gm_bound
 = 
°©ic_ˇ°
<*>(
m_‹igö
Ë+ 
°ack
.
ss_size
;

89 
	gm_bound
 = 
°©ic_ˇ°
<*>(
m_‹igö
Ë- 
°ack
.
ss_size
;

93 #ñi‡
OS
(
UNIX
)

95 
	gSèckBounds
::
öôülize
()

97 * 
°ackBa£
 = 0;

98 
size_t
 
	g°ackSize
 = 0;

100 
±hªad_t
 
	gthªad
 = 
±hªad_£lf
();

101 
±hªad_©å_t
 
	gßâr
;

102 
±hªad_©å_öô
(&
ßâr
);

103 #i‡
HAVE
(
PTHREAD_NP_H
Ë|| 
OS
(
NETBSD
)

105 
±hªad_©å_gë_≈
(
thªad
, &
ßâr
);

108 
±hªad_gë©å_≈
(
thªad
, &
ßâr
);

110 
	grc
 = 
±hªad_©å_gë°ack
(&
ßâr
, &
°ackBa£
, &
°ackSize
);

111 ()
	grc
;

112 
ASSERT
(
°ackBa£
);

113 
±hªad_©å_de°roy
(&
ßâr
);

114 
	gm_bound
 = 
°ackBa£
;

115 
	gm_‹igö
 = 
°©ic_ˇ°
<*>(
°ackBa£
Ë+ 
°ackSize
;

118 #ñi‡
OS
(
WINDOWS
)

120 
	gSèckBounds
::
öôülize
()

122 
MEMORY_BASIC_INFORMATION
 
°ackOrigö
 = { 0 };

123 
VútuÆQuîy
(&
°ackOrigö
, &stackOrigin, (stackOrigin));

126 
	gm_‹igö
 = 
°©ic_ˇ°
<*>(
°ackOrigö
.
Ba£Addªss
Ë+ sèckOrigö.
Regi⁄Size
;

142 
MEMORY_BASIC_INFORMATION
 
	guncommôãdMem‹y
;

143 
VútuÆQuîy
(
°ackOrigö
.
AŒoˇti⁄Ba£
, &
uncommôãdMem‹y
, (uncommittedMemory));

144 
ASSERT
(
uncommôãdMem‹y
.
Sèã
 =
MEM_RESERVE
);

146 
MEMORY_BASIC_INFORMATION
 
	ggu¨dPage
;

147 
VútuÆQuîy
(
°©ic_ˇ°
<*>(
uncommôãdMem‹y
.
Ba£Addªss
Ë+ uncommôãdMem‹y.
Regi⁄Size
, &
gu¨dPage
, (guardPage));

148 
ASSERT
(
gu¨dPage
.
PrŸe˘
 & 
PAGE_GUARD
);

150 * 
	gídOfSèck
 = 
°ackOrigö
.
AŒoˇti⁄Ba£
;

152 #i‚de‡
NDEBUG


153 
MEMORY_BASIC_INFORMATION
 
	gcommôãdMem‹y
;

154 
VútuÆQuîy
(
°©ic_ˇ°
<*>(
gu¨dPage
.
Ba£Addªss
Ë+ gu¨dPage.
Regi⁄Size
, &
commôãdMem‹y
, (committedMemory));

155 
ASSERT
(
commôãdMem‹y
.
Sèã
 =
MEM_COMMIT
);

157 * 
	gcompuãdEnd
 = 
°©ic_ˇ°
<*>(
m_‹igö
Ë- (
uncommôãdMem‹y
.
Regi⁄Size
 + 
gu¨dPage
.Regi⁄Sizê+ 
commôãdMem‹y
.RegionSize);

159 
ASSERT
(
°ackOrigö
.
AŒoˇti⁄Ba£
 =
uncommôãdMem‹y
.AllocationBase);

160 
ASSERT
(
°ackOrigö
.
AŒoˇti⁄Ba£
 =
gu¨dPage
.AllocationBase);

161 
ASSERT
(
°ackOrigö
.
AŒoˇti⁄Ba£
 =
commôãdMem‹y
.AllocationBase);

162 
ASSERT
(
°ackOrigö
.
AŒoˇti⁄Ba£
 =
uncommôãdMem‹y
.
Ba£Addªss
);

163 
ASSERT
(
ídOfSèck
 =
compuãdEnd
);

165 
	gm_bound
 = 
°©ic_ˇ°
<*>(
ídOfSèck
Ë+ 
gu¨dPage
.
Regi⁄Size
;

169 #îr‹ 
Nìd
 
a
 
way
 
to
 
gë
 
the
 
°ack
 
bounds
 
⁄
 
this
 
∂©f‹m


	@StackBounds.h

27 #i‚de‡
SèckBounds_h


28 
	#SèckBounds_h


	)

30 
	~<Æg‹ôhm
>

32 
«me•a˚
 
	gWTF
 {

34 ˛as†
	cSèckBounds
 {

40 c⁄° 
size_t
 
	gs_deÁu…AvaûabûôyDñè
 = 64 * 1024;

42 
	gpublic
:

43 
SèckBounds
 
cuºítThªadSèckBounds
()

45 
SèckBounds
 
bounds
;

46 
	gbounds
.
öôülize
();

47 
	gbounds
.
checkC⁄si°ícy
();

48  
	gbounds
;

51 * 
‹igö
() const

53 
ASSERT
(
m_‹igö
);

54  
	gm_‹igö
;

57 
size_t
 
size
() const

59 i‡(
isGrowögDownw¨d
())

60  
	g°©ic_ˇ°
<*>(
	gm_‹igö
Ë- sètic_ˇ°<*>(
	gm_bound
);

61  
	g°©ic_ˇ°
<*>(
	gm_bound
Ë- sètic_ˇ°<*>(
	gm_‹igö
);

64 * 
ªcursi⁄Limô
(
size_t
 
möAvaûabÀDñè
 = 
s_deÁu…AvaûabûôyDñè
) const

66 
checkC⁄si°ícy
();

67 i‡(
isGrowögDownw¨d
())

68  
	g°©ic_ˇ°
<*>(
	gm_bound
Ë+ 
	gmöAvaûabÀDñè
;

69  
	g°©ic_ˇ°
<*>(
	gm_bound
Ë- 
	gmöAvaûabÀDñè
;

72 * 
ªcursi⁄Limô
(* 
°¨tOfU£rSèck
, 
size_t
 
maxU£rSèck
, size_à
ª£rvedZ⁄eSize
) const

74 
checkC⁄si°ícy
();

75 i‡(
	gmaxU£rSèck
 < 
	gª£rvedZ⁄eSize
)

76 
	gª£rvedZ⁄eSize
 = 
maxU£rSèck
;

77 
size_t
 
	gmaxU£rSèckWôhRe£rvedZ⁄e
 = 
maxU£rSèck
 - 
ª£rvedZ⁄eSize
;

79 i‡(
isGrowögDownw¨d
()) {

80 * 
	gídOfSèckWôhRe£rvedZ⁄e
 = 
ªöãΩªt_ˇ°
<*>(
m_bound
Ë+ 
ª£rvedZ⁄eSize
;

81 i‡(
	g°¨tOfU£rSèck
 < 
	gídOfSèckWôhRe£rvedZ⁄e
)

82  
	gídOfSèckWôhRe£rvedZ⁄e
;

83 
size_t
 
	gavaûabÀU£rSèck
 = 
°¨tOfU£rSèck
 - 
ídOfSèckWôhRe£rvedZ⁄e
;

84 i‡(
	gmaxU£rSèckWôhRe£rvedZ⁄e
 > 
	gavaûabÀU£rSèck
)

85 
	gmaxU£rSèckWôhRe£rvedZ⁄e
 = 
avaûabÀU£rSèck
;

86  
	g°¨tOfU£rSèck
 - 
	gmaxU£rSèckWôhRe£rvedZ⁄e
;

89 * 
	gídOfSèckWôhRe£rvedZ⁄e
 = 
ªöãΩªt_ˇ°
<*>(
m_bound
Ë- 
ª£rvedZ⁄eSize
;

90 i‡(
	g°¨tOfU£rSèck
 > 
	gídOfSèckWôhRe£rvedZ⁄e
)

91  
	gídOfSèckWôhRe£rvedZ⁄e
;

92 
size_t
 
	gavaûabÀU£rSèck
 = 
ídOfSèckWôhRe£rvedZ⁄e
 - 
°¨tOfU£rSèck
;

93 i‡(
	gmaxU£rSèckWôhRe£rvedZ⁄e
 > 
	gavaûabÀU£rSèck
)

94 
	gmaxU£rSèckWôhRe£rvedZ⁄e
 = 
avaûabÀU£rSèck
;

95  
	g°¨tOfU£rSèck
 + 
	gmaxU£rSèckWôhRe£rvedZ⁄e
;

98 
boﬁ
 
isGrowögDownw¨d
() const

100 
ASSERT
(
m_‹igö
 && 
m_bound
);

101  
	gåue
;

104 
	g¥iv©e
:

105 
SèckBounds
()

106 : 
m_‹igö
(0)

107 , 
m_bound
(0)

111 
WTF_EXPORT_PRIVATE
 
öôülize
();

113 
checkC⁄si°ícy
() const

115 #i‡!
ASSERT_DISABLED


116 * 
	gcuºítPosôi⁄
 = &
cuºítPosôi⁄
;

117 
ASSERT
(
m_‹igö
 !
m_bound
);

118 
ASSERT
(
isGrowögDownw¨d
()

119 ? (
cuºítPosôi⁄
 < 
m_‹igö
 && cuºítPosôi⁄ > 
m_bound
)

120 : (
cuºítPosôi⁄
 > 
m_‹igö
 && cuºítPosôi⁄ < 
m_bound
));

124 * 
	gm_‹igö
;

125 * 
	gm_bound
;

127 
‰õnd
 
˛ass
 
	gSèckSèts
;

132 
usög
 
	gWTF
::
SèckBounds
;

	@StackStats.cpp

26 
	~"c⁄fig.h
"

27 
	~"SèckSèts.h
"

29 #i‡
ENABLE
(
STACK_STATS
)

31 
	~"As£πi⁄s.h
"

32 
	~"D©aLog.h
"

33 
	~"WTFThªadD©a.h
"

39 
	#ENABLE_VERBOSE_STACK_STATS
 1

	)

42 
«me•a˚
 
	gWTF
 {

45 
	g°d
::
muãx
* 
SèckSèts
::
s_sh¨edMuãx
 = 0;

46 
	gSèckSèts
::
CheckPoöt
* 
SèckSèts
::
s_t›CheckPoöt
 = 0;

47 
	gSèckSèts
::
LayoutCheckPoöt
* 
SèckSèts
::
s_fú°LayoutCheckPoöt
 = 0;

48 
	gSèckSèts
::
LayoutCheckPoöt
* 
SèckSèts
::
s_t›LayoutCheckPoöt
 = 0;

51 
	gSèckSèts
::
s_maxCheckPoötDiff
 = 0;

52 
	gSèckSèts
::
s_maxSèckHeight
 = 0;

53 
	gSèckSèts
::
s_maxRì¡ryDïth
 = 0;

55 
	gSèckSèts
::
s_maxLayoutCheckPoötDiff
 = 0;

56 
	gSèckSèts
::
s_maxTŸÆLayoutCheckPoötDiff
 = 0;

57 
	gSèckSèts
::
s_maxLayoutRì¡ryDïth
 = 0;

61 
	gSèckSèts
::
öôülize
()

63 
s_sh¨edMuãx
 = 
°d
::
make_unique
<°d::
muãx
>().
ªÀa£
();

64 
d©aLogF
(" === LOGÇew stack stats ========\n");

67 
	gSèckSèts
::
PîThªadSèts
::PerThreadStats()

69 c⁄° 
SèckBounds
& 
°ack
 = 
wtfThªadD©a
().stack();

70 
	gm_ªíåyDïth
 = 0;

71 
	gm_°ackSèπ
 = (*)
°ack
.
‹igö
();

72 
	gm_cuºítCheckPoöt
 = 0;

74 
d©aLogF
(" ==THREADÇew sèckSèπ %∞========\n", 
m_°ackSèπ
);

77 
	gSèckSèts
::
CheckPoöt
::CheckPoint()

79 
°d
::
lock_gu¨d
<°d::
muãx
> 
lock
(*
SèckSèts
::
s_sh¨edMuãx
);

80 
WTFThªadD©a
* 
	gthªadD©a
 = 
c⁄°_ˇ°
<WTFThªadD©a*>(&
wtfThªadD©a
());

81 
	gSèckSèts
::
PîThªadSèts
& 
t
 = 
thªadD©a
->
°ackSèts
();

82 c⁄° 
	gSèckBounds
& 
	g°ack
 = 
thªadD©a
->
°ack
();

84 
boﬁ
 
	gisGrowögDownw¨d
 = 
°ack
.
isGrowögDownw¨d
();

85 
boﬁ
 
	g√edToLog
 = 
Ál£
;

86 * 
	gcuºít
 = 
ªöãΩªt_ˇ°
<*>(
this
);

87 * 
	gœ°
 = 
ªöãΩªt_ˇ°
<*>(
t
.
m_cuºítCheckPoöt
);

90 i‡(!
	gœ°
)

91 
	gœ°
 = 
t
.
m_°ackSèπ
;

94 
	gt
.
	gm_ªíåyDïth
++;

95 i‡(
	gt
.
	gm_ªíåyDïth
 > 
	gSèckSèts
::
s_maxRì¡ryDïth
) {

96 
SèckSèts
::
s_maxRì¡ryDïth
 = 
t
.
m_ªíåyDïth
;

97 
	g√edToLog
 = 
åue
;

101 
	gheight
 = 
t
.
m_°ackSèπ
 - 
cuºít
;

102 i‡(!
	gisGrowögDownw¨d
)

103 
	gheight
 = -
height
;

104 i‡(
	gheight
 > 
	gSèckSèts
::
s_maxSèckHeight
) {

105 
SèckSèts
::
s_maxSèckHeight
 = 
height
;

106 
	g√edToLog
 = 
åue
;

110 
	gdiff
 = 
œ°
 - 
cuºít
;

111 i‡(!
	gisGrowögDownw¨d
)

112 
	gdiff
 = -
diff
;

113 i‡(
	gdiff
 > 
	gSèckSèts
::
s_maxCheckPoötDiff
) {

114 
SèckSèts
::
s_maxCheckPoötDiff
 = 
diff
;

115 
	g√edToLog
 = 
åue
;

119 
	gm_¥ev
 = 
t
.
m_cuºítCheckPoöt
;

120 
	gt
.
	gm_cuºítCheckPoöt
 = 
this
;

122 #i‡
ENABLE
(
VERBOSE_STACK_STATS
)

123 
	g√edToLog
 = 
åue
;

127 i‡(
	g√edToLog
)

128 
d©aLogF
(" CHECKPOINT %p diff %d/%.1fk/max %.1fk |Ñeentry %d/max %d | height %.1fk/max %.1fk | stack %p size %.1fk\n",

129 
this
, 
diff
, dif‡/ 1024.0, 
SèckSèts
::
s_maxCheckPoötDiff
 / 1024.0,

130 
t
.
m_ªíåyDïth
, 
SèckSèts
::
s_maxRì¡ryDïth
,

131 
height
 / 1024.0, 
SèckSèts
::
s_maxSèckHeight
 / 1024.0,

132 
°ack
.
‹igö
(), sèck.
size
() / 1024.0);

135 
	gSèckSèts
::
CheckPoöt
::~CheckPoint()

137 
°d
::
lock_gu¨d
<°d::
muãx
> 
lock
(*
SèckSèts
::
s_sh¨edMuãx
);

138 
WTFThªadD©a
* 
	gthªadD©a
 = 
c⁄°_ˇ°
<WTFThªadD©a*>(&
wtfThªadD©a
());

139 
	gSèckSèts
::
PîThªadSèts
& 
t
 = 
thªadD©a
->
°ackSèts
();

142 
	gt
.
	gm_cuºítCheckPoöt
 = 
m_¥ev
;

143 --
	gt
.
	gm_ªíåyDïth
;

146 #i‡
ENABLE
(
VERBOSE_STACK_STATS
)

147 i‡(!
	gm_¥ev
) {

148 c⁄° 
	gSèckBounds
& 
	g°ack
 = 
thªadD©a
->
°ack
();

149 
boﬁ
 
	gisGrowögDownw¨d
 = 
°ack
.
isGrowögDownw¨d
();

151 * 
	gcuºít
 = 
ªöãΩªt_ˇ°
<*>(
this
);

152 
	gheight
 = 
t
.
m_°ackSèπ
 - 
cuºít
;

154 i‡(!
	gisGrowögDownw¨d
)

155 
	gheight
 = -
height
;

157 
d©aLogF
(" POPÅo %p diff max %.1fk |Ñeentry %d/%d max | height %.1fk/max %.1fk | stack %p size %.1fk)\n",

158 
this
, 
SèckSèts
::
s_maxCheckPoötDiff
 / 1024.0,

159 
t
.
m_ªíåyDïth
, 
SèckSèts
::
s_maxRì¡ryDïth
,

160 
height
 / 1024.0, 
SèckSèts
::
s_maxSèckHeight
 / 1024.0,

161 
°ack
.
‹igö
(), sèck.
size
() / 1024.0);

166 
	gSèckSèts
::
¥obe
()

168 
°d
::
lock_gu¨d
<°d::
muãx
> 
lock
(*
SèckSèts
::
s_sh¨edMuãx
);

169 
WTFThªadD©a
* 
	gthªadD©a
 = 
c⁄°_ˇ°
<WTFThªadD©a*>(&
wtfThªadD©a
());

170 
	gSèckSèts
::
PîThªadSèts
& 
t
 = 
thªadD©a
->
°ackSèts
();

171 c⁄° 
	gSèckBounds
& 
	g°ack
 = 
thªadD©a
->
°ack
();

173 
boﬁ
 
	gisGrowögDownw¨d
 = 
°ack
.
isGrowögDownw¨d
();

175 
boﬁ
 
	g√edToLog
 = 
Ál£
;

177 
	gdummy
;

178 * 
	gcuºít
 = 
ªöãΩªt_ˇ°
<*>(&
dummy
);

179 * 
	gœ°
 = 
ªöãΩªt_ˇ°
<*>(
t
.
m_cuºítCheckPoöt
);

182 i‡(!
	gœ°
)

183 
	gœ°
 = 
t
.
m_°ackSèπ
;

189 
	gheight
 = 
t
.
m_°ackSèπ
 - 
cuºít
;

190 i‡(!
	gisGrowögDownw¨d
)

191 
	gheight
 = -
height
;

192 i‡(
	gheight
 > 
	gSèckSèts
::
s_maxSèckHeight
) {

193 
SèckSèts
::
s_maxSèckHeight
 = 
height
;

194 
	g√edToLog
 = 
åue
;

198 
	gdiff
 = 
œ°
 - 
cuºít
;

199 i‡(!
	gisGrowögDownw¨d
)

200 
	gdiff
 = -
diff
;

201 i‡(
	gdiff
 > 
	gSèckSèts
::
s_maxCheckPoötDiff
) {

202 
SèckSèts
::
s_maxCheckPoötDiff
 = 
diff
;

203 
	g√edToLog
 = 
åue
;

206 #i‡
ENABLE
(
VERBOSE_STACK_STATS
)

207 
	g√edToLog
 = 
åue
;

210 i‡(
	g√edToLog
)

211 
d©aLogF
(" PROBE %p diff %d/%.1fk/max %.1fk |Ñeentry %d/max %d | height %.1fk/max %.1fk | stack %p size %.1fk\n",

212 
cuºít
, 
diff
, dif‡/ 1024.0, 
SèckSèts
::
s_maxCheckPoötDiff
 / 1024.0,

213 
t
.
m_ªíåyDïth
, 
SèckSèts
::
s_maxRì¡ryDïth
,

214 
height
 / 1024.0, 
SèckSèts
::
s_maxSèckHeight
 / 1024.0,

215 
°ack
.
‹igö
(), sèck.
size
() / 1024.0);

218 
	gSèckSèts
::
LayoutCheckPoöt
::LayoutCheckPoint()

227 
SèckSèts
::
¥obe
();

229 
	g°d
::
lock_gu¨d
<
°d
::
muãx
> 
lock
(*
SèckSèts
::
s_sh¨edMuãx
);

230 
WTFThªadD©a
* 
	gthªadD©a
 = 
c⁄°_ˇ°
<WTFThªadD©a*>(&
wtfThªadD©a
());

231 
	gSèckSèts
::
PîThªadSèts
& 
t
 = 
thªadD©a
->
°ackSèts
();

232 c⁄° 
	gSèckBounds
& 
	g°ack
 = 
thªadD©a
->
°ack
();

234 
boﬁ
 
	gisGrowögDownw¨d
 = 
°ack
.
isGrowögDownw¨d
();

237 
	gm_¥ev
 = 
SèckSèts
::
s_t›LayoutCheckPoöt
;

238 i‡(
	gm_¥ev
)

239 
	gm_dïth
 = 
m_¥ev
->
m_dïth
 + 1;

241 
	gSèckSèts
::
s_fú°LayoutCheckPoöt
 = 
this
;

242 
	gm_dïth
 = 0;

244 
	gSèckSèts
::
s_t›LayoutCheckPoöt
 = 
this
;

247 * 
	gcuºít
 = 
ªöãΩªt_ˇ°
<*>(
this
);

248 * 
	gœ°
 = 
ªöãΩªt_ˇ°
<*>(
m_¥ev
);

249 * 
	groŸ
 = 
ªöãΩªt_ˇ°
<*>(
SèckSèts
::
s_fú°LayoutCheckPoöt
);

250 
boﬁ
 
	g√edToLog
 = 
Ál£
;

252 
	gdiff
 = 
œ°
 - 
cuºít
;

253 i‡(!
	gœ°
)

254 
	gdiff
 = 0;

255 
	gtŸÆDiff
 = 
roŸ
 - 
cuºít
;

256 i‡(!
	groŸ
)

257 
	gtŸÆDiff
 = 0;

260 
	gheight
 = 
t
.
m_°ackSèπ
 - 
cuºít
;

261 i‡(!
	gisGrowögDownw¨d
)

262 
	gheight
 = -
height
;

263 i‡(
	gheight
 > 
	gSèckSèts
::
s_maxSèckHeight
) {

264 
SèckSèts
::
s_maxSèckHeight
 = 
height
;

265 
	g√edToLog
 = 
åue
;

269 i‡(!
	gisGrowögDownw¨d
)

270 
	gdiff
 = -
diff
;

271 i‡(
	gdiff
 > 
	gSèckSèts
::
s_maxLayoutCheckPoötDiff
) {

272 
SèckSèts
::
s_maxLayoutCheckPoötDiff
 = 
diff
;

273 
	g√edToLog
 = 
åue
;

277 i‡(!
	gisGrowögDownw¨d
)

278 
	gtŸÆDiff
 = -
tŸÆDiff
;

279 i‡(
	gtŸÆDiff
 > 
	gSèckSèts
::
s_maxTŸÆLayoutCheckPoötDiff
) {

280 
SèckSèts
::
s_maxTŸÆLayoutCheckPoötDiff
 = 
tŸÆDiff
;

281 
	g√edToLog
 = 
åue
;

284 #i‡
ENABLE
(
VERBOSE_STACK_STATS
)

285 
	g√edToLog
 = 
åue
;

288 i‡(
	g√edToLog
)

289 
d©aLogF
(" LAYOUT %p diff %d/%.1fk/max %.1fk |Ñeentry %d/max %d | height %.1fk/max %.1fk | stack %p size %.1fk\n",

290 
cuºít
, 
diff
, dif‡/ 1024.0, 
SèckSèts
::
s_maxLayoutCheckPoötDiff
 / 1024.0,

291 
m_dïth
, 
SèckSèts
::
s_maxLayoutRì¡ryDïth
,

292 
tŸÆDiff
 / 1024.0, 
SèckSèts
::
s_maxTŸÆLayoutCheckPoötDiff
 / 1024.0,

293 
°ack
.
‹igö
(), sèck.
size
() / 1024.0);

296 
	gSèckSèts
::
LayoutCheckPoöt
::~LayoutCheckPoint()

298 
°d
::
lock_gu¨d
<°d::
muãx
> 
lock
(*
SèckSèts
::
s_sh¨edMuãx
);

301 
	gSèckSèts
::
s_t›LayoutCheckPoöt
 = 
m_¥ev
;

302 i‡(!
	gm_dïth
)

303 
	gSèckSèts
::
s_fú°LayoutCheckPoöt
 = 0;

	@StackStats.h

26 #i‚de‡
SèckSèts_h


27 
	#SèckSèts_h


	)

29 
	~"Exp‹tMa¸os.h
"

30 
	~<muãx
>

43 
	#ENABLE_STACK_STATS
 0

	)

46 
«me•a˚
 
	gWTF
 {

48 #i‡!
ENABLE
(
STACK_STATS
)

50 ˛as†
	cSèckSèts
 {

51 
	gpublic
:

55 ˛as†
	cCheckPoöt
 {

56 
public
:

57 
CheckPoöt
() { }

60 ˛as†
	cPîThªadSèts
 {

61 
	gpublic
:

62 
PîThªadSèts
() { }

65 ˛as†
	cLayoutCheckPoöt
 {

66 
	gpublic
:

67 
LayoutCheckPoöt
() { }

70 
öôülize
() { }

71 
¥obe
() { }

76 ˛as†
	cSèckSèts
 {

77 
	gpublic
:

81 ˛as†
	cCheckPoöt
 {

82 
public
:

83 
CheckPoöt
();

84 ~
CheckPoöt
();

85 
	g¥iv©e
:

86 
CheckPoöt
* 
m_¥ev
;

89 ˛as†
	cPîThªadSèts
 {

90 
	gpublic
:

91 
PîThªadSèts
();

93 
	g¥iv©e
:

94 
m_ªíåyDïth
;

95 * 
	gm_°ackSèπ
;

96 
CheckPoöt
* 
	gm_cuºítCheckPoöt
;

98 
‰õnd
 
˛ass
 
	gCheckPoöt
;

99 
‰õnd
 
˛ass
 
	gSèckSèts
;

102 ˛as†
	cLayoutCheckPoöt
 {

103 
	gpublic
:

104 
WTF_EXPORT_PRIVATE
 
LayoutCheckPoöt
();

105 
	gWTF_EXPORT_PRIVATE
 ~
LayoutCheckPoöt
();

107 
	g¥iv©e
:

108 
LayoutCheckPoöt
* 
m_¥ev
;

109 
	gm_dïth
;

113 
öôülize
();

123 
¥obe
();

125 
	g¥iv©e
:

127 
°d
::
muãx
* 
s_sh¨edMuãx
;

128 
CheckPoöt
* 
	gs_t›CheckPoöt
;

129 
LayoutCheckPoöt
* 
	gs_fú°LayoutCheckPoöt
;

130 
LayoutCheckPoöt
* 
	gs_t›LayoutCheckPoöt
;

133 
	gs_maxCheckPoötDiff
;

134 
	gs_maxSèckHeight
;

135 
	gs_maxRì¡ryDïth
;

137 
	gs_maxLayoutCheckPoötDiff
;

138 
	gs_maxTŸÆLayoutCheckPoötDiff
;

139 
	gs_maxLayoutRì¡ryDïth
;

141 
‰õnd
 
˛ass
 
	gCheckPoöt
;

142 
‰õnd
 
˛ass
 
	gLayoutCheckPoöt
;

149 
usög
 
	gWTF
::
SèckSèts
;

	@StaticConstructors.h

21 #i‚de‡
SèticC⁄°ru˘‹s_h


22 
	#SèticC⁄°ru˘‹s_h


	)

39 #ifde‡
SKIP_STATIC_CONSTRUCTORS_ON_MSVC


48 #¥agm®
w¨nög
(
dißbÀ
:4075)

49 #¥agm®
öô_£g
(".unwantedstaticinits")

52 #i‚de‡
SKIP_STATIC_CONSTRUCTORS_ON_GCC


54 
	#DEFINE_GLOBAL
(
ty≥
, 
«me
, ...) \

55 c⁄° 
ty≥
 
«me
;

	)

60 
	#DEFINE_GLOBAL
(
ty≥
, 
«me
, ...) \

61 * 
«me
[((
ty≥
Ë+ (*Ë- 1Ë/ (*)];

	)

	@StdLibExtras.h

27 #i‚de‡
WTF_StdLibExåas_h


28 
	#WTF_StdLibExåas_h


	)

30 
	~<chr⁄o
>

31 
	~<mem‹y
>

32 
	~<wtf/As£πi⁄s.h
>

33 
	~<wtf/CheckedArôhmëic.h
>

40 #i‚de‡
DEPRECATED_DEFINE_STATIC_LOCAL


41 #i‡
COMPILER
(
GCC
Ë&& 
deföed
(
__APPLE_CC__
Ë&& 
__GNUC__
 =4 && 
__GNUC_MINOR__
 =0 && 
__GNUC_PATCHLEVEL__
 == 1

42 
	#DEPRECATED_DEFINE_STATIC_LOCAL
(
ty≥
, 
«me
, 
¨gumíts
) \

43 
ty≥
* 
«me
##
På
 = 
√w
Åy≥ 
¨gumíts
; \

44 
ty≥
& 
«me
 = *«me##
På


	)

46 
	#DEPRECATED_DEFINE_STATIC_LOCAL
(
ty≥
, 
«me
, 
¨gumíts
) \

47 
ty≥
& 
«me
 = *
√w
Åy≥ 
¨gumíts


	)

54 
	#DEFINE_GLOBAL_FOR_LOGGING
(
ty≥
, 
«me
, 
¨gumíts
) \

55 
	`_Pøgma
("clang diagnosticÖush") \

56 
	`_Pøgma
("clang diagnostic ignored \"-Wglobal-constructors\"") \

57 
	`_Pøgma
("clang diagnostic ignored \"-Wexit-time-destructors\"") \

58 
ty≥
 
«me
 
¨gumíts
; \

59 
	`_Pøgma
("˛™g dügno°i¯p›")

	)

61 #i‚de‡
NDEBUG


62 #i‡
COMPILER
(
CLANG
)

63 
	#DEFINE_DEBUG_ONLY_GLOBAL
(
ty≥
, 
«me
, 
¨gumíts
Ë
	`DEFINE_GLOBAL_FOR_LOGGING
—y≥,Çame,árgumíts)

	)

65 
	#DEFINE_DEBUG_ONLY_GLOBAL
(
ty≥
, 
«me
, 
¨gumíts
) \

66 
ty≥
 
«me
 
¨gumíts
;

	)

69 
	#DEFINE_DEBUG_ONLY_GLOBAL
(
ty≥
, 
«me
, 
¨gumíts
)

	)

75 
	#OBJECT_OFFSETOF
(
˛ass
, 
fõld
Ë(
ªöãΩªt_ˇ°
<
±rdiff_t
>(&‘eöãΩªt_ˇ°<˛ass*>(0x4000)->fõld)Ë- 0x4000)

	)

78 
	#STRINGIZE
(
exp
Ë#exp

	)

79 
	#STRINGIZE_VALUE_OF
(
exp
Ë
	`STRINGIZE
”xp)

	)

91 #i‡(
CPU
(
ARM
Ë|| CPU(
MIPS
)Ë&& 
COMPILER
(
GCC
)

92 
	gãm∂©e
<
ty≥«me
 
	gTy≥
>

93 
ölöe
 
boﬁ
 
	$isPoöãrTy≥AlignmítOkay
(
Ty≥
* 
±r
)

95  !(
ªöãΩªt_ˇ°
<
öçå_t
>(
±r
Ë% 
	`__Æignof__
(
Ty≥
));

96 
	}
}

98 
	gãm∂©e
<
ty≥«me
 
	gTy≥På
>

99 
ölöe
 
Ty≥På
 
	$ªöãΩªt_ˇ°_±r
(* 
±r
)

101 
	`ASSERT
(
	`isPoöãrTy≥AlignmítOkay
(
ªöãΩªt_ˇ°
<
Ty≥På
>(
±r
)));

102  
ªöãΩªt_ˇ°
<
Ty≥På
>(
±r
);

103 
	}
}

105 
	gãm∂©e
<
ty≥«me
 
	gTy≥På
>

106 
ölöe
 
Ty≥På
 
	$ªöãΩªt_ˇ°_±r
(c⁄° * 
±r
)

108 
	`ASSERT
(
	`isPoöãrTy≥AlignmítOkay
(
ªöãΩªt_ˇ°
<
Ty≥På
>(
±r
)));

109  
ªöãΩªt_ˇ°
<
Ty≥På
>(
±r
);

110 
	}
}

112 
	gãm∂©e
<
ty≥«me
 
	gTy≥
>

113 
ölöe
 
boﬁ
 
	$isPoöãrTy≥AlignmítOkay
(
Ty≥
*)

115  
åue
;

116 
	}
}

117 
	#ªöãΩªt_ˇ°_±r
 
ªöãΩªt_ˇ°


	)

120 
«me•a˚
 
	gWTF
 {

122 
	gãm∂©e
<
ty≥«me
 
	gT
>

123 
ALWAYS_INLINE
 
ty≥«me
 
	g°d
::
ªmove_ª„ªn˚
<
T
>::
ty≥
&& 
move
(T&& 
vÆue
)

125 
°©ic_as£π
(
°d
::
is_lvÆue_ª„ªn˚
<
T
>::
vÆue
, "T isÇotánÜvalueÑeference; move() is unnecessary.");

127 
usög
 
	gN⁄RefQuÆifõdTy≥
 = 
ty≥«me
 
°d
::
ªmove_ª„ªn˚
<
T
>::
ty≥
;

128 
°©ic_as£π
(!
°d
::
is_c⁄°
<
N⁄RefQuÆifõdTy≥
>::
vÆue
, "T is const qualified.");

129  
	g°d
::
move
(
vÆue
);

132 c⁄° 
size_t
 
	gKB
 = 1024;

133 c⁄° 
size_t
 
	gMB
 = 1024 * 1024;

135 
ölöe
 
boﬁ
 
isPoöãrAlig√d
(* 
p
)

137  !((
	göçå_t
)(
	gp
) & ((*) - 1));

140 
ölöe
 
boﬁ
 
is8ByãAlig√d
(* 
p
)

142  !((
	guöçå_t
)(
	gp
) & (() - 1));

148 
	gãm∂©e
<
ty≥«me
 
	gToTy≥
,Åy≥«mê
	gFromTy≥
>

149 
ölöe
 
ToTy≥
 
bôwi£_ˇ°
(
FromTy≥
 
‰om
)

151 
°©ic_as£π
((
FromTy≥
Ë=(
ToTy≥
), "bitwise_cast size of FromTypeánd ToType must beÉqual!");

153 
FromTy≥
 
	g‰om
;

154 
ToTy≥
 
	gto
;

155 } 
	gu
;

156 
	gu
.
	g‰om
 = 
‰om
;

157  
	gu
.
	gto
;

160 
	gãm∂©e
<
ty≥«me
 
	gToTy≥
,Åy≥«mê
	gFromTy≥
>

161 
ölöe
 
ToTy≥
 
ß„Ca°
(
FromTy≥
 
vÆue
)

163 
ASSERT
(
isInBounds
<
ToTy≥
>(
vÆue
));

164  
	g°©ic_ˇ°
<
	gToTy≥
>(
	gvÆue
);

168 
ölöe
 
size_t
 
bôCou¡
(
bôs
)

170 
	gbôs
 = 
bôs
 - ((bits >> 1) & 0x55555555);

171 
	gbôs
 = (
bôs
 & 0x33333333) + ((bits >> 2) & 0x33333333);

172  (((
	gbôs
 + (bits >> 4)) & 0xF0F0F0F) * 0x1010101) >> 24;

175 
ölöe
 
size_t
 
bôCou¡
(
uöt64_t
 
bôs
)

177  
bôCou¡
(
°©ic_ˇ°
<>(
bôs
)) + bitCount(static_cast<>(bits >> 32));

181 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gSize
> (&
AºayLígthHñ≥rFun˘i⁄
(
T
 (&)[
Size
]))[Size];

183 #i‡
COMPILER
(
GCC
)

184 
	gãm∂©e
<
ty≥«me
 
	gT
> (&
AºayLígthHñ≥rFun˘i⁄
(
T
 (&)[0]))[0];

186 
	#WTF_ARRAY_LENGTH
(
¨øy
Ë(::
WTF
::
	`AºayLígthHñ≥rFun˘i⁄
◊ºay))

	)

189 
ölöe
 
size_t
 
roundUpToMu…ùÀOf
(size_à
divis‹
, size_à
x
)

191 
ASSERT
(
divis‹
 && !(divisor & (divisor - 1)));

192 
size_t
 
	gªmaödîMask
 = 
divis‹
 - 1;

193  (
	gx
 + 
	gªmaödîMask
) & ~remainderMask;

196 
	gãm∂©e
<
size_t
 
	gdivis‹
> 
ölöe
 size_à
roundUpToMu…ùÀOf
(size_à
x
)

198 
°©ic_as£π
(
divis‹
 && !(divisor & (divisor - 1)), "divisor must beáÖower ofÅwo!");

199  
roundUpToMu…ùÀOf
(
divis‹
, 
x
);

202 
	eBö¨ySórchMode
 {

203 
	gKeyMu°BePª£¡InAºay
,

204 
	gKeyMightNŸBePª£¡InAºay
,

205 
	gRëu∫Adja˚¡EÀmítIfKeyIsNŸPª£¡


208 
	gãm∂©e
<
ty≥«me
 
	gAºayEÀmítTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gAºayTy≥
,Åy≥«mê
	gExåa˘Key
, 
Bö¨ySórchMode
 
	gmode
>

209 
ölöe
 
AºayEÀmítTy≥
* 
bö¨ySórchIm∂
(
AºayTy≥
& 
¨øy
, 
size_t
 
size
, 
KeyTy≥
 
key
, c⁄° 
Exåa˘Key
& 
exåa˘Key
 = ExtractKey())

211 
size_t
 
off£t
 = 0;

212 
	gsize
 > 1) {

213 
size_t
 
	gpos
 = (
size
 - 1) >> 1;

214 
KeyTy≥
 
	gvÆ
 = 
exåa˘Key
(&
¨øy
[
off£t
 + 
pos
]);

216 i‡(
	gvÆ
 =
key
)

217  &
¨øy
[
off£t
 + 
pos
];

220 i‡(
	gkey
 < 
	gvÆ
)

221 
	gsize
 = 
pos
;

224 
	gsize
 -(
pos
 + 1);

225 
	goff£t
 +(
pos
 + 1);

228 
ASSERT
(
mode
 !
KeyMu°BePª£¡InAºay
 || 
size
);

231 i‡(
	gmode
 =
KeyMightNŸBePª£¡InAºay
 && !
size
)

234 
AºayEÀmítTy≥
* 
	gªsu…
 = &
¨øy
[
off£t
];

236 i‡(
	gmode
 =
KeyMightNŸBePª£¡InAºay
 && 
key
 !
exåa˘Key
(
ªsu…
))

239 i‡(
	gmode
 =
KeyMu°BePª£¡InAºay
) {

240 
ASSERT
(
size
 == 1);

241 
ASSERT
(
key
 =
exåa˘Key
(
ªsu…
));

244  
	gªsu…
;

248 
	gãm∂©e
<
ty≥«me
 
	gAºayEÀmítTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gAºayTy≥
,Åy≥«mê
	gExåa˘Key
>

249 
ölöe
 
AºayEÀmítTy≥
* 
bö¨ySórch
(
AºayTy≥
& 
¨øy
, 
size_t
 
size
, 
KeyTy≥
 
key
, 
Exåa˘Key
 
exåa˘Key
 = ExtractKey())

251  
bö¨ySórchIm∂
<
AºayEÀmítTy≥
, 
KeyTy≥
, 
AºayTy≥
, 
Exåa˘Key
, 
KeyMu°BePª£¡InAºay
>(
¨øy
, 
size
, 
key
, 
exåa˘Key
);

255 
	gãm∂©e
<
ty≥«me
 
	gAºayEÀmítTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gAºayTy≥
,Åy≥«mê
	gExåa˘Key
>

256 
ölöe
 
AºayEÀmítTy≥
* 
åyBö¨ySórch
(
AºayTy≥
& 
¨øy
, 
size_t
 
size
, 
KeyTy≥
 
key
, 
Exåa˘Key
 
exåa˘Key
 = ExtractKey())

258  
bö¨ySórchIm∂
<
AºayEÀmítTy≥
, 
KeyTy≥
, 
AºayTy≥
, 
Exåa˘Key
, 
KeyMightNŸBePª£¡InAºay
>(
¨øy
, 
size
, 
key
, 
exåa˘Key
);

262 
	gãm∂©e
<
ty≥«me
 
	gAºayEÀmítTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gAºayTy≥
,Åy≥«mê
	gExåa˘Key
>

263 
ölöe
 
AºayEÀmítTy≥
* 
≠¥oxim©eBö¨ySórch
(
AºayTy≥
& 
¨øy
, 
size_t
 
size
, 
KeyTy≥
 
key
, 
Exåa˘Key
 
exåa˘Key
 = ExtractKey())

265  
bö¨ySórchIm∂
<
AºayEÀmítTy≥
, 
KeyTy≥
, 
AºayTy≥
, 
Exåa˘Key
, 
Rëu∫Adja˚¡EÀmítIfKeyIsNŸPª£¡
>(
¨øy
, 
size
, 
key
, 
exåa˘Key
);

269 
	gãm∂©e
<
ty≥«me
 
	gAºayEÀmítTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gAºayTy≥
,Åy≥«mê
	gExåa˘Key
>

270 
ölöe
 
AºayEÀmítTy≥
* 
bö¨ySórch
(c⁄° 
AºayTy≥
& 
¨øy
, 
size_t
 
size
, 
KeyTy≥
 
key
, 
Exåa˘Key
 
exåa˘Key
 = ExtractKey())

272  
bö¨ySórchIm∂
<
AºayEÀmítTy≥
, 
KeyTy≥
, 
AºayTy≥
, 
Exåa˘Key
, 
KeyMu°BePª£¡InAºay
>(
c⁄°_ˇ°
<AºayTy≥&>(
¨øy
), 
size
, 
key
, 
exåa˘Key
);

274 
	gãm∂©e
<
ty≥«me
 
	gAºayEÀmítTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gAºayTy≥
,Åy≥«mê
	gExåa˘Key
>

275 
ölöe
 
AºayEÀmítTy≥
* 
åyBö¨ySórch
(c⁄° 
AºayTy≥
& 
¨øy
, 
size_t
 
size
, 
KeyTy≥
 
key
, 
Exåa˘Key
 
exåa˘Key
 = ExtractKey())

277  
bö¨ySórchIm∂
<
AºayEÀmítTy≥
, 
KeyTy≥
, 
AºayTy≥
, 
Exåa˘Key
, 
KeyMightNŸBePª£¡InAºay
>(
c⁄°_ˇ°
<AºayTy≥&>(
¨øy
), 
size
, 
key
, 
exåa˘Key
);

279 
	gãm∂©e
<
ty≥«me
 
	gAºayEÀmítTy≥
,Åy≥«mê
	gKeyTy≥
,Åy≥«mê
	gAºayTy≥
,Åy≥«mê
	gExåa˘Key
>

280 
ölöe
 
AºayEÀmítTy≥
* 
≠¥oxim©eBö¨ySórch
(c⁄° 
AºayTy≥
& 
¨øy
, 
size_t
 
size
, 
KeyTy≥
 
key
, 
Exåa˘Key
 
exåa˘Key
 = ExtractKey())

282  
bö¨ySórchIm∂
<
AºayEÀmítTy≥
, 
KeyTy≥
, 
AºayTy≥
, 
Exåa˘Key
, 
Rëu∫Adja˚¡EÀmítIfKeyIsNŸPª£¡
>(
c⁄°_ˇ°
<AºayTy≥&>(
¨øy
), 
size
, 
key
, 
exåa˘Key
);

285 
	gãm∂©e
<
ty≥«me
 
	gVe˘‹Ty≥
,Åy≥«mê
	gEÀmítTy≥
>

286 
ölöe
 
ö£πI¡oBoundedVe˘‹
(
Ve˘‹Ty≥
& 
ve˘‹
, 
size_t
 
size
, c⁄° 
EÀmítTy≥
& 
ñemít
, size_à
ödex
)

288 
size_t
 
	gi
 = 
size
; i-- > 
	gödex
 + 1;)

289 
	gve˘‹
[
i
] = 
ve˘‹
[i - 1];

290 
	gve˘‹
[
ödex
] = 
ñemít
;

296 
WTF_EXPORT_PRIVATE
 
boﬁ
 
isCompû©i⁄Thªad
();

301 
	eNŸNuŒTag
 { 
	mNŸNuŒ
 };

302 
ölöe
 * 
›î©‹
 
	$√w
(
size_t
, 
NŸNuŒTag
, * 
loˇti⁄
)

304 
	`ASSERT
(
loˇti⁄
);

305  
loˇti⁄
;

306 
	}
}

308 #i‡(
COMPILER
(
GCC
Ë&& !COMPILER(
CLANG
Ë&& !
GCC_VERSION_AT_LEAST
(4, 8, 1))

311 
«me•a˚
 
	g°d
 {

312 
	gãm∂©e
<
˛ass
 
	gT
> 
	sis_åivüŒy_de°ru˘ibÀ
 {

313 c⁄° 
boﬁ
 
	gvÆue
 = 
°d
::
has_åivül_de°ru˘‹
<
T
>::
vÆue
;

319 
«me•a˚
 
	g°d
 {

321 #i‡!
deföed
(
_MSC_VER
) || _MSC_VER < 1800

322 
	gãm∂©e
<
˛ass
 
	gT
> 
	s_Unique_if
 {

323 
	gunique_±r
<
	tT
> 
	t_SögÀ_obje˘
;

326 
	gãm∂©e
<
˛ass
 
	gT
> 
	g_Unique_if
<T[]> {

327 
	gunique_±r
<
	tT
[]> 
	t_Unknown_bound
;

330 
	gãm∂©e
<
˛ass
 
	gT
, 
size_t
 
	gN
> 
	g_Unique_if
<T[
N
]> {

331 
	t_Known_bound
;

334 
	gãm∂©e
<
˛ass
 
	gT
, 
	g˛ass
... 
	gArgs
> 
ölöe
 
ty≥«me
 
	g_Unique_if
<T>::
_SögÀ_obje˘


335 
make_unique
(
Args
&&... 
¨gs
)

337  
unique_±r
<
T
>(
√w
 T(
°d
::
f‹w¨d
<
Args
>(
¨gs
)...));

340 
	gãm∂©e
<
˛ass
 
	gT
> 
ölöe
 
ty≥«me
 
	g_Unique_if
<T>::
_Unknown_bound


341 
make_unique
(
size_t
 
n
)

343 
ty≥«me
 
	tªmove_exã¡
<
	tT
>::
	tty≥
 
	tU
;

344  
	gunique_±r
<
	gT
>(
√w
 
	gU
[
n
]());

347 
	gãm∂©e
<
˛ass
 
	gT
, 
	g˛ass
... 
	gArgs
> 
ty≥«me
 
	g_Unique_if
<T>::
_Known_bound


348 
make_unique
(
Args
&&...Ë
dñëe
;

354 
	gãm∂©e
<
	gsize_t
... 
	gödexes
> 
	södex_£quí˚
 {

355 
size_t
 
size
(Ë{  ...(
	gödexes
); }

358 
	gãm∂©e
<
size_t
 
	gcuºítIndex
, 
	gsize_t
...
	gödexes
> 
	gmake_ödex_£quí˚_hñ≥r
;

360 
	gãm∂©e
<
	gsize_t
...
	gödexes
> 
	gmake_ödex_£quí˚_hñ≥r
<0, indexes...> {

361 
	g°d
::
	tödex_£quí˚
<
	tödexes
...> 
	tty≥
;

364 
	gãm∂©e
<
size_t
 
	gcuºítIndex
, 
	gsize_t
...
	gödexes
> 
	smake_ödex_£quí˚_hñ≥r
 {

365 
ty≥«me
 
	tmake_ödex_£quí˚_hñ≥r
<
	tcuºítIndex
 - 1, cuºítIndex - 1, 
	tödexes
...>::
	tty≥
Åype;

368 
	gãm∂©e
<
size_t
 
	gÀngth
> 
	gmake_ödex_£quí˚
 : 
public
 
make_ödex_£quí˚_hñ≥r
<
Àngth
>::
ty≥
 { };

370 #i‡
COMPILER_SUPPORTS
(
CXX_USER_LITERALS
)

373 
«me•a˚
 
	glôîÆs
 {

374 
«me•a˚
 
	gchr⁄o_lôîÆs
 {

375 
CONSTEXPR
 
ölöe
 
	gchr⁄o
::
£c⁄ds
 
›î©‹
"" 
_s
(
s
)

377  
chr⁄o
::
£c⁄ds
(
°©ic_ˇ°
<chr⁄o::£c⁄ds::
ªp
>(
s
));

380 
CONSTEXPR
 
	gchr⁄o
::
mûli£c⁄ds
 
›î©‹
"" 
_ms
(
ms
)

382  
chr⁄o
::
mûli£c⁄ds
(
°©ic_ˇ°
<chr⁄o::mûli£c⁄ds::
ªp
>(
ms
));

389 
usög
 
	gWTF
::
KB
;

390 
usög
 
	gWTF
::
MB
;

391 
usög
 
	gWTF
::
isCompû©i⁄Thªad
;

392 
usög
 
	gWTF
::
ö£πI¡oBoundedVe˘‹
;

393 
usög
 
	gWTF
::
isPoöãrAlig√d
;

394 
usög
 
	gWTF
::
is8ByãAlig√d
;

395 
usög
 
	gWTF
::
bö¨ySórch
;

396 
usög
 
	gWTF
::
åyBö¨ySórch
;

397 
usög
 
	gWTF
::
≠¥oxim©eBö¨ySórch
;

398 
usög
 
	gWTF
::
bôwi£_ˇ°
;

399 
usög
 
	gWTF
::
ß„Ca°
;

401 #i‡
COMPILER_SUPPORTS
(
CXX_USER_LITERALS
)

403 
usög
 
«me•a˚
 
	g°d
::
lôîÆs
::
chr⁄o_lôîÆs
;

	@StreamBuffer.h

31 #i‚de‡
WTF_SåómBuf„r_h


32 
	#WTF_SåómBuf„r_h


	)

34 
	~<wtf/Deque.h
>

36 
«me•a˚
 
	gWTF
 {

38 
	gãm∂©e
 <
ty≥«me
 
	gT
, 
size_t
 
	gBlockSize
> cœs†
	cSåómBuf„r
 {

39 
	g¥iv©e
:

40 
Ve˘‹
<
	tT
> 
	tBlock
;

41 
	gpublic
:

42 
SåómBuf„r
()

43 : 
m_size
(0)

44 , 
m_ªadOff£t
(0)

48 ~
SåómBuf„r
()

52 
boﬁ
 
isEm±y
(Ëc⁄° {  !
size
(); }

54 
≠≥nd
(c⁄° 
T
* 
d©a
, 
size_t
 
size
)

56 i‡(!
	gsize
)

59 
	gm_size
 +
size
;

60 
	gsize
) {

61 i‡(!
	gm_buf„r
.
size
(Ë|| m_buf„r.
œ°
()->size(Ë=
BlockSize
)

62 
m_buf„r
.
≠≥nd
(
°d
::
make_unique
<
Block
>());

63 
size_t
 
	g≠≥ndSize
 = 
°d
::
mö
(
BlockSize
 - 
m_buf„r
.
œ°
()->
size
(), size);

64 
	gm_buf„r
.
œ°
()->
≠≥nd
(
d©a
, 
≠≥ndSize
);

65 
	gd©a
 +
≠≥ndSize
;

66 
	gsize
 -
≠≥ndSize
;

72 
c⁄sume
(
size_t
 
size
)

74 
ASSERT
(
m_size
 >
size
);

75 i‡(!
	gm_size
)

78 
ASSERT
(
m_buf„r
.
size
() > 0);

79 
ASSERT
(
m_ªadOff£t
 + 
size
 <
m_buf„r
.
fú°
()->size());

80 
	gm_ªadOff£t
 +
size
;

81 
	gm_size
 -
size
;

82 i‡(
	gm_ªadOff£t
 >
m_buf„r
.
fú°
()->
size
()) {

83 
m_ªadOff£t
 = 0;

84 
	gm_buf„r
.
ªmoveFú°
();

88 
size_t
 
size
(Ëc⁄° {  
	gm_size
; }

90 c⁄° 
T
* 
fú°BlockD©a
() const

92 i‡(!
	gm_size
)

94 
ASSERT
(
m_buf„r
.
size
() > 0);

95  &
	gm_buf„r
.
fú°
()->
d©a
()[
m_ªadOff£t
];

98 
size_t
 
fú°BlockSize
() const

100 i‡(!
	gm_size
)

102 
ASSERT
(
m_buf„r
.
size
() > 0);

103  
	gm_buf„r
.
fú°
()->
size
(Ë- 
	gm_ªadOff£t
;

106 
	g¥iv©e
:

107 
size_t
 
m_size
;

108 
size_t
 
	gm_ªadOff£t
;

109 
	gDeque
<
	g°d
::
unique_±r
<
Block
>> 
m_buf„r
;

114 
usög
 
	gWTF
::
SåómBuf„r
;

	@StringExtras.h

26 #i‚de‡
WTF_SåögExåas_h


27 
	#WTF_SåögExåas_h


	)

29 
	~<°d¨g.h
>

30 
	~<°dio.h
>

31 
	~<°rög.h
>

33 #i‡
HAVE
(
STRINGS_H
)

34 
	~<°rögs.h
>

37 #i‡
COMPILER
(
MSVC
)

40 
ölöe
 
	$¢¥ötf
(* 
buf„r
, 
size_t
 
cou¡
, c⁄° * 
f‹m©
, ...)

42 
ªsu…
;

43 
va_li°
 
¨gs
;

44 
	`va_°¨t
(
¨gs
, 
f‹m©
);

45 
ªsu…
 = 
	`_v¢¥ötf
(
buf„r
, 
cou¡
, 
f‹m©
, 
¨gs
);

46 
	`va_íd
(
¨gs
);

50 i‡(
cou¡
 > 0)

51 
buf„r
[
cou¡
 - 1] = '\0';

53  
ªsu…
;

54 
	}
}

56 
ölöe
 
	$wtf_v¢¥ötf
(* 
buf„r
, 
size_t
 
cou¡
, c⁄° * 
f‹m©
, 
va_li°
 
¨gs
)

58 
ªsu…
 = 
	`_v¢¥ötf
(
buf„r
, 
cou¡
, 
f‹m©
, 
¨gs
);

62 i‡(
cou¡
 > 0)

63 
buf„r
[
cou¡
 - 1] = '\0';

65  
ªsu…
;

66 
	}
}

70 
	#v¢¥ötf
(
buf„r
, 
cou¡
, 
f‹m©
, 
¨gs
Ë
	`wtf_v¢¥ötf
(buf„r, cou¡, f‹m©,árgs)

	)

72 
ölöe
 
	$°∫ˇ£cmp
(c⁄° * 
s1
, c⁄° * 
s2
, 
size_t
 
Àn
)

74  
	`_°∫icmp
(
s1
, 
s2
, 
Àn
);

75 
	}
}

77 
ölöe
 
	$°rˇ£cmp
(c⁄° * 
s1
, c⁄° * 
s2
)

79  
	`_°ricmp
(
s1
, 
s2
);

80 
	}
}

84 #i‡!
HAVE
(
STRNSTR
)

86 
ölöe
 * 
	$°∫°r
(c⁄° * 
buf„r
, c⁄° * 
èrgë
, 
size_t
 
buf„rLígth
)

88 
size_t
 
èrgëLígth
 = 
	`°æí
(
èrgë
);

89 i‡(
èrgëLígth
 == 0)

90  
c⁄°_ˇ°
<*>(
buf„r
);

91 c⁄° * 
°¨t
 = 
buf„r
; *°¨à&& sèπ + 
èrgëLígth
 <buf„∏+ 
buf„rLígth
; start++) {

92 i‡(*
°¨t
 =*
èrgë
 && 
	`°∫cmp
(°¨à+ 1,Å¨gë + 1, 
èrgëLígth
 - 1) == 0)

93  
c⁄°_ˇ°
<*>(
°¨t
);

96 
	}
}

	@StringHashDumpContext.h

26 #i‚de‡
SåögHashDumpC⁄ãxt_h


27 
	#SåögHashDumpC⁄ãxt_h


	)

29 
	~<wtf/HashM≠.h
>

30 
	~<wtf/SixCh¨a˘îHash.h
>

31 
	~<wtf/StdLibExåas.h
>

32 
	~<wtf/SåögPrötSåóm.h
>

33 
	~<wtf/ãxt/CSåög.h
>

35 
«me•a˚
 
	gWTF
 {

37 
	gãm∂©e
<
ty≥«me
 
	gT
>

38 ˛as†
	cSåögHashDumpC⁄ãxt
 {

39 
	gpublic
:

40 
SåögHashDumpC⁄ãxt
() { }

42 
CSåög
 
gëID
(c⁄° 
T
* 
vÆue
)

44 
ty≥«me
 
HashM≠
<c⁄° 
T
*, 
	gCSåög
>::
ôî©‹
 
ôî
 = 
m_f‹w¨dM≠
.
föd
(
vÆue
);

45 i‡(
	gôî
 !
m_f‹w¨dM≠
.
íd
())

46  
ôî
->
vÆue
;

48 
	ghashVÆue
 = 
toCSåög
(*
vÆue
).
hash
(); ; hashValue++) {

49 
CSåög
 
	gfuŒHash
 = 
öãgîToSixCh¨a˘îHashSåög
(
hashVÆue
).
d©a
();

51 
	gÀngth
 = 2;Üength < 6; ++length) {

52 
CSåög
 
	gsh‹tHash
 = CSåög(
fuŒHash
.
d©a
(), 
Àngth
);

53 i‡(!
	gm_backw¨dM≠
.
c⁄èös
(
sh‹tHash
)) {

54 
	gm_f‹w¨dM≠
.
add
(
vÆue
, 
sh‹tHash
);

55 
	gm_backw¨dM≠
.
add
(
sh‹tHash
, 
vÆue
);

56  
	gsh‹tHash
;

62 
dumpBrõf
(c⁄° 
T
* 
vÆue
, 
PrötSåóm
& 
out
)

64 
	gvÆue
->
dumpBrõf
(
out
, 
gëID
(
vÆue
));

67 
CSåög
 
brõf
(c⁄° 
T
* 
vÆue
)

69 
SåögPrötSåóm
 
	gout
;

70 
dumpBrõf
(
vÆue
, 
out
);

71  
	gout
.
toCSåög
();

74 
boﬁ
 
isEm±y
(Ëc⁄° {  
	gm_f‹w¨dM≠
.isEmpty(); }

76 
dump
(
PrötSåóm
& 
out
, c⁄° * 
¥efix
 = "") const

78 
out
.
¥öt
(
¥efix
);

79 
	gT
::
dumpC⁄ãxtHódî
(
out
);

80 
	gout
.
¥öt
("\n");

82 
	gVe˘‹
<
	gCSåög
> 
	gkeys
;

83 
	gmaxKeySize
 = 0;

85 
ty≥«me
 
	gHashM≠
<
	gCSåög
, c⁄° 
	gT
*>::
c⁄°_ôî©‹
 
ôî
 = 
m_backw¨dM≠
.
begö
();

86 
	gôî
 !
m_backw¨dM≠
.
íd
();

87 ++
	gôî
) {

88 
	gkeys
.
≠≥nd
(
ôî
->
key
);

89 
	gmaxKeySize
 = 
°d
::
max
(
maxKeySize
, 
°©ic_ˇ°
<>(
brõf
(
ôî
->
vÆue
, iãr->
key
).
Àngth
()));

92 
	g°d
::
s‹t
(
keys
.
begö
(), keys.
íd
());

94 
	gi
 = 0; i < 
	gkeys
.
size
(); ++i) {

95 c⁄° 
T
* 
	gvÆue
 = 
m_backw¨dM≠
.
gë
(
keys
[
i
]);

96 
	gout
.
¥öt
(
¥efix
, " ");

97 
CSåög
 
	gbrõfSåög
 = 
brõf
(
vÆue
, 
keys
[
i
]);

98 
	gout
.
¥öt
(
brõfSåög
);

99 
	gn
 = 
brõfSåög
.
Àngth
();Ç < 
	gmaxKeySize
; ++n)

100 
	gout
.
¥öt
(" ");

101 
	gout
.
¥öt
(" = ", *
vÆue
, "\n");

105 
	gpublic
:

106 
CSåög
 
brõf
(c⁄° 
T
* 
vÆue
, c⁄° CSåög& 
°rög
)

108 
SåögPrötSåóm
 
	gout
;

109 
	gvÆue
->
dumpBrõf
(
out
, 
°rög
);

110  
	gout
.
toCSåög
();

113 
	gHashM≠
<c⁄° 
	gT
*, 
	gCSåög
> 
	gm_f‹w¨dM≠
;

114 
	gHashM≠
<
	gCSåög
, c⁄° 
	gT
*> 
	gm_backw¨dM≠
;

119 
usög
 
	gWTF
::
SåögHashDumpC⁄ãxt
;

	@StringHasher.h

22 #i‚de‡
WTF_SåögHashî_h


23 
	#WTF_SåögHashî_h


	)

25 
	~<unicode/uty≥s.h
>

26 
	~<wtf/ãxt/LCh¨.h
>

28 
«me•a˚
 
	gWTF
 {

39 c⁄° 
	g°rögHashögSèπVÆue
 = 0x9E3779B9U;

41 ˛as†
	cSåögHashî
 {

42 
	gpublic
:

43 c⁄° 
ÊagCou¡
 = 8;

45 
SåögHashî
()

46 : 
m_hash
(
°rögHashögSèπVÆue
)

47 , 
m_hasPídögCh¨a˘î
(
Ál£
)

48 , 
m_≥ndögCh¨a˘î
(0)

55 
addCh¨a˘îsAssumögAlig√d
(
UCh¨
 
a
, UCh¨ 
b
)

57 
ASSERT
(!
m_hasPídögCh¨a˘î
);

58 
	gm_hash
 +
a
;

59 
	gm_hash
 = (
m_hash
 << 16Ë^ ((
b
 << 11) ^ m_hash);

60 
	gm_hash
 +
m_hash
 >> 11;

63 
addCh¨a˘î
(
UCh¨
 
ch¨a˘î
)

65 i‡(
	gm_hasPídögCh¨a˘î
) {

66 
	gm_hasPídögCh¨a˘î
 = 
Ál£
;

67 
addCh¨a˘îsAssumögAlig√d
(
m_≥ndögCh¨a˘î
, 
ch¨a˘î
);

71 
	gm_≥ndögCh¨a˘î
 = 
ch¨a˘î
;

72 
	gm_hasPídögCh¨a˘î
 = 
åue
;

75 
addCh¨a˘îs
(
UCh¨
 
a
, UCh¨ 
b
)

77 i‡(
	gm_hasPídögCh¨a˘î
) {

78 #i‡!
ASSERT_DISABLED


79 
	gm_hasPídögCh¨a˘î
 = 
Ál£
;

81 
addCh¨a˘îsAssumögAlig√d
(
m_≥ndögCh¨a˘î
, 
a
);

82 
	gm_≥ndögCh¨a˘î
 = 
b
;

83 #i‡!
ASSERT_DISABLED


84 
	gm_hasPídögCh¨a˘î
 = 
åue
;

89 
addCh¨a˘îsAssumögAlig√d
(
a
, 
b
);

92 
	gãm∂©e
<
ty≥«me
 
	gT
, 
UCh¨
 
C⁄vîãr
(
T
)> 
addCh¨a˘îsAssumögAlig√d
(c⁄° T* 
d©a
, 
Àngth
)

94 
ASSERT
(!
m_hasPídögCh¨a˘î
);

96 
boﬁ
 
	gªmaödî
 = 
Àngth
 & 1;

97 
	gÀngth
 >>= 1;

99 
	gÀngth
--) {

100 
addCh¨a˘îsAssumögAlig√d
(
C⁄vîãr
(
d©a
[0]), Converter(data[1]));

101 
	gd©a
 += 2;

104 i‡(
	gªmaödî
)

105 
addCh¨a˘î
(
C⁄vîãr
(*
d©a
));

108 
	gãm∂©e
<
ty≥«me
 
	gT
> 
addCh¨a˘îsAssumögAlig√d
(c⁄° 
T
* 
d©a
, 
Àngth
)

110 
	gaddCh¨a˘îsAssumögAlig√d
<
	gT
, 
	gdeÁu…C⁄vîãr
>(
	gd©a
, 
	gÀngth
);

113 
	gãm∂©e
<
ty≥«me
 
	gT
, 
UCh¨
 
C⁄vîãr
(
T
)> 
addCh¨a˘îsAssumögAlig√d
(c⁄° T* 
d©a
)

115 
ASSERT
(!
m_hasPídögCh¨a˘î
);

117 
T
 
	ga
 = *
d©a
++) {

118 
T
 
b
 = *
d©a
++;

119 i‡(!
	gb
) {

120 
addCh¨a˘î
(
C⁄vîãr
(
a
));

123 
addCh¨a˘îsAssumögAlig√d
(
C⁄vîãr
(
a
), C⁄vîãr(
b
));

127 
	gãm∂©e
<
ty≥«me
 
	gT
> 
addCh¨a˘îsAssumögAlig√d
(c⁄° 
T
* 
d©a
)

129 
	gaddCh¨a˘îsAssumögAlig√d
<
	gT
, 
	gdeÁu…C⁄vîãr
>(
	gd©a
);

132 
	gãm∂©e
<
ty≥«me
 
	gT
, 
UCh¨
 
C⁄vîãr
(
T
)> 
addCh¨a˘îs
(c⁄° T* 
d©a
, 
Àngth
)

134 i‡(
	gm_hasPídögCh¨a˘î
 && 
	gÀngth
) {

135 
	gm_hasPídögCh¨a˘î
 = 
Ál£
;

136 
addCh¨a˘îsAssumögAlig√d
(
m_≥ndögCh¨a˘î
, 
C⁄vîãr
(*
d©a
++));

137 --
	gÀngth
;

139 
	gaddCh¨a˘îsAssumögAlig√d
<
	gT
, 
	gC⁄vîãr
>(
	gd©a
, 
	gÀngth
);

142 
	gãm∂©e
<
ty≥«me
 
	gT
> 
addCh¨a˘îs
(c⁄° 
T
* 
d©a
, 
Àngth
)

144 
	gaddCh¨a˘îs
<
	gT
, 
	gdeÁu…C⁄vîãr
>(
	gd©a
, 
	gÀngth
);

147 
	gãm∂©e
<
ty≥«me
 
	gT
, 
UCh¨
 
C⁄vîãr
(
T
)> 
addCh¨a˘îs
(c⁄° T* 
d©a
)

149 i‡(
	gm_hasPídögCh¨a˘î
 && *
	gd©a
) {

150 
	gm_hasPídögCh¨a˘î
 = 
Ál£
;

151 
addCh¨a˘îsAssumögAlig√d
(
m_≥ndögCh¨a˘î
, 
C⁄vîãr
(*
d©a
++));

153 
	gaddCh¨a˘îsAssumögAlig√d
<
	gT
, 
	gC⁄vîãr
>(
	gd©a
);

156 
	gãm∂©e
<
ty≥«me
 
	gT
> 
addCh¨a˘îs
(c⁄° 
T
* 
d©a
)

158 
	gaddCh¨a˘îs
<
	gT
, 
	gdeÁu…C⁄vîãr
>(
	gd©a
);

161 
hashWôhT›8BôsMasked
() const

163 
	gªsu…
 = 
avÆ™cheBôs
();

167 
	gªsu…
 &(1U << ((
ªsu…
Ë* 8 - 
ÊagCou¡
)) - 1;

173 i‡(!
	gªsu…
)

174 
	gªsu…
 = 0x80000000 >> 
ÊagCou¡
;

176  
	gªsu…
;

179 
hash
() const

181 
	gªsu…
 = 
avÆ™cheBôs
();

187 i‡(!
	gªsu…
)

188 
	gªsu…
 = 0x80000000;

190  
	gªsu…
;

193 
	gãm∂©e
<
ty≥«me
 
	gT
, 
UCh¨
 
C⁄vîãr
(
T
)> 
compuãHashAndMaskT›8Bôs
(c⁄° T* 
d©a
, 
Àngth
)

195 
SåögHashî
 
	ghashî
;

196 
	ghashî
.
	gaddCh¨a˘îsAssumögAlig√d
<
	gT
, 
	gC⁄vîãr
>(
	gd©a
, 
	gÀngth
);

197  
	ghashî
.
hashWôhT›8BôsMasked
();

200 
	gãm∂©e
<
ty≥«me
 
	gT
, 
UCh¨
 
C⁄vîãr
(
T
)> 
compuãHashAndMaskT›8Bôs
(c⁄° T* 
d©a
)

202 
SåögHashî
 
	ghashî
;

203 
	ghashî
.
	gaddCh¨a˘îsAssumögAlig√d
<
	gT
, 
	gC⁄vîãr
>(
	gd©a
);

204  
	ghashî
.
hashWôhT›8BôsMasked
();

207 
	gãm∂©e
<
ty≥«me
 
	gT
> 
compuãHashAndMaskT›8Bôs
(c⁄° 
T
* 
d©a
, 
Àngth
)

209  
	gcompuãHashAndMaskT›8Bôs
<
	gT
, 
	gdeÁu…C⁄vîãr
>(
	gd©a
, 
	gÀngth
);

212 
	gãm∂©e
<
ty≥«me
 
	gT
> 
compuãHashAndMaskT›8Bôs
(c⁄° 
T
* 
d©a
)

214  
	gcompuãHashAndMaskT›8Bôs
<
	gT
, 
	gdeÁu…C⁄vîãr
>(
	gd©a
);

217 
	gãm∂©e
<
ty≥«me
 
	gT
, 
UCh¨
 
C⁄vîãr
(
T
)> 
compuãHash
(c⁄° T* 
d©a
, 
Àngth
)

219 
SåögHashî
 
	ghashî
;

220 
	ghashî
.
	gaddCh¨a˘îsAssumögAlig√d
<
	gT
, 
	gC⁄vîãr
>(
	gd©a
, 
	gÀngth
);

221  
	ghashî
.
hash
();

224 
	gãm∂©e
<
ty≥«me
 
	gT
, 
UCh¨
 
C⁄vîãr
(
T
)> 
compuãHash
(c⁄° T* 
d©a
)

226 
SåögHashî
 
	ghashî
;

227 
	ghashî
.
	gaddCh¨a˘îsAssumögAlig√d
<
	gT
, 
	gC⁄vîãr
>(
	gd©a
);

228  
	ghashî
.
hash
();

231 
	gãm∂©e
<
ty≥«me
 
	gT
> 
compuãHash
(c⁄° 
T
* 
d©a
, 
Àngth
)

233  
	gcompuãHash
<
	gT
, 
	gdeÁu…C⁄vîãr
>(
	gd©a
, 
	gÀngth
);

236 
	gãm∂©e
<
ty≥«me
 
	gT
> 
compuãHash
(c⁄° 
T
* 
d©a
)

238  
	gcompuãHash
<
	gT
, 
	gdeÁu…C⁄vîãr
>(
	gd©a
);

241 
hashMem‹y
(c⁄° * 
d©a
, 
Àngth
)

246 
ASSERT
(!(
Àngth
 % 2));

247  
	gcompuãHashAndMaskT›8Bôs
<
	gUCh¨
>(
	g°©ic_ˇ°
<c⁄° UCh¨*>(
	gd©a
), 
	gÀngth
 / (UChar));

250 
	gãm∂©e
<
size_t
 
	gÀngth
> 
hashMem‹y
(c⁄° * 
d©a
)

252 
°©ic_as£π
(!(
Àngth
 % 2), "length must beá multiple ofÅwo!");

253  
hashMem‹y
(
d©a
, 
Àngth
);

256 
	g¥iv©e
:

257 
UCh¨
 
deÁu…C⁄vîãr
(UCh¨ 
ch¨a˘î
)

259  
ch¨a˘î
;

262 
UCh¨
 
deÁu…C⁄vîãr
(
LCh¨
 
ch¨a˘î
)

264  
	gch¨a˘î
;

267 
avÆ™cheBôs
() const

269 
	gªsu…
 = 
m_hash
;

272 i‡(
	gm_hasPídögCh¨a˘î
) {

273 
	gªsu…
 +
m_≥ndögCh¨a˘î
;

274 
	gªsu…
 ^
ªsu…
 << 11;

275 
	gªsu…
 +
ªsu…
 >> 17;

279 
	gªsu…
 ^
ªsu…
 << 3;

280 
	gªsu…
 +
ªsu…
 >> 5;

281 
	gªsu…
 ^
ªsu…
 << 2;

282 
	gªsu…
 +
ªsu…
 >> 15;

283 
	gªsu…
 ^
ªsu…
 << 10;

285  
	gªsu…
;

288 
	gm_hash
;

289 
boﬁ
 
	gm_hasPídögCh¨a˘î
;

290 
UCh¨
 
	gm_≥ndögCh¨a˘î
;

295 
usög
 
	gWTF
::
SåögHashî
;

	@StringPrintStream.cpp

26 
	~"c⁄fig.h
"

27 
	~"SåögPrötSåóm.h
"

29 
	~<°d¨g.h
>

30 
	~<°dio.h
>

31 
	~<wtf/Fa°MÆloc.h
>

32 
	~<wtf/SåögExåas.h
>

34 
«me•a˚
 
	gWTF
 {

36 
	gSåögPrötSåóm
::
SåögPrötSåóm
()

37 : 
m_buf„r
(
m_ölöeBuf„r
)

38 , 
m_√xt
(0)

39 , 
m_size
((
m_ölöeBuf„r
))

41 
	gm_buf„r
[0] = 0;

44 
	gSåögPrötSåóm
::~
SåögPrötSåóm
()

46 i‡(
m_buf„r
 =
m_ölöeBuf„r
)

48 
Á°Fªe
(
m_buf„r
);

51 
	gSåögPrötSåóm
::
v¥ötf
(c⁄° * 
f‹m©
, 
va_li°
 
¨gLi°
)

53 
ASSERT_WITH_SECURITY_IMPLICATION
(
m_√xt
 < 
m_size
);

54 
ASSERT
(!
m_buf„r
[
m_√xt
]);

56 
va_li°
 
	gfú°PassArgLi°
;

57 
va_c›y
(
fú°PassArgLi°
, 
¨gLi°
);

59 
	gnumbîOfByãsNŸIn˛udögTîmö©‹Th©WouldHaveBìnWrôãn
 =

60 
v¢¥ötf
(
m_buf„r
 + 
m_√xt
, 
m_size
 - m_√xt, 
f‹m©
, 
fú°PassArgLi°
);

62 
	gnumbîOfByãsTh©WouldHaveBìnWrôãn
 =

63 
numbîOfByãsNŸIn˛udögTîmö©‹Th©WouldHaveBìnWrôãn
 + 1;

65 i‡(
	gm_√xt
 + 
	gnumbîOfByãsTh©WouldHaveBìnWrôãn
 <
m_size
) {

66 
m_√xt
 +
numbîOfByãsNŸIn˛udögTîmö©‹Th©WouldHaveBìnWrôãn
;

70 
ö¸ó£Size
(
m_√xt
 + 
numbîOfByãsTh©WouldHaveBìnWrôãn
);

72 
	gnumbîOfByãsNŸIn˛udögTîmö©‹Th©WîeWrôãn
 =

73 
v¢¥ötf
(
m_buf„r
 + 
m_√xt
, 
m_size
 - m_√xt, 
f‹m©
, 
¨gLi°
);

75 
	gnumbîOfByãsTh©WîeWrôãn
 = 
numbîOfByãsNŸIn˛udögTîmö©‹Th©WîeWrôãn
 + 1;

77 
ASSERT_UNUSED
(
numbîOfByãsTh©WîeWrôãn
, 
m_√xt
 +ÇumbîOfByãsTh©WîeWrôã¿<
m_size
);

79 
	gm_√xt
 +
numbîOfByãsNŸIn˛udögTîmö©‹Th©WîeWrôãn
;

81 
ASSERT_WITH_SECURITY_IMPLICATION
(
m_√xt
 < 
m_size
);

82 
ASSERT
(!
m_buf„r
[
m_√xt
]);

85 
CSåög
 
	gSåögPrötSåóm
::
toCSåög
()

87 
ASSERT
(
m_√xt
 =
°æí
(
m_buf„r
));

88  
CSåög
(
m_buf„r
, 
m_√xt
);

91 
	gSåögPrötSåóm
::
ª£t
()

93 
m_√xt
 = 0;

94 
	gm_buf„r
[0] = 0;

97 
Såög
 
	gSåögPrötSåóm
::
toSåög
()

99 
ASSERT
(
m_√xt
 =
°æí
(
m_buf„r
));

100  
	gSåög
::
‰omUTF8
(
m_buf„r
, 
m_√xt
);

103 
	gSåögPrötSåóm
::
ö¸ó£Size
(
size_t
 
√wSize
)

105 
ASSERT_WITH_SECURITY_IMPLICATION
(
√wSize
 > 
m_size
);

106 
ASSERT
(
√wSize
 > (
m_ölöeBuf„r
));

109 
	gm_size
 = 
√wSize
 << 1;

114 * 
	g√wBuf„r
 = 
°©ic_ˇ°
<*>(
Á°MÆloc
(
m_size
));

115 
mem˝y
(
√wBuf„r
, 
m_buf„r
, 
m_√xt
 + 1);

116 i‡(
	gm_buf„r
 !
m_ölöeBuf„r
)

117 
Á°Fªe
(
m_buf„r
);

118 
	gm_buf„r
 = 
√wBuf„r
;

	@StringPrintStream.h

26 #i‚de‡
SåögPrötSåóm_h


27 
	#SåögPrötSåóm_h


	)

29 
	~<wtf/PrötSåóm.h
>

30 
	~<wtf/ãxt/CSåög.h
>

31 
	~<wtf/ãxt/WTFSåög.h
>

33 
«me•a˚
 
	gWTF
 {

35 ˛as†
	cSåögPrötSåóm
 : 
public
 
PrötSåóm
 {

36 
public
:

37 
WTF_EXPORT_PRIVATE
 
SåögPrötSåóm
();

38 
WTF_EXPORT_PRIVATE
 
	gvútuÆ
 ~
SåögPrötSåóm
();

40 
vútuÆ
 
v¥ötf
(c⁄° * 
f‹m©
, 
va_li°
Ë
ovîride
 
WTF_ATTRIBUTE_PRINTF
(2, 0);

42 
WTF_EXPORT_PRIVATE
 
CSåög
 
toCSåög
();

43 
WTF_EXPORT_PRIVATE
 
Såög
 
toSåög
();

44 
WTF_EXPORT_PRIVATE
 
ª£t
();

46 
	g¥iv©e
:

47 
ö¸ó£Size
(
size_t
);

49 * 
	gm_buf„r
;

50 
size_t
 
	gm_√xt
;

51 
size_t
 
	gm_size
;

52 
	gm_ölöeBuf„r
[128];

57 
	gãm∂©e
<
	gty≥«me
... 
	gTy≥s
>

58 
CSåög
 
	$toCSåög
(c⁄° 
Ty≥s
&... 
vÆues
)

60 
SåögPrötSåóm
 
°ªam
;

61 
°ªam
.
	`¥öt
(
vÆues
...);

62  
°ªam
.
	`toCSåög
();

63 
	}
}

65 
	gãm∂©e
<
	gty≥«me
... 
	gTy≥s
>

66 
Såög
 
	$toSåög
(c⁄° 
Ty≥s
&... 
vÆues
)

68 
SåögPrötSåóm
 
°ªam
;

69 
°ªam
.
	`¥öt
(
vÆues
...);

70  
°ªam
.
	`toSåög
();

71 
	}
}

75 
usög
 
	gWTF
::
SåögPrötSåóm
;

76 
usög
 
	gWTF
::
toCSåög
;

77 
usög
 
	gWTF
::
toSåög
;

	@TCPackedCache.h

111 #i‚de‡
TCMALLOC_PACKED_CACHE_INL_H__


112 
	#TCMALLOC_PACKED_CACHE_INL_H__


	)

114 #i‚de‡
WTF_CHANGES


115 
	~"ba£/basi˘y≥s.h
"

116 
	~"ba£/loggög.h
"

119 #i‚de‡
DCHECK_EQ


120 
	#DCHECK_EQ
(
vÆ1
, 
vÆ2
Ë
	`ASSERT
((vÆ1Ë=(vÆ2))

	)

125 
	#N_ONES_
(
I¡Ty≥
, 
N
) \

126 –(
N
Ë=0 ? 0 : ((
°©ic_ˇ°
<
I¡Ty≥
>(1) << ((N)-1))-1 + \

127 (
°©ic_ˇ°
<
I¡Ty≥
>(1Ë<< ((
N
)-1))Ë)

	)

134 
	gãm∂©e
 <
	gkKeybôs
, 
ty≥«me
 
	gT
>

135 ˛as†
	cPackedCache
 {

136 
	mpublic
:

137 
uöçå_t
 
	tK
;

138 
size_t
 
	tV
;

139 c⁄° 
size_t
 
	mkHashbôs
 = 12;

140 c⁄° 
size_t
 
	mkVÆuebôs
 = 8;

142 
ex∂icô
 
	$PackedCache
(
V
 
öôül_vÆue
) {

143 
	`COMPILE_ASSERT
(
kKeybôs
 <(
K
Ë* 8, 
key_size
);

144 
	`COMPILE_ASSERT
(
kVÆuebôs
 <(
V
Ë* 8, 
vÆue_size
);

145 
	`COMPILE_ASSERT
(
kHashbôs
 <
kKeybôs
, 
hash_fun˘i⁄
);

146 
	`COMPILE_ASSERT
(
kKeybôs
 - 
kHashbôs
 + 
kVÆuebôs
 <
kTbôs
,

147 
íåy_size_mu°_be_big_íough
);

148 
	`CÀ¨
(
öôül_vÆue
);

151 
	$Put
(
K
 
key
, 
V
 
vÆue
) {

152 
	`DCHECK_EQ
(
key
, key & 
kKeyMask
);

153 
	`DCHECK_EQ
(
vÆue
, vÆuê& 
kVÆueMask
);

154 
¨øy_
[
	`Hash
(
key
)] = 
°©ic_ˇ°
<
T
>(
	`KeyToUµî
(keyË| 
vÆue
);

155 
	}
}

157 
boﬁ
 
	$Has
(
K
 
key
) const {

158 
	`DCHECK_EQ
(
key
, key & 
kKeyMask
);

159  
	`KeyM©ch
(
¨øy_
[
	`Hash
(
key
)], key);

160 
	}
}

162 
V
 
	$GëOrDeÁu…
(
K
 
key
, 
V
 
deÁu…_vÆue
) const {

167 
	`DCHECK_EQ
(
key
, key & 
kKeyMask
);

168 
T
 
íåy
 = 
¨øy_
[
	`Hash
(
key
)];

169  
	`KeyM©ch
(
íåy
, 
key
Ë? 
	`E¡ryToVÆue
”¡ryË: 
deÁu…_vÆue
;

170 
	}
}

172 
	$CÀ¨
(
V
 
vÆue
) {

173 
	`DCHECK_EQ
(
vÆue
, vÆuê& 
kVÆueMask
);

174 
i
 = 0; i < 1 << 
kHashbôs
; i++) {

175 
¨øy_
[
i
] = 
°©ic_ˇ°
<
T
>(
vÆue
);

177 
	}
}

179 
	g¥iv©e
:

183 
T
 
	tUPPER
;

185 
V
 
	$E¡ryToVÆue
(
T
 
t
Ë{ Å & 
kVÆueMask
; 
	}
}

187 
UPPER
 
	$E¡ryToUµî
(
T
 
t
Ë{ Å & 
kUµîMask
; 
	}
}

193 
UPPER
 
	$KeyToUµî
(
K
 
k
) {

194 c⁄° 
shi·
 = 
kHashbôs
 - 
kVÆuebôs
;

196  
°©ic_ˇ°
<
T
>(
k
 >> 
shi·
Ë& 
kUµîMask
;

197 
	}
}

201 
K
 
	$UµîToP¨tülKey
(
UPPER
 
u
) {

202 
	`DCHECK_EQ
(
u
, u & 
kUµîMask
);

203 c⁄° 
shi·
 = 
kHashbôs
 - 
kVÆuebôs
;

205  
°©ic_ˇ°
<
K
>(
u
Ë<< 
shi·
;

206 
	}
}

208 
size_t
 
	$Hash
(
K
 
key
) {

209  
°©ic_ˇ°
<
size_t
>(
key
Ë& 
	`N_ONES_
(size_t, 
kHashbôs
);

210 
	}
}

213 
boﬁ
 
	$KeyM©ch
(
T
 
íåy
, 
K
 
key
) {

214  ((
	`KeyToUµî
(
key
Ë^ 
íåy
Ë& 
kUµîMask
) == 0;

215 
	}
}

217 c⁄° 
size_t
 
	gkTbôs
 = 8 * (
T
);

218 c⁄° 
	gkUµîbôs
 = 
kKeybôs
 - 
kHashbôs
;

221 c⁄° 
K
 
	gkKeyMask
 = 
N_ONES_
(K, 
kKeybôs
);

224 c⁄° 
T
 
	gkUµîMask
 = 
N_ONES_
(T, 
kUµîbôs
Ë<< 
	gkVÆuebôs
;

227 c⁄° 
V
 
	gkVÆueMask
 = 
N_ONES_
(V, 
kVÆuebôs
);

229 
T
 
	g¨øy_
[1 << 
kHashbôs
];

232 #unde‡
N_ONES_


	@TCPageMap.h

45 #i‚de‡
TCMALLOC_PAGEMAP_H__


46 
	#TCMALLOC_PAGEMAP_H__


	)

48 
	~<°döt.h
>

49 
	~<°rög.h
>

50 
	~<wtf/As£πi⁄s.h
>

53 
	gãm∂©e
 <
	gBITS
>

54 ˛as†
	cTCMÆloc_PageM≠1
 {

55 
	m¥iv©e
:

56 ** 
¨øy_
;

58 
	mpublic
:

59 
uöçå_t
 
	tNumbî
;

61 
öô
(* (*
Æloˇt‹
)(
size_t
)) {

62 
	m¨øy_
 = 
ªöãΩªt_ˇ°
<**>((*
Æloˇt‹
)((*Ë<< 
BITS
));

63 
mem£t
(
¨øy_
, 0, (*Ë<< 
BITS
);

68 
boﬁ
 
	$Ensuª
(
Numbî
, 
size_t
) {

70  
åue
;

71 
	}
}

73 
	$PªÆloˇãM‹eMem‹y
(Ë{
	}
}

80 * 
	$gë
(
Numbî
 
k
) const {

81  
¨øy_
[
k
];

82 
	}
}

88 
	$£t
(
Numbî
 
k
, * 
v
) {

89 
¨øy_
[
k
] = 
v
;

90 
	}
}

94 
	gãm∂©e
 <
	gBITS
>

95 ˛as†
	cTCMÆloc_PageM≠2
 {

96 
	m¥iv©e
:

98 c⁄° 
ROOT_BITS
 = 5;

99 c⁄° 
	mROOT_LENGTH
 = 1 << 
ROOT_BITS
;

101 c⁄° 
	mLEAF_BITS
 = 
BITS
 - 
ROOT_BITS
;

102 c⁄° 
	mLEAF_LENGTH
 = 1 << 
LEAF_BITS
;

105 
	sLóf
 {

106 * 
	mvÆues
[
LEAF_LENGTH
];

109 
Lóf
* 
	groŸ_
[
ROOT_LENGTH
];

110 * (*
	gÆloˇt‹_
)(
	gsize_t
);

112 
	gpublic
:

113 
uöçå_t
 
	tNumbî
;

115 
öô
(* (*
Æloˇt‹
)(
size_t
)) {

116 
	gÆloˇt‹_
 = 
Æloˇt‹
;

117 
mem£t
(
roŸ_
, 0, (root_));

120 * 
	$gë
(
Numbî
 
k
) const {

121 
	`ASSERT
(
k
 >> 
BITS
 == 0);

122 c⁄° 
Numbî
 
i1
 = 
k
 >> 
LEAF_BITS
;

123 c⁄° 
Numbî
 
i2
 = 
k
 & (
LEAF_LENGTH
-1);

124  
roŸ_
[
i1
]->
vÆues
[
i2
];

125 
	}
}

127 
	$£t
(
Numbî
 
k
, * 
v
) {

128 
	`ASSERT
(
k
 >> 
BITS
 == 0);

129 c⁄° 
Numbî
 
i1
 = 
k
 >> 
LEAF_BITS
;

130 c⁄° 
Numbî
 
i2
 = 
k
 & (
LEAF_LENGTH
-1);

131 
roŸ_
[
i1
]->
vÆues
[
i2
] = 
v
;

132 
	}
}

134 
boﬁ
 
	$Ensuª
(
Numbî
 
°¨t
, 
size_t
 
n
) {

135 
Numbî
 
key
 = 
°¨t
; key <°¨à+ 
n
 - 1; ) {

136 c⁄° 
Numbî
 
i1
 = 
key
 >> 
LEAF_BITS
;

139 i‡(
roŸ_
[
i1
] =
NULL
) {

140 
Lóf
* 
Àaf
 = 
ªöãΩªt_ˇ°
<Lóf*>((*
Æloˇt‹_
)((Leaf)));

141 i‡(
Àaf
 =
NULL
Ë 
Ál£
;

142 
	`mem£t
(
Àaf
, 0, (*leaf));

143 
roŸ_
[
i1
] = 
Àaf
;

147 
key
 = ((key >> 
LEAF_BITS
) + 1) << LEAF_BITS;

149  
åue
;

150 
	}
}

152 
	$PªÆloˇãM‹eMem‹y
() {

154 
	`Ensuª
(0, 1 << 
BITS
);

155 
	}
}

157 #ifde‡
WTF_CHANGES


158 
	gãm∂©e
<
˛ass
 
	gVisô‹
, cœs†
	gMem‹yRódî
>

159 
	$visôVÆues
(
Visô‹
& 
visô‹
, c⁄° 
Mem‹yRódî
& 
ªadî
)

161 c⁄° 
Numbî
 
ÀafIndexMask
 = 
LEAF_LENGTH
 - 1;

163 c⁄° 
Numbî
 
maxKey
 = (1»<< 
BITS
) - 1;

164 c⁄° 
Numbî
 
övÆidIndex
 = 
maxKey
;

165 
Numbî
 
¥eviousRoŸIndex
 = 
övÆidIndex
;

167 
Lóf
* 
Àaf
 = 0;

169 
Numbî
 
key
 = 0; key < 
maxKey
; ) {

170 c⁄° 
Numbî
 
roŸIndex
 = 
key
 >> 
LEAF_BITS
;

171 c⁄° 
Numbî
 
ÀafIndex
 = 
key
 & 
ÀafIndexMask
;

173 i‡(
roŸIndex
 !
¥eviousRoŸIndex
) {

174 i‡(!
roŸ_
[
roŸIndex
]) {

177 
key
 +1 << 
LEAF_BITS
;

178 
key
 &~
ÀafIndexMask
;

182 
Àaf
 = 
	`ªadî
(
roŸ_
[
roŸIndex
]);

183 
¥eviousRoŸIndex
 = 
roŸIndex
;

186 
key
 +
visô‹
.
	`visô
(
Àaf
->
vÆues
[
ÀafIndex
]);

188 
	}
}

190 
	gãm∂©e
<
˛ass
 
	gVisô‹
, cœs†
	gMem‹yRódî
>

191 
	$visôAŒoˇti⁄s
(
Visô‹
& 
visô‹
, c⁄° 
Mem‹yRódî
&) {

192 
i
 = 0; i < 
ROOT_LENGTH
; i++) {

193 i‡(
roŸ_
[
i
])

194 
visô‹
.
	`visô
(
roŸ_
[
i
], (
Lóf
));

196 
	}
}

201 
	gãm∂©e
 <
	gBITS
>

202 ˛as†
	cTCMÆloc_PageM≠3
 {

203 
	m¥iv©e
:

205 c⁄° 
INTERIOR_BITS
 = (
BITS
 + 2) / 3;

206 c⁄° 
	mINTERIOR_LENGTH
 = 1 << 
INTERIOR_BITS
;

209 c⁄° 
	mLEAF_BITS
 = 
BITS
 - 2*
INTERIOR_BITS
;

210 c⁄° 
	mLEAF_LENGTH
 = 1 << 
LEAF_BITS
;

213 
	sNode
 {

214 
Node
* 
	m±rs
[
INTERIOR_LENGTH
];

218 
	sLóf
 {

219 * 
	gvÆues
[
LEAF_LENGTH
];

222 
Node
* 
	groŸ_
;

223 * (*
	gÆloˇt‹_
)(
	gsize_t
);

225 
Node
* 
	$NewNode
() {

226 
Node
* 
ªsu…
 = 
ªöãΩªt_ˇ°
<Node*>((*
Æloˇt‹_
)((Node)));

227 i‡(
ªsu…
 !
NULL
) {

228 
	`mem£t
(
ªsu…
, 0, (*result));

230  
ªsu…
;

231 
	}
}

233 
	gpublic
:

234 
uöçå_t
 
	tNumbî
;

236 
öô
(* (*
Æloˇt‹
)(
size_t
)) {

237 
	gÆloˇt‹_
 = 
Æloˇt‹
;

238 
	groŸ_
 = 
NewNode
();

241 * 
	$gë
(
Numbî
 
k
) const {

242 
	`ASSERT
(
k
 >> 
BITS
 == 0);

243 c⁄° 
Numbî
 
i1
 = 
k
 >> (
LEAF_BITS
 + 
INTERIOR_BITS
);

244 c⁄° 
Numbî
 
i2
 = (
k
 >> 
LEAF_BITS
Ë& (
INTERIOR_LENGTH
-1);

245 c⁄° 
Numbî
 
i3
 = 
k
 & (
LEAF_LENGTH
-1);

246  
ªöãΩªt_ˇ°
<
Lóf
*>(
roŸ_
->
±rs
[
i1
]->±rs[
i2
])->
vÆues
[
i3
];

247 
	}
}

249 
	$£t
(
Numbî
 
k
, * 
v
) {

250 
	`ASSERT
(
k
 >> 
BITS
 == 0);

251 c⁄° 
Numbî
 
i1
 = 
k
 >> (
LEAF_BITS
 + 
INTERIOR_BITS
);

252 c⁄° 
Numbî
 
i2
 = (
k
 >> 
LEAF_BITS
Ë& (
INTERIOR_LENGTH
-1);

253 c⁄° 
Numbî
 
i3
 = 
k
 & (
LEAF_LENGTH
-1);

254 
ªöãΩªt_ˇ°
<
Lóf
*>(
roŸ_
->
±rs
[
i1
]->±rs[
i2
])->
vÆues
[
i3
] = 
v
;

255 
	}
}

257 
boﬁ
 
	$Ensuª
(
Numbî
 
°¨t
, 
size_t
 
n
) {

258 
Numbî
 
key
 = 
°¨t
; key <°¨à+ 
n
 - 1; ) {

259 c⁄° 
Numbî
 
i1
 = 
key
 >> (
LEAF_BITS
 + 
INTERIOR_BITS
);

260 c⁄° 
Numbî
 
i2
 = (
key
 >> 
LEAF_BITS
Ë& (
INTERIOR_LENGTH
-1);

263 i‡(
roŸ_
->
±rs
[
i1
] =
NULL
) {

264 
Node
* 
n
 = 
	`NewNode
();

265 i‡(
n
 =
NULL
Ë 
Ál£
;

266 
roŸ_
->
±rs
[
i1
] = 
n
;

270 i‡(
roŸ_
->
±rs
[
i1
]->±rs[
i2
] =
NULL
) {

271 
Lóf
* 
Àaf
 = 
ªöãΩªt_ˇ°
<Lóf*>((*
Æloˇt‹_
)((Leaf)));

272 i‡(
Àaf
 =
NULL
Ë 
Ál£
;

273 
	`mem£t
(
Àaf
, 0, (*leaf));

274 
roŸ_
->
±rs
[
i1
]->±rs[
i2
] = 
ªöãΩªt_ˇ°
<
Node
*>(
Àaf
);

278 
key
 = ((key >> 
LEAF_BITS
) + 1) << LEAF_BITS;

280  
åue
;

281 
	}
}

283 
	$PªÆloˇãM‹eMem‹y
() {

284 
	}
}

286 #ifde‡
WTF_CHANGES


287 
	gãm∂©e
<
˛ass
 
	gVisô‹
, cœs†
	gMem‹yRódî
>

288 
	$visôVÆues
(
Visô‹
& 
visô‹
, c⁄° 
Mem‹yRódî
& 
ªadî
) {

289 c⁄° 
Numbî
 
öãrmedüãIndexMask
 = (
INTERIOR_LENGTH
 - 1Ë<< 
LEAF_BITS
;

290 c⁄° 
Numbî
 
ÀafIndexMask
 = 
LEAF_LENGTH
 - 1;

292 c⁄° 
Numbî
 
maxKey
 = (1»<< 
BITS
) - 1;

293 c⁄° 
Numbî
 
övÆidIndex
 = 
maxKey
;

294 
Numbî
 
¥eviousRoŸIndex
 = 
övÆidIndex
;

295 
Numbî
 
¥eviousI¡îmedüãIndex
 = 
övÆidIndex
;

297 
Node
* 
öãrmedüãNode
 = 0;

298 
Lóf
* 
Àaf
 = 0;

300 
Node
* 
roŸ
 = 
	`ªadî
(
roŸ_
);

301 
Numbî
 
key
 = 0; key < 
maxKey
; ) {

302 c⁄° 
Numbî
 
roŸIndex
 = 
key
 >> (
LEAF_BITS
 + 
INTERIOR_BITS
);

303 c⁄° 
Numbî
 
öãrmedüãIndex
 = (
key
 & 
öãrmedüãIndexMask
Ë>> 
LEAF_BITS
;

304 c⁄° 
Numbî
 
ÀafIndex
 = 
key
 & 
ÀafIndexMask
;

306 i‡(
roŸIndex
 !
¥eviousRoŸIndex
) {

307 i‡(!
roŸ
->
±rs
[
roŸIndex
]) {

310 
key
 +1 << (
LEAF_BITS
 + 
INTERIOR_BITS
);

311 
key
 &~(
ÀafIndexMask
 | 
öãrmedüãIndexMask
);

315 
öãrmedüãNode
 = 
	`ªadî
(
roŸ
->
±rs
[
roŸIndex
]);

316 
¥eviousRoŸIndex
 = 
roŸIndex
;

319 
¥eviousI¡îmedüãIndex
 = 
övÆidIndex
;

322 i‡(
öãrmedüãIndex
 !
¥eviousI¡îmedüãIndex
) {

323 i‡(!
öãrmedüãNode
->
±rs
[
öãrmedüãIndex
]) {

326 
key
 +1 << 
LEAF_BITS
;

327 
key
 &~
ÀafIndexMask
;

331 
Àaf
 = 
	`ªadî
(
ªöãΩªt_ˇ°
<
Lóf
*>(
öãrmedüãNode
->
±rs
[
öãrmedüãIndex
]));

332 
¥eviousI¡îmedüãIndex
 = 
öãrmedüãIndex
;

335 
key
 +
visô‹
.
	`visô
(
Àaf
->
vÆues
[
ÀafIndex
]);

337 
	}
}

339 
	gãm∂©e
<
˛ass
 
	gVisô‹
, cœs†
	gMem‹yRódî
>

340 
	$visôAŒoˇti⁄s
(
Visô‹
& 
visô‹
, c⁄° 
Mem‹yRódî
& 
ªadî
) {

341 
visô‹
.
	`visô
(
roŸ_
, (
Node
));

343 
Node
* 
roŸ
 = 
	`ªadî
(
roŸ_
);

344 
i
 = 0; i < 
INTERIOR_LENGTH
; i++) {

345 i‡(!
roŸ
->
±rs
[
i
])

348 
visô‹
.
	`visô
(
roŸ
->
±rs
[
i
], (
Node
));

349 
Node
* 
n
 = 
	`ªadî
(
roŸ
->
±rs
[
i
]);

350 
j
 = 0; j < 
INTERIOR_LENGTH
; j++) {

351 i‡(!
n
->
±rs
[
j
])

354 
visô‹
.
	`visô
(
n
->
±rs
[
j
], (
Lóf
));

357 
	}
}

	@TCSpinLock.h

34 #i‚de‡
TCMALLOC_INTERNAL_SPINLOCK_H__


35 
	#TCMALLOC_INTERNAL_SPINLOCK_H__


	)

37 
	~<wtf/Atomics.h
>

38 #i‡
OS
(
UNIX
)

39 
	~<sched.h
>

42 #i‡
ENABLE
(
COMPARE_AND_SWAP
)

44 
TCMÆloc_SlowLock
(* 
lockw‹d
);

47 
	sTCMÆloc_SpöLock
 {

48 
Lock
() {

49 i‡(!
	mWTF
::
wókCom∑ªAndSw≠
(&
lockw‹d_
, 0, 1))

50 
TCMÆloc_SlowLock
(&
lockw‹d_
);

51 
	mWTF
::
mem‹yB¨rõrA·îLock
();

54 
U∆ock
() {

55 
	mWTF
::
mem‹yB¨rõrBef‹eU∆ock
();

56 
	mlockw‹d_
 = 0;

63 
boﬁ
 
IsHñd
() const {

64  
	mlockw‹d_
 != 0;

67 
Inô
(Ë{ 
	mlockw‹d_
 = 0; }

68 
FöÆize
() { }

70 
	mlockw‹d_
;

73 
	#SPINLOCK_INITIALIZER
 { 0 }

	)

75 
	$TCMÆloc_SlowLock
(* 
lockw‹d
) {

77 #i‡
	`OS
(
WINDOWS
)

78 
	`SÀï
(0);

80 #i‡!
	`ENABLE
(
VMOLAB
)

81 
	`sched_yõld
();

84 } !
WTF
::
	`wókCom∑ªAndSw≠
(
lockw‹d
, 0, 1));

85 
	}
}

89 
	~<±hªad.h
>

92 
	sTCMÆloc_SpöLock
 {

93 
±hªad_muãx_t
 
	m¥iv©e_lock_
;

95 
ölöe
 
Inô
() {

96 i‡(
±hªad_muãx_öô
(&
¥iv©e_lock_
, 
NULL
Ë!0Ë
CRASH
();

98 
ölöe
 
FöÆize
() {

99 i‡(
±hªad_muãx_de°roy
(&
¥iv©e_lock_
Ë!0Ë
CRASH
();

101 
ölöe
 
Lock
() {

102 i‡(
±hªad_muãx_lock
(&
¥iv©e_lock_
Ë!0Ë
CRASH
();

104 
ölöe
 
U∆ock
() {

105 i‡(
±hªad_muãx_u∆ock
(&
¥iv©e_lock_
Ë!0Ë
CRASH
();

107 
boﬁ
 
IsHñd
() {

108 i‡(
±hªad_muãx_åylock
(&
¥iv©e_lock_
))

109  
	måue
;

111 
U∆ock
();

112  
	mÁl£
;

116 
	#SPINLOCK_INITIALIZER
 { 
PTHREAD_MUTEX_INITIALIZER
 }

	)

122 ˛as†
	cTCMÆloc_SpöLockHﬁdî
 {

123 
	m¥iv©e
:

124 
TCMÆloc_SpöLock
* 
lock_
;

125 
	mpublic
:

126 
ölöe
 
ex∂icô
 
	$TCMÆloc_SpöLockHﬁdî
(
TCMÆloc_SpöLock
* 
l
)

127 : 
	$lock_
(
l
Ë{Ü->
	`Lock
(); }

128 
ölöe
 ~
	$TCMÆloc_SpöLockHﬁdî
(Ë{ 
lock_
->
	`U∆ock
(); 
	}
}

132 
TCMÆloc_SpöLock
 
	tSpöLock
;

133 
TCMÆloc_SpöLockHﬁdî
 
	tSpöLockHﬁdî
;

	@TCSystemAlloc.cpp

33 
	~"c⁄fig.h
"

34 #i‡!(
deföed
(
USE_SYSTEM_MALLOC
) && USE_SYSTEM_MALLOC)

35 
	~"TCSy°emAŒoc.h
"

37 
	~"As£πi⁄s.h
"

38 
	~"CheckedArôhmëic.h
"

39 
	~"TCSpöLock.h
"

40 
	~"VMTags.h
"

41 
	~<Æg‹ôhm
>

42 
	~<°döt.h
>

44 #i‡
OS
(
WINDOWS
)

45 
	~"wödows.h
"

47 
	~<î∫o.h
>

48 
	~<uni°d.h
>

49 
	~<sys/mm™.h
>

52 #i‚de‡
MAP_ANONYMOUS


53 
	#MAP_ANONYMOUS
 
MAP_ANON


	)

56 
usög
 
«me•a˚
 
	g°d
;

59 
	uMem‹yAlig√r
 {

60 * 
	mp
;

61 
	md
;

62 
size_t
 
	ms
;

65 
SpöLock
 
	g•ölock
 = 
SPINLOCK_INITIALIZER
;

68 
size_t
 
	g∑gesize
 = 0;

76 #i‚de‡
WTF_CHANGES


77 
boﬁ
 
	gu£_devmem
 = 
Ál£
;

78 
boﬁ
 
	gu£_sbrk
 = 
Ál£
;

81 #i‡
HAVE
(
MMAP
)

82 
boﬁ
 
	gu£_mm≠
 = 
åue
;

85 #i‡
HAVE
(
VIRTUALALLOC
)

86 
boﬁ
 
	gu£_VútuÆAŒoc
 = 
åue
;

90 
boﬁ
 
	gdevmem_Áûuª
 = 
Ál£
;

91 
boﬁ
 
	gsbrk_Áûuª
 = 
Ál£
;

92 
boﬁ
 
	gmm≠_Áûuª
 = 
Ál£
;

93 
boﬁ
 
	gVútuÆAŒoc_Áûuª
 = 
Ál£
;

95 #i‚de‡
WTF_CHANGES


96 
DEFINE_öt32
(
mÆloc_devmem_°¨t
, 0,

99 
DEFINE_öt32
(
mÆloc_devmem_limô
, 0,

104 #i‚de‡
WTF_CHANGES


106 * 
	$TrySbrk
(
size_t
 
size
, size_à*
a˘uÆ_size
, size_à
Æignmít
) {

107 
size
 = ((sizê+ 
Æignmít
 - 1) /álignment) *álignment;

111 i‡(
a˘uÆ_size
)

112 *
a˘uÆ_size
 = 
size
;

114 * 
ªsu…
 = 
	`sbrk
(
size
);

115 i‡(
ªsu…
 =
ªöãΩªt_ˇ°
<*>(-1)) {

116 
sbrk_Áûuª
 = 
åue
;

117  
NULL
;

121 
uöçå_t
 
±r
 = 
ªöãΩªt_ˇ°
<uöçå_t>(
ªsu…
);

122 i‡((
±r
 & (
Æignmít
-1)Ë=0Ë 
ªsu…
;

125 
size_t
 
exåa
 = 
Æignmít
 - (
±r
 & (alignment-1));

126 * 
r2
 = 
	`sbrk
(
exåa
);

127 i‡(
ªöãΩªt_ˇ°
<
uöçå_t
>(
r2
Ë=(
±r
 + 
size
)) {

129  
ªöãΩªt_ˇ°
<*>(
±r
 + 
exåa
);

134 
ªsu…
 = 
	`sbrk
(
size
 + 
Æignmít
 - 1);

135 i‡(
ªsu…
 =
ªöãΩªt_ˇ°
<*>(-1)) {

136 
sbrk_Áûuª
 = 
åue
;

137  
NULL
;

139 
±r
 = 
ªöãΩªt_ˇ°
<
uöçå_t
>(
ªsu…
);

140 i‡((
±r
 & (
Æignmít
-1)) != 0) {

141 
±r
 +
Æignmít
 - (ptr & (alignment-1));

143  
ªöãΩªt_ˇ°
<*>(
±r
);

144 
	}
}

148 #i‡
HAVE
(
MMAP
)

150 * 
	$TryMm≠
(
size_t
 
size
, size_à*
a˘uÆ_size
, size_à
Æignmít
) {

152 i‡(
∑gesize
 =0Ë∑gesizê
	`gë∑gesize
();

153 i‡(
Æignmít
 < 
∑gesize
)álignment =Öagesize;

154 
size
 = ((sizê+ 
Æignmít
 - 1) /álignment) *álignment;

158 i‡(
a˘uÆ_size
)

159 *
a˘uÆ_size
 = 
size
;

162 
size_t
 
exåa
 = 0;

163 i‡(
Æignmít
 > 
∑gesize
) {

164 
exåa
 = 
Æignmít
 - 
∑gesize
;

166 
Checked
<
size_t
> 
m≠Size
 = Checked<size_t>(
size
Ë+ 
exåa
 + 2 * 
∑gesize
;

167 * 
ªsu…
 = 
	`mm≠
(
NULL
, 
m≠Size
.
	`unß„Gë
(),

168 
PROT_READ
 | 
PROT_WRITE
,

169 
MAP_PRIVATE
|
MAP_ANONYMOUS
,

170 
VM_TAG_FOR_TCMALLOC_MEMORY
, 0);

171 i‡(
ªsu…
 =
ªöãΩªt_ˇ°
<*>(
MAP_FAILED
)) {

172 
mm≠_Áûuª
 = 
åue
;

173  
NULL
;

175 
	`mm≠
(
ªsu…
, 
∑gesize
, 
PROT_NONE
, 
MAP_FIXED
 | 
MAP_PRIVATE
 | 
MAP_ANON
, 
VM_TAG_FOR_TCMALLOC_MEMORY
, 0);

176 
	`mm≠
(
°©ic_ˇ°
<*>(
ªsu…
Ë+ (
m≠Size
 - 
∑gesize
).
	`unß„Gë
(),Öagesize, 
PROT_NONE
, 
MAP_FIXED
 | 
MAP_PRIVATE
 | 
MAP_ANON
, 
VM_TAG_FOR_TCMALLOC_MEMORY
, 0);

177 
ªsu…
 = 
°©ic_ˇ°
<*>‘esu…Ë+ 
∑gesize
;

179 
uöçå_t
 
±r
 = 
ªöãΩªt_ˇ°
<uöçå_t>(
ªsu…
);

180 
size_t
 
adju°
 = 0;

181 i‡((
±r
 & (
Æignmít
 - 1)) != 0) {

182 
adju°
 = 
Æignmít
 - (
±r
 & (alignment - 1));

186 i‡(
adju°
 > 0) {

187 
	`munm≠
(
ªöãΩªt_ˇ°
<*>(
±r
), 
adju°
);

189 i‡(
adju°
 < 
exåa
) {

190 
	`munm≠
(
ªöãΩªt_ˇ°
<*>(
±r
 + 
adju°
 + 
size
), 
exåa
 -ádjust);

193 
±r
 +
adju°
;

194  
ªöãΩªt_ˇ°
<*>(
±r
);

195 
	}
}

199 #i‡
HAVE
(
VIRTUALALLOC
)

201 * 
	$TryVútuÆAŒoc
(
size_t
 
size
, size_à*
a˘uÆ_size
, size_à
Æignmít
) {

203 i‡(
∑gesize
 == 0) {

204 
SYSTEM_INFO
 
sy°em_öfo
;

205 
	`GëSy°emInfo
(&
sy°em_öfo
);

206 
∑gesize
 = 
sy°em_öfo
.
dwPageSize
;

209 i‡(
Æignmít
 < 
∑gesize
)álignment =Öagesize;

210 
size
 = ((sizê+ 
Æignmít
 - 1) /álignment) *álignment;

214 i‡(
a˘uÆ_size
)

215 *
a˘uÆ_size
 = 
size
;

218 
size_t
 
exåa
 = 0;

219 i‡(
Æignmít
 > 
∑gesize
) {

220 
exåa
 = 
Æignmít
 - 
∑gesize
;

222 * 
ªsu…
 = 
	`VútuÆAŒoc
(
NULL
, 
size
 + 
exåa
,

223 
MEM_RESERVE
 | 
MEM_COMMIT
 | 
MEM_TOP_DOWN
,

224 
PAGE_READWRITE
);

226 i‡(
ªsu…
 =
NULL
) {

227 
VútuÆAŒoc_Áûuª
 = 
åue
;

228  
NULL
;

232 
uöçå_t
 
±r
 = 
ªöãΩªt_ˇ°
<uöçå_t>(
ªsu…
);

233 
size_t
 
adju°
 = 0;

234 i‡((
±r
 & (
Æignmít
 - 1)) != 0) {

235 
adju°
 = 
Æignmít
 - (
±r
 & (alignment - 1));

240 i‡(
adju°
 > 0) {

241 
	`VútuÆFªe
(
ªöãΩªt_ˇ°
<*>(
±r
), 
adju°
, 
MEM_DECOMMIT
);

243 i‡(
adju°
 < 
exåa
) {

244 
	`VútuÆFªe
(
ªöãΩªt_ˇ°
<*>(
±r
 + 
adju°
 + 
size
), 
exåa
-adju°, 
MEM_DECOMMIT
);

247 
±r
 +
adju°
;

248  
ªöãΩªt_ˇ°
<*>(
±r
);

249 
	}
}

253 #i‚de‡
WTF_CHANGES


254 * 
	$TryDevMem
(
size_t
 
size
, size_à*
a˘uÆ_size
, size_à
Æignmít
) {

255 
boﬁ
 
öôülized
 = 
Ál£
;

256 
off_t
 
physmem_ba£
;

257 
off_t
 
physmem_limô
;

258 
physmem_fd
;

264 i‡(
FLAGS_mÆloc_devmem_°¨t
 == 0) {

267  
NULL
;

270 i‡(!
öôülized
) {

271 
physmem_fd
 = 
	`›í
("/dev/mem", 
O_RDWR
);

272 i‡(
physmem_fd
 < 0) {

273 
devmem_Áûuª
 = 
åue
;

274  
NULL
;

276 
physmem_ba£
 = 
FLAGS_mÆloc_devmem_°¨t
*1024LL*1024LL;

277 
physmem_limô
 = 
FLAGS_mÆloc_devmem_limô
*1024LL*1024LL;

278 
öôülized
 = 
åue
;

282 i‡(
∑gesize
 =0Ë∑gesizê
	`gë∑gesize
();

283 i‡(
Æignmít
 < 
∑gesize
)álignment =Öagesize;

284 
size
 = ((sizê+ 
Æignmít
 - 1) /álignment) *álignment;

288 i‡(
a˘uÆ_size
)

289 *
a˘uÆ_size
 = 
size
;

292 
size_t
 
exåa
 = 0;

293 i‡(
Æignmít
 > 
∑gesize
) {

294 
exåa
 = 
Æignmít
 - 
∑gesize
;

298 i‡(
physmem_limô
 !0 && 
physmem_ba£
 + 
size
 + 
exåa
 >Öhysmem_limit) {

299 
devmem_Áûuª
 = 
åue
;

300  
NULL
;

302 *
ªsu…
 = 
	`mm≠
(0, 
size
 + 
exåa
, 
PROT_READ
 | 
PROT_WRITE
,

303 
MAP_SHARED
, 
physmem_fd
, 
physmem_ba£
);

304 i‡(
ªsu…
 =
ªöãΩªt_ˇ°
<*>(
MAP_FAILED
)) {

305 
devmem_Áûuª
 = 
åue
;

306  
NULL
;

308 
uöçå_t
 
±r
 = 
ªöãΩªt_ˇ°
<uöçå_t>(
ªsu…
);

311 
size_t
 
adju°
 = 0;

312 i‡((
±r
 & (
Æignmít
 - 1)) != 0) {

313 
adju°
 = 
Æignmít
 - (
±r
 & (alignment - 1));

317 i‡(
adju°
 > 0) {

318 
	`munm≠
(
ªöãΩªt_ˇ°
<*>(
±r
), 
adju°
);

320 i‡(
adju°
 < 
exåa
) {

321 
	`munm≠
(
ªöãΩªt_ˇ°
<*>(
±r
 + 
adju°
 + 
size
), 
exåa
 -ádjust);

324 
±r
 +
adju°
;

325 
physmem_ba£
 +
adju°
 + 
size
;

327  
ªöãΩªt_ˇ°
<*>(
±r
);

328 
	}
}

331 * 
	$TCMÆloc_Sy°emAŒoc
(
size_t
 
size
, size_à*
a˘uÆ_size
, size_à
Æignmít
) {

333 i‡(
size
 + 
Æignmít
 < sizeË 
NULL
;

335 
SpöLockHﬁdî
 
	`lock_hﬁdî
(&
•ölock
);

338 i‡(
Æignmít
 < (
Mem‹yAlig√r
))álignment = (MemoryAligner);

342 
i
 = 0; i < 2; i++) {

344 #i‚de‡
WTF_CHANGES


345 i‡(
u£_devmem
 && !
devmem_Áûuª
) {

346 * 
ªsu…
 = 
	`TryDevMem
(
size
, 
a˘uÆ_size
, 
Æignmít
);

347 i‡(
ªsu…
 !
NULL
) Ñesult;

350 i‡(
u£_sbrk
 && !
sbrk_Áûuª
) {

351 * 
ªsu…
 = 
	`TrySbrk
(
size
, 
a˘uÆ_size
, 
Æignmít
);

352 i‡(
ªsu…
 !
NULL
) Ñesult;

356 #i‡
	`HAVE
(
MMAP
)

357 i‡(
u£_mm≠
 && !
mm≠_Áûuª
) {

358 * 
ªsu…
 = 
	`TryMm≠
(
size
, 
a˘uÆ_size
, 
Æignmít
);

359 i‡(
ªsu…
 !
NULL
) Ñesult;

363 #i‡
	`HAVE
(
VIRTUALALLOC
)

364 i‡(
u£_VútuÆAŒoc
 && !
VútuÆAŒoc_Áûuª
) {

365 * 
ªsu…
 = 
	`TryVútuÆAŒoc
(
size
, 
a˘uÆ_size
, 
Æignmít
);

366 i‡(
ªsu…
 !
NULL
) Ñesult;

371 
devmem_Áûuª
 = 
Ál£
;

372 
sbrk_Áûuª
 = 
Ál£
;

373 
mm≠_Áûuª
 = 
Ál£
;

374 
VútuÆAŒoc_Áûuª
 = 
Ál£
;

376  
NULL
;

377 
	}
}

379 #i‡
HAVE
(
MADV_FREE_REUSE
)

381 
	$TCMÆloc_Sy°emRñó£
(* 
°¨t
, 
size_t
 
Àngth
)

383 
madvi£Resu…
;

385 (
madvi£Resu…
 = 
	`madvi£
(
°¨t
, 
Àngth
, 
MADV_FREE_REUSABLE
)Ë=-1 && 
î∫o
 =
EAGAIN
) { }

388 
	`ASSERT_UNUSED
(
madvi£Resu…
, madviseResult != -1);

389 
	}
}

391 #ñi‡
HAVE
(
MADV_FREE
Ë|| HAVE(
MADV_DONTNEED
)

393 
	$TCMÆloc_Sy°emRñó£
(* 
°¨t
, 
size_t
 
Àngth
)

397 #i‡
	`HAVE
(
MADV_FREE
)

398 c⁄° 
advi˚
 = 
MADV_FREE
;

400 c⁄° 
advi˚
 = 
MADV_DONTNEED
;

402 i‡(
∑gesize
 =0Ë∑gesizê
	`gë∑gesize
();

403 c⁄° 
size_t
 
∑gemask
 = 
∑gesize
 - 1;

405 
size_t
 
√w_°¨t
 = 
ªöãΩªt_ˇ°
<size_t>(
°¨t
);

406 
size_t
 
íd
 = 
√w_°¨t
 + 
Àngth
;

407 
size_t
 
√w_íd
 = 
íd
;

411 
√w_°¨t
 = (√w_°¨à+ 
∑gesize
 - 1Ë& ~
∑gemask
;

412 
√w_íd
 =Çew_íd & ~
∑gemask
;

414 
	`ASSERT
((
√w_°¨t
 & 
∑gemask
) == 0);

415 
	`ASSERT
((
√w_íd
 & 
∑gemask
) == 0);

416 
	`ASSERT
(
√w_°¨t
 >
ªöãΩªt_ˇ°
<
size_t
>(
°¨t
));

417 
	`ASSERT
(
√w_íd
 <
íd
);

419 i‡(
√w_íd
 > 
√w_°¨t
) {

422 
	`madvi£
(
ªöãΩªt_ˇ°
<*>(
√w_°¨t
), 
√w_íd
 -Çew_start,

423 
advi˚
) == -1 &&

424 
î∫o
 =
EAGAIN
) {

428 
	}
}

430 #ñi‡
HAVE
(
MMAP
)

432 
	$TCMÆloc_Sy°emRñó£
(* 
°¨t
, 
size_t
 
Àngth
)

434 * 
√wAddªss
 = 
	`mm≠
(
°¨t
, 
Àngth
, 
PROT_READ
 | 
PROT_WRITE
, 
MAP_PRIVATE
 | 
MAP_ANONYMOUS
 | 
MAP_FIXED
, -1, 0);

436 
	`ASSERT_UNUSED
(
√wAddªss
,ÇewAddªs†=
°¨t
 ||ÇewAddªs†=
ªöãΩªt_ˇ°
<*>(
MAP_FAILED
));

437 
	}
}

439 #ñi‡
HAVE
(
VIRTUALALLOC
)

441 
	$TCMÆloc_Sy°emRñó£
(* 
°¨t
, 
size_t
 
Àngth
)

443 i‡(
	`VútuÆFªe
(
°¨t
, 
Àngth
, 
MEM_DECOMMIT
))

451 * 
±r
 = 
°©ic_ˇ°
<*>(
°¨t
);

452 * 
íd
 = 
±r
 + 
Àngth
;

453 
MEMORY_BASIC_INFORMATION
 
öfo
;

454 
±r
 < 
íd
) {

455 
size_t
 
ªsu…Size
 = 
	`VútuÆQuîy
(
±r
, &
öfo
, (info));

456 
	`ASSERT_UNUSED
(
ªsu…Size
,Ñesu…Sizê=(
öfo
));

458 
size_t
 
decommôSize
 = 
mö
<size_t>(
öfo
.
Regi⁄Size
, 
íd
 - 
±r
);

459 
BOOL
 
suc˚ss
 = 
	`VútuÆFªe
(
±r
, 
decommôSize
, 
MEM_DECOMMIT
);

460 
	`ASSERT_UNUSED
(
suc˚ss
, success);

461 
±r
 +
decommôSize
;

463 
	}
}

472 #i‡
HAVE
(
MADV_FREE_REUSE
)

474 
	$TCMÆloc_Sy°emCommô
(* 
°¨t
, 
size_t
 
Àngth
)

476 
	`madvi£
(
°¨t
, 
Àngth
, 
MADV_FREE_REUSE
Ë=-1 && 
î∫o
 =
EAGAIN
) { }

477 
	}
}

479 #ñi‡
HAVE
(
VIRTUALALLOC
)

481 
	$TCMÆloc_Sy°emCommô
(* 
°¨t
, 
size_t
 
Àngth
)

483 i‡(
	`VútuÆAŒoc
(
°¨t
, 
Àngth
, 
MEM_COMMIT
, 
PAGE_READWRITE
) == start)

491 * 
±r
 = 
°©ic_ˇ°
<*>(
°¨t
);

492 * 
íd
 = 
±r
 + 
Àngth
;

493 
MEMORY_BASIC_INFORMATION
 
öfo
;

494 
±r
 < 
íd
) {

495 
size_t
 
ªsu…Size
 = 
	`VútuÆQuîy
(
±r
, &
öfo
, (info));

496 
	`ASSERT_UNUSED
(
ªsu…Size
,Ñesu…Sizê=(
öfo
));

498 
size_t
 
commôSize
 = 
mö
<size_t>(
öfo
.
Regi⁄Size
, 
íd
 - 
±r
);

499 * 
√wAddªss
 = 
	`VútuÆAŒoc
(
±r
, 
commôSize
, 
MEM_COMMIT
, 
PAGE_READWRITE
);

500 
	`ASSERT_UNUSED
(
√wAddªss
,ÇewAddªs†=
±r
);

501 
±r
 +
commôSize
;

503 
	}
}

	@TCSystemAlloc.h

36 #i‚de‡
TCMALLOC_SYSTEM_ALLOC_H__


37 
	#TCMALLOC_SYSTEM_ALLOC_H__


	)

51 * 
TCMÆloc_Sy°emAŒoc
(
size_t
 
byãs
, size_à*
a˘uÆ_byãs
,

52 
size_t
 
Æignmít
 = 0);

63 
TCMÆloc_Sy°emRñó£
(* 
°¨t
, 
size_t
 
Àngth
);

65 
TCMÆloc_Sy°emCommô
(* 
°¨t
, 
size_t
 
Àngth
);

67 #i‡!
HAVE
(
MADV_FREE_REUSE
Ë&& !HAVE(
MADV_DONTNEED
Ë&& !HAVE(
MMAP
Ë&& !HAVE(
VIRTUALALLOC
)

68 
ölöe
 
	$TCMÆloc_Sy°emRñó£
(*, 
size_t
Ë{ 
	}
}

71 #i‡!
HAVE
(
VIRTUALALLOC
Ë&& !HAVE(
MADV_FREE_REUSE
)

72 
ölöe
 
	$TCMÆloc_Sy°emCommô
(*, 
size_t
Ë{ 
	}
}

	@TemporaryChange.h

26 #i‚de‡
Temp‹¨yCh™ge_h


27 
	#Temp‹¨yCh™ge_h


	)

29 
	~<wtf/N⁄c›yabÀ.h
>

31 
«me•a˚
 
	gWTF
 {

42 
	gãm∂©e
<
ty≥«me
 
	gT
>

43 ˛as†
	cTemp‹¨yCh™ge
 {

44 
WTF_MAKE_NONCOPYABLE
(
Temp‹¨yCh™ge
);

45 
	gpublic
:

46 
Temp‹¨yCh™ge
(
T
& 
sc›edV¨übÀ
, T 
√wVÆue
)

47 : 
m_sc›edV¨übÀ
(
sc›edV¨übÀ
)

48 , 
m_‹igöÆVÆue
(
sc›edV¨übÀ
)

50 
	gm_sc›edV¨übÀ
 = 
√wVÆue
;

53 ~
Temp‹¨yCh™ge
()

55 
	gm_sc›edV¨übÀ
 = 
m_‹igöÆVÆue
;

59 
	g¥iv©e
:

60 
T
& 
m_sc›edV¨übÀ
;

61 
T
 
	gm_‹igöÆVÆue
;

66 
usög
 
	gWTF
::
Temp‹¨yCh™ge
;

	@ThreadFunctionInvocation.h

29 #i‚de‡
ThªadFun˘i⁄Invoˇti⁄_h


30 
	#ThªadFun˘i⁄Invoˇti⁄_h


	)

32 
«me•a˚
 
	gWTF
 {

34 (*
	gThªadFun˘i⁄
)(* 
	t¨gumít
);

36 
	sThªadFun˘i⁄Invoˇti⁄
 {

37 
	gWTF_MAKE_FAST_ALLOCATED
;

38 
	gpublic
:

39 
ThªadFun˘i⁄Invoˇti⁄
(
ThªadFun˘i⁄
 
fun˘i⁄
, * 
d©a
)

40 : 
fun˘i⁄
(function)

41 , 
d©a
(data)

45 
ThªadFun˘i⁄
 
	gfun˘i⁄
;

46 * 
	gd©a
;

	@ThreadIdentifierDataPthreads.cpp

31 
	~"c⁄fig.h
"

33 #i‡
USE
(
PTHREADS
)

35 
	~"ThªadIdítifõrD©aPthªads.h
"

37 
	~"Thªadög.h
"

39 #i‡
OS
(
HURD
)

41 
	#PTHREAD_KEYS_MAX
 1024

	)

43 
	~<limôs.h
>

46 
«me•a˚
 
	gWTF
 {

48 
±hªad_key_t
 
	gThªadIdítifõrD©a
::
m_key
 = 
PTHREAD_KEYS_MAX
;

50 
thªadDidExô
(
ThªadIdítifõr
);

52 
	gThªadIdítifõrD©a
::~
ThªadIdítifõrD©a
()

54 
thªadDidExô
(
m_idítifõr
);

57 
	gThªadIdítifõrD©a
::
öôülizeOn˚
()

59 i‡(
±hªad_key_¸óã
(&
m_key
, 
de°ru˘
))

60 
CRASH
();

63 
ThªadIdítifõr
 
	gThªadIdítifõrD©a
::
idítifõr
()

65 
ASSERT
(
m_key
 !
PTHREAD_KEYS_MAX
);

66 
ThªadIdítifõrD©a
* 
	gthªadIdítifõrD©a
 = 
°©ic_ˇ°
<ThªadIdítifõrD©a*>(
±hªad_gë•ecific
(
m_key
));

68  
	gthªadIdítifõrD©a
 ?ÅhªadIdítifõrD©a->
	gm_idítifõr
 : 0;

71 
	gThªadIdítifõrD©a
::
öôülize
(
ThªadIdítifõr
 
id
)

73 
ASSERT
(!
idítifõr
());

74 
±hªad_£t•ecific
(
m_key
, 
√w
 
ThªadIdítifõrD©a
(
id
));

77 
	gThªadIdítifõrD©a
::
de°ru˘
(* 
d©a
)

79 
ThªadIdítifõrD©a
* 
thªadIdítifõrD©a
 = 
°©ic_ˇ°
<ThªadIdítifõrD©a*>(
d©a
);

80 
ASSERT
(
thªadIdítifõrD©a
);

82 i‡(
	gthªadIdítifõrD©a
->
	gm_isDe°royedOn˚
) {

83 
dñëe
 
	gthªadIdítifõrD©a
;

87 
	gthªadIdítifõrD©a
->
	gm_isDe°royedOn˚
 = 
åue
;

89 
±hªad_£t•ecific
(
m_key
, 
thªadIdítifõrD©a
);

	@ThreadIdentifierDataPthreads.h

31 #i‚de‡
ThªadIdítifõrD©aPthªads_h


32 
	#ThªadIdítifõrD©aPthªads_h


	)

34 
	~<wtf/Thªadög.h
>

36 
«me•a˚
 
	gWTF
 {

40 ˛as†
	cThªadIdítifõrD©a
 {

41 
WTF_MAKE_NONCOPYABLE
(
ThªadIdítifõrD©a
);

42 
	gpublic
:

43 ~
ThªadIdítifõrD©a
();

47 
öôülizeOn˚
();

50 
öôülize
(
ThªadIdítifõr
 
idítifõr
);

53 
ThªadIdítifõr
 
idítifõr
();

55 
	g¥iv©e
:

56 
ThªadIdítifõrD©a
(
ThªadIdítifõr
 
idítifõr
)

57 : 
m_idítifõr
(
idítifõr
)

58 , 
m_isDe°royedOn˚
(
Ál£
)

67 
de°ru˘
(* 
d©a
);

69 
ThªadIdítifõr
 
	gm_idítifõr
;

70 
boﬁ
 
	gm_isDe°royedOn˚
;

71 
±hªad_key_t
 
	gm_key
;

	@ThreadSafeRefCounted.h

59 #i‚de‡
ThªadSa„RefCou¡ed_h


60 
	#ThªadSa„RefCou¡ed_h


	)

62 
	~<©omic
>

63 
	~<wtf/Fa°MÆloc.h
>

64 
	~<wtf/N⁄c›yabÀ.h
>

66 
«me•a˚
 
	gWTF
 {

68 ˛as†
	cThªadSa„RefCou¡edBa£
 {

69 
WTF_MAKE_NONCOPYABLE
(
ThªadSa„RefCou¡edBa£
);

70 
	gWTF_MAKE_FAST_ALLOCATED
;

71 
	gpublic
:

72 
ThªadSa„RefCou¡edBa£
(
öôülRefCou¡
 = 1)

73 : 
m_ªfCou¡
(
öôülRefCou¡
)

77 
ªf
()

79 ++
m_ªfCou¡
;

82 
boﬁ
 
hasO√Ref
()

84  
ªfCou¡
() == 1;

87 
ªfCou¡
() const

89  
	gm_ªfCou¡
;

92 
	g¥Ÿe˘ed
:

94 
boﬁ
 
dîefBa£
()

96 i‡(--
m_ªfCou¡
 <= 0) {

97  
åue
;

100  
	gÁl£
;

103 
	g¥iv©e
:

104 
°d
::
©omic
<> 
m_ªfCou¡
;

107 
	gãm∂©e
<
˛ass
 
	gT
> cœs†
	cThªadSa„RefCou¡ed
 : 
public
 
ThªadSa„RefCou¡edBa£
 {

108 
public
:

109 
dîef
()

111 i‡(
dîefBa£
())

112 
dñëe
 
°©ic_ˇ°
<
T
*>(
this
);

115 
	g¥Ÿe˘ed
:

116 
ThªadSa„RefCou¡ed
()

123 
usög
 
	gWTF
::
ThªadSa„RefCou¡ed
;

	@ThreadSpecific.h

42 #i‚de‡
WTF_ThªadS≥cific_h


43 
	#WTF_ThªadS≥cific_h


	)

45 
	~<wtf/N⁄c›yabÀ.h
>

46 
	~<wtf/StdLibExåas.h
>

48 #i‡
USE
(
PTHREADS
)

49 
	~<±hªad.h
>

50 #ñi‡
OS
(
WINDOWS
)

51 
	~<wödows.h
>

54 
«me•a˚
 
	gWTF
 {

56 #i‡
OS
(
WINDOWS
)

59 
ThªadS≥cificThªadExô
();

62 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cThªadS≥cific
 {

63 
WTF_MAKE_NONCOPYABLE
(
ThªadS≥cific
);

64 
	gpublic
:

65 
ThªadS≥cific
();

66 
boﬁ
 
isSë
();

67 
T
* 
	g›î©‹
->();

68 
›î©‹
 
	gT
*();

69 
	gT
& 
	g›î©‹
*();

71 #i‡
USE
(
WEB_THREAD
)

72 
ª∂a˚
(
T
*);

75 
	g¥iv©e
:

76 #i‡
OS
(
WINDOWS
)

77 
‰õnd
 
ThªadS≥cificThªadExô
();

84 ~
ThªadS≥cific
();

86 
T
* 
gë
();

87 
£t
(
T
*);

88 
de°roy
(* 
±r
);

90 
	sD©a
 {

91 
WTF_MAKE_NONCOPYABLE
(
D©a
);

92 
	gpublic
:

93 
D©a
(
T
* 
vÆue
, 
ThªadS≥cific
<T>* 
ow√r
) : value(value), owner(owner) {}

95 
T
* 
	gvÆue
;

96 
	gThªadS≥cific
<
	gT
>* 
	gow√r
;

97 #i‡
OS
(
WINDOWS
)

98 (*
	gde°ru˘‹
)(*);

102 #i‡
USE
(
PTHREADS
)

103 
±hªad_key_t
 
	gm_key
;

104 #ñi‡
OS
(
WINDOWS
)

105 
	gm_ödex
;

109 #i‡
	$USE
(
PTHREADS
)

111 
±hªad_key_t
 
	tThªadS≥cificKey
;

113 
ölöe
 
	`thªadS≥cificKeyCª©e
(
ThªadS≥cificKey
* 
key
, (*
de°ru˘‹
)(*))

115 
îr‹
 = 
	`±hªad_key_¸óã
(
key
, 
de°ru˘‹
);

116 i‡(
îr‹
)

117 
	`CRASH
();

118 
	}
}

120 
ölöe
 
	$thªadS≥cificKeyDñëe
(
ThªadS≥cificKey
 
key
)

122 
îr‹
 = 
	`±hªad_key_dñëe
(
key
);

123 i‡(
îr‹
)

124 
	`CRASH
();

125 
	}
}

127 
ölöe
 
	$thªadS≥cificSë
(
ThªadS≥cificKey
 
key
, * 
vÆue
)

129 
	`±hªad_£t•ecific
(
key
, 
vÆue
);

130 
	}
}

132 
ölöe
 * 
	$thªadS≥cificGë
(
ThªadS≥cificKey
 
key
)

134  
	`±hªad_gë•ecific
(
key
);

135 
	}
}

137 
	gãm∂©e
<
ty≥«me
 
	gT
>

138 
ölöe
 
	gThªadS≥cific
<
	gT
>::
	$ThªadS≥cific
()

140 
îr‹
 = 
	`±hªad_key_¸óã
(&
m_key
, 
de°roy
);

141 i‡(
îr‹
)

142 
	`CRASH
();

143 
	}
}

145 
	gãm∂©e
<
ty≥«me
 
	gT
>

146 
ölöe
 
T
* 
	gThªadS≥cific
<
	gT
>::
	$gë
()

148 
D©a
* 
d©a
 = 
°©ic_ˇ°
<D©a*>(
	`±hªad_gë•ecific
(
m_key
));

149  
d©a
 ? d©a->
vÆue
 : 0;

150 
	}
}

152 
	gãm∂©e
<
ty≥«me
 
	gT
>

153 
ölöe
 
	gThªadS≥cific
<
	gT
>::
	$£t
(
T
* 
±r
)

155 
	`ASSERT
(!
	`gë
());

156 
	`±hªad_£t•ecific
(
m_key
, 
√w
 
	`D©a
(
±r
, 
this
));

157 
	}
}

159 #ñi‡
	$OS
(
WINDOWS
)

164 c⁄° 
kMaxTlsKeySize
 = 256;

166 
WTF_EXPORT_PRIVATE
 & 
	`ésKeyCou¡
();

167 
WTF_EXPORT_PRIVATE
 
DWORD
* 
	`ésKeys
();

169 
˛ass
 
Pœtf‹mThªadS≥cificKey
;

170 
Pœtf‹mThªadS≥cificKey
* 
	tThªadS≥cificKey
;

172 
WTF_EXPORT_PRIVATE
 
	`thªadS≥cificKeyCª©e
(
ThªadS≥cificKey
*, (*)(*));

173 
WTF_EXPORT_PRIVATE
 
	`thªadS≥cificKeyDñëe
(
ThªadS≥cificKey
);

174 
WTF_EXPORT_PRIVATE
 
	`thªadS≥cificSë
(
ThªadS≥cificKey
, *);

175 
WTF_EXPORT_PRIVATE
 * 
	`thªadS≥cificGë
(
ThªadS≥cificKey
);

177 
ãm∂©e
<
ty≥«me
 
T
>

178 
ölöe
 
ThªadS≥cific
<
T
>::
	$ThªadS≥cific
()

179 : 
	`m_ödex
(-1)

181 
DWORD
 
ésKey
 = 
	`TlsAŒoc
();

182 i‡(
ésKey
 =
TLS_OUT_OF_INDEXES
)

183 
	`CRASH
();

185 
m_ödex
 = 
	`I¡îlockedIn¸emít
(&
	`ésKeyCou¡
()) - 1;

186 i‡(
m_ödex
 >
kMaxTlsKeySize
)

187 
	`CRASH
();

188 
	`ésKeys
()[
m_ödex
] = 
ésKey
;

189 
	}
}

191 
	gãm∂©e
<
ty≥«me
 
	gT
>

192 
ölöe
 
	gThªadS≥cific
<
	gT
>::~
	$ThªadS≥cific
()

195 
	`TlsFªe
(
	`ésKeys
()[
m_ödex
]);

196 
	}
}

198 
	gãm∂©e
<
ty≥«me
 
	gT
>

199 
ölöe
 
T
* 
	gThªadS≥cific
<
	gT
>::
	$gë
()

201 
D©a
* 
d©a
 = 
°©ic_ˇ°
<D©a*>(
	`TlsGëVÆue
(
	`ésKeys
()[
m_ödex
]));

202  
d©a
 ? d©a->
vÆue
 : 0;

203 
	}
}

205 
	gãm∂©e
<
ty≥«me
 
	gT
>

206 
ölöe
 
	gThªadS≥cific
<
	gT
>::
	$£t
(
T
* 
±r
)

208 
	`ASSERT
(!
	`gë
());

209 
D©a
* 
d©a
 = 
√w
 
	`D©a
(
±r
, 
this
);

210 
d©a
->
de°ru˘‹
 = &
ThªadS≥cific
<
T
>::
de°roy
;

211 
	`TlsSëVÆue
(
	`ésKeys
()[
m_ödex
], 
d©a
);

212 
	}
}

215 #îr‹ 
ThªadS≥cific
 
is
 
nŸ
 
im∂emíãd
 
this
 
∂©f‹m
.

218 
	gãm∂©e
<
ty≥«me
 
	gT
>

219 
ölöe
 
	gThªadS≥cific
<
	gT
>::
	$de°roy
(* 
±r
)

221 
D©a
* 
d©a
 = 
°©ic_ˇ°
<D©a*>(
±r
);

223 #i‡
	`USE
(
PTHREADS
)

226 
	`±hªad_£t•ecific
(
d©a
->
ow√r
->
m_key
, 
±r
);

229 
d©a
->
vÆue
->~
	`T
();

230 
	`Á°Fªe
(
d©a
->
vÆue
);

232 #i‡
	`USE
(
PTHREADS
)

233 
	`±hªad_£t•ecific
(
d©a
->
ow√r
->
m_key
, 0);

234 #ñi‡
	`OS
(
WINDOWS
)

235 
	`TlsSëVÆue
(
	`ésKeys
()[
d©a
->
ow√r
->
m_ödex
], 0);

237 #îr‹ 
ThªadS≥cific
 
is
 
nŸ
 
im∂emíãd
 
this
 
∂©f‹m
.

240 
dñëe
 
d©a
;

241 
	}
}

243 
	gãm∂©e
<
ty≥«me
 
	gT
>

244 
ölöe
 
boﬁ
 
	gThªadS≥cific
<
	gT
>::
	$isSë
()

246  !!
	`gë
();

247 
	}
}

249 
	gãm∂©e
<
ty≥«me
 
	gT
>

250 
ölöe
 
	gThªadS≥cific
<
	gT
>::
›î©‹
 
T
*()

252 
T
* 
±r
 = 
°©ic_ˇ°
<T*>(
gë
());

253 i‡(!
	g±r
) {

256 
	g±r
 = 
°©ic_ˇ°
<
T
*>(
Á°Zî€dMÆloc
((T)));

257 
£t
(
±r
);

258 
√w
 (
NŸNuŒ
, 
±r
Ë
	gT
;

260  
	g±r
;

263 
	gãm∂©e
<
ty≥«me
 
	gT
>

264 
ölöe
 
T
* 
	gThªadS≥cific
<
	gT
>::
›î©‹
->()

266  
›î©‹
 
T
*();

269 
	gãm∂©e
<
ty≥«me
 
	gT
>

270 
ölöe
 
	gT
& 
	gThªadS≥cific
<T>::
›î©‹
*()

272  *
›î©‹
 
T
*();

275 #i‡
	$USE
(
WEB_THREAD
)

276 
ãm∂©e
<
ty≥«me
 
T
>

277 
ölöe
 
ThªadS≥cific
<
T
>::
	$ª∂a˚
(
T
* 
√wPå
)

279 
	`ASSERT
(
√wPå
);

280 
D©a
* 
d©a
 = 
°©ic_ˇ°
<D©a*>(
	`±hªad_gë•ecific
(
m_key
));

281 
	`ASSERT
(
d©a
);

282 
d©a
->
vÆue
->~
	`T
();

283 
	`Á°Fªe
(
d©a
->
vÆue
);

284 
d©a
->
vÆue
 = 
√wPå
;

285 
	}
}

	@ThreadSpecificWin.cpp

22 
	~"c⁄fig.h
"

23 
	~"ThªadS≥cific.h
"

25 #i‡
OS
(
WINDOWS
)

27 
	~"StdLibExåas.h
"

28 
	~"ThªadögPrimôives.h
"

29 
	~<wtf/DoublyLökedLi°.h
>

31 #i‡!
USE
(
PTHREADS
)

33 
«me•a˚
 
	gWTF
 {

35 
	gDoublyLökedLi°
<
	gPœtf‹mThªadS≥cificKey
>& 
de°ru˘‹sLi°
()

37 
	gDoublyLökedLi°
<
	gPœtf‹mThªadS≥cificKey
> 
	g°©icLi°
;

38  
	g°©icLi°
;

41 
	gMuãx
& 
de°ru˘‹sMuãx
()

43 
Muãx
 
	g°©icMuãx
;

44  
	g°©icMuãx
;

47 
˛ass
 
	gPœtf‹mThªadS≥cificKey
 : 
public
 
DoublyLökedLi°Node
<
Pœtf‹mThªadS≥cificKey
> {

48 
public
:

49 
‰õnd
 
˛ass
 
DoublyLökedLi°Node
<
Pœtf‹mThªadS≥cificKey
>;

51 
Pœtf‹mThªadS≥cificKey
((*
de°ru˘‹
)(*))

52 : 
m_de°ru˘‹
(
de°ru˘‹
)

54 
m_ésKey
 = 
TlsAŒoc
();

55 i‡(
	gm_ésKey
 =
TLS_OUT_OF_INDEXES
)

56 
CRASH
();

59 ~
Pœtf‹mThªadS≥cificKey
()

61 
TlsFªe
(
m_ésKey
);

64 
£tVÆue
(* 
d©a
Ë{ 
TlsSëVÆue
(
m_ésKey
, data); }

65 * 
vÆue
(Ë{  
TlsGëVÆue
(
m_ésKey
); }

67 
ˇŒDe°ru˘‹
()

69 i‡(* 
	gd©a
 = 
vÆue
())

70 
m_de°ru˘‹
(
d©a
);

73 
	g¥iv©e
:

74 (*
m_de°ru˘‹
)(*);

75 
DWORD
 
	gm_ésKey
;

76 
Pœtf‹mThªadS≥cificKey
* 
	gm_¥ev
;

77 
Pœtf‹mThªadS≥cificKey
* 
	gm_√xt
;

80 & 
ésKeyCou¡
()

82 
	gcou¡
;

83  
	gcou¡
;

86 
DWORD
* 
ésKeys
()

88 
DWORD
 
	gkeys
[
kMaxTlsKeySize
];

89  
	gkeys
;

92 
thªadS≥cificKeyCª©e
(
ThªadS≥cificKey
* 
key
, (*
de°ru˘‹
)(*))

95 *
	gkey
 = 
°©ic_ˇ°
<
Pœtf‹mThªadS≥cificKey
*>(::
mÆloc
((PlatformThreadSpecificKey)));

96 
√w
 (*
key
Ë
Pœtf‹mThªadS≥cificKey
(
de°ru˘‹
);

98 
MuãxLockî
 
lockî
(
de°ru˘‹sMuãx
());

99 
de°ru˘‹sLi°
().
push
(*
key
);

102 
thªadS≥cificKeyDñëe
(
ThªadS≥cificKey
 
key
)

104 
MuãxLockî
 
lockî
(
de°ru˘‹sMuãx
());

105 
de°ru˘‹sLi°
().
ªmove
(
key
);

106 
	gkey
->~
Pœtf‹mThªadS≥cificKey
();

107 ::
‰ì
(
key
);

110 
thªadS≥cificSë
(
ThªadS≥cificKey
 
key
, * 
d©a
)

112 
	gkey
->
£tVÆue
(
d©a
);

115 * 
thªadS≥cificGë
(
ThªadS≥cificKey
 
key
)

117  
	gkey
->
vÆue
();

120 
ThªadS≥cificThªadExô
()

122 
	gi
 = 0; i < 
ésKeyCou¡
(); i++) {

124 
	gThªadS≥cific
<>::
D©a
* 
d©a
 = 
°©ic_ˇ°
<
ThªadS≥cific
<>::D©a*>(
TlsGëVÆue
(
ésKeys
()[
i
]));

125 i‡(
	gd©a
)

126 
	gd©a
->
de°ru˘‹
(
d©a
);

129 
MuãxLockî
 
lockî
(
de°ru˘‹sMuãx
());

130 
Pœtf‹mThªadS≥cificKey
* 
	gkey
 = 
de°ru˘‹sLi°
().
hód
();

131 
	gkey
) {

132 
Pœtf‹mThªadS≥cificKey
* 
	g√xtKey
 = 
key
->
√xt
();

133 
	gkey
->
ˇŒDe°ru˘‹
();

134 
	gkey
 = 
√xtKey
;

	@Threading.cpp

26 
	~"c⁄fig.h
"

27 
	~"Thªadög.h
"

29 
	~<°rög.h
>

31 
«me•a˚
 
	gWTF
 {

33 
	sNewThªadC⁄ãxt
 {

34 
	gWTF_MAKE_FAST_ALLOCATED
;

35 
	gpublic
:

36 
NewThªadC⁄ãxt
(
ThªadFun˘i⁄
 
íåyPoöt
, * 
d©a
, c⁄° * 
«me
)

37 : 
íåyPoöt
(entryPoint)

38 , 
d©a
(data)

39 , 
«me
(name)

43 
ThªadFun˘i⁄
 
	gíåyPoöt
;

44 * 
	gd©a
;

45 c⁄° * 
	g«me
;

47 
Muãx
 
	g¸óti⁄Muãx
;

50 
thªadE¡ryPoöt
(* 
c⁄ãxtD©a
)

52 
NewThªadC⁄ãxt
* 
	gc⁄ãxt
 = 
ªöãΩªt_ˇ°
<NewThªadC⁄ãxt*>(
c⁄ãxtD©a
);

57 
MuãxLockî
 
lockî
(
c⁄ãxt
->
¸óti⁄Muãx
);

60 
öôülizeCuºítThªadI¡î«l
(
c⁄ãxt
->
«me
);

63 
ThªadFun˘i⁄
 
	gíåyPoöt
 = 
c⁄ãxt
->
íåyPoöt
;

64 * 
	gd©a
 = 
c⁄ãxt
->
d©a
;

65 
dñëe
 
	gc⁄ãxt
;

67 
íåyPoöt
(
d©a
);

70 
ThªadIdítifõr
 
¸óãThªad
(
ThªadFun˘i⁄
 
íåyPoöt
, * 
d©a
, c⁄° * 
«me
)

74 #i‡!
LOG_DISABLED
 && 
PLATFORM
(
WIN
)

75 i‡(
	g«me
 && 
°æí
(
«me
) > 31)

76 
LOG_ERROR
("ThªadÇamê\"%s\" i†l⁄gîÅh™ 31 ch¨a˘î†™d wû»bêåunˇãd by VisuÆ Studio", 
«me
);

79 
NewThªadC⁄ãxt
* 
	gc⁄ãxt
 = 
√w
 NewThªadC⁄ãxt(
íåyPoöt
, 
d©a
, 
«me
);

82 
MuãxLockî
 
lockî
(
c⁄ãxt
->
¸óti⁄Muãx
);

84  
¸óãThªadI¡î«l
(
thªadE¡ryPoöt
, 
c⁄ãxt
, 
«me
);

87 
£tCuºítThªadIsU£rI¡îa˘ive
()

89 #i‡
HAVE
(
QOS_CLASSES
)

90 
±hªad_£t_qos_˛ass_£lf_≈
(
QOS_CLASS_USER_INTERACTIVE
, 0);

94 
£tCuºítThªadIsU£rInôüãd
()

96 #i‡
HAVE
(
QOS_CLASSES
)

97 
±hªad_£t_qos_˛ass_£lf_≈
(
QOS_CLASS_USER_INITIATED
, 0);

101 #i‡
PLATFORM
(
MAC
Ë|| PLATFORM(
WIN
)

107 * (*
	tThªadFun˘i⁄WôhRëu∫VÆue
)(* 
	t¨gumít
);

109 
WTF_EXPORT_PRIVATE
 
ThªadIdítifõr
 
¸óãThªad
(
ThªadFun˘i⁄WôhRëu∫VÆue
 
íåyPoöt
, * 
d©a
, c⁄° * 
«me
);

111 
	sThªadFun˘i⁄WôhRëu∫VÆueInvoˇti⁄
 {

112 
ThªadFun˘i⁄WôhRëu∫VÆueInvoˇti⁄
(
ThªadFun˘i⁄WôhRëu∫VÆue
 
fun˘i⁄
, * 
d©a
)

113 : 
fun˘i⁄
(function)

114 , 
d©a
(data)

118 
ThªadFun˘i⁄WôhRëu∫VÆue
 
	gfun˘i⁄
;

119 * 
	gd©a
;

122 
com∑tE¡ryPoöt
(* 
∑øm
)

125 autÿ
	gövoˇti⁄
 = 
°d
::
unique_±r
<
ThªadFun˘i⁄WôhRëu∫VÆueInvoˇti⁄
>(
°©ic_ˇ°
<ThªadFun˘i⁄WôhRëu∫VÆueInvoˇti⁄*>(
∑øm
));

126 
	gövoˇti⁄
->
fun˘i⁄
(
övoˇti⁄
->
d©a
);

129 
ThªadIdítifõr
 
¸óãThªad
(
ThªadFun˘i⁄WôhRëu∫VÆue
 
íåyPoöt
, * 
d©a
, c⁄° * 
«me
)

131 autÿ
	gövoˇti⁄
 = 
°d
::
make_unique
<
ThªadFun˘i⁄WôhRëu∫VÆueInvoˇti⁄
>(
íåyPoöt
, 
	gd©a
);

134  
¸óãThªad
(
com∑tE¡ryPoöt
, 
övoˇti⁄
.
ªÀa£
(), 
«me
);

137 
WTF_EXPORT_PRIVATE
 
waôF‹ThªadCom∂ëi⁄
(
ThªadIdítifõr
, **);

139 
waôF‹ThªadCom∂ëi⁄
(
ThªadIdítifõr
 
thªadID
, **)

141  
waôF‹ThªadCom∂ëi⁄
(
thªadID
);

147 
WTF_EXPORT_PRIVATE
 
ThªadIdítifõr
 
¸óãThªad
(
ThªadFun˘i⁄WôhRëu∫VÆue
 
íåyPoöt
, * 
d©a
);

149 
ThªadIdítifõr
 
¸óãThªad
(
ThªadFun˘i⁄WôhRëu∫VÆue
 
íåyPoöt
, * 
d©a
)

151 autÿ
	gövoˇti⁄
 = 
°d
::
make_unique
<
ThªadFun˘i⁄WôhRëu∫VÆueInvoˇti⁄
>(
íåyPoöt
, 
	gd©a
);

154  
¸óãThªad
(
com∑tE¡ryPoöt
, 
övoˇti⁄
.
ªÀa£
(), 0);

	@Threading.h

59 #i‚de‡
Thªadög_h


60 
	#Thªadög_h


	)

62 
	~<°döt.h
>

63 
	~<wtf/As£πi⁄s.h
>

64 
	~<wtf/Atomics.h
>

65 
	~<wtf/Lockî.h
>

66 
	~<wtf/N⁄c›yabÀ.h
>

67 
	~<wtf/ThªadSa„RefCou¡ed.h
>

68 
	~<wtf/ThªadögPrimôives.h
>

70 
«me•a˚
 
	gWTF
 {

72 
uöt32_t
 
	tThªadIdítifõr
;

73 (*
	gThªadFun˘i⁄
)(* 
	t¨gumít
);

78 
WTF_EXPORT_PRIVATE
 
öôülizeThªadög
();

82 
WTF_EXPORT_PRIVATE
 
ThªadIdítifõr
 
¸óãThªad
(
ThªadFun˘i⁄
, *, c⁄° * 
thªadName
);

85 
WTF_EXPORT_PRIVATE
 
£tCuºítThªadIsU£rI¡îa˘ive
();

87 
WTF_EXPORT_PRIVATE
 
£tCuºítThªadIsU£rInôüãd
();

90 
ThªadIdítifõr
 
¸óãThªadI¡î«l
(
ThªadFun˘i⁄
, *, c⁄° * 
thªadName
);

94 
öôülizeCuºítThªadI¡î«l
(c⁄° * 
thªadName
);

96 
WTF_EXPORT_PRIVATE
 
ThªadIdítifõr
 
cuºítThªad
();

97 
WTF_EXPORT_PRIVATE
 
ch™geThªadPri‹ôy
(
ThªadIdítifõr
, );

98 
WTF_EXPORT_PRIVATE
 
waôF‹ThªadCom∂ëi⁄
(
ThªadIdítifõr
);

99 
WTF_EXPORT_PRIVATE
 
dëachThªad
(
ThªadIdítifõr
);

103 
usög
 
	gWTF
::
ThªadIdítifõr
;

104 
usög
 
	gWTF
::
¸óãThªad
;

105 
usög
 
	gWTF
::
cuºítThªad
;

106 
usög
 
	gWTF
::
ch™geThªadPri‹ôy
;

107 
usög
 
	gWTF
::
dëachThªad
;

108 
usög
 
	gWTF
::
waôF‹ThªadCom∂ëi⁄
;

	@ThreadingPrimitives.h

31 #i‚de‡
ThªadögPrimôives_h


32 
	#ThªadögPrimôives_h


	)

34 
	~<wtf/As£πi⁄s.h
>

35 
	~<wtf/Fa°MÆloc.h
>

36 
	~<wtf/Lockî.h
>

37 
	~<wtf/N⁄c›yabÀ.h
>

39 #i‡
OS
(
WINDOWS
)

40 
	~<wödows.h
>

43 #i‡
USE
(
PTHREADS
)

44 
	~<±hªad.h
>

47 
«me•a˚
 
	gWTF
 {

49 #i‡
USE
(
PTHREADS
)

50 
±hªad_muãx_t
 
	tPœtf‹mMuãx
;

51 
±hªad_c⁄d_t
 
	tPœtf‹mC⁄dôi⁄
;

52 #ñi‡
OS
(
WINDOWS
)

53 
	sPœtf‹mMuãx
 {

54 
CRITICAL_SECTION
 
	gm_öã∫ÆMuãx
;

55 
size_t
 
	gm_ªcursi⁄Cou¡
;

57 
	sPœtf‹mC⁄dôi⁄
 {

58 
size_t
 
	gm_waôîsG⁄e
;

59 
size_t
 
	gm_waôîsBlocked
;

60 
size_t
 
	gm_waôîsToUnblock
;

61 
HANDLE
 
	gm_blockLock
;

62 
HANDLE
 
	gm_blockQueue
;

63 
HANDLE
 
	gm_unblockLock
;

65 
boﬁ
 
timedWaô
(
Pœtf‹mMuãx
&, 
DWORD
 
duøti⁄Mûli£c⁄ds
);

66 
sig«l
(
boﬁ
 
unblockAŒ
);

69 * 
	tPœtf‹mMuãx
;

70 * 
	tPœtf‹mC⁄dôi⁄
;

73 ˛as†
	cMuãx
 {

74 
WTF_MAKE_NONCOPYABLE
(
Muãx
); 
	gWTF_MAKE_FAST_ALLOCATED
;

75 
	gpublic
:

76 
WTF_EXPORT_PRIVATE
 
Muãx
();

77 
	gWTF_EXPORT_PRIVATE
 ~
Muãx
();

79 
WTF_EXPORT_PRIVATE
 
lock
();

80 
WTF_EXPORT_PRIVATE
 
boﬁ
 
åyLock
();

81 
WTF_EXPORT_PRIVATE
 
u∆ock
();

83 
	gpublic
:

84 
Pœtf‹mMuãx
& 
im∂
(Ë{  
m_muãx
; }

85 
	g¥iv©e
:

86 
Pœtf‹mMuãx
 
m_muãx
;

89 
	gLockî
<
	tMuãx
> 
	tMuãxLockî
;

91 ˛as†
	cThªadC⁄dôi⁄
 {

92 
WTF_MAKE_NONCOPYABLE
(
ThªadC⁄dôi⁄
);

93 
	gpublic
:

94 
WTF_EXPORT_PRIVATE
 
ThªadC⁄dôi⁄
();

95 
	gWTF_EXPORT_PRIVATE
 ~
ThªadC⁄dôi⁄
();

97 
WTF_EXPORT_PRIVATE
 
waô
(
Muãx
& 
muãx
);

100 
WTF_EXPORT_PRIVATE
 
boﬁ
 
timedWaô
(
Muãx
&, 
absﬁuãTime
);

101 
WTF_EXPORT_PRIVATE
 
sig«l
();

102 
WTF_EXPORT_PRIVATE
 
brﬂdˇ°
();

104 
	g¥iv©e
:

105 
Pœtf‹mC⁄dôi⁄
 
m_c⁄dôi⁄
;

108 #i‡
	$OS
(
WINDOWS
)

111 
WTF_EXPORT_PRIVATE
 
DWORD
 
	`absﬁuãTimeToWaôTimeoutI¡îvÆ
(
absﬁuãTime
);

114 
	}
}

116 
usög
 
	gWTF
::
Muãx
;

117 
usög
 
	gWTF
::
MuãxLockî
;

118 
usög
 
	gWTF
::
ThªadC⁄dôi⁄
;

120 #i‡
OS
(
WINDOWS
)

121 
usög
 
	gWTF
::
absﬁuãTimeToWaôTimeoutI¡îvÆ
;

	@ThreadingPthreads.cpp

31 
	~"c⁄fig.h
"

32 
	~"Thªadög.h
"

34 #i‡
USE
(
PTHREADS
)

36 
	~"CuºítTime.h
"

37 
	~"D©eM©h.h
"

38 
	~"dtﬂ.h
"

39 
	~"dtﬂ/ˇched-powîs.h
"

40 
	~"HashM≠.h
"

41 
	~"R™domNumbîSìd.h
"

42 
	~"SèckSèts.h
"

43 
	~"StdLibExåas.h
"

44 
	~"ThªadFun˘i⁄Invoˇti⁄.h
"

45 
	~"ThªadIdítifõrD©aPthªads.h
"

46 
	~"ThªadS≥cific.h
"

47 
	~<wtf/D©aLog.h
>

48 
	~<wtf/RawPoöãr.h
>

49 
	~<wtf/WTFThªadD©a.h
>

50 
	~<î∫o.h
>

52 #i‡!
COMPILER
(
MSVC
)

53 
	~<limôs.h
>

54 
	~<sched.h
>

55 
	~<sys/time.h
>

58 #i‡
OS
(
MAC_OS_X
)

59 
	~<objc/objc-auto.h
>

62 
«me•a˚
 
	gWTF
 {

64 ˛as†
	cPthªadSèã
 {

65 
	gWTF_MAKE_FAST_ALLOCATED
;

66 
	gpublic
:

67 
	eJoöabÀSèã
 {

68 
JoöabÀ
,

70 
	gJoöed
,

75 
	gDëached


79 
PthªadSèã
(
±hªad_t
 
h™dÀ
)

80 : 
m_joöabÀSèã
(
JoöabÀ
)

81 , 
m_didExô
(
Ál£
)

82 , 
m_±hªadH™dÀ
(
h™dÀ
)

86 
JoöabÀSèã
 
joöabÀSèã
(Ë{  
	gm_joöabÀSèã
; }

87 
±hªad_t
 
±hªadH™dÀ
(Ë{  
	gm_±hªadH™dÀ
; }

88 
didBecomeDëached
(Ë{ 
	gm_joöabÀSèã
 = 
Dëached
; }

89 
didExô
(Ë{ 
	gm_didExô
 = 
åue
; }

90 
didJoö
(Ë{ 
	gm_joöabÀSèã
 = 
Joöed
; }

91 
boﬁ
 
hasExôed
(Ë{  
	gm_didExô
; }

93 
	g¥iv©e
:

94 
JoöabÀSèã
 
m_joöabÀSèã
;

95 
boﬁ
 
	gm_didExô
;

96 
±hªad_t
 
	gm_±hªadH™dÀ
;

99 
	gHashM≠
<
	tThªadIdítifõr
, 
	t°d
::
	tunique_±r
<
	tPthªadSèã
>> 
	tThªadM≠
;

101 
unß„ThªadWasDëached
(
ThªadIdítifõr
);

102 
thªadDidExô
(
ThªadIdítifõr
);

103 
thªadWasJoöed
(
ThªadIdítifõr
);

105 
	gMuãx
& 
	$thªadM≠Muãx
()

107 
	`DEPRECATED_DEFINE_STATIC_LOCAL
(
Muãx
, 
muãx
, ());

108  
muãx
;

109 
	}
}

111 
	$öôülizeThªadög
()

113 
boﬁ
 
isInôülized
;

115 i‡(
isInôülized
)

118 
isInôülized
 = 
åue
;

120 
WTF
::
doubÀ_c⁄vîsi⁄
::
	`öôülize
();

123 
SåögIm∂
::
	`em±y
();

124 
	`thªadM≠Muãx
();

125 
	`öôülizeR™domNumbîGíî©‹
();

126 
ThªadIdítifõrD©a
::
	`öôülizeOn˚
();

127 
SèckSèts
::
	`öôülize
();

128 
	`wtfThªadD©a
();

129 
s_dtﬂP5Muãx
 = 
√w
 
Muãx
;

130 
	`öôülizeD©es
();

131 
	}
}

133 
	gThªadM≠
& 
	$thªadM≠
()

135 
	`DEPRECATED_DEFINE_STATIC_LOCAL
(
ThªadM≠
, 
m≠
, ());

136  
m≠
;

137 
	}
}

139 
ThªadIdítifõr
 
	$idítifõrByPthªadH™dÀ
(c⁄° 
±hªad_t
& 
±hªadH™dÀ
)

141 
MuãxLockî
 
	`lockî
(
	`thªadM≠Muãx
());

143 
ThªadM≠
::
ôî©‹
 
i
 = 
	`thªadM≠
().
	`begö
();

144 ; 
i
 !
	`thªadM≠
().
	`íd
(); ++i) {

145 i‡(
	`±hªad_equÆ
(
i
->
vÆue
->
	`±hªadH™dÀ
(), 
±hªadH™dÀ
Ë&& !i->vÆue->
	`hasExôed
())

146  
i
->
key
;

150 
	}
}

152 
ThªadIdítifõr
 
	$e°ablishIdítifõrF‹PthªadH™dÀ
(c⁄° 
±hªad_t
& 
±hªadH™dÀ
)

154 
	`ASSERT
(!
	`idítifõrByPthªadH™dÀ
(
±hªadH™dÀ
));

155 
MuãxLockî
 
	`lockî
(
	`thªadM≠Muãx
());

156 
ThªadIdítifõr
 
idítifõrCou¡
 = 1;

157 
	`thªadM≠
().
	`add
(
idítifõrCou¡
, 
°d
::
make_unique
<
PthªadSèã
>(
±hªadH™dÀ
));

158  
idítifõrCou¡
++;

159 
	}
}

161 
±hªad_t
 
	$±hªadH™dÀF‹IdítifõrWôhLockAÃódyHñd
(
ThªadIdítifõr
 
id
)

163  
	`thªadM≠
().
	`gë
(
id
)->
	`±hªadH™dÀ
();

164 
	}
}

166 * 
	$wtfThªadE¡ryPoöt
(* 
∑øm
)

169 autÿ
övoˇti⁄
 = 
°d
::
unique_±r
<
ThªadFun˘i⁄Invoˇti⁄
>(
°©ic_ˇ°
<ThªadFun˘i⁄Invoˇti⁄*>(
∑øm
));

170 
övoˇti⁄
->
	`fun˘i⁄
(övoˇti⁄->
d©a
);

171  
nuŒ±r
;

172 
	}
}

174 
ThªadIdítifõr
 
	$¸óãThªadI¡î«l
(
ThªadFun˘i⁄
 
íåyPoöt
, * 
d©a
, const *)

176 autÿ
övoˇti⁄
 = 
°d
::
make_unique
<
ThªadFun˘i⁄Invoˇti⁄
>(
íåyPoöt
, 
d©a
);

177 
±hªad_t
 
thªadH™dÀ
;

178 
±hªad_©å_t
 
©å
;

179 
	`±hªad_©å_öô
(&
©å
);

180 #i‡
	`HAVE
(
QOS_CLASSES
)

181 
	`±hªad_©å_£t_qos_˛ass_≈
(&
©å
, 
QOS_CLASS_USER_INITIATED
, 0);

183 
îr‹
 = 
	`±hªad_¸óã
(&
thªadH™dÀ
, &
©å
, 
wtfThªadE¡ryPoöt
, 
övoˇti⁄
.
	`gë
());

184 
	`±hªad_©å_de°roy
(&
©å
);

185 i‡(
îr‹
) {

186 
	`LOG_ERROR
("FaûedÅÿ¸óãÖthªadáàíåyÖoöà%∞wôh d©®%p", 
wtfThªadE¡ryPoöt
, 
övoˇti⁄
.
	`gë
());

191 
ThªadFun˘i⁄Invoˇti⁄
* 
ÀakedInvoˇti⁄
 = 
övoˇti⁄
.
	`ªÀa£
();

192 
	`UNUSED_PARAM
(
ÀakedInvoˇti⁄
);

194  
	`e°ablishIdítifõrF‹PthªadH™dÀ
(
thªadH™dÀ
);

195 
	}
}

197 
	$öôülizeCuºítThªadI¡î«l
(c⁄° * 
thªadName
)

199 #i‡
	`HAVE
(
PTHREAD_SETNAME_NP
)

200 
	`±hªad_£äame_≈
(
thªadName
);

202 
	`UNUSED_PARAM
(
thªadName
);

205 #i‡
	`OS
(
MAC_OS_X
)

208 
	`objc_ªgi°îThªadWôhCﬁÀ˘‹
();

211 
ThªadIdítifõr
 
id
 = 
	`idítifõrByPthªadH™dÀ
(
	`±hªad_£lf
());

212 
	`ASSERT
(
id
);

213 
ThªadIdítifõrD©a
::
	`öôülize
(
id
);

214 
	}
}

216 
	$ch™geThªadPri‹ôy
(
ThªadIdítifõr
 
thªadID
, 
dñè
)

218 
±hªad_t
 
±hªadH™dÀ
;

219 
	`ASSERT
(
thªadID
);

222 
MuãxLockî
 
	`lockî
(
	`thªadM≠Muãx
());

223 
±hªadH™dÀ
 = 
	`±hªadH™dÀF‹IdítifõrWôhLockAÃódyHñd
(
thªadID
);

224 
	`ASSERT
(
±hªadH™dÀ
);

227 
pﬁicy
;

228 
sched_∑øm
 
∑øm
;

230 i‡(
	`±hªad_gësched∑øm
(
±hªadH™dÀ
, &
pﬁicy
, &
∑øm
))

233 
∑øm
.
sched_¥i‹ôy
 +
dñè
;

235 
	`±hªad_£tsched∑øm
(
±hªadH™dÀ
, 
pﬁicy
, &
∑øm
);

236 
	}
}

238 
	$waôF‹ThªadCom∂ëi⁄
(
ThªadIdítifõr
 
thªadID
)

240 
±hªad_t
 
±hªadH™dÀ
;

241 
	`ASSERT
(
thªadID
);

245 
MuãxLockî
 
	`lockî
(
	`thªadM≠Muãx
());

246 
±hªadH™dÀ
 = 
	`±hªadH™dÀF‹IdítifõrWôhLockAÃódyHñd
(
thªadID
);

247 
	`ASSERT
(
±hªadH™dÀ
);

250 
joöResu…
 = 
	`±hªad_joö
(
±hªadH™dÀ
, 0);

252 i‡(
joöResu…
 =
EDEADLK
)

253 
	`LOG_ERROR
("ThªadIdítifõ∏%u wa†foundÅÿbêdódlockedÅryögÅÿquô", 
thªadID
);

254 i‡(
joöResu…
)

255 
	`LOG_ERROR
("ThªadIdítifõ∏%u wa†u«bÀÅÿbêjoöed.\n", 
thªadID
);

257 
MuãxLockî
 
	`lockî
(
	`thªadM≠Muãx
());

258 
PthªadSèã
* 
°©e
 = 
	`thªadM≠
().
	`gë
(
thªadID
);

259 
	`ASSERT
(
°©e
);

260 
	`ASSERT
(
°©e
->
	`joöabÀSèã
(Ë=
PthªadSèã
::
JoöabÀ
);

263 i‡(
°©e
->
	`hasExôed
())

264 
	`thªadM≠
().
	`ªmove
(
thªadID
);

267 
°©e
->
	`didJoö
();

269  
joöResu…
;

270 
	}
}

272 
	$dëachThªad
(
ThªadIdítifõr
 
thªadID
)

274 
	`ASSERT
(
thªadID
);

276 
MuãxLockî
 
	`lockî
(
	`thªadM≠Muãx
());

277 
±hªad_t
 
±hªadH™dÀ
 = 
	`±hªadH™dÀF‹IdítifõrWôhLockAÃódyHñd
(
thªadID
);

278 
	`ASSERT
(
±hªadH™dÀ
);

280 
dëachResu…
 = 
	`±hªad_dëach
(
±hªadH™dÀ
);

281 i‡(
dëachResu…
)

282 
	`LOG_ERROR
("ThªadIdítifõ∏%u wa†u«bÀÅÿbêdëached\n", 
thªadID
);

284 
PthªadSèã
* 
°©e
 = 
	`thªadM≠
().
	`gë
(
thªadID
);

285 
	`ASSERT
(
°©e
);

286 i‡(
°©e
->
	`hasExôed
())

287 
	`thªadM≠
().
	`ªmove
(
thªadID
);

289 
	`thªadM≠
().
	`gë
(
thªadID
)->
	`didBecomeDëached
();

290 
	}
}

292 
	$thªadDidExô
(
ThªadIdítifõr
 
thªadID
)

294 
MuãxLockî
 
	`lockî
(
	`thªadM≠Muãx
());

295 
PthªadSèã
* 
°©e
 = 
	`thªadM≠
().
	`gë
(
thªadID
);

296 
	`ASSERT
(
°©e
);

298 
°©e
->
	`didExô
();

300 i‡(
°©e
->
	`joöabÀSèã
(Ë!
PthªadSèã
::
JoöabÀ
)

301 
	`thªadM≠
().
	`ªmove
(
thªadID
);

302 
	}
}

304 
ThªadIdítifõr
 
	$cuºítThªad
()

306 
ThªadIdítifõr
 
id
 = 
ThªadIdítifõrD©a
::
	`idítifõr
();

307 i‡(
id
)

308  
id
;

311 
id
 = 
	`e°ablishIdítifõrF‹PthªadH™dÀ
(
	`±hªad_£lf
());

312 
ThªadIdítifõrD©a
::
	`öôülize
(
id
);

313  
id
;

314 
	}
}

316 
	gMuãx
::
	$Muãx
()

318 
±hªad_muãx©å_t
 
©å
;

319 
	`±hªad_muãx©å_öô
(&
©å
);

320 
	`±hªad_muãx©å_£ây≥
(&
©å
, 
PTHREAD_MUTEX_NORMAL
);

322 
ªsu…
 = 
	`±hªad_muãx_öô
(&
m_muãx
, &
©å
);

323 
	`ASSERT_UNUSED
(
ªsu…
, !result);

325 
	`±hªad_muãx©å_de°roy
(&
©å
);

326 
	}
}

328 
	gMuãx
::~
	$Muãx
()

330 
ªsu…
 = 
	`±hªad_muãx_de°roy
(&
m_muãx
);

331 
	`ASSERT_UNUSED
(
ªsu…
, !result);

332 
	}
}

334 
	gMuãx
::
	$lock
()

336 
ªsu…
 = 
	`±hªad_muãx_lock
(&
m_muãx
);

337 
	`ASSERT_UNUSED
(
ªsu…
, !result);

338 
	}
}

340 
boﬁ
 
	gMuãx
::
	$åyLock
()

342 
ªsu…
 = 
	`±hªad_muãx_åylock
(&
m_muãx
);

344 i‡(
ªsu…
 == 0)

345  
åue
;

346 i‡(
ªsu…
 =
EBUSY
)

347  
Ál£
;

349 
	`ASSERT_NOT_REACHED
();

350  
Ál£
;

351 
	}
}

353 
	gMuãx
::
	$u∆ock
()

355 
ªsu…
 = 
	`±hªad_muãx_u∆ock
(&
m_muãx
);

356 
	`ASSERT_UNUSED
(
ªsu…
, !result);

357 
	}
}

359 
	gThªadC⁄dôi⁄
::
	$ThªadC⁄dôi⁄
()

361 
	`±hªad_c⁄d_öô
(&
m_c⁄dôi⁄
, 
NULL
);

362 
	}
}

364 
	gThªadC⁄dôi⁄
::~
	$ThªadC⁄dôi⁄
()

366 
	`±hªad_c⁄d_de°roy
(&
m_c⁄dôi⁄
);

367 
	}
}

369 
	gThªadC⁄dôi⁄
::
	$waô
(
Muãx
& 
muãx
)

371 
ªsu…
 = 
	`±hªad_c⁄d_waô
(&
m_c⁄dôi⁄
, &
muãx
.
	`im∂
());

372 
	`ASSERT_UNUSED
(
ªsu…
, !result);

373 
	}
}

375 
boﬁ
 
	gThªadC⁄dôi⁄
::
	$timedWaô
(
Muãx
& 
muãx
, 
absﬁuãTime
)

377 i‡(
absﬁuãTime
 < 
	`cuºítTime
())

378  
Ál£
;

380 i‡(
absﬁuãTime
 > 
INT_MAX
) {

381 
	`waô
(
muãx
);

382  
åue
;

385 
timeSec⁄ds
 = 
°©ic_ˇ°
<>(
absﬁuãTime
);

386 
timeN™o£c⁄ds
 = 
°©ic_ˇ°
<>((
absﬁuãTime
 - 
timeSec⁄ds
) * 1E9);

388 
time•ec
 
èrgëTime
;

389 
èrgëTime
.
tv_£c
 = 
timeSec⁄ds
;

390 
èrgëTime
.
tv_n£c
 = 
timeN™o£c⁄ds
;

392  
	`±hªad_c⁄d_timedwaô
(&
m_c⁄dôi⁄
, &
muãx
.
	`im∂
(), &
èrgëTime
) == 0;

393 
	}
}

395 
	gThªadC⁄dôi⁄
::
	$sig«l
()

397 
ªsu…
 = 
	`±hªad_c⁄d_sig«l
(&
m_c⁄dôi⁄
);

398 
	`ASSERT_UNUSED
(
ªsu…
, !result);

399 
	}
}

401 
	gThªadC⁄dôi⁄
::
	$brﬂdˇ°
()

403 
ªsu…
 = 
	`±hªad_c⁄d_brﬂdˇ°
(&
m_c⁄dôi⁄
);

404 
	`ASSERT_UNUSED
(
ªsu…
, !result);

405 
	}
}

	@ThreadingWin.cpp

86 
	~"c⁄fig.h
"

87 
	~"Thªadög.h
"

89 #i‡
OS
(
WINDOWS
)

91 
	~"D©eM©h.h
"

92 
	~"dtﬂ.h
"

93 
	~"dtﬂ/ˇched-powîs.h
"

95 
	~"MaöThªad.h
"

96 
	~"ThªadFun˘i⁄Invoˇti⁄.h
"

97 
	~<¥o˚ss.h
>

98 
	~<wödows.h
>

99 
	~<wtf/CuºítTime.h
>

100 
	~<wtf/HashM≠.h
>

101 
	~<wtf/M©hExåas.h
>

102 
	~<wtf/OwnPå.h
>

103 
	~<wtf/PassOwnPå.h
>

104 
	~<wtf/R™domNumbîSìd.h
>

105 
	~<wtf/WTFThªadD©a.h
>

107 #i‡!
USE
(
PTHREADS
Ë&& 
OS
(
WINDOWS
)

108 
	~"ThªadS≥cific.h
"

111 #i‡
HAVE
(
ERRNO_H
)

112 
	~<î∫o.h
>

115 
«me•a˚
 
	gWTF
 {

118 c⁄° 
DWORD
 
	gMS_VC_EXCEPTION
 = 0x406D1388;

120 #¥agm®
∑ck
(
push
, 8)

121 
	sègTHREADNAME_INFO
 {

122 
DWORD
 
	gdwTy≥
;

123 
LPCSTR
 
	gszName
;

124 
DWORD
 
	gdwThªadID
;

125 
DWORD
 
	gdwFœgs
;

126 } 
	tTHREADNAME_INFO
;

127 #¥agm®
∑ck
(
p›
)

129 
öôülizeCuºítThªadI¡î«l
(c⁄° * 
szThªadName
)

131 #i‡
COMPILER
(
MINGW
)

133 
UNUSED_PARAM
(
szThªadName
);

135 
THREADNAME_INFO
 
	göfo
;

136 
	göfo
.
	gdwTy≥
 = 0x1000;

137 
	göfo
.
	gszName
 = 
szThªadName
;

138 
	göfo
.
	gdwThªadID
 = 
GëCuºítThªadId
();

139 
	göfo
.
	gdwFœgs
 = 0;

141 
	g__åy
 {

142 
Rai£Ex˚±i⁄
(
MS_VC_EXCEPTION
, 0, (
öfo
)/(
ULONG_PTR
), 
ªöãΩªt_ˇ°
<ULONG_PTR*>(&info));

143 } 
__ex˚±
 (
EXCEPTION_CONTINUE_EXECUTION
) {

148 
	gMuãx
& 
thªadM≠Muãx
()

150 
Muãx
 
	gmuãx
;

151  
	gmuãx
;

154 
öôülizeThªadög
()

156 
boﬁ
 
	gisInôülized
;

158 i‡(
	gisInôülized
)

161 
	gisInôülized
 = 
åue
;

163 
	gWTF
::
doubÀ_c⁄vîsi⁄
::
öôülize
();

166 
	gSåögIm∂
::
em±y
();

167 
thªadM≠Muãx
();

168 
öôülizeR™domNumbîGíî©‹
();

169 
wtfThªadD©a
();

170 
	gs_dtﬂP5Muãx
 = 
√w
 
Muãx
;

171 
öôülizeD©es
();

174 
	gHashM≠
<
	gDWORD
, 
	gHANDLE
>& 
thªadM≠
()

176 
	gHashM≠
<
	gDWORD
, 
	gHANDLE
> 
	gm≠
;

177  
	gm≠
;

180 
°‹eThªadH™dÀByIdítifõr
(
DWORD
 
thªadID
, 
HANDLE
 
thªadH™dÀ
)

182 
MuãxLockî
 
lockî
(
thªadM≠Muãx
());

183 
ASSERT
(!
thªadM≠
().
c⁄èös
(
thªadID
));

184 
thªadM≠
().
add
(
thªadID
, 
thªadH™dÀ
);

187 
HANDLE
 
thªadH™dÀF‹Idítifõr
(
ThªadIdítifõr
 
id
)

189 
MuãxLockî
 
lockî
(
thªadM≠Muãx
());

190  
thªadM≠
().
gë
(
id
);

193 
˛órThªadH™dÀF‹Idítifõr
(
ThªadIdítifõr
 
id
)

195 
MuãxLockî
 
lockî
(
thªadM≠Muãx
());

196 
ASSERT
(
thªadM≠
().
c⁄èös
(
id
));

197 
thªadM≠
().
ªmove
(
id
);

200 
__°dˇŒ
 
wtfThªadE¡ryPoöt
(* 
∑øm
)

202 
	gOwnPå
<
	gThªadFun˘i⁄Invoˇti⁄
> 
	gövoˇti⁄
 = 
ad›tPå
(
°©ic_ˇ°
<
ThªadFun˘i⁄Invoˇti⁄
*>(
∑øm
));

203 
	gövoˇti⁄
->
fun˘i⁄
(
övoˇti⁄
->
d©a
);

205 #i‡!
USE
(
PTHREADS
Ë&& 
OS
(
WINDOWS
)

207 
ThªadS≥cificThªadExô
();

213 
ThªadIdítifõr
 
¸óãThªadI¡î«l
(
ThªadFun˘i⁄
 
íåyPoöt
, * 
d©a
, c⁄° * 
thªadName
)

215 
	gthªadIdítifõr
 = 0;

216 
ThªadIdítifõr
 
	gthªadID
 = 0;

217 
	gOwnPå
<
	gThªadFun˘i⁄Invoˇti⁄
> 
	gövoˇti⁄
 = 
ad›tPå
(
√w
 
ThªadFun˘i⁄Invoˇti⁄
(
íåyPoöt
, 
d©a
));

218 
HANDLE
 
	gthªadH™dÀ
 = 
ªöãΩªt_ˇ°
<HANDLE>(
_begöthªadex
(0, 0, 
wtfThªadE¡ryPoöt
, 
övoˇti⁄
.
gë
(), 0, &
thªadIdítifõr
));

219 i‡(!
	gthªadH™dÀ
) {

220 #i‡!
HAVE
(
ERRNO_H
)

221 
LOG_ERROR
("FaûedÅÿ¸óãÅhªadáàíåyÖoöà%∞wôh d©®%p.", 
íåyPoöt
, 
d©a
);

223 
LOG_ERROR
("FaûedÅÿ¸óãÅhªadáàíåyÖoöà%∞wôh d©®%p: %ld", 
íåyPoöt
, 
d©a
, 
î∫o
);

229 
ThªadFun˘i⁄Invoˇti⁄
* 
	gÀakedInvoˇti⁄
 = 
övoˇti⁄
.
ÀakPå
();

230 
UNUSED_PARAM
(
ÀakedInvoˇti⁄
);

232 
	gthªadID
 = 
°©ic_ˇ°
<
ThªadIdítifõr
>(
thªadIdítifõr
);

233 
°‹eThªadH™dÀByIdítifõr
(
thªadIdítifõr
, 
thªadH™dÀ
);

235  
	gthªadID
;

238 
ch™geThªadPri‹ôy
(
ThªadIdítifõr
 
thªadID
, 
dñè
)

240 
ASSERT
(
thªadID
);

242 
HANDLE
 
	gthªadH™dÀ
 = 
thªadH™dÀF‹Idítifõr
(
thªadID
);

243 i‡(!
	gthªadH™dÀ
)

244 
LOG_ERROR
("ThªadIdítifõ∏%u d€†nŸ c‹ª•⁄dÅÿ™á˘ivêthªad", 
thªadID
);

246 
SëThªadPri‹ôy
(
thªadH™dÀ
, 
THREAD_PRIORITY_NORMAL
 + 
dñè
);

249 
waôF‹ThªadCom∂ëi⁄
(
ThªadIdítifõr
 
thªadID
)

251 
ASSERT
(
thªadID
);

253 
HANDLE
 
	gthªadH™dÀ
 = 
thªadH™dÀF‹Idítifõr
(
thªadID
);

254 i‡(!
	gthªadH™dÀ
)

255 
LOG_ERROR
("ThªadIdítifõ∏%u didÇŸ c‹ª•⁄dÅÿ™á˘ivêthªad whíÅryögÅÿquô", 
thªadID
);

257 
DWORD
 
	gjoöResu…
 = 
WaôF‹SögÀObje˘
(
thªadH™dÀ
, 
INFINITE
);

258 i‡(
	gjoöResu…
 =
WAIT_FAILED
)

259 
LOG_ERROR
("ThªadIdítifõ∏%u wa†foundÅÿbêdódlockedÅryögÅÿquô", 
thªadID
);

261 
Clo£H™dÀ
(
thªadH™dÀ
);

262 
˛órThªadH™dÀF‹Idítifõr
(
thªadID
);

264  
	gjoöResu…
;

267 
dëachThªad
(
ThªadIdítifõr
 
thªadID
)

269 
ASSERT
(
thªadID
);

271 
HANDLE
 
	gthªadH™dÀ
 = 
thªadH™dÀF‹Idítifõr
(
thªadID
);

272 i‡(
	gthªadH™dÀ
)

273 
Clo£H™dÀ
(
thªadH™dÀ
);

274 
˛órThªadH™dÀF‹Idítifõr
(
thªadID
);

277 
ThªadIdítifõr
 
cuºítThªad
()

279  
	g°©ic_ˇ°
<
	gThªadIdítifõr
>(
GëCuºítThªadId
());

282 
	gMuãx
::
Muãx
()

284 
m_muãx
.
m_ªcursi⁄Cou¡
 = 0;

285 
InôülizeCrôiˇlSe˘i⁄
(&
m_muãx
.
m_öã∫ÆMuãx
);

288 
	gMuãx
::~
Muãx
()

290 
DñëeCrôiˇlSe˘i⁄
(&
m_muãx
.
m_öã∫ÆMuãx
);

293 
	gMuãx
::
lock
()

295 
E¡îCrôiˇlSe˘i⁄
(&
m_muãx
.
m_öã∫ÆMuãx
);

296 ++
	gm_muãx
.
	gm_ªcursi⁄Cou¡
;

299 
boﬁ
 
	gMuãx
::
åyLock
()

307 
DWORD
 
ªsu…
 = 
TryE¡îCrôiˇlSe˘i⁄
(&
m_muãx
.
m_öã∫ÆMuãx
);

309 i‡(
	gªsu…
 != 0) {

313 i‡(
m_muãx
.
m_ªcursi⁄Cou¡
 > 0) {

314 
LóveCrôiˇlSe˘i⁄
(&
m_muãx
.
m_öã∫ÆMuãx
);

315  
	gÁl£
;

318 ++
	gm_muãx
.
	gm_ªcursi⁄Cou¡
;

319  
	gåue
;

322  
	gÁl£
;

325 
	gMuãx
::
u∆ock
()

327 
ASSERT
(
m_muãx
.
m_ªcursi⁄Cou¡
);

328 --
	gm_muãx
.
	gm_ªcursi⁄Cou¡
;

329 
LóveCrôiˇlSe˘i⁄
(&
m_muãx
.
m_öã∫ÆMuãx
);

332 
boﬁ
 
	gPœtf‹mC⁄dôi⁄
::
timedWaô
(
Pœtf‹mMuãx
& 
muãx
, 
DWORD
 
duøti⁄Mûli£c⁄ds
)

335 
DWORD
 
	gªs
 = 
WaôF‹SögÀObje˘
(
m_blockLock
, 
INFINITE
);

336 
ASSERT_UNUSED
(
ªs
,Ñe†=
WAIT_OBJECT_0
);

337 ++
	gm_waôîsBlocked
;

338 
	gªs
 = 
Rñó£Sem≠h‹e
(
m_blockLock
, 1, 0);

339 
ASSERT_UNUSED
(
ªs
,Ñes);

341 --
	gmuãx
.
	gm_ªcursi⁄Cou¡
;

342 
LóveCrôiˇlSe˘i⁄
(&
muãx
.
m_öã∫ÆMuãx
);

345 
boﬁ
 
	gtimedOut
 = (
WaôF‹SögÀObje˘
(
m_blockQueue
, 
duøti⁄Mûli£c⁄ds
Ë=
WAIT_TIMEOUT
);

347 
	gªs
 = 
WaôF‹SögÀObje˘
(
m_unblockLock
, 
INFINITE
);

348 
ASSERT_UNUSED
(
ªs
,Ñe†=
WAIT_OBJECT_0
);

350 
	gsig«lsLe·
 = 
m_waôîsToUnblock
;

352 i‡(
	gm_waôîsToUnblock
)

353 --
	gm_waôîsToUnblock
;

354 i‡(++
	gm_waôîsG⁄e
 =(
INT_MAX
 / 2)) {

358 
ªs
 = 
WaôF‹SögÀObje˘
(
m_blockLock
, 
INFINITE
);

359 
ASSERT_UNUSED
(
ªs
,Ñe†=
WAIT_OBJECT_0
);

360 
	gm_waôîsBlocked
 -
m_waôîsG⁄e
;

361 
	gªs
 = 
Rñó£Sem≠h‹e
(
m_blockLock
, 1, 0);

362 
ASSERT_UNUSED
(
ªs
,Ñes);

363 
	gm_waôîsG⁄e
 = 0;

366 
	gªs
 = 
Rñó£Muãx
(
m_unblockLock
);

367 
ASSERT_UNUSED
(
ªs
,Ñes);

369 i‡(
	gsig«lsLe·
 == 1) {

370 
ªs
 = 
Rñó£Sem≠h‹e
(
m_blockLock
, 1, 0);

371 
ASSERT_UNUSED
(
ªs
,Ñes);

374 
E¡îCrôiˇlSe˘i⁄
 (&
muãx
.
m_öã∫ÆMuãx
);

375 ++
	gmuãx
.
	gm_ªcursi⁄Cou¡
;

377  !
	gtimedOut
;

380 
	gPœtf‹mC⁄dôi⁄
::
sig«l
(
boﬁ
 
unblockAŒ
)

382 
sig«lsToIssue
 = 0;

384 
DWORD
 
	gªs
 = 
WaôF‹SögÀObje˘
(
m_unblockLock
, 
INFINITE
);

385 
ASSERT_UNUSED
(
ªs
,Ñe†=
WAIT_OBJECT_0
);

387 i‡(
	gm_waôîsToUnblock
) {

388 i‡(!
	gm_waôîsBlocked
) {

389 
	gªs
 = 
Rñó£Muãx
(
m_unblockLock
);

390 
ASSERT_UNUSED
(
ªs
,Ñes);

394 i‡(
	gunblockAŒ
) {

395 
	gsig«lsToIssue
 = 
m_waôîsBlocked
;

396 
	gm_waôîsToUnblock
 +
m_waôîsBlocked
;

397 
	gm_waôîsBlocked
 = 0;

399 
	gsig«lsToIssue
 = 1;

400 ++
	gm_waôîsToUnblock
;

401 --
	gm_waôîsBlocked
;

403 } i‡(
	gm_waôîsBlocked
 > 
	gm_waôîsG⁄e
) {

404 
	gªs
 = 
WaôF‹SögÀObje˘
(
m_blockLock
, 
INFINITE
);

405 
ASSERT_UNUSED
(
ªs
,Ñe†=
WAIT_OBJECT_0
);

406 i‡(
	gm_waôîsG⁄e
 != 0) {

407 
m_waôîsBlocked
 -
m_waôîsG⁄e
;

408 
	gm_waôîsG⁄e
 = 0;

410 i‡(
	gunblockAŒ
) {

411 
	gsig«lsToIssue
 = 
m_waôîsBlocked
;

412 
	gm_waôîsToUnblock
 = 
m_waôîsBlocked
;

413 
	gm_waôîsBlocked
 = 0;

415 
	gsig«lsToIssue
 = 1;

416 
	gm_waôîsToUnblock
 = 1;

417 --
	gm_waôîsBlocked
;

420 
	gªs
 = 
Rñó£Muãx
(
m_unblockLock
);

421 
ASSERT_UNUSED
(
ªs
,Ñes);

425 
	gªs
 = 
Rñó£Muãx
(
m_unblockLock
);

426 
ASSERT_UNUSED
(
ªs
,Ñes);

428 i‡(
	gsig«lsToIssue
) {

429 
	gªs
 = 
Rñó£Sem≠h‹e
(
m_blockQueue
, 
sig«lsToIssue
, 0);

430 
ASSERT_UNUSED
(
ªs
,Ñes);

434 c⁄° 
	gMaxSem≠h‹eCou¡
 = 
°©ic_ˇ°
<>(~0UL >> 1);

436 
	gThªadC⁄dôi⁄
::
ThªadC⁄dôi⁄
()

438 
m_c⁄dôi⁄
.
m_waôîsG⁄e
 = 0;

439 
	gm_c⁄dôi⁄
.
	gm_waôîsBlocked
 = 0;

440 
	gm_c⁄dôi⁄
.
	gm_waôîsToUnblock
 = 0;

441 
	gm_c⁄dôi⁄
.
	gm_blockLock
 = 
Cª©eSem≠h‹e
(0, 1, 1, 0);

442 
	gm_c⁄dôi⁄
.
	gm_blockQueue
 = 
Cª©eSem≠h‹e
(0, 0, 
MaxSem≠h‹eCou¡
, 0);

443 
	gm_c⁄dôi⁄
.
	gm_unblockLock
 = 
Cª©eMuãx
(0, 0, 0);

445 i‡(!
	gm_c⁄dôi⁄
.
	gm_blockLock
 || !m_c⁄dôi⁄.
	gm_blockQueue
 || !m_c⁄dôi⁄.
	gm_unblockLock
) {

446 i‡(
	gm_c⁄dôi⁄
.
	gm_blockLock
)

447 
Clo£H™dÀ
(
m_c⁄dôi⁄
.
m_blockLock
);

448 i‡(
	gm_c⁄dôi⁄
.
	gm_blockQueue
)

449 
Clo£H™dÀ
(
m_c⁄dôi⁄
.
m_blockQueue
);

450 i‡(
	gm_c⁄dôi⁄
.
	gm_unblockLock
)

451 
Clo£H™dÀ
(
m_c⁄dôi⁄
.
m_unblockLock
);

455 
	gThªadC⁄dôi⁄
::~
ThªadC⁄dôi⁄
()

457 
Clo£H™dÀ
(
m_c⁄dôi⁄
.
m_blockLock
);

458 
Clo£H™dÀ
(
m_c⁄dôi⁄
.
m_blockQueue
);

459 
Clo£H™dÀ
(
m_c⁄dôi⁄
.
m_unblockLock
);

462 
	gThªadC⁄dôi⁄
::
waô
(
Muãx
& 
muãx
)

464 
m_c⁄dôi⁄
.
timedWaô
(
muãx
.
im∂
(), 
INFINITE
);

467 
boﬁ
 
	gThªadC⁄dôi⁄
::
timedWaô
(
Muãx
& 
muãx
, 
absﬁuãTime
)

469 
DWORD
 
	göãrvÆ
 = 
absﬁuãTimeToWaôTimeoutI¡îvÆ
(
absﬁuãTime
);

471 i‡(!
	göãrvÆ
) {

474  
	gÁl£
;

477  
	gm_c⁄dôi⁄
.
timedWaô
(
muãx
.
im∂
(), 
öãrvÆ
);

480 
	gThªadC⁄dôi⁄
::
sig«l
()

482 
m_c⁄dôi⁄
.
sig«l
(
Ál£
);

485 
	gThªadC⁄dôi⁄
::
brﬂdˇ°
()

487 
m_c⁄dôi⁄
.
sig«l
(
åue
);

490 
DWORD
 
absﬁuãTimeToWaôTimeoutI¡îvÆ
(
absﬁuãTime
)

492 
	gcuºítTime
 = 
WTF
::
cuºítTime
();

495 i‡(
	gabsﬁuãTime
 < 
	gcuºítTime
)

499 i‡(
	gabsﬁuãTime
 - 
	gcuºítTime
 > 
	g°©ic_ˇ°
<>(
	gINT_MAX
) / 1000.0)

500  
	gINFINITE
;

502  
	g°©ic_ˇ°
<
	gDWORD
>((
	gabsﬁuãTime
 - 
	gcuºítTime
) * 1000.0);

	@TriState.h

26 #i‚de‡
TriSèã_h


27 
	#TriSèã_h


	)

29 
«me•a˚
 
	gWTF
 {

31 
	eTriSèã
 {

32 
	gFÆ£TriSèã
,

33 
	gTrueTriSèã
,

34 
	gMixedTriSèã


37 
ölöe
 
TriSèã
 
åiSèã
(
boﬁ
 
boﬁón
)

39  
	g°©ic_ˇ°
<
	gTriSèã
>(
	gboﬁón
);

44 
usög
 
	gWTF
::
TriSèã
;

45 
usög
 
	gWTF
::
FÆ£TriSèã
;

46 
usög
 
	gWTF
::
TrueTriSèã
;

47 
usög
 
	gWTF
::
MixedTriSèã
;

48 
usög
 
	gWTF
::
åiSèã
;

	@UniStdExtras.h

26 #i‚de‡
UniStdExåas_h


27 
	#UniStdExåas_h


	)

29 
	~<î∫o.h
>

30 
	~<uni°d.h
>

32 
«me•a˚
 
	gWTF
 {

34 
ölöe
 
˛o£WôhRëry
(
fûeDes¸ùt‹
)

36 
	gªt
;

37 #i‡
OS
(
LINUX
)

42 i‡((
	gªt
 = 
˛o£
(
fûeDes¸ùt‹
)Ë=-1 && 
î∫o
 =
EINTR
)

45 (
	gªt
 = 
˛o£
(
fûeDes¸ùt‹
)Ë=-1 && 
î∫o
 =
EINTR
) { }

47  
ªt
;

52 
usög
 
	gWTF
::
˛o£WôhRëry
;

	@UnionFind.h

26 #i‚de‡
Uni⁄Föd_h


27 
	#Uni⁄Föd_h


	)

29 
	~<wtf/As£πi⁄s.h
>

31 
«me•a˚
 
	gWTF
 {

62 
	gãm∂©e
<
ty≥«me
 
	gT
>

63 ˛as†
	cUni⁄Föd
 {

64 
	gpublic
:

65 
Uni⁄Föd
()

66 : 
m_∑ª¡
(0)

70 
boﬁ
 
isRoŸ
() const

72 
boﬁ
 
ªsu…
 = !
m_∑ª¡
;

73 
ASSERT
(
ªsu…
 =(
c⁄°_ˇ°
<
Uni⁄Föd
<
T
>*>(
this
)->
föd
() ==Åhis));

74  
	gªsu…
;

77 
T
* 
föd
()

79 
T
* 
	gªsu…
 = 
°©ic_ˇ°
<T*>(
this
);

80 
T
* 
	g√xt
 = 
ªsu…
->
m_∑ª¡
;

81 
	g√xt
) {

82 
	gªsu…
 = 
√xt
;

83 
	g√xt
 = 
ªsu…
->
m_∑ª¡
;

85 
ASSERT
(
ªsu…
);

86 i‡(
	gªsu…
 !
this
)

87 
m_∑ª¡
 = 
ªsu…
;

88  
	gªsu…
;

91 
unify
(
T
* 
Ÿhî
)

93 
T
* 
	ga
 = 
°©ic_ˇ°
<T*>(
this
)->
föd
();

94 
T
* 
	gb
 = 
Ÿhî
->
föd
();

96 
ASSERT
(!
a
->
m_∑ª¡
);

97 
ASSERT
(!
b
->
m_∑ª¡
);

99 i‡(
	ga
 =
b
)

102 
	ga
->
	gm_∑ª¡
 = 
b
;

104 
	g¥iv©e
:

105 
T
* 
m_∑ª¡
;

110 
usög
 
	gWTF
::
Uni⁄Föd
;

	@VMTags.h

26 #i‚de‡
VMTags_h


27 
	#VMTags_h


	)

31 #i‡
OS
(
DARWIN
)

33 
	~<mach/vm_°©i°ics.h
>

35 #i‡
deföed
(
VM_MEMORY_TCMALLOC
)

36 
	#VM_TAG_FOR_TCMALLOC_MEMORY
 
	`VM_MAKE_TAG
(
VM_MEMORY_TCMALLOC
)

	)

38 
	#VM_TAG_FOR_TCMALLOC_MEMORY
 
	`VM_MAKE_TAG
(53)

	)

41 #i‡
deföed
(
VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR
)

42 
	#VM_TAG_FOR_EXECUTABLEALLOCATOR_MEMORY
 
	`VM_MAKE_TAG
(
VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR
)

	)

44 
	#VM_TAG_FOR_EXECUTABLEALLOCATOR_MEMORY
 
	`VM_MAKE_TAG
(64)

	)

47 #i‡
deföed
(
VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE
)

48 
	#VM_TAG_FOR_REGISTERFILE_MEMORY
 
	`VM_MAKE_TAG
(
VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE
)

	)

50 
	#VM_TAG_FOR_REGISTERFILE_MEMORY
 
	`VM_MAKE_TAG
(65)

	)

53 #i‡
deföed
(
VM_MEMORY_JAVASCRIPT_CORE
)

54 
	#VM_TAG_FOR_COLLECTOR_MEMORY
 
	`VM_MAKE_TAG
(
VM_MEMORY_JAVASCRIPT_CORE
)

	)

56 
	#VM_TAG_FOR_COLLECTOR_MEMORY
 
	`VM_MAKE_TAG
(63)

	)

61 
	#VM_TAG_FOR_TCMALLOC_MEMORY
 -1

	)

62 
	#VM_TAG_FOR_COLLECTOR_MEMORY
 -1

	)

63 
	#VM_TAG_FOR_EXECUTABLEALLOCATOR_MEMORY
 -1

	)

64 
	#VM_TAG_FOR_REGISTERFILE_MEMORY
 -1

	)

	@ValueCheck.h

26 #i‚de‡
VÆueCheck_h


27 
	#VÆueCheck_h


	)

29 
	~<wtf/Fa°MÆloc.h
>

31 
«me•a˚
 
	gWTF
 {

33 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sVÆueCheck
 {

34 
T
 
	tTøôTy≥
;

35 
checkC⁄si°ícy
(c⁄° 
T
&) { }

38 #i‡!
ASSERT_DISABLED


39 
	gãm∂©e
<
ty≥«me
 
	gP
> 
	gVÆueCheck
<P*> {

40 
P
* 
	tTøôTy≥
;

41 
checkC⁄si°ícy
(c⁄° 
P
* 
p
)

43 i‡(!
	gp
)

45 
ASSERT
(
Á°MÆlocSize
(
p
));

46 
	gVÆueCheck
<
	gP
>::
checkC⁄si°ícy
(*
p
);

	@Vector.h

21 #i‚de‡
WTF_Ve˘‹_h


22 
	#WTF_Ve˘‹_h


	)

24 
	~<öôülizî_li°
>

25 
	~<limôs
>

26 
	~<°rög.h
>

27 
	~<ty≥_åaôs
>

28 
	~<utûôy
>

29 
	~<wtf/CheckedArôhmëic.h
>

30 
	~<wtf/Fa°MÆloc.h
>

31 
	~<wtf/MÆlocPå.h
>

32 
	~<wtf/N⁄c›yabÀ.h
>

33 
	~<wtf/StdLibExåas.h
>

34 
	~<wtf/VÆueCheck.h
>

35 
	~<wtf/Ve˘‹Tøôs.h
>

37 
«me•a˚
 
	gWTF
 {

39 c⁄° 
size_t
 
	gnŸFound
 = 
°©ic_ˇ°
<size_t>(-1);

41 
	gãm∂©e
 <
boﬁ
 
	g√edsDe°ru˘i⁄
, 
ty≥«me
 
	gT
>

42 
	gVe˘‹De°ru˘‹
;

44 
	gãm∂©e
<
ty≥«me
 
	gT
>

45 
	gVe˘‹De°ru˘‹
<
	gÁl£
, 
	gT
>

47 
de°ru˘
(
T
*, T*) {}

50 
	gãm∂©e
<
ty≥«me
 
	gT
>

51 
	gVe˘‹De°ru˘‹
<
	gåue
, 
	gT
>

53 
de°ru˘
(
T
* 
begö
, T* 
íd
)

55 
T
* 
	gcur
 = 
begö
; cu∏!
íd
; ++cur)

56 
	gcur
->~
T
();

60 
	gãm∂©e
 <
boﬁ
 
	g√edsInôüliz©i⁄
, boﬁ 
	gˇnInôülizeWôhMem£t
, 
ty≥«me
 
	gT
>

61 
	gVe˘‹Inôülizî
;

63 
	gãm∂©e
<
boﬁ
 
	gign‹e
, 
ty≥«me
 
	gT
>

64 
	gVe˘‹Inôülizî
<
	gÁl£
, 
	gign‹e
, 
	gT
>

66 
öôülize
(
T
*, T*) {}

69 
	gãm∂©e
<
ty≥«me
 
	gT
>

70 
	gVe˘‹Inôülizî
<
	gåue
, 
	gÁl£
, 
	gT
>

72 
öôülize
(
T
* 
begö
, T* 
íd
)

74 
T
* 
	gcur
 = 
begö
; cu∏!
íd
; ++cur)

75 
√w
 (
NŸNuŒ
, 
cur
Ë
	gT
;

79 
	gãm∂©e
<
ty≥«me
 
	gT
>

80 
	gVe˘‹Inôülizî
<
	gåue
,Årue, 
	gT
>

82 
öôülize
(
T
* 
begö
, T* 
íd
)

84 
mem£t
(
begö
, 0, 
ªöãΩªt_ˇ°
<*>(
íd
) -Ñeinterpret_cast<*>(begin));

88 
	gãm∂©e
 <
boﬁ
 
	gˇnMoveWôhMem˝y
, 
ty≥«me
 
	gT
>

89 
	gVe˘‹Movî
;

91 
	gãm∂©e
<
ty≥«me
 
	gT
>

92 
	gVe˘‹Movî
<
	gÁl£
, 
	gT
>

94 
move
(
T
* 
§c
, T* 
§cEnd
, T* 
d°
)

96 
	g§c
 !
§cEnd
) {

97 
√w
 (
NŸNuŒ
, 
d°
Ë
T
(
WTF
::
move
(*
§c
));

98 
	g§c
->~
T
();

99 ++
	gd°
;

100 ++
	g§c
;

103 
moveOvîœµög
(
T
* 
§c
, T* 
§cEnd
, T* 
d°
)

105 i‡(
	g§c
 > 
	gd°
)

106 
move
(
§c
, 
§cEnd
, 
d°
);

108 
T
* 
	gd°End
 = 
d°
 + (
§cEnd
 - 
§c
);

109 
	g§c
 !
§cEnd
) {

110 --
§cEnd
;

111 --
	gd°End
;

112 
√w
 (
NŸNuŒ
, 
d°End
Ë
T
(
WTF
::
move
(*
§cEnd
));

113 
	g§cEnd
->~
T
();

119 
	gãm∂©e
<
ty≥«me
 
	gT
>

120 
	gVe˘‹Movî
<
	gåue
, 
	gT
>

122 
move
(c⁄° 
T
* 
§c
, c⁄° T* 
§cEnd
, T* 
d°
)

124 
mem˝y
(
d°
, 
§c
, 
ªöãΩªt_ˇ°
<c⁄° *>(
§cEnd
) -Ñeinterpret_cast<const *>(src));

126 
moveOvîœµög
(c⁄° 
T
* 
§c
, c⁄° T* 
§cEnd
, T* 
d°
)

128 
memmove
(
d°
, 
§c
, 
ªöãΩªt_ˇ°
<c⁄° *>(
§cEnd
) -Ñeinterpret_cast<const *>(src));

132 
	gãm∂©e
 <
boﬁ
 
	gˇnC›yWôhMem˝y
, 
ty≥«me
 
	gT
>

133 
	gVe˘‹C›õr
;

135 
	gãm∂©e
<
ty≥«me
 
	gT
>

136 
	gVe˘‹C›õr
<
	gÁl£
, 
	gT
>

138 
	gãm∂©e
<
ty≥«me
 
	gU
>

139 
unöôülizedC›y
(c⁄° 
T
* 
§c
, c⁄° T* 
§cEnd
, 
U
* 
d°
)

141 
	g§c
 !
§cEnd
) {

142 
√w
 (
NŸNuŒ
, 
d°
Ë
U
(*
§c
);

143 ++
	gd°
;

144 ++
	g§c
;

149 
	gãm∂©e
<
ty≥«me
 
	gT
>

150 
	gVe˘‹C›õr
<
	gåue
, 
	gT
>

152 
unöôülizedC›y
(c⁄° 
T
* 
§c
, c⁄° T* 
§cEnd
, T* 
d°
)

154 
mem˝y
(
d°
, 
§c
, 
ªöãΩªt_ˇ°
<c⁄° *>(
§cEnd
) -Ñeinterpret_cast<const *>(src));

156 
	gãm∂©e
<
ty≥«me
 
	gU
>

157 
unöôülizedC›y
(c⁄° 
T
* 
§c
, c⁄° T* 
§cEnd
, 
U
* 
d°
)

159 
	gVe˘‹C›õr
<
	gÁl£
, 
	gT
>::
unöôülizedC›y
(
§c
, 
§cEnd
, 
d°
);

163 
	gãm∂©e
 <
boﬁ
 
	gˇnFûlWôhMem£t
, 
ty≥«me
 
	gT
>

164 
	gVe˘‹FûÀr
;

166 
	gãm∂©e
<
ty≥«me
 
	gT
>

167 
	gVe˘‹FûÀr
<
	gÁl£
, 
	gT
>

169 
unöôülizedFûl
(
T
* 
d°
, T* 
d°End
, c⁄° T& 
vÆ
)

171 
	gd°
 !
d°End
) {

172 
√w
 (
NŸNuŒ
, 
d°
Ë
T
(
vÆ
);

173 ++
	gd°
;

178 
	gãm∂©e
<
ty≥«me
 
	gT
>

179 
	gVe˘‹FûÀr
<
	gåue
, 
	gT
>

181 
unöôülizedFûl
(
T
* 
d°
, T* 
d°End
, c⁄° T& 
vÆ
)

183 
°©ic_as£π
((
T
) == 1, "Size ofÅype T should beÉqualÅo one!");

184 #i‡
COMPILER
(
GCC
Ë&& 
deföed
(
_FORTIFY_SOURCE
)

185 i‡(!
__buûtö_c⁄°™t_p
(
d°End
 - 
d°
Ë|| (!(
	gd°End
 - 
	gd°
)))

187 
mem£t
(
d°
, 
vÆ
, 
d°End
 - dst);

191 
	gãm∂©e
<
boﬁ
 
	gˇnCom∑ªWôhMemcmp
, 
ty≥«me
 
	gT
>

192 
	gVe˘‹Com∑ªr
;

194 
	gãm∂©e
<
ty≥«me
 
	gT
>

195 
	gVe˘‹Com∑ªr
<
	gÁl£
, 
	gT
>

197 
boﬁ
 
com∑ª
(c⁄° 
T
* 
a
, c⁄° T* 
b
, 
size_t
 
size
)

199 
size_t
 
	gi
 = 0; i < 
	gsize
; ++i)

200 i‡(!(
	ga
[
i
] =
b
[i]))

201  
Ál£
;

202  
	gåue
;

206 
	gãm∂©e
<
ty≥«me
 
	gT
>

207 
	gVe˘‹Com∑ªr
<
	gåue
, 
	gT
>

209 
boﬁ
 
com∑ª
(c⁄° 
T
* 
a
, c⁄° T* 
b
, 
size_t
 
size
)

211  
memcmp
(
a
, 
b
, (
T
Ë* 
size
) == 0;

215 
	gãm∂©e
<
ty≥«me
 
	gT
>

216 
	sVe˘‹Ty≥O≥øti⁄s


218 
de°ru˘
(
T
* 
begö
, T* 
íd
)

220 
	gVe˘‹De°ru˘‹
<!
	g°d
::
is_åivüŒy_de°ru˘ibÀ
<
T
>::
vÆue
, 
	gT
>::
de°ru˘
(
begö
, 
íd
);

223 
öôülize
(
T
* 
begö
, T* 
íd
)

225 
	gVe˘‹Inôülizî
<
	gVe˘‹Tøôs
<
	gT
>::
√edsInôüliz©i⁄
, Ve˘‹Tøôs<T>::
ˇnInôülizeWôhMem£t
, T>::
öôülize
(
begö
, 
íd
);

228 
move
(
T
* 
§c
, T* 
§cEnd
, T* 
d°
)

230 
	gVe˘‹Movî
<
	gVe˘‹Tøôs
<
	gT
>::
ˇnMoveWôhMem˝y
, T>::
move
(
§c
, 
§cEnd
, 
d°
);

233 
moveOvîœµög
(
T
* 
§c
, T* 
§cEnd
, T* 
d°
)

235 
	gVe˘‹Movî
<
	gVe˘‹Tøôs
<
	gT
>::
ˇnMoveWôhMem˝y
, T>::
moveOvîœµög
(
§c
, 
§cEnd
, 
d°
);

238 
unöôülizedC›y
(c⁄° 
T
* 
§c
, c⁄° T* 
§cEnd
, T* 
d°
)

240 
	gVe˘‹C›õr
<
	gVe˘‹Tøôs
<
	gT
>::
ˇnC›yWôhMem˝y
, T>::
unöôülizedC›y
(
§c
, 
§cEnd
, 
d°
);

243 
unöôülizedFûl
(
T
* 
d°
, T* 
d°End
, c⁄° T& 
vÆ
)

245 
	gVe˘‹FûÀr
<
	gVe˘‹Tøôs
<
	gT
>::
ˇnFûlWôhMem£t
, T>::
unöôülizedFûl
(
d°
, 
d°End
, 
vÆ
);

248 
boﬁ
 
com∑ª
(c⁄° 
T
* 
a
, c⁄° T* 
b
, 
size_t
 
size
)

250  
	gVe˘‹Com∑ªr
<
	gVe˘‹Tøôs
<
	gT
>::
ˇnCom∑ªWôhMemcmp
, T>::
com∑ª
(
a
, 
b
, 
size
);

254 
	gãm∂©e
<
ty≥«me
 
	gT
>

255 ˛as†
	cVe˘‹Buf„rBa£
 {

256 
WTF_MAKE_NONCOPYABLE
(
Ve˘‹Buf„rBa£
);

257 
	gpublic
:

258 
ÆloˇãBuf„r
(
size_t
 
√wC≠acôy
)

260 
ASSERT
(
√wC≠acôy
);

261 i‡(
	g√wC≠acôy
 > 
	g°d
::
numîic_limôs
<>::
max
(Ë/ (
T
))

262 
CRASH
();

263 
size_t
 
	gsizeToAŒoˇã
 = 
Á°MÆlocGoodSize
(
√wC≠acôy
 * (
T
));

264 
	gm_ˇ∑côy
 = 
sizeToAŒoˇã
 / (
T
);

265 
	gm_buf„r
 = 
°©ic_ˇ°
<
T
*>(
Á°MÆloc
(
sizeToAŒoˇã
));

268 
boﬁ
 
åyAŒoˇãBuf„r
(
size_t
 
√wC≠acôy
)

270 
ASSERT
(
√wC≠acôy
);

271 i‡(
	g√wC≠acôy
 > 
	g°d
::
numîic_limôs
<>::
max
(Ë/ (
T
))

272  
Ál£
;

274 
size_t
 
	gsizeToAŒoˇã
 = 
Á°MÆlocGoodSize
(
√wC≠acôy
 * (
T
));

275 
T
* 
	g√wBuf„r
;

276 i‡(
åyFa°MÆloc
(
sizeToAŒoˇã
).
gëVÆue
(
√wBuf„r
)) {

277 
	gm_ˇ∑côy
 = 
sizeToAŒoˇã
 / (
T
);

278 
	gm_buf„r
 = 
√wBuf„r
;

279  
	gåue
;

281  
	gÁl£
;

284 
boﬁ
 
shouldRóŒoˇãBuf„r
(
size_t
 
√wC≠acôy
) const

286  
	gVe˘‹Tøôs
<
	gT
>::
ˇnMoveWôhMem˝y
 && 
m_ˇ∑côy
 && 
√wC≠acôy
;

289 
ªÆloˇãBuf„r
(
size_t
 
√wC≠acôy
)

291 
ASSERT
(
shouldRóŒoˇãBuf„r
(
√wC≠acôy
));

292 i‡(
	g√wC≠acôy
 > 
	g°d
::
numîic_limôs
<
size_t
>::
max
(Ë/ (
T
))

293 
CRASH
();

294 
size_t
 
	gsizeToAŒoˇã
 = 
Á°MÆlocGoodSize
(
√wC≠acôy
 * (
T
));

295 
	gm_ˇ∑côy
 = 
sizeToAŒoˇã
 / (
T
);

296 
	gm_buf„r
 = 
°©ic_ˇ°
<
T
*>(
Á°RóŒoc
(
m_buf„r
, 
sizeToAŒoˇã
));

299 
dóŒoˇãBuf„r
(
T
* 
buf„rToDóŒoˇã
)

301 i‡(!
	gbuf„rToDóŒoˇã
)

304 i‡(
	gm_buf„r
 =
buf„rToDóŒoˇã
) {

305 
m_buf„r
 = 0;

306 
	gm_ˇ∑côy
 = 0;

309 
Á°Fªe
(
buf„rToDóŒoˇã
);

312 
T
* 
buf„r
(Ë{  
	gm_buf„r
; }

313 c⁄° 
T
* 
buf„r
(Ëc⁄° {  
	gm_buf„r
; }

314 
±rdiff_t
 
buf„rMem‹yOff£t
(Ë{  
OBJECT_OFFSETOF
(
Ve˘‹Buf„rBa£
, 
m_buf„r
); }

315 
size_t
 
ˇ∑côy
(Ëc⁄° {  
	gm_ˇ∑côy
; }

317 
	gMÆlocPå
<
	gT
> 
ªÀa£Buf„r
()

319 
T
* 
	gbuf„r
 = 
m_buf„r
;

320 
	gm_buf„r
 = 0;

321 
	gm_ˇ∑côy
 = 0;

322  
ad›tMÆlocPå
(
buf„r
);

325 
	g¥Ÿe˘ed
:

326 
Ve˘‹Buf„rBa£
()

327 : 
m_buf„r
(0)

328 , 
m_ˇ∑côy
(0)

329 , 
m_size
(0)

333 
Ve˘‹Buf„rBa£
(
T
* 
buf„r
, 
size_t
 
ˇ∑côy
, size_à
size
)

334 : 
m_buf„r
(
buf„r
)

335 , 
m_ˇ∑côy
(
ˇ∑côy
)

336 , 
m_size
(
size
)

340 ~
Ve˘‹Buf„rBa£
()

345 
T
* 
	gm_buf„r
;

346 
	gm_ˇ∑côy
;

347 
	gm_size
;

350 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

351 
˛ass
 
	gVe˘‹Buf„r
;

353 
	gãm∂©e
<
ty≥«me
 
	gT
>

354 
˛ass
 
	gVe˘‹Buf„r
<
	gT
, 0> : 
¥iv©e
 
Ve˘‹Buf„rBa£
<
T
> {

355 
¥iv©e
:

356 
Ve˘‹Buf„rBa£
<
	tT
> 
	tBa£
;

357 
	gpublic
:

358 
Ve˘‹Buf„r
()

362 
Ve˘‹Buf„r
(
size_t
 
ˇ∑côy
, size_à
size
 = 0)

364 
m_size
 = 
size
;

367 i‡(
	gˇ∑côy
)

368 
ÆloˇãBuf„r
(
ˇ∑côy
);

371 ~
Ve˘‹Buf„r
()

373 
dóŒoˇãBuf„r
(
buf„r
());

376 
sw≠
(
Ve˘‹Buf„r
<
T
, 0>& 
Ÿhî
, 
size_t
, size_t)

378 
	g°d
::
sw≠
(
m_buf„r
, 
Ÿhî
.m_buffer);

379 
	g°d
::
sw≠
(
m_ˇ∑côy
, 
Ÿhî
.m_capacity);

382 
ª°‹eI∆öeBuf„rIfNìded
() { }

384 
usög
 
	gBa£
::
ÆloˇãBuf„r
;

385 
usög
 
	gBa£
::
åyAŒoˇãBuf„r
;

386 
usög
 
	gBa£
::
shouldRóŒoˇãBuf„r
;

387 
usög
 
	gBa£
::
ªÆloˇãBuf„r
;

388 
usög
 
	gBa£
::
dóŒoˇãBuf„r
;

390 
usög
 
	gBa£
::
buf„r
;

391 
usög
 
	gBa£
::
ˇ∑côy
;

392 
usög
 
	gBa£
::
buf„rMem‹yOff£t
;

394 
usög
 
	gBa£
::
ªÀa£Buf„r
;

396 
	g¥Ÿe˘ed
:

397 
usög
 
Ba£
::
m_size
;

399 
	g¥iv©e
:

400 
usög
 
Ba£
::
m_buf„r
;

401 
usög
 
	gBa£
::
m_ˇ∑côy
;

404 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
>

405 
˛ass
 
	gVe˘‹Buf„r
 : 
¥iv©e
 
Ve˘‹Buf„rBa£
<
T
> {

406 
WTF_MAKE_NONCOPYABLE
(
Ve˘‹Buf„r
);

407 
	g¥iv©e
:

408 
Ve˘‹Buf„rBa£
<
	tT
> 
	tBa£
;

409 
	gpublic
:

410 
Ve˘‹Buf„r
()

411 : 
Ba£
(
ölöeBuf„r
(), 
ölöeC≠acôy
, 0)

415 
Ve˘‹Buf„r
(
size_t
 
ˇ∑côy
, size_à
size
 = 0)

416 : 
Ba£
(
ölöeBuf„r
(), 
ölöeC≠acôy
, 
size
)

418 i‡(
	gˇ∑côy
 > 
	gölöeC≠acôy
)

419 
	gBa£
::
ÆloˇãBuf„r
(
ˇ∑côy
);

422 ~
Ve˘‹Buf„r
()

424 
dóŒoˇãBuf„r
(
buf„r
());

427 
ÆloˇãBuf„r
(
size_t
 
√wC≠acôy
)

430 i‡(
	g√wC≠acôy
 > 
	gölöeC≠acôy
)

431 
	gBa£
::
ÆloˇãBuf„r
(
√wC≠acôy
);

433 
	gm_buf„r
 = 
ölöeBuf„r
();

434 
	gm_ˇ∑côy
 = 
ölöeC≠acôy
;

438 
boﬁ
 
åyAŒoˇãBuf„r
(
size_t
 
√wC≠acôy
)

440 i‡(
	g√wC≠acôy
 > 
	gölöeC≠acôy
)

441  
	gBa£
::
åyAŒoˇãBuf„r
(
√wC≠acôy
);

442 
	gm_buf„r
 = 
ölöeBuf„r
();

443 
	gm_ˇ∑côy
 = 
ölöeC≠acôy
;

444  
	gåue
;

447 
dóŒoˇãBuf„r
(
T
* 
buf„rToDóŒoˇã
)

449 i‡(
	gbuf„rToDóŒoˇã
 =
ölöeBuf„r
())

451 
	gBa£
::
dóŒoˇãBuf„r
(
buf„rToDóŒoˇã
);

454 
boﬁ
 
shouldRóŒoˇãBuf„r
(
size_t
 
√wC≠acôy
) const

457  
	gBa£
::
shouldRóŒoˇãBuf„r
(
√wC≠acôy
Ë&& 
°d
::
mö
(
°©ic_ˇ°
<
size_t
>(
m_ˇ∑côy
),ÇewC≠acôyË> 
	gölöeC≠acôy
;

460 
ªÆloˇãBuf„r
(
size_t
 
√wC≠acôy
)

462 
ASSERT
(
shouldRóŒoˇãBuf„r
(
√wC≠acôy
));

463 
	gBa£
::
ªÆloˇãBuf„r
(
√wC≠acôy
);

466 
sw≠
(
Ve˘‹Buf„r
& 
Ÿhî
, 
size_t
 
mySize
, size_à
ŸhîSize
)

468 i‡(
buf„r
(Ë=
ölöeBuf„r
(Ë&& 
Ÿhî
.buffer() == other.inlineBuffer()) {

469 
sw≠I∆öeBuf„r
(
Ÿhî
, 
mySize
, 
ŸhîSize
);

470 
	g°d
::
sw≠
(
m_ˇ∑côy
, 
Ÿhî
.m_capacity);

471 } i‡(
buf„r
(Ë=
ölöeBuf„r
()) {

472 
m_buf„r
 = 
Ÿhî
.m_buffer;

473 
	gŸhî
.
	gm_buf„r
 = 
Ÿhî
.
ölöeBuf„r
();

474 
sw≠I∆öeBuf„r
(
Ÿhî
, 
mySize
, 0);

475 
	g°d
::
sw≠
(
m_ˇ∑côy
, 
Ÿhî
.m_capacity);

476 } i‡(
	gŸhî
.
buf„r
(Ë=
Ÿhî
.
ölöeBuf„r
()) {

477 
Ÿhî
.
m_buf„r
 = m_buffer;

478 
	gm_buf„r
 = 
ölöeBuf„r
();

479 
sw≠I∆öeBuf„r
(
Ÿhî
, 0, 
ŸhîSize
);

480 
	g°d
::
sw≠
(
m_ˇ∑côy
, 
Ÿhî
.m_capacity);

482 
	g°d
::
sw≠
(
m_buf„r
, 
Ÿhî
.m_buffer);

483 
	g°d
::
sw≠
(
m_ˇ∑côy
, 
Ÿhî
.m_capacity);

487 
ª°‹eI∆öeBuf„rIfNìded
()

489 i‡(
	gm_buf„r
)

491 
	gm_buf„r
 = 
ölöeBuf„r
();

492 
	gm_ˇ∑côy
 = 
ölöeC≠acôy
;

495 
usög
 
	gBa£
::
buf„r
;

496 
usög
 
	gBa£
::
ˇ∑côy
;

497 
usög
 
	gBa£
::
buf„rMem‹yOff£t
;

499 
	gMÆlocPå
<
	gT
> 
ªÀa£Buf„r
()

501 i‡(
buf„r
(Ë=
ölöeBuf„r
())

502  
nuŒ±r
;

503  
	gBa£
::
ªÀa£Buf„r
();

506 
	g¥Ÿe˘ed
:

507 
usög
 
Ba£
::
m_size
;

509 
	g¥iv©e
:

510 
usög
 
Ba£
::
m_buf„r
;

511 
usög
 
	gBa£
::
m_ˇ∑côy
;

513 
sw≠I∆öeBuf„r
(
Ve˘‹Buf„r
& 
Ÿhî
, 
size_t
 
mySize
, size_à
ŸhîSize
)

518 i‡(
	g°d
::
is_pod
<
T
>::
vÆue
)

519 
°d
::
sw≠
(
m_ölöeBuf„r
, 
Ÿhî
.m_inlineBuffer);

521 
sw≠I∆öeBuf„rs
(
ölöeBuf„r
(), 
Ÿhî
.ölöeBuf„r(), 
mySize
, 
ŸhîSize
);

524 
sw≠I∆öeBuf„rs
(
T
* 
À·
, T* 
right
, 
size_t
 
À·Size
, size_à
rightSize
)

526 i‡(
	gÀ·
 =
right
)

529 
ASSERT
(
À·Size
 <
ölöeC≠acôy
);

530 
ASSERT
(
rightSize
 <
ölöeC≠acôy
);

532 
size_t
 
	gsw≠Bound
 = 
°d
::
mö
(
À·Size
, 
rightSize
);

533 
	gi
 = 0; i < 
	gsw≠Bound
; ++i)

534 
	g°d
::
sw≠
(
À·
[
i
], 
right
[i]);

535 
	gVe˘‹Ty≥O≥øti⁄s
<
	gT
>::
move
(
À·
 + 
sw≠Bound
,Üe· + 
À·Size
, 
right
 + swapBound);

536 
	gVe˘‹Ty≥O≥øti⁄s
<
	gT
>::
move
(
right
 + 
sw≠Bound
,Ñighà+ 
rightSize
, 
À·
 + swapBound);

539 
T
* 
ölöeBuf„r
(Ë{  
	gªöãΩªt_ˇ°_±r
<
	gT
*>(
	gm_ölöeBuf„r
); }

540 c⁄° 
T
* 
ölöeBuf„r
(Ëc⁄° {  
	gªöãΩªt_ˇ°_±r
<c⁄° 
	gT
*>(
	gm_ölöeBuf„r
); }

542 
ty≥«me
 
	g°d
::
Æig√d_°‹age
<(
T
), std::
Æignmít_of
<T>::
vÆue
>::
ty≥
 
m_ölöeBuf„r
[
ölöeC≠acôy
];

545 
	sUnß„Ve˘‹OvîÊow
 {

546 
NO_RETURN_DUE_TO_ASSERT
 
ovîÊowed
()

548 
ASSERT_NOT_REACHED
();

552 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
 = 0,Åy≥«mê
	gOvîÊowH™dÀr
 = 
CøshOnOvîÊow
>

553 
˛ass
 
Ve˘‹
 : 
¥iv©e
 
Ve˘‹Buf„r
<
T
, 
	gölöeC≠acôy
> {

554 
	gWTF_MAKE_FAST_ALLOCATED
;

555 
	g¥iv©e
:

556 
Ve˘‹Buf„r
<
	tT
, 
	tölöeC≠acôy
> 
	tBa£
;

557 
	gVe˘‹Ty≥O≥øti⁄s
<
	tT
> 
	tTy≥O≥øti⁄s
;

559 
	gpublic
:

560 
T
 
	tVÆueTy≥
;

562 
T
* 
	tôî©‹
;

563 c⁄° 
	tT
* 
	tc⁄°_ôî©‹
;

564 
	g°d
::
	tªvî£_ôî©‹
<
	tôî©‹
>Ñeverse_iterator;

565 
	g°d
::
	tªvî£_ôî©‹
<
	tc⁄°_ôî©‹
> 
	tc⁄°_ªvî£_ôî©‹
;

567 
Ve˘‹
()

572 
ex∂icô
 
Ve˘‹
(
size_t
 
size
)

573 : 
Ba£
(
size
, size)

575 i‡(
begö
())

576 
	gTy≥O≥øti⁄s
::
öôülize
(
begö
(), 
íd
());

579 
Ve˘‹
(
size_t
 
size
, c⁄° 
T
& 
vÆ
)

580 : 
Ba£
(
size
, size)

582 i‡(
begö
())

583 
	gTy≥O≥øti⁄s
::
unöôülizedFûl
(
begö
(), 
íd
(), 
vÆ
);

586 
Ve˘‹
(
°d
::
öôülizî_li°
<
T
> 
öôülizîLi°
)

588 
ª£rveInôülC≠acôy
(
öôülizîLi°
.
size
());

589 c⁄°áuto& 
	gñemít
 : 
öôülizîLi°
)

590 
uncheckedAµíd
(
ñemít
);

593 ~
Ve˘‹
()

595 i‡(
	gm_size
)

596 
shrök
(0);

599 
Ve˘‹
(const Vector&);

600 
	gãm∂©e
<
size_t
 
	gŸhîC≠acôy
, 
ty≥«me
 
	gŸhîOvîÊowBehaviour
>

601 
Ve˘‹
(c⁄° Ve˘‹<
T
, 
ŸhîC≠acôy
, 
ŸhîOvîÊowBehaviour
>&);

603 
	gVe˘‹
& 
	g›î©‹
=(c⁄° 
Ve˘‹
&);

604 
	gãm∂©e
<
size_t
 
	gŸhîC≠acôy
, 
ty≥«me
 
	gŸhîOvîÊowBehaviour
>

605 
	gVe˘‹
& 
	g›î©‹
=(c⁄° 
Ve˘‹
<
T
, 
	gŸhîC≠acôy
, 
	gŸhîOvîÊowBehaviour
>&);

607 
Ve˘‹
(Vector&&);

608 
	gVe˘‹
& 
	g›î©‹
=(
Ve˘‹
&&);

610 
size_t
 
size
(Ëc⁄° {  
	gm_size
; }

611 
±rdiff_t
 
sizeMem‹yOff£t
(Ë{  
OBJECT_OFFSETOF
(
Ve˘‹
, 
m_size
); }

612 
size_t
 
ˇ∑côy
(Ëc⁄° {  
	gBa£
::capacity(); }

613 
boﬁ
 
isEm±y
(Ëc⁄° {  !
size
(); }

615 
	gT
& 
©
(
size_t
 
i
)

617 i‡(
UNLIKELY
(
i
 >
size
()))

618 
OvîÊowH™dÀr
::
ovîÊowed
();

619  
	gBa£
::
buf„r
()[
i
];

621 c⁄° 
	gT
& 
©
(
size_t
 
i
) const

623 i‡(
UNLIKELY
(
i
 >
size
()))

624 
OvîÊowH™dÀr
::
ovîÊowed
();

625  
	gBa£
::
buf„r
()[
i
];

627 
	gT
& 
©
(
Checked
<
size_t
> 
i
)

629 
RELEASE_ASSERT
(
i
 < 
size
());

630  
	gBa£
::
buf„r
()[
i
];

632 c⁄° 
	gT
& 
©
(
Checked
<
size_t
> 
i
) const

634 
RELEASE_ASSERT
(
i
 < 
size
());

635  
	gBa£
::
buf„r
()[
i
];

638 
	gT
& 
	g›î©‹
[](
size_t
 
	gi
Ë{  
©
(
i
); }

639 c⁄° 
	gT
& 
	g›î©‹
[](
size_t
 
	gi
Ëc⁄° {  
©
(
i
); }

640 
	gT
& 
	g›î©‹
[](
	gChecked
<
	gsize_t
> 
	gi
Ë{  
©
(
i
); }

641 c⁄° 
	gT
& 
	g›î©‹
[](
	gChecked
<
	gsize_t
> 
	gi
Ëc⁄° {  
©
(
i
); }

643 
T
* 
d©a
(Ë{  
	gBa£
::
buf„r
(); }

644 c⁄° 
T
* 
d©a
(Ëc⁄° {  
	gBa£
::
buf„r
(); }

645 
±rdiff_t
 
d©aMem‹yOff£t
(Ë{  
	gBa£
::
buf„rMem‹yOff£t
(); }

647 
ôî©‹
 
begö
(Ë{  
d©a
(); }

648 
ôî©‹
 
íd
(Ë{  
begö
(Ë+ 
	gm_size
; }

649 
c⁄°_ôî©‹
 
begö
(Ëc⁄° {  
d©a
(); }

650 
c⁄°_ôî©‹
 
íd
(Ëc⁄° {  
begö
(Ë+ 
	gm_size
; }

652 
ªvî£_ôî©‹
 
rbegö
(Ë{ Ñevî£_ôî©‹(
íd
()); }

653 
ªvî£_ôî©‹
 
ªnd
(Ë{ Ñevî£_ôî©‹(
begö
()); }

654 
c⁄°_ªvî£_ôî©‹
 
rbegö
(Ëc⁄° {  c⁄°_ªvî£_ôî©‹(
íd
()); }

655 
c⁄°_ªvî£_ôî©‹
 
ªnd
(Ëc⁄° {  c⁄°_ªvî£_ôî©‹(
begö
()); }

657 
	gT
& 
fú°
(Ë{  
©
(0); }

658 c⁄° 
	gT
& 
fú°
(Ëc⁄° {  
©
(0); }

659 
	gT
& 
œ°
(Ë{  
©
(
size
() - 1); }

660 c⁄° 
	gT
& 
œ°
(Ëc⁄° {  
©
(
size
() - 1); }

662 
T
 
èkeLa°
()

664 
T
 
	gªsu…
 = 
WTF
::
move
(
œ°
());

665 
ªmoveLa°
();

666  
	gªsu…
;

669 
	gãm∂©e
<
ty≥«me
 
	gU
> 
boﬁ
 
c⁄èös
(c⁄° 
U
&) const;

670 
	gãm∂©e
<
ty≥«me
 
	gU
> 
size_t
 
föd
(c⁄° 
U
&) const;

671 
	gãm∂©e
<
ty≥«me
 
	gU
> 
size_t
 
ªvî£Föd
(c⁄° 
U
&) const;

673 
shrök
(
size_t
 
size
);

674 
grow
(
size_t
 
size
);

675 
ªsize
(
size_t
 
size
);

676 
ªsizeToFô
(
size_t
 
size
);

677 
ª£rveC≠acôy
(
size_t
 
√wC≠acôy
);

678 
boﬁ
 
åyRe£rveC≠acôy
(
size_t
 
√wC≠acôy
);

679 
ª£rveInôülC≠acôy
(
size_t
 
öôülC≠acôy
);

680 
shrökC≠acôy
(
size_t
 
√wC≠acôy
);

681 
shrökToFô
(Ë{ 
shrökC≠acôy
(
size
()); }

683 
˛ór
(Ë{ 
shrökC≠acôy
(0); }

685 
	gãm∂©e
<
ty≥«me
 
	gU
> 
≠≥nd
(c⁄° 
U
*, 
size_t
);

686 
	gãm∂©e
<
ty≥«me
 
	gU
> 
≠≥nd
(
U
&&);

687 
	gãm∂©e
<
ty≥«me
 
	gU
> 
uncheckedAµíd
(
U
&& 
vÆ
);

688 
	gãm∂©e
<
ty≥«me
 
	gU
, 
size_t
 
	gŸhîC≠acôy
> 
≠≥ndVe˘‹
(c⁄° 
Ve˘‹
<
U
, 
ŸhîC≠acôy
>&);

689 
	gãm∂©e
<
ty≥«me
 
	gU
> 
boﬁ
 
åyAµíd
(c⁄° 
U
*, 
size_t
);

691 
	gãm∂©e
<
ty≥«me
 
	gU
> 
ö£π
(
size_t
 
posôi⁄
, c⁄° 
U
*, size_t);

692 
	gãm∂©e
<
ty≥«me
 
	gU
> 
ö£π
(
size_t
 
posôi⁄
, 
U
&&);

693 
	gãm∂©e
<
ty≥«me
 
	gU
, 
size_t
 
	gc
> 
ö£πVe˘‹
(size_à
posôi⁄
, c⁄° 
Ve˘‹
<
U
, 
c
>&);

695 
ªmove
(
size_t
 
posôi⁄
);

696 
ªmove
(
size_t
 
posôi⁄
, size_à
Àngth
);

698 
ªmoveLa°
()

700 i‡(
UNLIKELY
(
isEm±y
()))

701 
	gOvîÊowH™dÀr
::
ovîÊowed
();

702 
shrök
(
size
() - 1);

705 
fûl
(c⁄° 
T
&, 
size_t
);

706 
fûl
(c⁄° 
T
& 
vÆ
Ë{ fûl(vÆ, 
size
()); }

708 
	gãm∂©e
<
ty≥«me
 
	gIãøt‹
> 
≠≥ndR™ge
(
Iãøt‹
 
°¨t
, Iãøt‹ 
íd
);

710 
	gMÆlocPå
<
	gT
> 
ªÀa£Buf„r
();

712 
sw≠
(
Ve˘‹
<
T
, 
ölöeC≠acôy
, 
OvîÊowH™dÀr
>& 
Ÿhî
)

714 
	gBa£
::
sw≠
(
Ÿhî
, 
m_size
, other.m_size);

715 
	g°d
::
sw≠
(
m_size
, 
Ÿhî
.m_size);

718 
ªvî£
();

720 
checkC⁄si°ícy
();

722 
	g¥iv©e
:

723 
ex∑ndC≠acôy
(
size_t
 
√wMöC≠acôy
);

724 
T
* 
ex∑ndC≠acôy
(
size_t
 
√wMöC≠acôy
, T*);

725 
boﬁ
 
åyEx∑ndC≠acôy
(
size_t
 
√wMöC≠acôy
);

726 c⁄° 
T
* 
åyEx∑ndC≠acôy
(
size_t
 
√wMöC≠acôy
, const T*);

727 
	gãm∂©e
<
ty≥«me
 
	gU
> 
U
* 
ex∑ndC≠acôy
(
size_t
 
√wMöC≠acôy
, U*);

728 
	gãm∂©e
<
ty≥«me
 
	gU
> 
≠≥ndSlowCa£
(
U
&&);

730 
usög
 
	gBa£
::
m_size
;

731 
usög
 
	gBa£
::
buf„r
;

732 
usög
 
	gBa£
::
ˇ∑côy
;

733 
usög
 
	gBa£
::
sw≠
;

734 
usög
 
	gBa£
::
ÆloˇãBuf„r
;

735 
usög
 
	gBa£
::
dóŒoˇãBuf„r
;

736 
usög
 
	gBa£
::
åyAŒoˇãBuf„r
;

737 
usög
 
	gBa£
::
shouldRóŒoˇãBuf„r
;

738 
usög
 
	gBa£
::
ªÆloˇãBuf„r
;

739 
usög
 
	gBa£
::
ª°‹eI∆öeBuf„rIfNìded
;

740 
usög
 
	gBa£
::
ªÀa£Buf„r
;

743 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

744 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$Ve˘‹
(c⁄° 
Ve˘‹
& 
Ÿhî
)

745 : 
	`Ba£
(
Ÿhî
.
	`ˇ∑côy
(), othî.
	$size
())

747 i‡(
	`begö
())

748 
Ty≥O≥øti⁄s
::
	`unöôülizedC›y
(
Ÿhî
.
	`begö
(), othî.
	`íd
(), begin());

749 
	}
}

751 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

752 
	gãm∂©e
<
size_t
 
	gŸhîC≠acôy
, 
ty≥«me
 
	gŸhîOvîÊowBehaviour
>

753 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
Ve˘‹
(c⁄° Ve˘‹<
T
, 
ŸhîC≠acôy
, 
ŸhîOvîÊowBehaviour
>& 
Ÿhî
)

754 : 
Ba£
(
Ÿhî
.
ˇ∑côy
(), othî.
	$size
())

756 i‡(
	`begö
())

757 
Ty≥O≥øti⁄s
::
	`unöôülizedC›y
(
Ÿhî
.
	`begö
(), othî.
	`íd
(), begin());

758 
	}
}

760 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

761 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>& Ve˘‹<T, i∆öeC≠acôy, OvîÊowH™dÀr>::
›î©‹
=(c⁄° 
Ve˘‹
<
T
, i∆öeC≠acôy, OvîÊowH™dÀr>& 
	gŸhî
)

763 i‡(&
	gŸhî
 =
this
)

764  *
this
;

766 i‡(
size
(Ë> 
	gŸhî
.size())

767 
shrök
(
Ÿhî
.
size
());

768 i‡(
	gŸhî
.
size
(Ë> 
ˇ∑côy
()) {

769 
˛ór
();

770 
ª£rveC≠acôy
(
Ÿhî
.
size
());

771 
ASSERT
(
begö
());

774 
	g°d
::
c›y
(
Ÿhî
.
begö
(), othî.begö(Ë+ 
size
(), begin());

775 
	gTy≥O≥øti⁄s
::
unöôülizedC›y
(
Ÿhî
.
begö
(Ë+ 
size
(), othî.
íd
(),Énd());

776 
	gm_size
 = 
Ÿhî
.
size
();

778  *
	gthis
;

781 
ölöe
 
boﬁ
 
	$ty≥ÀssPoöãrsAªEquÆ
(c⁄° * 
a
, c⁄° * 
b
Ë{ á =b; 
	}
}

783 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

784 
	gãm∂©e
<
size_t
 
	gŸhîC≠acôy
, 
ty≥«me
 
	gŸhîOvîÊowBehaviour
>

785 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>& Ve˘‹<T, i∆öeC≠acôy, OvîÊowH™dÀr>::
›î©‹
=(c⁄° 
Ve˘‹
<
T
, 
	gŸhîC≠acôy
, 
	gŸhîOvîÊowBehaviour
>& 
	gŸhî
)

790 
ASSERT
(!
ty≥ÀssPoöãrsAªEquÆ
(&
Ÿhî
, 
this
));

792 i‡(
size
(Ë> 
	gŸhî
.size())

793 
shrök
(
Ÿhî
.
size
());

794 i‡(
	gŸhî
.
size
(Ë> 
ˇ∑côy
()) {

795 
˛ór
();

796 
ª£rveC≠acôy
(
Ÿhî
.
size
());

797 
ASSERT
(
begö
());

800 
	g°d
::
c›y
(
Ÿhî
.
begö
(), othî.begö(Ë+ 
size
(), begin());

801 
	gTy≥O≥øti⁄s
::
unöôülizedC›y
(
Ÿhî
.
begö
(Ë+ 
size
(), othî.
íd
(),Énd());

802 
	gm_size
 = 
Ÿhî
.
size
();

804  *
	gthis
;

807 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

808 
ölöe
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
Ve˘‹
(Ve˘‹<
T
, 
ölöeC≠acôy
, 
OvîÊowH™dÀr
>&& 
Ÿhî
)

810 
sw≠
(
Ÿhî
);

813 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

814 
ölöe
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>& Ve˘‹<T, i∆öeC≠acôy, OvîÊowH™dÀr>::
›î©‹
=(
Ve˘‹
<
T
, i∆öeC≠acôy, OvîÊowH™dÀr>&& 
	gŸhî
)

816 
sw≠
(
Ÿhî
);

817  *
	gthis
;

820 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

821 
	gãm∂©e
<
ty≥«me
 
	gU
>

822 
boﬁ
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$c⁄èös
(c⁄° 
U
& 
vÆue
) const

824  
	`föd
(
vÆue
Ë!
nŸFound
;

825 
	}
}

827 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

828 
	gãm∂©e
<
ty≥«me
 
	gU
>

829 
size_t
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$föd
(c⁄° 
U
& 
vÆue
) const

831 
size_t
 
i
 = 0; i < 
	`size
(); ++i) {

832 i‡(
	`©
(
i
Ë=
vÆue
)

833  
i
;

835  
nŸFound
;

836 
	}
}

838 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

839 
	gãm∂©e
<
ty≥«me
 
	gU
>

840 
size_t
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ªvî£Föd
(c⁄° 
U
& 
vÆue
) const

842 
size_t
 
i
 = 1; i <
	`size
(); ++i) {

843 c⁄° 
size_t
 
ödex
 = 
	`size
(Ë- 
i
;

844 i‡(
	`©
(
ödex
Ë=
vÆue
)

845  
ödex
;

847  
nŸFound
;

848 
	}
}

850 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

851 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$fûl
(c⁄° 
T
& 
vÆ
, 
size_t
 
√wSize
)

853 i‡(
	`size
(Ë> 
√wSize
)

854 
	`shrök
(
√wSize
);

855 i‡(
√wSize
 > 
	`ˇ∑côy
()) {

856 
	`˛ór
();

857 
	`ª£rveC≠acôy
(
√wSize
);

858 
	`ASSERT
(
	`begö
());

861 
°d
::
	`fûl
(
	`begö
(), 
	`íd
(), 
vÆ
);

862 
Ty≥O≥øti⁄s
::
	`unöôülizedFûl
(
	`íd
(), 
	`begö
(Ë+ 
√wSize
, 
vÆ
);

863 
m_size
 = 
√wSize
;

864 
	}
}

866 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

867 
	gãm∂©e
<
ty≥«me
 
	gIãøt‹
>

868 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$≠≥ndR™ge
(
Iãøt‹
 
°¨t
, Iãøt‹ 
íd
)

870 
Iãøt‹
 
ô
 = 
°¨t
; ià!
íd
; ++it)

871 
	`≠≥nd
(*
ô
);

872 
	}
}

874 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

875 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ex∑ndC≠acôy
(
size_t
 
√wMöC≠acôy
)

877 
	`ª£rveC≠acôy
(
°d
::
	`max
(
√wMöC≠acôy
, std::max(
°©ic_ˇ°
<
size_t
>(16), 
	`ˇ∑côy
() + capacity() / 4 + 1)));

878 
	}
}

880 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

881 
T
* 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ex∑ndC≠acôy
(
size_t
 
√wMöC≠acôy
, 
T
* 
±r
)

883 i‡(
±r
 < 
	`begö
(Ë||Öå >
	`íd
()) {

884 
	`ex∑ndC≠acôy
(
√wMöC≠acôy
);

885  
±r
;

887 
size_t
 
ödex
 = 
±r
 - 
	`begö
();

888 
	`ex∑ndC≠acôy
(
√wMöC≠acôy
);

889  
	`begö
(Ë+ 
ödex
;

890 
	}
}

892 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

893 
boﬁ
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$åyEx∑ndC≠acôy
(
size_t
 
√wMöC≠acôy
)

895  
	`åyRe£rveC≠acôy
(
°d
::
	`max
(
√wMöC≠acôy
, std::max(
°©ic_ˇ°
<
size_t
>(16), 
	`ˇ∑côy
() + capacity() / 4 + 1)));

896 
	}
}

898 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

899 c⁄° 
T
* 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$åyEx∑ndC≠acôy
(
size_t
 
√wMöC≠acôy
, c⁄° 
T
* 
±r
)

901 i‡(
±r
 < 
	`begö
(Ë||Öå >
	`íd
()) {

902 i‡(!
	`åyEx∑ndC≠acôy
(
√wMöC≠acôy
))

904  
±r
;

906 
size_t
 
ödex
 = 
±r
 - 
	`begö
();

907 i‡(!
	`åyEx∑ndC≠acôy
(
√wMöC≠acôy
))

909  
	`begö
(Ë+ 
ödex
;

910 
	}
}

912 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>Åem∂©e<ty≥«mê
	gU
>

913 
ölöe
 
U
* 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ex∑ndC≠acôy
(
size_t
 
√wMöC≠acôy
, 
U
* 
±r
)

915 
	`ex∑ndC≠acôy
(
√wMöC≠acôy
);

916  
±r
;

917 
	}
}

919 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

920 
ölöe
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ªsize
(
size_t
 
size
)

922 i‡(
size
 <
m_size
)

923 
Ty≥O≥øti⁄s
::
	`de°ru˘
(
	`begö
(Ë+ 
size
, 
	`íd
());

925 i‡(
size
 > 
	`ˇ∑côy
())

926 
	`ex∑ndC≠acôy
(
size
);

927 i‡(
	`begö
())

928 
Ty≥O≥øti⁄s
::
	`öôülize
(
	`íd
(), 
	`begö
(Ë+ 
size
);

931 
m_size
 = 
size
;

932 
	}
}

934 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

935 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ªsizeToFô
(
size_t
 
size
)

937 
	`ª£rveC≠acôy
(
size
);

938 
	`ªsize
(
size
);

939 
	}
}

941 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

942 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$shrök
(
size_t
 
size
)

944 
	`ASSERT
(
size
 <
m_size
);

945 
Ty≥O≥øti⁄s
::
	`de°ru˘
(
	`begö
(Ë+ 
size
, 
	`íd
());

946 
m_size
 = 
size
;

947 
	}
}

949 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

950 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$grow
(
size_t
 
size
)

952 
	`ASSERT
(
size
 >
m_size
);

953 i‡(
size
 > 
	`ˇ∑côy
())

954 
	`ex∑ndC≠acôy
(
size
);

955 i‡(
	`begö
())

956 
Ty≥O≥øti⁄s
::
	`öôülize
(
	`íd
(), 
	`begö
(Ë+ 
size
);

957 
m_size
 = 
size
;

958 
	}
}

960 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

961 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ª£rveC≠acôy
(
size_t
 
√wC≠acôy
)

963 i‡(
√wC≠acôy
 <
	`ˇ∑côy
())

965 
T
* 
ﬁdBuf„r
 = 
	`begö
();

966 
T
* 
ﬁdEnd
 = 
	`íd
();

967 
Ba£
::
	`ÆloˇãBuf„r
(
√wC≠acôy
);

968 
	`ASSERT
(
	`begö
());

969 
Ty≥O≥øti⁄s
::
	`move
(
ﬁdBuf„r
, 
ﬁdEnd
, 
	`begö
());

970 
Ba£
::
	`dóŒoˇãBuf„r
(
ﬁdBuf„r
);

971 
	}
}

973 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

974 
boﬁ
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$åyRe£rveC≠acôy
(
size_t
 
√wC≠acôy
)

976 i‡(
√wC≠acôy
 <
	`ˇ∑côy
())

977  
åue
;

978 
T
* 
ﬁdBuf„r
 = 
	`begö
();

979 
T
* 
ﬁdEnd
 = 
	`íd
();

980 i‡(!
Ba£
::
	`åyAŒoˇãBuf„r
(
√wC≠acôy
))

981  
Ál£
;

982 
	`ASSERT
(
	`begö
());

983 
Ty≥O≥øti⁄s
::
	`move
(
ﬁdBuf„r
, 
ﬁdEnd
, 
	`begö
());

984 
Ba£
::
	`dóŒoˇãBuf„r
(
ﬁdBuf„r
);

985  
åue
;

986 
	}
}

988 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

989 
ölöe
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ª£rveInôülC≠acôy
(
size_t
 
öôülC≠acôy
)

991 
	`ASSERT
(!
m_size
);

992 
	`ASSERT
(
	`ˇ∑côy
(Ë=
ölöeC≠acôy
);

993 i‡(
öôülC≠acôy
 > 
ölöeC≠acôy
)

994 
Ba£
::
	`ÆloˇãBuf„r
(
öôülC≠acôy
);

995 
	}
}

997 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

998 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$shrökC≠acôy
(
size_t
 
√wC≠acôy
)

1000 i‡(
√wC≠acôy
 >
	`ˇ∑côy
())

1003 i‡(
√wC≠acôy
 < 
	`size
())

1004 
	`shrök
(
√wC≠acôy
);

1006 
T
* 
ﬁdBuf„r
 = 
	`begö
();

1007 i‡(
√wC≠acôy
 > 0) {

1008 i‡(
Ba£
::
	`shouldRóŒoˇãBuf„r
(
√wC≠acôy
)) {

1009 
Ba£
::
	`ªÆloˇãBuf„r
(
√wC≠acôy
);

1013 
T
* 
ﬁdEnd
 = 
	`íd
();

1014 
Ba£
::
	`ÆloˇãBuf„r
(
√wC≠acôy
);

1015 i‡(
	`begö
(Ë!
ﬁdBuf„r
)

1016 
Ty≥O≥øti⁄s
::
	`move
(
ﬁdBuf„r
, 
ﬁdEnd
, 
	`begö
());

1019 
Ba£
::
	`dóŒoˇãBuf„r
(
ﬁdBuf„r
);

1020 
Ba£
::
	`ª°‹eI∆öeBuf„rIfNìded
();

1021 
	}
}

1026 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>Åem∂©e<ty≥«mê
	gU
>

1027 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$≠≥nd
(c⁄° 
U
* 
d©a
, 
size_t
 
d©aSize
)

1029 
size_t
 
√wSize
 = 
m_size
 + 
d©aSize
;

1030 i‡(
√wSize
 > 
	`ˇ∑côy
()) {

1031 
d©a
 = 
	`ex∑ndC≠acôy
(
√wSize
, data);

1032 
	`ASSERT
(
	`begö
());

1034 i‡(
√wSize
 < 
m_size
)

1035 
	`CRASH
();

1036 
T
* 
de°
 = 
	`íd
();

1037 
Ve˘‹C›õr
<
°d
::
is_åivül
<
T
>::
vÆue
, 
U
>::
	`unöôülizedC›y
(
d©a
, &d©a[
d©aSize
], 
de°
);

1038 
m_size
 = 
√wSize
;

1039 
	}
}

1041 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>Åem∂©e<ty≥«mê
	gU
>

1042 
boﬁ
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$åyAµíd
(c⁄° 
U
* 
d©a
, 
size_t
 
d©aSize
)

1044 
size_t
 
√wSize
 = 
m_size
 + 
d©aSize
;

1045 i‡(
√wSize
 > 
	`ˇ∑côy
()) {

1046 
d©a
 = 
	`åyEx∑ndC≠acôy
(
√wSize
, data);

1047 i‡(!
d©a
)

1048  
Ál£
;

1049 
	`ASSERT
(
	`begö
());

1051 i‡(
√wSize
 < 
m_size
)

1052  
Ál£
;

1053 
T
* 
de°
 = 
	`íd
();

1054 
Ve˘‹C›õr
<
°d
::
is_åivül
<
T
>::
vÆue
, 
U
>::
	`unöôülizedC›y
(
d©a
, &d©a[
d©aSize
], 
de°
);

1055 
m_size
 = 
√wSize
;

1056  
åue
;

1057 
	}
}

1059 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>Åem∂©e<ty≥«mê
	gU
>

1060 
ALWAYS_INLINE
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$≠≥nd
(
U
&& 
vÆue
)

1062 i‡(
	`size
(Ë!
	`ˇ∑côy
()) {

1063 
	`√w
 (
NŸNuŒ
, 
	`íd
()Ë
	`T
(
°d
::
f‹w¨d
<
U
>(
vÆue
));

1064 ++
m_size
;

1068 
	`≠≥ndSlowCa£
(
°d
::
f‹w¨d
<
U
>(
vÆue
));

1069 
	}
}

1071 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>Åem∂©e<ty≥«mê
	gU
>

1072 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$≠≥ndSlowCa£
(
U
&& 
vÆue
)

1074 
	`ASSERT
(
	`size
(Ë=
	`ˇ∑côy
());

1076 autÿ
±r
 = 
c⁄°_ˇ°
<
ty≥«me
 
°d
::
ªmove_c⁄°
<ty≥«mê°d::
ªmove_ª„ªn˚
<
U
>::
ty≥
>::ty≥*>(°d::
	`addªssof
(
vÆue
));

1077 
±r
 = 
	`ex∑ndC≠acôy
(
	`size
() + 1,Ötr);

1078 
	`ASSERT
(
	`begö
());

1080 
	`√w
 (
NŸNuŒ
, 
	`íd
()Ë
	`T
(
°d
::
f‹w¨d
<
U
>(*
±r
));

1081 ++
m_size
;

1082 
	}
}

1087 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>Åem∂©e<ty≥«mê
	gU
>

1088 
ölöe
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$uncheckedAµíd
(
U
&& 
vÆue
)

1090 
	`ASSERT
(
	`size
(Ë< 
	`ˇ∑côy
());

1092 autÿ
±r
 = 
°d
::
	`addªssof
(
vÆue
);

1093 
	`√w
 (
NŸNuŒ
, 
	`íd
()Ë
	`T
(
°d
::
f‹w¨d
<
U
>(*
±r
));

1094 ++
m_size
;

1095 
	}
}

1097 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>Åem∂©e<ty≥«mê
	gU
, size_à
	gŸhîC≠acôy
>

1098 
ölöe
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
≠≥ndVe˘‹
(c⁄° 
Ve˘‹
<
U
, 
ŸhîC≠acôy
>& 
vÆ
)

1100 
≠≥nd
(
vÆ
.
begö
(), vÆ.
size
());

1103 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>Åem∂©e<ty≥«mê
	gU
>

1104 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ö£π
(
size_t
 
posôi⁄
, c⁄° 
U
* 
d©a
, size_à
d©aSize
)

1106 
	`ASSERT_WITH_SECURITY_IMPLICATION
(
posôi⁄
 <
	`size
());

1107 
size_t
 
√wSize
 = 
m_size
 + 
d©aSize
;

1108 i‡(
√wSize
 > 
	`ˇ∑côy
()) {

1109 
d©a
 = 
	`ex∑ndC≠acôy
(
√wSize
, data);

1110 
	`ASSERT
(
	`begö
());

1112 i‡(
√wSize
 < 
m_size
)

1113 
	`CRASH
();

1114 
T
* 
•Ÿ
 = 
	`begö
(Ë+ 
posôi⁄
;

1115 
Ty≥O≥øti⁄s
::
	`moveOvîœµög
(
•Ÿ
, 
	`íd
(), spŸ + 
d©aSize
);

1116 
Ve˘‹C›õr
<
°d
::
is_åivül
<
T
>::
vÆue
, 
U
>::
	`unöôülizedC›y
(
d©a
, &d©a[
d©aSize
], 
•Ÿ
);

1117 
m_size
 = 
√wSize
;

1118 
	}
}

1120 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>Åem∂©e<ty≥«mê
	gU
>

1121 
ölöe
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ö£π
(
size_t
 
posôi⁄
, 
U
&& 
vÆue
)

1123 
	`ASSERT_WITH_SECURITY_IMPLICATION
(
posôi⁄
 <
	`size
());

1125 autÿ
±r
 = 
c⁄°_ˇ°
<
ty≥«me
 
°d
::
ªmove_c⁄°
<ty≥«mê°d::
ªmove_ª„ªn˚
<
U
>::
ty≥
>::ty≥*>(°d::
	`addªssof
(
vÆue
));

1126 i‡(
	`size
(Ë=
	`ˇ∑côy
()) {

1127 
±r
 = 
	`ex∑ndC≠acôy
(
	`size
() + 1,Ötr);

1128 
	`ASSERT
(
	`begö
());

1131 
T
* 
•Ÿ
 = 
	`begö
(Ë+ 
posôi⁄
;

1132 
Ty≥O≥øti⁄s
::
	`moveOvîœµög
(
•Ÿ
, 
	`íd
(), spot + 1);

1133 
	`√w
 (
NŸNuŒ
, 
•Ÿ
Ë
	`T
(
°d
::
f‹w¨d
<
U
>(*
±r
));

1134 ++
m_size
;

1135 
	}
}

1137 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>Åem∂©e<ty≥«mê
	gU
, size_à
	gc
>

1138 
ölöe
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
ö£πVe˘‹
(
size_t
 
posôi⁄
, c⁄° 
Ve˘‹
<
U
, 
c
>& 
vÆ
)

1140 
ö£π
(
posôi⁄
, 
vÆ
.
begö
(), vÆ.
size
());

1143 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

1144 
ölöe
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ªmove
(
size_t
 
posôi⁄
)

1146 
	`ASSERT_WITH_SECURITY_IMPLICATION
(
posôi⁄
 < 
	`size
());

1147 
T
* 
•Ÿ
 = 
	`begö
(Ë+ 
posôi⁄
;

1148 
•Ÿ
->~
	`T
();

1149 
Ty≥O≥øti⁄s
::
	`moveOvîœµög
(
•Ÿ
 + 1, 
	`íd
(), spot);

1150 --
m_size
;

1151 
	}
}

1153 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

1154 
ölöe
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ªmove
(
size_t
 
posôi⁄
, size_à
Àngth
)

1156 
	`ASSERT_WITH_SECURITY_IMPLICATION
(
posôi⁄
 <
	`size
());

1157 
	`ASSERT_WITH_SECURITY_IMPLICATION
(
posôi⁄
 + 
Àngth
 <
	`size
());

1158 
T
* 
begöSpŸ
 = 
	`begö
(Ë+ 
posôi⁄
;

1159 
T
* 
ídSpŸ
 = 
begöSpŸ
 + 
Àngth
;

1160 
Ty≥O≥øti⁄s
::
	`de°ru˘
(
begöSpŸ
, 
ídSpŸ
);

1161 
Ty≥O≥øti⁄s
::
	`moveOvîœµög
(
ídSpŸ
, 
	`íd
(), 
begöSpŸ
);

1162 
m_size
 -
Àngth
;

1163 
	}
}

1165 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

1166 
ölöe
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ªvî£
()

1168 
size_t
 
i
 = 0; i < 
m_size
 / 2; ++i)

1169 
°d
::
	`sw≠
(
	`©
(
i
),át(
m_size
 - 1 - i));

1170 
	}
}

1172 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

1173 
ölöe
 
	gMÆlocPå
<
	gT
> 
	gVe˘‹
<T, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$ªÀa£Buf„r
()

1175 autÿ
buf„r
 = 
Ba£
::
	`ªÀa£Buf„r
();

1176 i‡(
ölöeC≠acôy
 && !
buf„r
 && 
m_size
) {

1180 
size_t
 
byãs
 = 
m_size
 * (
T
);

1181 
buf„r
 = 
	`ad›tMÆlocPå
(
°©ic_ˇ°
<
T
*>(
	`Á°MÆloc
(
byãs
)));

1182 
	`mem˝y
(
buf„r
.
	`gë
(), 
	`d©a
(), 
byãs
);

1184 
m_size
 = 0;

1185  
buf„r
;

1186 
	}
}

1188 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

1189 
ölöe
 
	gVe˘‹
<
	gT
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>::
	$checkC⁄si°ícy
()

1191 #i‡!
ASSERT_DISABLED


1192 
size_t
 
i
 = 0; i < 
	`size
(); ++i)

1193 
VÆueCheck
<
T
>::
	`checkC⁄si°ícy
(
	`©
(
i
));

1195 
	}
}

1197 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

1198 
ölöe
 
sw≠
(
Ve˘‹
<
T
, 
ölöeC≠acôy
, 
OvîÊowH™dÀr
>& 
a
, Ve˘‹<T, i∆öeC≠acôy, OvîÊowH™dÀr>& 
b
)

1200 
	ga
.
sw≠
(
b
);

1203 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

1204 
boﬁ
 
	g›î©‹
==(c⁄° 
Ve˘‹
<
T
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>& 
	ga
, c⁄° 
	gVe˘‹
<
	gT
, i∆öeC≠acôy, OvîÊowH™dÀr>& 
	gb
)

1206 i‡(
	ga
.
size
(Ë!
b
.size())

1207  
Ál£
;

1209  
	gVe˘‹Ty≥O≥øti⁄s
<
	gT
>::
com∑ª
(
a
.
d©a
(), 
b
.d©a(),á.
size
());

1212 
	gãm∂©e
<
ty≥«me
 
	gT
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

1213 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Ve˘‹
<
T
, 
	gölöeC≠acôy
, 
	gOvîÊowH™dÀr
>& 
	ga
, c⁄° 
	gVe˘‹
<
	gT
, i∆öeC≠acôy, OvîÊowH™dÀr>& 
	gb
)

1215  !(
	ga
 =
b
);

1218 #i‡!
ASSERT_DISABLED


1219 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gVÆueCheck
<
	gVe˘‹
<T>> {

1220 
	gVe˘‹
<
	tT
> 
	tTøôTy≥
;

1221 
checkC⁄si°ícy
(c⁄° 
Ve˘‹
<
T
>& 
v
)

1223 
	gv
.
checkC⁄si°ícy
();

1230 
usög
 
	gWTF
::
Ve˘‹
;

1231 
usög
 
	gWTF
::
Unß„Ve˘‹OvîÊow
;

1232 
usög
 
	gWTF
::
nŸFound
;

	@VectorTraits.h

21 #i‚de‡
WTF_Ve˘‹Tøôs_h


22 
	#WTF_Ve˘‹Tøôs_h


	)

24 
	~<wtf/OwnPå.h
>

25 
	~<wtf/Ref.h
>

26 
	~<wtf/RefPå.h
>

27 
	~<utûôy
>

28 
	~<mem‹y
>

30 
«me•a˚
 
	gWTF
 {

32 
˛ass
 
	gAtomicSåög
;

34 
	gãm∂©e
<
boﬁ
 
	gisPod
, 
ty≥«me
 
	gT
>

35 
	gVe˘‹TøôsBa£
;

37 
	gãm∂©e
<
ty≥«me
 
	gT
>

38 
	gVe˘‹TøôsBa£
<
	gÁl£
, 
	gT
>

40 c⁄° 
boﬁ
 
	g√edsInôüliz©i⁄
 = 
åue
;

41 c⁄° 
boﬁ
 
	gˇnInôülizeWôhMem£t
 = 
Ál£
;

42 c⁄° 
boﬁ
 
	gˇnMoveWôhMem˝y
 = 
Ál£
;

43 c⁄° 
boﬁ
 
	gˇnC›yWôhMem˝y
 = 
Ál£
;

44 c⁄° 
boﬁ
 
	gˇnFûlWôhMem£t
 = 
Ál£
;

45 c⁄° 
boﬁ
 
	gˇnCom∑ªWôhMemcmp
 = 
Ál£
;

48 
	gãm∂©e
<
ty≥«me
 
	gT
>

49 
	gVe˘‹TøôsBa£
<
	gåue
, 
	gT
>

51 c⁄° 
boﬁ
 
	g√edsInôüliz©i⁄
 = 
Ál£
;

52 c⁄° 
boﬁ
 
	gˇnInôülizeWôhMem£t
 = 
Ál£
;

53 c⁄° 
boﬁ
 
	gˇnMoveWôhMem˝y
 = 
åue
;

54 c⁄° 
boﬁ
 
	gˇnC›yWôhMem˝y
 = 
åue
;

55 c⁄° 
boﬁ
 
	gˇnFûlWôhMem£t
 = (
T
) == ();

56 c⁄° 
boﬁ
 
	gˇnCom∑ªWôhMemcmp
 = 
åue
;

59 
	gãm∂©e
<
ty≥«me
 
	gT
>

60 
	gVe˘‹Tøôs
 : 
Ve˘‹TøôsBa£
<
°d
::
is_pod
<
T
>::
vÆue
, 
	gT
> { };

62 
	gSim∂eCœssVe˘‹Tøôs
 : 
Ve˘‹TøôsBa£
<
Ál£
, >

64 c⁄° 
boﬁ
 
	gˇnInôülizeWôhMem£t
 = 
åue
;

65 c⁄° 
boﬁ
 
	gˇnMoveWôhMem˝y
 = 
åue
;

66 c⁄° 
boﬁ
 
	gˇnCom∑ªWôhMemcmp
 = 
åue
;

71 
	gãm∂©e
<
ty≥«me
 
	gP
>

72 
	gVe˘‹Tøôs
<
	gRefPå
<
	gP
>> : 
Sim∂eCœssVe˘‹Tøôs
 { };

74 
	gãm∂©e
<
ty≥«me
 
	gP
>

75 
	gVe˘‹Tøôs
<
	gOwnPå
<
	gP
>> : 
Sim∂eCœssVe˘‹Tøôs
 { };

77 
	gãm∂©e
<
ty≥«me
 
	gP
>

78 
	gVe˘‹Tøôs
<
	g°d
::
unique_±r
<
P
>> : 
Sim∂eCœssVe˘‹Tøôs
 { };

80 
	gãm∂©e
<
ty≥«me
 
	gP
>

81 
	gVe˘‹Tøôs
<
	gRef
<
	gP
>> : 
Sim∂eCœssVe˘‹Tøôs
 { };

83 
	gãm∂©e
<>

84 
	gVe˘‹Tøôs
<
	gAtomicSåög
> : 
Sim∂eCœssVe˘‹Tøôs
 { };

86 
	gãm∂©e
<
ty≥«me
 
	gFú°
,Åy≥«mê
	gSec⁄d
>

87 
	gVe˘‹Tøôs
<
	g°d
::
∑ú
<
Fú°
, 
	gSec⁄d
>>

89 
	gVe˘‹Tøôs
<
	tFú°
> 
	tFú°Tøôs
;

90 
	gVe˘‹Tøôs
<
	tSec⁄d
> 
	tSec⁄dTøôs
;

92 c⁄° 
boﬁ
 
	g√edsInôüliz©i⁄
 = 
Fú°Tøôs
::
√edsInôüliz©i⁄
 || 
Sec⁄dTøôs
::needsInitialization;

93 c⁄° 
boﬁ
 
	gˇnInôülizeWôhMem£t
 = 
Fú°Tøôs
::
ˇnInôülizeWôhMem£t
 && 
Sec⁄dTøôs
::canInitializeWithMemset;

94 c⁄° 
boﬁ
 
	gˇnMoveWôhMem˝y
 = 
Fú°Tøôs
::
ˇnMoveWôhMem˝y
 && 
Sec⁄dTøôs
::canMoveWithMemcpy;

95 c⁄° 
boﬁ
 
	gˇnC›yWôhMem˝y
 = 
Fú°Tøôs
::
ˇnC›yWôhMem˝y
 && 
Sec⁄dTøôs
::canCopyWithMemcpy;

96 c⁄° 
boﬁ
 
	gˇnFûlWôhMem£t
 = 
Ál£
;

97 c⁄° 
boﬁ
 
	gˇnCom∑ªWôhMemcmp
 = 
Fú°Tøôs
::
ˇnCom∑ªWôhMemcmp
 && 
Sec⁄dTøôs
::canCompareWithMemcmp;

102 
usög
 
	gWTF
::
Ve˘‹Tøôs
;

103 
usög
 
	gWTF
::
Sim∂eCœssVe˘‹Tøôs
;

	@WTFThreadData.cpp

27 
	~"c⁄fig.h
"

28 
	~"WTFThªadD©a.h
"

30 
	~<wtf/ãxt/AtomicSåögTabÀ.h
>

32 #i‡
USE
(
WEB_THREAD
)

33 
	~<wtf/MaöThªad.h
>

36 
«me•a˚
 
	gWTF
 {

38 #i‡!
USE
(
PTHREAD_GETSPECIFIC_DIRECT
)

39 
	gThªadS≥cific
<
	gWTFThªadD©a
>* WTFThªadD©a::
°©icD©a
;

42 
	gWTFThªadD©a
::
WTFThªadD©a
()

43 : 
m_≠iD©a
(0)

44 , 
m_cuºítAtomicSåögTabÀ
(0)

45 , 
m_deÁu…AtomicSåögTabÀ
(0)

46 , 
m_©omicSåögTabÀDe°ru˘‹
(0)

47 , 
m_°ackBounds
(
SèckBounds
::
cuºítThªadSèckBounds
())

48 #i‡
ENABLE
(
STACK_STATS
)

49 , 
m_°ackSèts
()

51 , 
m_ßvedSèckPoöãrAtVME¡ry
(0)

52 , 
m_ßvedLa°SèckT›
(
°ack
().
‹igö
())

54 
	gAtomicSåögTabÀ
::
¸óã
(*
this
);

55 
	gm_cuºítAtomicSåögTabÀ
 = 
m_deÁu…AtomicSåögTabÀ
;

58 
	gWTFThªadD©a
::~
WTFThªadD©a
()

60 i‡(
m_©omicSåögTabÀDe°ru˘‹
)

61 
m_©omicSåögTabÀDe°ru˘‹
(
m_deÁu…AtomicSåögTabÀ
);

64 #i‡
USE
(
PTHREAD_GETSPECIFIC_DIRECT
)

65 
	gWTFThªadD©a
& WTFThªadD©a::
¸óãAndRegi°îF‹Gë•ecificDúe˘
()

67 
WTFThªadD©a
* 
d©a
 = 
√w
 WTFThreadData;

68 
_±hªad_£t•ecific_dúe˘
(
dúe˘Key
, 
d©a
);

69 
±hªad_key_öô_≈
(
dúe˘Key
, [](* 
d©a
){

70 
dñëe
 
°©ic_ˇ°
<
WTFThªadD©a
*>(
d©a
);

72  *
	gd©a
;

	@WTFThreadData.h

27 #i‚de‡
WTFThªadD©a_h


28 
	#WTFThªadD©a_h


	)

30 
	~<wtf/HashM≠.h
>

31 
	~<wtf/HashSë.h
>

32 
	~<wtf/N⁄c›yabÀ.h
>

33 
	~<wtf/SèckBounds.h
>

34 
	~<wtf/SèckSèts.h
>

35 
	~<wtf/ãxt/SåögHash.h
>

37 #i‡
OS
(
DARWIN
)

38 #i‡
deföed
(
__has_ö˛ude
Ë&& __has_ö˛ude(<
Sy°em
/
±hªad_machdï
.
h
>)

39 
	~<Sy°em/±hªad_machdï.h
>

43 #i‡
deföed
(
__PTK_FRAMEWORK_JAVASCRIPTCORE_KEY1
)

44 
	#WTF_USE_PTHREAD_GETSPECIFIC_DIRECT
 1

	)

47 #i‡!
USE
(
PTHREAD_GETSPECIFIC_DIRECT
)

48 
	~<wtf/ThªadS≥cific.h
>

49 
	~<wtf/Thªadög.h
>

52 
«me•a˚
 
	gWTF
 {

54 
˛ass
 
	gAtomicSåögTabÀ
;

56 (*
	gAtomicSåögTabÀDe°ru˘‹
)(
	tAtomicSåögTabÀ
*);

58 ˛as†
	cWTFThªadD©a
 {

59 
WTF_MAKE_NONCOPYABLE
(
WTFThªadD©a
);

60 
	gpublic
:

61 
WTF_EXPORT_PRIVATE
 
WTFThªadD©a
();

62 
	gWTF_EXPORT_PRIVATE
 ~
WTFThªadD©a
();

64 
AtomicSåögTabÀ
* 
©omicSåögTabÀ
()

66  
	gm_cuºítAtomicSåögTabÀ
;

69 
AtomicSåögTabÀ
* 
£tCuºítAtomicSåögTabÀ
(AtomicSåögTabÀ* 
©omicSåögTabÀ
)

71 
AtomicSåögTabÀ
* 
	gﬁdAtomicSåögTabÀ
 = 
m_cuºítAtomicSåögTabÀ
;

72 
	gm_cuºítAtomicSåögTabÀ
 = 
©omicSåögTabÀ
;

73  
	gﬁdAtomicSåögTabÀ
;

76 
ª£tCuºítAtomicSåögTabÀ
()

78 
	gm_cuºítAtomicSåögTabÀ
 = 
m_deÁu…AtomicSåögTabÀ
;

81 c⁄° 
	gSèckBounds
& 
°ack
()

85 #i‡
OS
(
WINDOWS
)

86 
	gm_°ackBounds
 = 
SèckBounds
::
cuºítThªadSèckBounds
();

88  
	gm_°ackBounds
;

91 #i‡
ENABLE
(
STACK_STATS
)

92 
	gSèckSèts
::
PîThªadSèts
& 
°ackSèts
()

94  
m_°ackSèts
;

98 * 
ßvedSèckPoöãrAtVME¡ry
()

100  
	gm_ßvedSèckPoöãrAtVME¡ry
;

103 
£tSavedSèckPoöãrAtVME¡ry
(* 
°ackPoöãrAtVME¡ry
)

105 
	gm_ßvedSèckPoöãrAtVME¡ry
 = 
°ackPoöãrAtVME¡ry
;

108 * 
ßvedLa°SèckT›
()

110  
	gm_ßvedLa°SèckT›
;

113 
£tSavedLa°SèckT›
(* 
œ°SèckT›
)

115 
	gm_ßvedLa°SèckT›
 = 
œ°SèckT›
;

118 * 
	gm_≠iD©a
;

120 
	g¥iv©e
:

121 
AtomicSåögTabÀ
* 
m_cuºítAtomicSåögTabÀ
;

122 
AtomicSåögTabÀ
* 
	gm_deÁu…AtomicSåögTabÀ
;

123 
AtomicSåögTabÀDe°ru˘‹
 
	gm_©omicSåögTabÀDe°ru˘‹
;

125 
SèckBounds
 
	gm_°ackBounds
;

126 #i‡
ENABLE
(
STACK_STATS
)

127 
	gSèckSèts
::
PîThªadSèts
 
m_°ackSèts
;

129 * 
	gm_ßvedSèckPoöãrAtVME¡ry
;

130 * 
	gm_ßvedLa°SèckT›
;

132 #i‡
USE
(
PTHREAD_GETSPECIFIC_DIRECT
)

133 c⁄° 
±hªad_key_t
 
	gdúe˘Key
 = 
__PTK_FRAMEWORK_JAVASCRIPTCORE_KEY1
;

134 
WTF_EXPORT_PRIVATE
 
	gWTFThªadD©a
& 
¸óãAndRegi°îF‹Gë•ecificDúe˘
();

136 
WTF_EXPORTDATA
 
	gThªadS≥cific
<
	gWTFThªadD©a
>* 
	g°©icD©a
;

139 
‰õnd
 
	gWTFThªadD©a
& 
wtfThªadD©a
();

140 
‰õnd
 
˛ass
 
	gAtomicSåögTabÀ
;

143 
ölöe
 
	gWTFThªadD©a
& 
	$wtfThªadD©a
()

151 #i‡!
	`USE
(
PTHREAD_GETSPECIFIC_DIRECT
)

152 i‡(!
WTFThªadD©a
::
°©icD©a
)

153 
WTFThªadD©a
::
°©icD©a
 = 
√w
 
ThªadS≥cific
<WTFThreadData>;

154  **
WTFThªadD©a
::
°©icD©a
;

156 i‡(
WTFThªadD©a
* 
d©a
 = 
°©ic_ˇ°
<WTFThªadD©a*>(
	`_±hªad_gë•ecific_dúe˘
(WTFThªadD©a::
dúe˘Key
)))

157  *
d©a
;

158  
WTFThªadD©a
::
	`¸óãAndRegi°îF‹Gë•ecificDúe˘
();

160 
	}
}

164 
usög
 
	gWTF
::
WTFThªadD©a
;

165 
usög
 
	gWTF
::
wtfThªadD©a
;

166 
usög
 
	gWTF
::
AtomicSåögTabÀ
;

	@WeakPtr.h

26 #i‚de‡
WTF_WókPå_h


27 
	#WTF_WókPå_h


	)

29 
	~<wtf/N⁄c›yabÀ.h
>

30 
	~<wtf/PassRefPå.h
>

31 
	~<wtf/RefPå.h
>

32 
	~<wtf/ThªadSa„RefCou¡ed.h
>

33 
	~<wtf/Thªadög.h
>

35 #i‡
USE
(
WEB_THREAD
)

36 
	~<wtf/MaöThªad.h
>

39 
«me•a˚
 
	gWTF
 {

41 
	gãm∂©e
<
ty≥«me
 
	gT
>

42 
˛ass
 
	gWókRe„ªn˚
 : 
public
 
ThªadSa„RefCou¡ed
<
WókRe„ªn˚
<
T
>> {

43 
WTF_MAKE_NONCOPYABLE
(
WókRe„ªn˚
<
T
>);

44 
	gWTF_MAKE_FAST_ALLOCATED
;

45 
	gpublic
:

46 
PassRefPå
<
WókRe„ªn˚
<
T
>> 
¸óã
(T* 
±r
Ë{  
ad›tRef
(
√w
 WeakReference(ptr)); }

47 
	gPassRefPå
<
	gWókRe„ªn˚
<
	gT
>> 
¸óãUnbound
(Ë{  
ad›tRef
(
√w
 
WókRe„ªn˚
()); }

49 
T
* 
gë
() const

51 #i‡
USE
(
WEB_THREAD
)

52 
ASSERT
(
ˇnAc˚ssThªadLoˇlD©aF‹Thªad
(
m_boundThªad
));

54 
ASSERT
(
m_boundThªad
 =
cuºítThªad
());

56  
	gm_±r
;

59 
˛ór
()

61 #i‡
USE
(
WEB_THREAD
)

62 
ASSERT
(
ˇnAc˚ssThªadLoˇlD©aF‹Thªad
(
m_boundThªad
));

64 
ASSERT
(
m_boundThªad
 =
cuºítThªad
());

66 
	gm_±r
 = 0;

69 
bödTo
(
T
* 
±r
)

71 
ASSERT
(!
m_±r
);

72 #i‚de‡
NDEBUG


73 
	gm_boundThªad
 = 
cuºítThªad
();

75 
	gm_±r
 = 
±r
;

78 
	g¥iv©e
:

79 
WókRe„ªn˚
(Ë: 
m_±r
(0) { }

81 
ex∂icô
 
WókRe„ªn˚
(
T
* 
±r
)

82 : 
m_±r
(
±r
)

83 #i‚de‡
NDEBUG


84 , 
m_boundThªad
(
cuºítThªad
())

89 
T
* 
	gm_±r
;

90 #i‚de‡
NDEBUG


91 
ThªadIdítifõr
 
	gm_boundThªad
;

95 
	gãm∂©e
<
ty≥«me
 
	gT
>

96 ˛as†
	cWókPå
 {

97 
	gWTF_MAKE_FAST_ALLOCATED
;

98 
	gpublic
:

99 
WókPå
() { }

100 
WókPå
(
PassRefPå
<
WókRe„ªn˚
<
T
>> 
ªf
Ë: 
m_ªf
(ref) { }

102 
T
* 
gë
(Ëc⁄° {  
m_ªf
->get(); }

103 
ex∂icô
 
›î©‹
 
boﬁ
(Ëc⁄° {  
	gm_ªf
->
gë
(); }

105 
T
* 
	g›î©‹
->(Ëc⁄° {  
	gm_ªf
->
gë
(); }

107 
	g¥iv©e
:

108 
RefPå
<
WókRe„ªn˚
<
T
>> 
m_ªf
;

111 
	gãm∂©e
<
ty≥«me
 
	gT
>

112 ˛as†
	cWókPåFa˘‹y
 {

113 
WTF_MAKE_NONCOPYABLE
(
WókPåFa˘‹y
<
T
>);

114 
	gWTF_MAKE_FAST_ALLOCATED
;

115 
	gpublic
:

116 
ex∂icô
 
WókPåFa˘‹y
(
T
* 
±r
Ë: 
m_ªf
(
WókRe„ªn˚
<T>::
¸óã
(ptr)) { }

118 
WókPåFa˘‹y
(
PassRefPå
<
WókRe„ªn˚
<
T
>> 
ªf
, T* 
±r
)

119 : 
m_ªf
(
ªf
)

121 
m_ªf
->
bödTo
(
±r
);

124 ~
WókPåFa˘‹y
(Ë{ 
	gm_ªf
->
˛ór
(); }

127 
	gWókPå
<
	gT
> 
¸óãWókPå
(Ë{  WókPå<T>(
	gm_ªf
); }

129 
ªvokeAŒ
()

131 
T
* 
	g±r
 = 
m_ªf
->
gë
();

132 
	gm_ªf
->
˛ór
();

134 
	gm_ªf
 = 
WókRe„ªn˚
<
T
>::
¸óã
(
±r
);

137 
	g¥iv©e
:

138 
RefPå
<
WókRe„ªn˚
<
T
>> 
m_ªf
;

143 
usög
 
	gWTF
::
WókPå
;

144 
usög
 
	gWTF
::
WókPåFa˘‹y
;

145 
usög
 
	gWTF
::
WókRe„ªn˚
;

	@WindowsExtras.h

25 #i‚de‡
WödowsExåas_h


26 
	#WödowsExåas_h


	)

28 #i‡
OS
(
WINDOWS
)

30 
	~<wödows.h
>

31 
	~<objba£.h
>

32 
	~<shlw≠i.h
>

34 #i‚de‡
HWND_MESSAGE


35 c⁄° 
HWND
 
	gHWND_MESSAGE
 = 0;

38 
«me•a˚
 
	gWTF
 {

40 
ölöe
 
HRESULT
 
gëRegi°ryVÆue
(
HKEY
 
hkey
, 
LPCWSTR
 
pszSubKey
, LPCWSTR 
pszVÆue
, 
LPDWORD
 
pdwTy≥
, 
LPVOID
 
pvD©a
, LPDWORD 
pcbD©a
)

42  ::
SHGëVÆueW
(
hkey
, 
pszSubKey
, 
pszVÆue
, 
pdwTy≥
, 
pvD©a
, 
pcbD©a
);

45 
ölöe
 * 
gëWödowPoöãr
(
HWND
 
hWnd
, 
ödex
)

47  
	gªöãΩªt_ˇ°
<*>(::
GëWödowL⁄gPå
(
hWnd
, 
ödex
));

50 
ölöe
 * 
£tWödowPoöãr
(
HWND
 
hWnd
, 
ödex
, * 
vÆue
)

52  
	gªöãΩªt_ˇ°
<*>(::
SëWödowL⁄gPå
(
hWnd
, 
ödex
, 
ªöãΩªt_ˇ°
<
LONG_PTR
>(
vÆue
)));

57 
usög
 
	gWTF
::
gëRegi°ryVÆue
;

58 
usög
 
	gWTF
::
gëWödowPoöãr
;

59 
usög
 
	gWTF
::
£tWödowPoöãr
;

	@cf/RunLoopCF.cpp

26 
	~"c⁄fig.h
"

27 
	~"RunLo›.h
"

29 
	~<C‹eFound©i⁄/C‹eFound©i⁄.h
>

30 
	~<di•©ch/di•©ch.h
>

31 
	~<wtf/AutodøöedPoﬁ.h
>

33 
«me•a˚
 
	gWTF
 {

35 
	gRunLo›
::
≥rf‹mW‹k
(* 
c⁄ãxt
)

37 
AutodøöedPoﬁ
 
poﬁ
;

38 
	g°©ic_ˇ°
<
	gRunLo›
*>(
	gc⁄ãxt
)->
≥rf‹mW‹k
();

41 
	gRunLo›
::
RunLo›
()

42 : 
m_runLo›
(
CFRunLo›GëCuºít
())

43 , 
m_√°ögLevñ
(0)

45 
CFRunLo›Sour˚C⁄ãxt
 
	gc⁄ãxt
 = { 0, 
this
, 0, 0, 0, 0, 0, 0, 0, 
≥rf‹mW‹k
 };

46 
	gm_runLo›Sour˚
 = 
ad›tCF
(
CFRunLo›Sour˚Cª©e
(
kCFAŒoˇt‹DeÁu…
, 0, &
c⁄ãxt
));

47 
CFRunLo›AddSour˚
(
m_runLo›
.
gë
(), 
m_runLo›Sour˚
.gë(), 
kCFRunLo›Comm⁄Modes
);

50 
	gRunLo›
::~
RunLo›
()

52 
CFRunLo›Sour˚InvÆid©e
(
m_runLo›Sour˚
.
gë
());

55 
	gRunLo›
::
runF‹Duøti⁄
(
duøti⁄
)

57 
CFRunLo›RunInMode
(
kCFRunLo›DeÁu…Mode
, 
duøti⁄
, 
åue
);

60 
	gRunLo›
::
wakeUp
()

62 
CFRunLo›Sour˚Sig«l
(
m_runLo›Sour˚
.
gë
());

63 
CFRunLo›WakeUp
(
m_runLo›
.
gë
());

66 
	gRunLo›
::
run
()

68 
cuºít
().
m_√°ögLevñ
++;

71 
AutodøöedPoﬁ
 
	gpoﬁ
;

72 
CFRunLo›Run
();

75 
cuºít
().
	gm_√°ögLevñ
--;

78 
	gRunLo›
::
°›
()

80 
ASSERT
(
m_runLo›
 =
CFRunLo›GëCuºít
());

81 
CFRunLo›St›
(
m_runLo›
.
gë
());

86 
	gRunLo›
::
TimîBa£
::
timîFúed
(
CFRunLo›TimîRef
, * 
c⁄ãxt
)

88 
TimîBa£
* 
	gtimî
 = 
°©ic_ˇ°
<TimîBa£*>(
c⁄ãxt
);

90 
AutodøöedPoﬁ
 
	gpoﬁ
;

91 
	gtimî
->
fúed
();

94 
	gRunLo›
::
TimîBa£
::TimîBa£(
RunLo›
& 
runLo›
)

95 : 
m_runLo›
(
runLo›
)

99 
RunLo›
::
TimîBa£
::~TimerBase()

101 
°›
();

104 
	gRunLo›
::
TimîBa£
::
°¨t
(
√xtFúeI¡îvÆ
, 
boﬁ
 
ª≥©
)

106 i‡(
	gm_timî
)

107 
°›
();

109 
CFRunLo›TimîC⁄ãxt
 
	gc⁄ãxt
 = { 0, 
this
, 0, 0, 0 };

110 
CFTimeI¡îvÆ
 
	gª≥©I¡îvÆ
 = 
ª≥©
 ? 
√xtFúeI¡îvÆ
 : 0;

111 
	gm_timî
 = 
ad›tCF
(
CFRunLo›TimîCª©e
(
kCFAŒoˇt‹DeÁu…
, 
CFAbsﬁuãTimeGëCuºít
(Ë+ 
√xtFúeI¡îvÆ
, 
ª≥©I¡îvÆ
, 0, 0, 
timîFúed
, &
c⁄ãxt
));

112 
CFRunLo›AddTimî
(
m_runLo›
.m_runLo›.
gë
(), 
m_timî
.gë(), 
kCFRunLo›Comm⁄Modes
);

115 
	gRunLo›
::
TimîBa£
::
°›
()

117 i‡(!
m_timî
)

120 
CFRunLo›TimîInvÆid©e
(
m_timî
.
gë
());

121 
	gm_timî
 = 
nuŒ±r
;

124 
boﬁ
 
	gRunLo›
::
TimîBa£
::
isA˘ive
() const

126  
m_timî
 && 
CFRunLo›TimîIsVÆid
(m_timî.
gë
());

	@cf/TypeCasts.h

26 #i‚de‡
Ty≥Ca°s_h


27 
	#Ty≥Ca°s_h


	)

29 
	~<C‹eFound©i⁄/C‹eFound©i⁄.h
>

30 
	~<wtf/As£πi⁄s.h
>

32 
«me•a˚
 
	gWTF
 {

34 
	gãm∂©e
 <
	gty≥«me
> 
	gCFTy≥Tøô
;

36 
	#DECLARE_CF_TYPE_TRAIT
(
CœssName
) \

37 
ãm∂©e
 <> \

38 
CFTy≥Tøô
<
CœssName
##
Ref
> { \

39 
ölöe
 
CFTy≥ID
 
	`ty≥ID
(Ë{  
CœssName
##
	`GëTy≥ID
(); } \

40 };

	)

42 
DECLARE_CF_TYPE_TRAIT
(
CFAºay
);

43 
DECLARE_CF_TYPE_TRAIT
(
CFBoﬁón
);

44 
DECLARE_CF_TYPE_TRAIT
(
CFD©a
);

45 
DECLARE_CF_TYPE_TRAIT
(
CFDi˘i⁄¨y
);

46 
DECLARE_CF_TYPE_TRAIT
(
CFNumbî
);

47 
DECLARE_CF_TYPE_TRAIT
(
CFSåög
);

49 #unde‡
DECLARE_CF_TYPE_TRAIT


51 
	gãm∂©e
<
ty≥«me
 
	gT
> 
T
 
dy«mic_cf_ˇ°
(
CFTy≥Ref
 
obje˘
)

53 i‡(!
	gobje˘
)

54  
	gnuŒ±r
;

56 i‡(
CFGëTy≥ID
(
obje˘
Ë!
CFTy≥Tøô
<
T
>::
ty≥ID
())

57  
nuŒ±r
;

59  
	g°©ic_ˇ°
<
	gT
>(
	gobje˘
);

62 
	gãm∂©e
<
ty≥«me
 
	gT
> 
T
 
checked_cf_ˇ°
(
CFTy≥Ref
 
obje˘
)

64 autÿ
	gªsu…
 = 
dy«mic_cf_ˇ°
<
T
>(
obje˘
);

65 
ASSERT_WITH_SECURITY_IMPLICATION
(
ªsu…
);

67  
	gªsu…
;

72 
usög
 
	gWTF
::
checked_cf_ˇ°
;

73 
usög
 
	gWTF
::
dy«mic_cf_ˇ°
;

	@dtoa.cpp

35 
	~"c⁄fig.h
"

36 
	~"dtﬂ.h
"

38 
	~<°dio.h
>

39 
	~<wtf/M©hExåas.h
>

40 
	~<wtf/Thªadög.h
>

41 
	~<wtf/Ve˘‹.h
>

43 #i‡
COMPILER
(
MSVC
)

44 #¥agm®
w¨nög
(
dißbÀ
: 4244)

45 #¥agm®
w¨nög
(
dißbÀ
: 4245)

46 #¥agm®
w¨nög
(
dißbÀ
: 4554)

49 #i‡
CPU
(
PPC64
Ë|| CPU(
X86_64
Ë|| CPU(
ARM64
)

52 
	#USE_LONG_LONG


	)

55 
«me•a˚
 
	gWTF
 {

57 
Muãx
* 
	gs_dtﬂP5Muãx
;

60 
	gd
;

61 
uöt32_t
 
	gL
[2];

62 } 
	tU
;

64 #i‡
CPU
(
BIG_ENDIAN
Ë|| CPU(
MIDDLE_ENDIAN
)

65 
	#w‹d0
(
x
Ë(x)->
L
[0]

	)

66 
	#w‹d1
(
x
Ë(x)->
L
[1]

	)

68 
	#w‹d0
(
x
Ë(x)->
L
[1]

	)

69 
	#w‹d1
(
x
Ë(x)->
L
[0]

	)

71 
	#dvÆ
(
x
Ë(x)->
d


	)

73 #i‚de‡
USE_LONG_LONG


78 
ALWAYS_INLINE
 
uöt32_t
* 
°‹eInc
(uöt32_t* 
p
, 
uöt16_t
 
high
, uöt16_à
low
)

80 
uöt16_t
* 
	gp16
 = 
ªöãΩªt_ˇ°
<uöt16_t*>(
p
);

81 #i‡
CPU
(
BIG_ENDIAN
)

82 
	gp16
[0] = 
high
;

83 
	gp16
[1] = 
low
;

85 
	gp16
[1] = 
high
;

86 
	gp16
[0] = 
low
;

88  
	gp
 + 1;

93 
	#Exp_shi·
 20

	)

94 
	#Exp_shi·1
 20

	)

95 
	#Exp_msk1
 0x100000

	)

96 
	#Exp_msk11
 0x100000

	)

97 
	#Exp_mask
 0x7ff00000

	)

98 
	#P
 53

	)

99 
	#Büs
 1023

	)

100 
	#Emö
 (-1022)

	)

101 
	#Exp_1
 0x3ff00000

	)

102 
	#Exp_11
 0x3ff00000

	)

103 
	#Ebôs
 11

	)

104 
	#Føc_mask
 0xfffff

	)

105 
	#Føc_mask1
 0xfffff

	)

106 
	#Tí_pmax
 22

	)

107 
	#BÀtch
 0x10

	)

108 
	#Bndry_mask
 0xfffff

	)

109 
	#Bndry_mask1
 0xfffff

	)

110 
	#LSB
 1

	)

111 
	#Sign_bô
 0x80000000

	)

112 
	#Log2P
 1

	)

113 
	#Töy0
 0

	)

114 
	#Töy1
 1

	)

115 
	#Quick_max
 14

	)

116 
	#I¡_max
 14

	)

118 
	#rounded_¥odu˘
(
a
, 
b
Ë®*
	)
b

119 
	#rounded_quŸõ¡
(
a
, 
b
Ë®/
	)
b

121 
	#Big0
 (
Føc_mask1
 | 
Exp_msk1
 * (
DBL_MAX_EXP
 + 
Büs
 - 1))

	)

122 
	#Big1
 0xffffffff

	)

124 
	sBigI¡
 {

125 
BigI¡
(Ë: 
sign
(0) { }

126 
sign
;

128 
˛ór
()

130 
	gsign
 = 0;

131 
	gm_w‹ds
.
˛ór
();

134 
size_t
 
size
() const

136  
	gm_w‹ds
.
size
();

139 
ªsize
(
size_t
 
s
)

141 
	gm_w‹ds
.
ªsize
(
s
);

144 
uöt32_t
* 
w‹ds
()

146  
	gm_w‹ds
.
d©a
();

149 c⁄° 
uöt32_t
* 
w‹ds
() const

151  
	gm_w‹ds
.
d©a
();

154 
≠≥nd
(
uöt32_t
 
w
)

156 
	gm_w‹ds
.
≠≥nd
(
w
);

159 
	gVe˘‹
<
	guöt32_t
, 16> 
	gm_w‹ds
;

162 
mu…add
(
BigI¡
& 
b
, 
m
, 
a
)

164 #ifde‡
USE_LONG_LONG


165 
	gˇºy
;

167 
uöt32_t
 
	gˇºy
;

170 
	gwds
 = 
b
.
size
();

171 
uöt32_t
* 
	gx
 = 
b
.
w‹ds
();

172 
	gi
 = 0;

173 
	gˇºy
 = 
a
;

175 #ifde‡
USE_LONG_LONG


176 
	gy
 = *
x
 * ()
m
 + 
ˇºy
;

177 
	gˇºy
 = 
y
 >> 32;

178 *
	gx
++ = (
uöt32_t
)
y
 & 0xffffffffUL;

180 
uöt32_t
 
	gxi
 = *
x
;

181 
uöt32_t
 
	gy
 = (
xi
 & 0xffffË* 
m
 + 
ˇºy
;

182 
uöt32_t
 
	gz
 = (
xi
 >> 16Ë* 
m
 + (
y
 >> 16);

183 
	gˇºy
 = 
z
 >> 16;

184 *
	gx
++ = (
z
 << 16Ë+ (
y
 & 0xffff);

186 } ++
	gi
 < 
	gwds
);

188 i‡(
	gˇºy
)

189 
	gb
.
≠≥nd
((
uöt32_t
)
ˇºy
);

192 
hi0bôs
(
uöt32_t
 
x
)

194 
	gk
 = 0;

196 i‡(!(
	gx
 & 0xffff0000)) {

197 
	gk
 = 16;

198 
	gx
 <<= 16;

200 i‡(!(
	gx
 & 0xff000000)) {

201 
	gk
 += 8;

202 
	gx
 <<= 8;

204 i‡(!(
	gx
 & 0xf0000000)) {

205 
	gk
 += 4;

206 
	gx
 <<= 4;

208 i‡(!(
	gx
 & 0xc0000000)) {

209 
	gk
 += 2;

210 
	gx
 <<= 2;

212 i‡(!(
	gx
 & 0x80000000)) {

213 
	gk
++;

214 i‡(!(
	gx
 & 0x40000000))

217  
	gk
;

220 
lo0bôs
(
uöt32_t
* 
y
)

222 
	gk
;

223 
uöt32_t
 
	gx
 = *
y
;

225 i‡(
	gx
 & 7) {

226 i‡(
	gx
 & 1)

228 i‡(
	gx
 & 2) {

229 *
	gy
 = 
x
 >> 1;

232 *
	gy
 = 
x
 >> 2;

235 
	gk
 = 0;

236 i‡(!(
	gx
 & 0xffff)) {

237 
	gk
 = 16;

238 
	gx
 >>= 16;

240 i‡(!(
	gx
 & 0xff)) {

241 
	gk
 += 8;

242 
	gx
 >>= 8;

244 i‡(!(
	gx
 & 0xf)) {

245 
	gk
 += 4;

246 
	gx
 >>= 4;

248 i‡(!(
	gx
 & 0x3)) {

249 
	gk
 += 2;

250 
	gx
 >>= 2;

252 i‡(!(
	gx
 & 1)) {

253 
	gk
++;

254 
	gx
 >>= 1;

255 i‡(!
	gx
)

258 *
	gy
 = 
x
;

259  
	gk
;

262 
i2b
(
BigI¡
& 
b
, 
i
)

264 
	gb
.
	gsign
 = 0;

265 
	gb
.
ªsize
(1);

266 
	gb
.
w‹ds
()[0] = 
i
;

269 
mu…
(
BigI¡
& 
aRef
, c⁄° BigI¡& 
bRef
)

271 c⁄° 
BigI¡
* 
	ga
 = &
aRef
;

272 c⁄° 
BigI¡
* 
	gb
 = &
bRef
;

273 
BigI¡
 
	gc
;

274 
	gwa
, 
	gwb
, 
	gwc
;

275 c⁄° 
uöt32_t
* 
	gx
 = 0;

276 c⁄° 
uöt32_t
* 
	gxa
;

277 c⁄° 
uöt32_t
* 
	gxb
;

278 c⁄° 
uöt32_t
* 
	gx´
;

279 c⁄° 
uöt32_t
* 
	gxbe
;

280 
uöt32_t
* 
	gxc
;

281 
uöt32_t
* 
	gxc0
;

282 
uöt32_t
 
	gy
;

283 #ifde‡
USE_LONG_LONG


284 
	gˇºy
, 
	gz
;

286 
uöt32_t
 
	gˇºy
, 
	gz
;

289 i‡(
	ga
->
size
(Ë< 
	gb
->size()) {

290 c⁄° 
BigI¡
* 
	gtmp
 = 
a
;

291 
	ga
 = 
b
;

292 
	gb
 = 
tmp
;

295 
	gwa
 = 
a
->
size
();

296 
	gwb
 = 
b
->
size
();

297 
	gwc
 = 
wa
 + 
wb
;

298 
	gc
.
ªsize
(
wc
);

300 
	gxc
 = 
c
.
w‹ds
(), 
	gxa
 = 
xc
 + 
wc
; xc < xa; xc++)

301 *
	gxc
 = 0;

302 
	gxa
 = 
a
->
w‹ds
();

303 
	gx´
 = 
xa
 + 
wa
;

304 
	gxb
 = 
b
->
w‹ds
();

305 
	gxbe
 = 
xb
 + 
wb
;

306 
	gxc0
 = 
c
.
w‹ds
();

307 #ifde‡
USE_LONG_LONG


308 ; 
	gxb
 < 
	gxbe
; 
	gxc0
++) {

309 i‡((
	gy
 = *
xb
++)) {

310 
x
 = 
xa
;

311 
	gxc
 = 
xc0
;

312 
	gˇºy
 = 0;

314 
	gz
 = *
x
++ * ()
y
 + *
xc
 + 
ˇºy
;

315 
	gˇºy
 = 
z
 >> 32;

316 *
	gxc
++ = (
uöt32_t
)
z
 & 0xffffffffUL;

317 } 
	gx
 < 
	gx´
);

318 *
	gxc
 = (
uöt32_t
)
ˇºy
;

322 ; 
	gxb
 < 
	gxbe
; xb++, 
	gxc0
++) {

323 i‡((
	gy
 = *
xb
 & 0xffff)) {

324 
x
 = 
xa
;

325 
	gxc
 = 
xc0
;

326 
	gˇºy
 = 0;

328 
	gz
 = (*
x
 & 0xffffË* 
y
 + (*
xc
 & 0xffffË+ 
ˇºy
;

329 
	gˇºy
 = 
z
 >> 16;

330 
uöt32_t
 
	gz2
 = (*
x
++ >> 16Ë* 
y
 + (*
xc
 >> 16Ë+ 
ˇºy
;

331 
	gˇºy
 = 
z2
 >> 16;

332 
	gxc
 = 
°‹eInc
(
xc
, 
z2
, 
z
);

333 } 
	gx
 < 
	gx´
);

334 *
	gxc
 = 
ˇºy
;

336 i‡((
	gy
 = *
xb
 >> 16)) {

337 
x
 = 
xa
;

338 
	gxc
 = 
xc0
;

339 
	gˇºy
 = 0;

340 
uöt32_t
 
	gz2
 = *
xc
;

342 
	gz
 = (*
x
 & 0xffffË* 
y
 + (*
xc
 >> 16Ë+ 
ˇºy
;

343 
	gˇºy
 = 
z
 >> 16;

344 
	gxc
 = 
°‹eInc
(
xc
, 
z
, 
z2
);

345 
	gz2
 = (*
x
++ >> 16Ë* 
y
 + (*
xc
 & 0xffffË+ 
ˇºy
;

346 
	gˇºy
 = 
z2
 >> 16;

347 } 
	gx
 < 
	gx´
);

348 *
	gxc
 = 
z2
;

352 
	gxc0
 = 
c
.
w‹ds
(), 
	gxc
 = 
xc0
 + 
wc
; 
	gwc
 > 0 && !*--xc; --wc) { }

353 
	gc
.
ªsize
(
wc
);

354 
	gaRef
 = 
c
;

357 
	sP5Node
 {

358 
WTF_MAKE_NONCOPYABLE
(
P5Node
); 
	gWTF_MAKE_FAST_ALLOCATED
;

359 
	gpublic
:

360 
P5Node
() { }

361 
BigI¡
 
vÆ
;

362 
P5Node
* 
	g√xt
;

365 
P5Node
* 
	gp5s
;

366 
	gp5sCou¡
;

368 
ALWAYS_INLINE
 
pow5mu…
(
BigI¡
& 
b
, 
k
)

370 
	gp05
[3] = { 5, 25, 125 };

372 i‡(
	gi
 = 
k
 & 3)

373 
mu…add
(
b
, 
p05
[
i
 - 1], 0);

375 i‡(!(
	gk
 >>= 2))

378 
	gs_dtﬂP5Muãx
->
lock
();

379 
P5Node
* 
	gp5
 = 
p5s
;

381 i‡(!
	gp5
) {

383 
	gp5
 = 
√w
 
P5Node
;

384 
i2b
(
p5
->
vÆ
, 625);

385 
	gp5
->
	g√xt
 = 0;

386 
	gp5s
 = 
p5
;

387 
	gp5sCou¡
 = 1;

390 
	gp5sCou¡Loˇl
 = 
p5sCou¡
;

391 
	gs_dtﬂP5Muãx
->
u∆ock
();

392 
	gp5sU£d
 = 0;

395 i‡(
	gk
 & 1)

396 
mu…
(
b
, 
p5
->
vÆ
);

398 i‡(!(
	gk
 >>= 1))

401 i‡(++
	gp5sU£d
 =
p5sCou¡Loˇl
) {

402 
s_dtﬂP5Muãx
->
lock
();

403 i‡(
	gp5sU£d
 =
p5sCou¡
) {

404 
ASSERT
(!
p5
->
√xt
);

405 
	gp5
->
	g√xt
 = 
√w
 
P5Node
;

406 
	gp5
->
	g√xt
->next = 0;

407 
	gp5
->
	g√xt
->
	gvÆ
 = 
p5
->
vÆ
;

408 
mu…
(
p5
->
√xt
->
vÆ
,Ö5->next->val);

409 ++
	gp5sCou¡
;

412 
	gp5sCou¡Loˇl
 = 
p5sCou¡
;

413 
	gs_dtﬂP5Muãx
->
u∆ock
();

415 
	gp5
 = 
p5
->
√xt
;

419 
ALWAYS_INLINE
 
lshi·
(
BigI¡
& 
b
, 
k
)

421 
	gn
 = 
k
 >> 5;

423 
	g‹igSize
 = 
b
.
size
();

424 
	gn1
 = 
n
 + 
‹igSize
 + 1;

426 i‡(
	gk
 &= 0x1f)

427 
b
.
ªsize
(b.
size
(Ë+ 
n
 + 1);

429 
	gb
.
ªsize
(
b
.
size
(Ë+ 
n
);

431 c⁄° 
uöt32_t
* 
	g§cSèπ
 = 
b
.
w‹ds
();

432 
uöt32_t
* 
	gd°Sèπ
 = 
b
.
w‹ds
();

433 c⁄° 
uöt32_t
* 
	g§c
 = 
§cSèπ
 + 
‹igSize
 - 1;

434 
uöt32_t
* 
	gd°
 = 
d°Sèπ
 + 
n1
 - 1;

435 i‡(
	gk
) {

436 
uöt32_t
 
	ghiSubw‹d
 = 0;

437 
	gs
 = 32 - 
k
;

438 ; 
	g§c
 >
§cSèπ
; --src) {

439 *
	gd°
-- = 
hiSubw‹d
 | *
§c
 >> 
s
;

440 
	ghiSubw‹d
 = *
§c
 << 
k
;

442 *
	gd°
 = 
hiSubw‹d
;

443 
ASSERT
(
d°
 =
d°Sèπ
 + 
n
);

445 
	gb
.
ªsize
(
‹igSize
 + 
n
 + !!
b
.
w‹ds
()[
n1
 - 1]);

449 *--
	gd°
 = *
§c
--;

450 } 
	g§c
 >
§cSèπ
);

452 
	gd°
 = 
d°Sèπ
 + 
n
; dst != dstStart; )

453 *--
	gd°
 = 0;

455 
ASSERT
(
b
.
size
(Ë<1 || b.
w‹ds
()[b.size() - 1]);

458 
cmp
(c⁄° 
BigI¡
& 
a
, c⁄° BigI¡& 
b
)

460 c⁄° 
uöt32_t
 *
	gxa
, *
	gxa0
, *
	gxb
, *
	gxb0
;

461 
	gi
, 
	gj
;

463 
	gi
 = 
a
.
size
();

464 
	gj
 = 
b
.
size
();

465 
ASSERT
(
i
 <1 || 
a
.
w‹ds
()[i - 1]);

466 
ASSERT
(
j
 <1 || 
b
.
w‹ds
()[j - 1]);

467 i‡(
	gi
 -
j
)

468  
i
;

469 
	gxa0
 = 
a
.
w‹ds
();

470 
	gxa
 = 
xa0
 + 
j
;

471 
	gxb0
 = 
b
.
w‹ds
();

472 
	gxb
 = 
xb0
 + 
j
;

474 i‡(*--
	gxa
 !*--
xb
)

475  *
xa
 < *
xb
 ? -1 : 1;

476 i‡(
	gxa
 <
xa0
)

482 
ALWAYS_INLINE
 
diff
(
BigI¡
& 
c
, c⁄° BigI¡& 
aRef
, c⁄° BigI¡& 
bRef
)

484 c⁄° 
BigI¡
* 
	ga
 = &
aRef
;

485 c⁄° 
BigI¡
* 
	gb
 = &
bRef
;

486 
	gi
, 
	gwa
, 
	gwb
;

487 
uöt32_t
* 
	gxc
;

489 
	gi
 = 
cmp
(*
a
, *
b
);

490 i‡(!
	gi
) {

491 
	gc
.
	gsign
 = 0;

492 
	gc
.
ªsize
(1);

493 
	gc
.
w‹ds
()[0] = 0;

496 i‡(
	gi
 < 0) {

497 c⁄° 
BigI¡
* 
	gtmp
 = 
a
;

498 
	ga
 = 
b
;

499 
	gb
 = 
tmp
;

500 
	gi
 = 1;

502 
	gi
 = 0;

504 
	gwa
 = 
a
->
size
();

505 c⁄° 
uöt32_t
* 
	gxa
 = 
a
->
w‹ds
();

506 c⁄° 
uöt32_t
* 
	gx´
 = 
xa
 + 
wa
;

507 
	gwb
 = 
b
->
size
();

508 c⁄° 
uöt32_t
* 
	gxb
 = 
b
->
w‹ds
();

509 c⁄° 
uöt32_t
* 
	gxbe
 = 
xb
 + 
wb
;

511 
	gc
.
ªsize
(
wa
);

512 
	gc
.
	gsign
 = 
i
;

513 
	gxc
 = 
c
.
w‹ds
();

514 #ifde‡
USE_LONG_LONG


515 
	gb‹row
 = 0;

517 
	gy
 = ()*
xa
++ - *
xb
++ - 
b‹row
;

518 
	gb‹row
 = 
y
 >> 32 & (
uöt32_t
)1;

519 *
	gxc
++ = (
uöt32_t
)
y
 & 0xffffffffUL;

520 } 
	gxb
 < 
	gxbe
);

521 
	gxa
 < 
	gx´
) {

522 
	gy
 = *
xa
++ - 
b‹row
;

523 
	gb‹row
 = 
y
 >> 32 & (
uöt32_t
)1;

524 *
	gxc
++ = (
uöt32_t
)
y
 & 0xffffffffUL;

527 
uöt32_t
 
	gb‹row
 = 0;

529 
uöt32_t
 
	gy
 = (*
xa
 & 0xffffË- (*
xb
 & 0xffffË- 
b‹row
;

530 
	gb‹row
 = (
y
 & 0x10000) >> 16;

531 
uöt32_t
 
	gz
 = (*
xa
++ >> 16Ë- (*
xb
++ >> 16Ë- 
b‹row
;

532 
	gb‹row
 = (
z
 & 0x10000) >> 16;

533 
	gxc
 = 
°‹eInc
(
xc
, 
z
, 
y
);

534 } 
	gxb
 < 
	gxbe
);

535 
	gxa
 < 
	gx´
) {

536 
uöt32_t
 
	gy
 = (*
xa
 & 0xffffË- 
b‹row
;

537 
	gb‹row
 = (
y
 & 0x10000) >> 16;

538 
uöt32_t
 
	gz
 = (*
xa
++ >> 16Ë- 
b‹row
;

539 
	gb‹row
 = (
z
 & 0x10000) >> 16;

540 
	gxc
 = 
°‹eInc
(
xc
, 
z
, 
y
);

543 !*--
	gxc
)

544 
	gwa
--;

545 
	gc
.
ªsize
(
wa
);

548 
ALWAYS_INLINE
 
d2b
(
BigI¡
& 
b
, 
U
* 
d
, * 
e
, * 
bôs
)

550 
	gde
, 
	gk
;

551 
uöt32_t
* 
	gx
;

552 
uöt32_t
 
	gy
, 
	gz
;

553 
	gi
;

554 
	#d0
 
	`w‹d0
(
d
)

	)

555 
	#d1
 
	`w‹d1
(
d
)

	)

557 
	gb
.
	gsign
 = 0;

558 
	gb
.
ªsize
(1);

559 
	gx
 = 
b
.
w‹ds
();

561 
	gz
 = 
d0
 & 
Føc_mask
;

562 
	gd0
 &= 0x7fffffff;

563 i‡((
	gde
 = ()(
d0
 >> 
Exp_shi·
)))

564 
z
 |
Exp_msk1
;

565 i‡((
	gy
 = 
d1
)) {

566 i‡((
k
 = 
lo0bôs
(&
y
))) {

567 
x
[0] = 
y
 | (
z
 << (32 - 
k
));

568 
	gz
 >>
k
;

570 
	gx
[0] = 
y
;

571 i‡(
	gz
) {

572 
	gb
.
ªsize
(2);

573 
	gx
[1] = 
z
;

576 
	gi
 = 
b
.
size
();

578 
	gk
 = 
lo0bôs
(&
z
);

579 
	gx
[0] = 
z
;

580 
	gi
 = 1;

581 
	gb
.
ªsize
(1);

582 
	gk
 += 32;

584 i‡(
	gde
) {

585 *
	ge
 = 
de
 - 
Büs
 - (
P
 - 1Ë+ 
k
;

586 *
	gbôs
 = 
P
 - 
k
;

588 *
	ge
 = 0 - 
Büs
 - (
P
 - 1Ë+ 1 + 
k
;

589 *
	gbôs
 = (32 * 
i
Ë- 
hi0bôs
(
x
[i - 1]);

592 #unde‡
d0


593 #unde‡
d1


595 c⁄° 
	gãns
[] = {

601 c⁄° 
	gbigãns
[] = { 1e16, 1e32, 1e64, 1e128, 1e256 };

603 
	#SˇÀ_Bô
 0x10

	)

604 
	#n_bigãns
 5

	)

606 
ALWAYS_INLINE
 
qu‹em
(
BigI¡
& 
b
, BigI¡& 
S
)

608 
size_t
 
	gn
;

609 
uöt32_t
* 
	gbx
;

610 
uöt32_t
* 
	gbxe
;

611 
uöt32_t
 
	gq
;

612 
uöt32_t
* 
	gsx
;

613 
uöt32_t
* 
	gsxe
;

614 #ifde‡
USE_LONG_LONG


615 
	gb‹row
, 
	gˇºy
, 
	gy
, 
	gys
;

617 
uöt32_t
 
	gb‹row
, 
	gˇºy
, 
	gy
, 
	gys
;

618 
uöt32_t
 
	gsi
, 
	gz
, 
	gzs
;

620 
ASSERT
(
b
.
size
(Ë<1 || b.
w‹ds
()[b.size() - 1]);

621 
ASSERT
(
S
.
size
(Ë<1 || S.
w‹ds
()[S.size() - 1]);

623 
	gn
 = 
S
.
size
();

624 
ASSERT_WITH_MESSAGE
(
b
.
size
(Ë<
n
, "oversize b in quorem");

625 i‡(
	gb
.
size
(Ë< 
	gn
)

627 
	gsx
 = 
S
.
w‹ds
();

628 
	gsxe
 = 
sx
 + --
n
;

629 
	gbx
 = 
b
.
w‹ds
();

630 
	gbxe
 = 
bx
 + 
n
;

631 
	gq
 = *
bxe
 / (*
sxe
 + 1);

632 
ASSERT_WITH_MESSAGE
(
q
 <= 9, "oversized quotient in quorem");

633 i‡(
	gq
) {

634 
	gb‹row
 = 0;

635 
	gˇºy
 = 0;

637 #ifde‡
USE_LONG_LONG


638 
	gys
 = *
sx
++ * ()
q
 + 
ˇºy
;

639 
	gˇºy
 = 
ys
 >> 32;

640 
	gy
 = *
bx
 - (
ys
 & 0xffffffffULË- 
b‹row
;

641 
	gb‹row
 = 
y
 >> 32 & (
uöt32_t
)1;

642 *
	gbx
++ = (
uöt32_t
)
y
 & 0xffffffffUL;

644 
	gsi
 = *
sx
++;

645 
	gys
 = (
si
 & 0xffffË* 
q
 + 
ˇºy
;

646 
	gzs
 = (
si
 >> 16Ë* 
q
 + (
ys
 >> 16);

647 
	gˇºy
 = 
zs
 >> 16;

648 
	gy
 = (*
bx
 & 0xffffË- (
ys
 & 0xffffË- 
b‹row
;

649 
	gb‹row
 = (
y
 & 0x10000) >> 16;

650 
	gz
 = (*
bx
 >> 16Ë- (
zs
 & 0xffffË- 
b‹row
;

651 
	gb‹row
 = (
z
 & 0x10000) >> 16;

652 
	gbx
 = 
°‹eInc
(
bx
, 
z
, 
y
);

654 } 
	gsx
 <
sxe
);

655 i‡(!*
	gbxe
) {

656 
	gbx
 = 
b
.
w‹ds
();

657 --
	gbxe
 > 
	gbx
 && !*bxe)

658 --
	gn
;

659 
	gb
.
ªsize
(
n
);

662 i‡(
cmp
(
b
, 
S
) >= 0) {

663 
q
++;

664 
	gb‹row
 = 0;

665 
	gˇºy
 = 0;

666 
	gbx
 = 
b
.
w‹ds
();

667 
	gsx
 = 
S
.
w‹ds
();

669 #ifde‡
USE_LONG_LONG


670 
	gys
 = *
sx
++ + 
ˇºy
;

671 
	gˇºy
 = 
ys
 >> 32;

672 
	gy
 = *
bx
 - (
ys
 & 0xffffffffULË- 
b‹row
;

673 
	gb‹row
 = 
y
 >> 32 & (
uöt32_t
)1;

674 *
	gbx
++ = (
uöt32_t
)
y
 & 0xffffffffUL;

676 
	gsi
 = *
sx
++;

677 
	gys
 = (
si
 & 0xffffË+ 
ˇºy
;

678 
	gzs
 = (
si
 >> 16Ë+ (
ys
 >> 16);

679 
	gˇºy
 = 
zs
 >> 16;

680 
	gy
 = (*
bx
 & 0xffffË- (
ys
 & 0xffffË- 
b‹row
;

681 
	gb‹row
 = (
y
 & 0x10000) >> 16;

682 
	gz
 = (*
bx
 >> 16Ë- (
zs
 & 0xffffË- 
b‹row
;

683 
	gb‹row
 = (
z
 & 0x10000) >> 16;

684 
	gbx
 = 
°‹eInc
(
bx
, 
z
, 
y
);

686 } 
	gsx
 <
sxe
);

687 
	gbx
 = 
b
.
w‹ds
();

688 
	gbxe
 = 
bx
 + 
n
;

689 i‡(!*
	gbxe
) {

690 --
	gbxe
 > 
	gbx
 && !*bxe)

691 --
	gn
;

692 
	gb
.
ªsize
(
n
);

695  
	gq
;

733 
	gãm∂©e
<
boﬁ
 
	groundögN⁄e
, boﬁ 
	groundögSignifiˇ¡Figuªs
, boﬁ 
	groundögDecimÆPœ˚s
, boﬁ 
	gÀ·right
>

734 
dtﬂ
(
DtﬂBuf„r
 
ªsu…
, 
dd
, 
ndigôs
, 
boﬁ
& 
signOut
, & 
exp⁄ítOut
, & 
¥ecisi⁄Out
)

737 
ASSERT
(
roundögN⁄e
 + 
roundögSignifiˇ¡Figuªs
 + 
roundögDecimÆPœ˚s
 == 1);

739 
ASSERT
(!
roundögN⁄e
 || 
À·right
);

741 
ASSERT
(
°d
::
isföôe
(
dd
));

743 
	gbbôs
, 
	gb2
, 
	gb5
, 
	gbe
, 
	gdig
, 
	gi
, 
	gõps
, 
	gûim
 = 0, 
	gûim0
, 
	gûim1
 = 0,

744 
	gj
, 
	gj1
, 
	gk
, 
	gk0
, 
	gk_check
, 
	gm2
, 
	gm5
, 
	gs2
, 
	gs5
,

745 
	g•ec_ˇ£
;

746 
öt32_t
 
	gL
;

747 
	gdí‹m
;

748 
uöt32_t
 
	gx
;

749 
BigI¡
 
	gb
, 
	gdñè
, 
	gmlo
, 
	gmhi
, 
	gS
;

750 
U
 
	gd2
, 
	gïs
, 
	gu
;

751 
	gds
;

752 * 
	gs
;

753 * 
	gs0
;

755 
	gu
.
	gd
 = 
dd
;

758 
ASSERT
((
w‹d0
(&
u
Ë& 
Exp_mask
) != Exp_mask);

761 i‡(!
dvÆ
(&
u
)) {

762 
	gsignOut
 = 
Ál£
;

763 
	gexp⁄ítOut
 = 0;

764 
	g¥ecisi⁄Out
 = 1;

765 
	gªsu…
[0] = '0';

766 
	gªsu…
[1] = '\0';

770 i‡(
w‹d0
(&
u
Ë& 
	gSign_bô
) {

771 
	gsignOut
 = 
åue
;

772 
w‹d0
(&
u
Ë&~
Sign_bô
;

774 
	gsignOut
 = 
Ál£
;

776 
d2b
(
b
, &
u
, &
be
, &
bbôs
);

777 i‡((
	gi
 = ()(
w‹d0
(&
u
Ë>> 
Exp_shi·1
 & (
Exp_mask
 >> Exp_shift1)))) {

778 
dvÆ
(&
d2
ËdvÆ(&
u
);

779 
w‹d0
(&
d2
Ë&
Føc_mask1
;

780 
w‹d0
(&
d2
Ë|
Exp_11
;

804 
	gi
 -
Büs
;

805 
	gdí‹m
 = 0;

809 
	gi
 = 
bbôs
 + 
be
 + (
Büs
 + (
P
 - 1) - 1);

810 
	gx
 = (
i
 > 32Ë? (
w‹d0
(&
u
Ë<< (64 - i)Ë| (
w‹d1
(&u) >> (i - 32))

811 : 
w‹d1
(&
u
Ë<< (32 - 
i
);

812 
dvÆ
(&
d2
Ë
x
;

813 
w‹d0
(&
d2
Ë-31 * 
Exp_msk1
;

814 
	gi
 -(
Büs
 + (
P
 - 1) - 1) + 1;

815 
	gdí‹m
 = 1;

817 
	gds
 = (
dvÆ
(&
d2
Ë- 1.5Ë* 0.289529654602168 + 0.1760912590558 + (
i
 * 0.301029995663981);

818 
	gk
 = ()
ds
;

819 i‡(
	gds
 < 0. && d†!
k
)

820 
k
--;

821 
	gk_check
 = 1;

822 i‡(
	gk
 >0 && 
k
 <
Tí_pmax
) {

823 i‡(
dvÆ
(&
u
Ë< 
ãns
[
k
])

824 
k
--;

825 
	gk_check
 = 0;

827 
	gj
 = 
bbôs
 - 
i
 - 1;

828 i‡(
	gj
 >= 0) {

829 
b2
 = 0;

830 
	gs2
 = 
j
;

832 
	gb2
 = -
j
;

833 
	gs2
 = 0;

835 i‡(
	gk
 >= 0) {

836 
b5
 = 0;

837 
	gs5
 = 
k
;

838 
	gs2
 +
k
;

840 
	gb2
 -
k
;

841 
	gb5
 = -
k
;

842 
	gs5
 = 0;

845 i‡(
	groundögN⁄e
) {

846 
	gûim
 = 
ûim1
 = -1;

847 
	gi
 = 18;

848 
	gndigôs
 = 0;

850 i‡(
	groundögSignifiˇ¡Figuªs
) {

851 i‡(
	gndigôs
 <= 0)

852 
ndigôs
 = 1;

853 
	gûim
 = 
ûim1
 = 
i
 = 
ndigôs
;

855 i‡(
	groundögDecimÆPœ˚s
) {

856 
	gi
 = 
ndigôs
 + 
k
 + 1;

857 
	gûim
 = 
i
;

858 
	gûim1
 = 
i
 - 1;

859 i‡(
	gi
 <= 0)

860 
i
 = 1;

863 
	gs
 = 
s0
 = 
ªsu…
;

865 i‡(
	gûim
 >0 && 
ûim
 <
Quick_max
) {

868 
i
 = 0;

869 
dvÆ
(&
d2
ËdvÆ(&
u
);

870 
	gk0
 = 
k
;

871 
	gûim0
 = 
ûim
;

872 
	gõps
 = 2;

873 i‡(
	gk
 > 0) {

874 
	gds
 = 
ãns
[
k
 & 0xf];

875 
	gj
 = 
k
 >> 4;

876 i‡(
	gj
 & 
	gBÀtch
) {

878 
	gj
 &
BÀtch
 - 1;

879 
dvÆ
(&
u
Ë/
bigãns
[
n_bigãns
 - 1];

880 
	gõps
++;

882 ; 
	gj
; j >>1, 
	gi
++) {

883 i‡(
	gj
 & 1) {

884 
	gõps
++;

885 
	gds
 *
bigãns
[
i
];

888 
dvÆ
(&
u
Ë/
ds
;

889 } i‡((
	gj1
 = -
k
)) {

890 
dvÆ
(&
u
Ë*
ãns
[
j1
 & 0xf];

891 
	gj
 = 
j1
 >> 4; j; j >>1, 
	gi
++) {

892 i‡(
	gj
 & 1) {

893 
	gõps
++;

894 
dvÆ
(&
u
Ë*
bigãns
[
i
];

898 i‡(
	gk_check
 && 
dvÆ
(&
u
Ë< 1. && 
	gûim
 > 0) {

899 i‡(
	gûim1
 <= 0)

900 
Á°Faûed
;

901 
	gûim
 = 
ûim1
;

902 
	gk
--;

903 
dvÆ
(&
u
) *= 10.;

904 
	gõps
++;

906 
dvÆ
(&
ïs
Ë(
õps
 * dvÆ(&
u
)) + 7.;

907 
w‹d0
(&
ïs
Ë-(
P
 - 1Ë* 
Exp_msk1
;

908 i‡(!
	gûim
) {

909 
	gS
.
˛ór
();

910 
	gmhi
.
˛ór
();

911 
dvÆ
(&
u
) -= 5.;

912 i‡(
dvÆ
(&
u
Ë> dvÆ(&
ïs
))

913 
	g⁄eDigô
;

914 i‡(
dvÆ
(&
u
Ë< -dvÆ(&
ïs
))

915 
	gnoDigôs
;

916 
	gÁ°Faûed
;

918 i‡(
	gÀ·right
) {

922 
dvÆ
(&
ïs
Ë(0.5 / 
ãns
[
ûim
 - 1]) - dval(&eps);

923 
	gi
 = 0;;) {

924 
	gL
 = ()
dvÆ
(&
u
);

925 
dvÆ
(&
u
Ë-
L
;

926 *
	gs
++ = '0' + ()
L
;

927 i‡(
dvÆ
(&
u
Ë< dvÆ(&
ïs
))

928 
	gªt
;

929 i‡(1. - 
dvÆ
(&
u
Ë< dvÆ(&
ïs
))

930 
	gbumpUp
;

931 i‡(++
	gi
 >
ûim
)

933 
dvÆ
(&
ïs
) *= 10.;

934 
dvÆ
(&
u
) *= 10.;

938 
dvÆ
(&
ïs
Ë*
ãns
[
ûim
 - 1];

939 
	gi
 = 1;; i++, 
dvÆ
(&
u
) *= 10.) {

940 
L
 = (
öt32_t
)(
dvÆ
(&
u
));

941 i‡(!(
dvÆ
(&
u
Ë-
L
))

942 
ûim
 = 
i
;

943 *
	gs
++ = '0' + ()
L
;

944 i‡(
	gi
 =
ûim
) {

945 i‡(
dvÆ
(&
u
Ë> 0.5 + dvÆ(&
ïs
))

946 
bumpUp
;

947 i‡(
dvÆ
(&
u
Ë< 0.5 - dvÆ(&
ïs
)) {

948 *--
	gs
 == '0') { }

949 
s
++;

950 
	gªt
;

956 
	gÁ°Faûed
:

957 
s
 = 
s0
;

958 
dvÆ
(&
u
ËdvÆ(&
d2
);

959 
	gk
 = 
k0
;

960 
	gûim
 = 
ûim0
;

965 i‡(
	gbe
 >0 && 
k
 <
I¡_max
) {

967 
ds
 = 
ãns
[
k
];

968 i‡(
	gndigôs
 < 0 && 
	gûim
 <= 0) {

969 
S
.
˛ór
();

970 
	gmhi
.
˛ór
();

971 i‡(
	gûim
 < 0 || 
dvÆ
(&
u
Ë<5 * 
ds
)

972 
noDigôs
;

973 
	g⁄eDigô
;

975 
	gi
 = 1;; i++, 
dvÆ
(&
u
) *= 10.) {

976 
L
 = (
öt32_t
)(
dvÆ
(&
u
Ë/ 
ds
);

977 
dvÆ
(&
u
Ë-
L
 * 
ds
;

978 *
	gs
++ = '0' + ()
L
;

979 i‡(!
dvÆ
(&
u
)) {

982 i‡(
	gi
 =
ûim
) {

983 
dvÆ
(&
u
) += dval(&u);

984 i‡(
dvÆ
(&
u
Ë> 
	gds
 || (dvÆ(&uË=
ds
 && (
L
 & 1))) {

985 
bumpUp
:

986 *--
s
 == '9')

987 i‡(
s
 =
s0
) {

988 
k
++;

989 *
	gs
 = '0';

992 ++*
	gs
++;

997 
	gªt
;

1000 
	gm2
 = 
b2
;

1001 
	gm5
 = 
b5
;

1002 
	gmhi
.
˛ór
();

1003 
	gmlo
.
˛ór
();

1004 i‡(
	gÀ·right
) {

1005 
	gi
 = 
dí‹m
 ? 
be
 + (
Büs
 + (
P
 - 1Ë- 1 + 1Ë: 1 + P - 
bbôs
;

1006 
	gb2
 +
i
;

1007 
	gs2
 +
i
;

1008 
i2b
(
mhi
, 1);

1010 i‡(
	gm2
 > 0 && 
	gs2
 > 0) {

1011 
	gi
 = 
m2
 < 
s2
 ? m2 : s2;

1012 
	gb2
 -
i
;

1013 
	gm2
 -
i
;

1014 
	gs2
 -
i
;

1016 i‡(
	gb5
 > 0) {

1017 i‡(
	gÀ·right
) {

1018 i‡(
	gm5
 > 0) {

1019 
pow5mu…
(
mhi
, 
m5
);

1020 
mu…
(
b
, 
mhi
);

1022 i‡((
	gj
 = 
b5
 - 
m5
))

1023 
pow5mu…
(
b
, 
j
);

1025 
pow5mu…
(
b
, 
b5
);

1027 
i2b
(
S
, 1);

1028 i‡(
	gs5
 > 0)

1029 
pow5mu…
(
S
, 
s5
);

1033 
	g•ec_ˇ£
 = 0;

1034 i‡((
	groundögN⁄e
 || 
	gÀ·right
Ë&& (!
w‹d1
(&
u
Ë&& !(
w‹d0
(&uË& 
	gBndry_mask
Ë&& w‹d0(&uË& (
	gExp_mask
 & ~
	gExp_msk1
))) {

1036 
	gb2
 +
Log2P
;

1037 
	gs2
 +
Log2P
;

1038 
	g•ec_ˇ£
 = 1;

1048 i‡((
	gi
 = ((
s5
 ? 32 - 
hi0bôs
(
S
.
w‹ds
()[S.
size
(Ë- 1]Ë: 1Ë+ 
s2
) & 0x1f))

1049 
i
 = 32 - i;

1050 i‡(
	gi
 > 4) {

1051 
	gi
 -= 4;

1052 
	gb2
 +
i
;

1053 
	gm2
 +
i
;

1054 
	gs2
 +
i
;

1055 } i‡(
	gi
 < 4) {

1056 
	gi
 += 28;

1057 
	gb2
 +
i
;

1058 
	gm2
 +
i
;

1059 
	gs2
 +
i
;

1061 i‡(
	gb2
 > 0)

1062 
lshi·
(
b
, 
b2
);

1063 i‡(
	gs2
 > 0)

1064 
lshi·
(
S
, 
s2
);

1065 i‡(
	gk_check
) {

1066 i‡(
cmp
(
b
, 
S
) < 0) {

1067 
	gk
--;

1068 
mu…add
(
b
, 10, 0);

1069 i‡(
	gÀ·right
)

1070 
mu…add
(
mhi
, 10, 0);

1071 
	gûim
 = 
ûim1
;

1074 i‡(
	gûim
 <0 && 
roundögDecimÆPœ˚s
) {

1075 i‡(
ûim
 < 0)

1076 
noDigôs
;

1077 
mu…add
(
S
, 5, 0);

1079 i‡(
cmp
(
b
, 
S
) < 0)

1080 
	gnoDigôs
;

1081 
	g⁄eDigô
;

1083 i‡(
	gÀ·right
) {

1084 i‡(
	gm2
 > 0)

1085 
lshi·
(
mhi
, 
m2
);

1091 
	gmlo
 = 
mhi
;

1092 i‡(
	g•ec_ˇ£
)

1093 
lshi·
(
mhi
, 
Log2P
);

1095 
	gi
 = 1;;i++) {

1096 
	gdig
 = 
qu‹em
(
b
, 
S
) + '0';

1100 
	gj
 = 
cmp
(
b
, 
mlo
);

1101 
diff
(
dñè
, 
S
, 
mhi
);

1102 
	gj1
 = 
dñè
.
sign
 ? 1 : 
cmp
(
b
, delta);

1103 #ifde‡
DTOA_ROUND_BIASED


1104 i‡(
	gj
 < 0 || !j) {

1118 i‡(!
	gj1
 && !(
w‹d1
(&
u
) & 1)) {

1119 i‡(
	gdig
 == '9')

1120 
round9up
;

1121 i‡(
	gj
 > 0)

1122 
	gdig
++;

1123 *
	gs
++ = 
dig
;

1124 
	gªt
;

1126 i‡(
	gj
 < 0 || (!j && !(
w‹d1
(&
u
) & 1))) {

1128 i‡((
	gb
.
w‹ds
()[0] || b.
size
(Ë> 1Ë&& (
	gj1
 > 0)) {

1129 
lshi·
(
b
, 1);

1130 
	gj1
 = 
cmp
(
b
, 
S
);

1134 i‡(
	gj1
 >= 0) {

1135 i‡(
dig
 == '9')

1136 
round9up
;

1137 
	gdig
++;

1140 *
	gs
++ = 
dig
;

1141 
	gªt
;

1143 i‡(
	gj1
 > 0) {

1144 i‡(
	gdig
 == '9') {

1145 
round9up
:

1146 *
s
++ = '9';

1147 
	groundoff
;

1149 *
	gs
++ = 
dig
 + 1;

1150 
	gªt
;

1152 *
	gs
++ = 
dig
;

1153 i‡(
	gi
 =
ûim
)

1155 
mu…add
(
b
, 10, 0);

1156 
mu…add
(
mlo
, 10, 0);

1157 
mu…add
(
mhi
, 10, 0);

1160 
	gi
 = 1;; i++) {

1161 *
	gs
++ = 
dig
 = 
qu‹em
(
b
, 
S
) + '0';

1162 i‡(!
	gb
.
w‹ds
()[0] && b.
size
() <= 1)

1163 
ªt
;

1164 i‡(
	gi
 >
ûim
)

1166 
mu…add
(
b
, 10, 0);

1172 
lshi·
(
b
, 1);

1173 
	gj
 = 
cmp
(
b
, 
S
);

1177 i‡(
	gj
 >= 0) {

1178 
roundoff
:

1179 *--
s
 == '9')

1180 i‡(
s
 =
s0
) {

1181 
k
++;

1182 *
	gs
++ = '1';

1183 
	gªt
;

1185 ++*
	gs
++;

1187 *--
	gs
 == '0') { }

1188 
s
++;

1190 
	gªt
;

1191 
	gnoDigôs
:

1192 
exp⁄ítOut
 = 0;

1193 
	g¥ecisi⁄Out
 = 1;

1194 
	gªsu…
[0] = '0';

1195 
	gªsu…
[1] = '\0';

1197 
	g⁄eDigô
:

1198 *
s
++ = '1';

1199 
	gk
++;

1200 
	gªt
;

1201 
	gªt
:

1202 
ASSERT
(
s
 > 
ªsu…
);

1203 *
	gs
 = 0;

1204 
	gexp⁄ítOut
 = 
k
;

1205 
	g¥ecisi⁄Out
 = 
s
 - 
ªsu…
;

1208 
dtﬂ
(
DtﬂBuf„r
 
ªsu…
, 
dd
, 
boﬁ
& 
sign
, & 
exp⁄ít
, & 
¥ecisi⁄
)

1211 
	gdtﬂ
<
	gåue
, 
	gÁl£
, fÆ£,Årue>(
	gªsu…
, 
	gdd
, 0, 
	gsign
, 
	gexp⁄ít
, 
	g¥ecisi⁄
);

1214 
dtﬂRoundSF
(
DtﬂBuf„r
 
ªsu…
, 
dd
, 
ndigôs
, 
boﬁ
& 
sign
, & 
exp⁄ít
, & 
¥ecisi⁄
)

1217 
	gdtﬂ
<
	gÁl£
, 
	gåue
, fÆ£, fÆ£>(
	gªsu…
, 
	gdd
, 
	gndigôs
, 
	gsign
, 
	gexp⁄ít
, 
	g¥ecisi⁄
);

1220 
dtﬂRoundDP
(
DtﬂBuf„r
 
ªsu…
, 
dd
, 
ndigôs
, 
boﬁ
& 
sign
, & 
exp⁄ít
, & 
¥ecisi⁄
)

1223 
	gdtﬂ
<
	gÁl£
, fÆ£, 
	gåue
, fÆ£>(
	gªsu…
, 
	gdd
, 
	gndigôs
, 
	gsign
, 
	gexp⁄ít
, 
	g¥ecisi⁄
);

1226 c⁄° * 
numbîToSåög
(
d
, 
NumbîToSåögBuf„r
 
buf„r
)

1228 
	gdoubÀ_c⁄vîsi⁄
::
SåögBuûdî
 
buûdî
(
buf„r
, 
NumbîToSåögBuf„rLígth
);

1229 c⁄° 
	gdoubÀ_c⁄vîsi⁄
::
DoubÀToSåögC⁄vîãr
& 
c⁄vîãr
 = 
doubÀ_c⁄vîsi⁄
::DoubÀToSåögC⁄vîãr::
EcmaS¸ùtC⁄vîãr
();

1230 
	gc⁄vîãr
.
ToSh‹ã°
(
d
, &
buûdî
);

1231  
	gbuûdî
.
FöÆize
();

1234 
ölöe
 c⁄° * 
f‹m©SåögTrunˇtögTøûögZîosIfNìded
(
NumbîToSåögBuf„r
 
buf„r
, 
doubÀ_c⁄vîsi⁄
::
SåögBuûdî
& 
buûdî
)

1236 
size_t
 
Àngth
 = 
buûdî
.
posôi⁄
();

1237 
size_t
 
	gdecimÆPoötPosôi⁄
 = 0;

1238 ; 
	gdecimÆPoötPosôi⁄
 < 
	gÀngth
; ++decimalPointPosition) {

1239 i‡(
	gbuf„r
[
decimÆPoötPosôi⁄
] == '.')

1244 i‡(
	gdecimÆPoötPosôi⁄
 =
Àngth
)

1245  
buûdî
.
FöÆize
();

1247 
size_t
 
	gåunˇãdLígth
 = 
Àngth
 - 1;

1248 ; 
	gåunˇãdLígth
 > 
	gdecimÆPoötPosôi⁄
; --truncatedLength) {

1249 i‡(
	gbuf„r
[
åunˇãdLígth
] != '0')

1254 i‡(
	gåunˇãdLígth
 =
Àngth
 - 1)

1255  
buûdî
.
FöÆize
();

1258 i‡(
	gåunˇãdLígth
 =
decimÆPoötPosôi⁄
) {

1259 
ASSERT
(
åunˇãdLígth
 > 0);

1260 --
	gåunˇãdLígth
;

1264 
	gbuûdî
.
SëPosôi⁄
(
åunˇãdLígth
 + 1);

1265  
	gbuûdî
.
FöÆize
();

1268 c⁄° * 
numbîToFixedPªcisi⁄Såög
(
d
, 
signifiˇ¡Figuªs
, 
NumbîToSåögBuf„r
 
buf„r
, 
boﬁ
 
åunˇãTøûögZîos
)

1275 
	gdoubÀ_c⁄vîsi⁄
::
SåögBuûdî
 
buûdî
(
buf„r
, 
NumbîToSåögBuf„rLígth
);

1276 c⁄° 
	gdoubÀ_c⁄vîsi⁄
::
DoubÀToSåögC⁄vîãr
& 
c⁄vîãr
 = 
doubÀ_c⁄vîsi⁄
::DoubÀToSåögC⁄vîãr::
EcmaS¸ùtC⁄vîãr
();

1277 
	gc⁄vîãr
.
ToPªcisi⁄
(
d
, 
signifiˇ¡Figuªs
, &
buûdî
);

1278 i‡(!
	gåunˇãTøûögZîos
)

1279  
	gbuûdî
.
FöÆize
();

1280  
f‹m©SåögTrunˇtögTøûögZîosIfNìded
(
buf„r
, 
buûdî
);

1283 c⁄° * 
numbîToFixedWidthSåög
(
d
, 
decimÆPœ˚s
, 
NumbîToSåögBuf„r
 
buf„r
)

1292 
	gdoubÀ_c⁄vîsi⁄
::
SåögBuûdî
 
buûdî
(
buf„r
, 
NumbîToSåögBuf„rLígth
);

1293 c⁄° 
	gdoubÀ_c⁄vîsi⁄
::
DoubÀToSåögC⁄vîãr
& 
c⁄vîãr
 = 
doubÀ_c⁄vîsi⁄
::DoubÀToSåögC⁄vîãr::
EcmaS¸ùtC⁄vîãr
();

1294 
	gc⁄vîãr
.
ToFixed
(
d
, 
decimÆPœ˚s
, &
buûdî
);

1295  
	gbuûdî
.
FöÆize
();

1298 
«me•a˚
 
	gI¡î«l
 {

1300 
∑r£DoubÀFromL⁄gSåög
(c⁄° 
UCh¨
* 
°rög
, 
size_t
 
Àngth
, size_t& 
∑r£dLígth
)

1302 
	gVe˘‹
<
	gLCh¨
> 
c⁄vîsi⁄Buf„r
(
Àngth
);

1303 
size_t
 
	gi
 = 0; i < 
	gÀngth
; ++i)

1304 
	gc⁄vîsi⁄Buf„r
[
i
] = 
isASCII
(
°rög
[i]) ? string[i] : 0;

1305  
∑r£DoubÀ
(
c⁄vîsi⁄Buf„r
.
d©a
(), 
Àngth
, 
∑r£dLígth
);

	@dtoa.h

21 #i‚de‡
WTF_dtﬂ_h


22 
	#WTF_dtﬂ_h


	)

24 
	~<unicode/uty≥s.h
>

25 
	~<wtf/ASCIICTy≥.h
>

26 
	~<wtf/dtﬂ/doubÀ-c⁄vîsi⁄.h
>

27 
	~<wtf/ãxt/SåögVõw.h
>

29 
«me•a˚
 
	gWTF
 {

31 
˛ass
 
	gMuãx
;

33 
Muãx
* 
s_dtﬂP5Muãx
;

35 
	tDtﬂBuf„r
[80];

37 
WTF_EXPORT_PRIVATE
 
dtﬂ
(
DtﬂBuf„r
 
ªsu…
, 
dd
, 
boﬁ
& 
sign
, & 
exp⁄ít
, & 
¥ecisi⁄
);

38 
WTF_EXPORT_PRIVATE
 
dtﬂRoundSF
(
DtﬂBuf„r
 
ªsu…
, 
dd
, 
ndigôs
, 
boﬁ
& 
sign
, & 
exp⁄ít
, & 
¥ecisi⁄
);

39 
WTF_EXPORT_PRIVATE
 
dtﬂRoundDP
(
DtﬂBuf„r
 
ªsu…
, 
dd
, 
ndigôs
, 
boﬁ
& 
sign
, & 
exp⁄ít
, & 
¥ecisi⁄
);

42 c⁄° 
	gNumbîToSåögBuf„rLígth
 = 96;

43 
	tNumbîToSåögBuf„r
[
NumbîToSåögBuf„rLígth
];

44 
LCh¨
 
	tNumbîToLSåögBuf„r
[
NumbîToSåögBuf„rLígth
];

46 
WTF_EXPORT_PRIVATE
 c⁄° * 
numbîToSåög
(, 
NumbîToSåögBuf„r
);

47 
WTF_EXPORT_PRIVATE
 c⁄° * 
numbîToFixedPªcisi⁄Såög
(, 
signifiˇ¡Figuªs
, 
NumbîToSåögBuf„r
, 
boﬁ
 
åunˇãTøûögZîos
 = 
Ál£
);

48 
WTF_EXPORT_PRIVATE
 c⁄° * 
numbîToFixedWidthSåög
(, 
decimÆPœ˚s
, 
NumbîToSåögBuf„r
);

50 
∑r£DoubÀ
(c⁄° 
LCh¨
* 
°rög
, 
size_t
 
Àngth
, size_t& 
∑r£dLígth
);

51 
∑r£DoubÀ
(c⁄° 
UCh¨
* 
°rög
, 
size_t
 
Àngth
, size_t& 
∑r£dLígth
);

52 
∑r£DoubÀ
(
SåögVõw
, 
size_t
& 
∑r£dLígth
);

54 
«me•a˚
 
	gI¡î«l
 {

55 
WTF_EXPORT_PRIVATE
 
∑r£DoubÀFromL⁄gSåög
(c⁄° 
UCh¨
* 
°rög
, 
size_t
 
Àngth
, size_t& 
∑r£dLígth
);

58 
ölöe
 
∑r£DoubÀ
(c⁄° 
LCh¨
* 
°rög
, 
size_t
 
Àngth
, size_t& 
∑r£dLígth
)

60  
	gdoubÀ_c⁄vîsi⁄
::
SåögToDoubÀC⁄vîãr
::
SåögToDoubÀ
(
ªöãΩªt_ˇ°
<c⁄° *>(
°rög
), 
Àngth
, &
∑r£dLígth
);

63 
ölöe
 
∑r£DoubÀ
(c⁄° 
UCh¨
* 
°rög
, 
size_t
 
Àngth
, size_t& 
∑r£dLígth
)

65 c⁄° 
size_t
 
	gc⁄vîsi⁄Buf„rSize
 = 64;

66 i‡(
	gÀngth
 > 
	gc⁄vîsi⁄Buf„rSize
)

67  
	gI¡î«l
::
∑r£DoubÀFromL⁄gSåög
(
°rög
, 
Àngth
, 
∑r£dLígth
);

68 
LCh¨
 
	gc⁄vîsi⁄Buf„r
[
c⁄vîsi⁄Buf„rSize
];

69 
	gi
 = 0; i < 
	g°©ic_ˇ°
<>(
	gÀngth
); ++i)

70 
	gc⁄vîsi⁄Buf„r
[
i
] = 
isASCII
(
°rög
[i]) ? string[i] : 0;

71  
∑r£DoubÀ
(
c⁄vîsi⁄Buf„r
, 
Àngth
, 
∑r£dLígth
);

74 
ölöe
 
∑r£DoubÀ
(
SåögVõw
 
°rög
, 
size_t
& 
∑r£dLígth
)

76 i‡(
	g°rög
.
is8Bô
())

77  
∑r£DoubÀ
(
°rög
.
ch¨a˘îs8
(), såög.
Àngth
(), 
∑r£dLígth
);

78  
∑r£DoubÀ
(
°rög
.
ch¨a˘îs16
(), såög.
Àngth
(), 
∑r£dLígth
);

83 
usög
 
	gWTF
::
NumbîToSåögBuf„r
;

84 
usög
 
	gWTF
::
NumbîToLSåögBuf„r
;

85 
usög
 
	gWTF
::
numbîToSåög
;

86 
usög
 
	gWTF
::
numbîToFixedPªcisi⁄Såög
;

87 
usög
 
	gWTF
::
numbîToFixedWidthSåög
;

88 
usög
 
	gWTF
::
∑r£DoubÀ
;

	@dtoa/bignum-dtoa.cc

28 
	~"c⁄fig.h
"

30 
	~<m©h.h
>

32 
	~"bignum-dtﬂ.h
"

34 
	~"bignum.h
"

35 
	~"doubÀ.h
"

37 
«me•a˚
 
	gWTF
 {

39 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

41 
N‹mÆizedExp⁄ít
(
uöt64_t
 
signifiˇnd
, 
exp⁄ít
) {

42 
ASSERT
(
signifiˇnd
 != 0);

43 (
	gsignifiˇnd
 & 
	gDoubÀ
::
kHiddíBô
) == 0) {

44 
signifiˇnd
 = significand << 1;

45 
	gexp⁄ít
 = 
exp⁄ít
 - 1;

47  
	gexp⁄ít
;

53 
E°im©ePowî
(
exp⁄ít
);

56 
InôülSˇÀdSèπVÆues
(
v
,

57 
e°im©ed_powî
,

58 
boﬁ
 
√ed_bound¨y_dñès
,

59 
Bignum
* 
numî©‹
,

60 
Bignum
* 
díomö©‹
,

61 
Bignum
* 
dñè_möus
,

62 
Bignum
* 
dñè_∂us
);

68 
FixupMu…ùly10
(
e°im©ed_powî
, 
boﬁ
 
is_eví
,

69 * 
decimÆ_poöt
,

70 
Bignum
* 
numî©‹
, Bignum* 
díomö©‹
,

71 
Bignum
* 
dñè_möus
, Bignum* 
dñè_∂us
);

74 
Gíî©eSh‹ã°Digôs
(
Bignum
* 
numî©‹
, Bignum* 
díomö©‹
,

75 
Bignum
* 
dñè_möus
, Bignum* 
dñè_∂us
,

76 
boﬁ
 
is_eví
,

77 
Buf„rRe„ªn˚
<> 
buf„r
, * 
Àngth
);

79 
BignumToFixed
(
ªque°ed_digôs
, * 
decimÆ_poöt
,

80 
Bignum
* 
numî©‹
, Bignum* 
díomö©‹
,

81 
Buf„rRe„ªn˚
<>(
buf„r
), * 
Àngth
);

86 
Gíî©eCou¡edDigôs
(
cou¡
, * 
decimÆ_poöt
,

87 
Bignum
* 
numî©‹
, Bignum* 
díomö©‹
,

88 
Buf„rRe„ªn˚
<>(
buf„r
), * 
Àngth
);

91 
BignumDtﬂ
(
v
, 
BignumDtﬂMode
 
mode
, 
ªque°ed_digôs
,

92 
Buf„rRe„ªn˚
<> 
buf„r
, * 
Àngth
, * 
decimÆ_poöt
) {

93 
ASSERT
(
v
 > 0);

94 
ASSERT
(!
DoubÀ
(
v
).
IsS≥cül
());

95 
uöt64_t
 
	gsignifiˇnd
 = 
DoubÀ
(
v
).
Signifiˇnd
();

96 
boﬁ
 
	gis_eví
 = (
signifiˇnd
 & 1) == 0;

97 
	gexp⁄ít
 = 
DoubÀ
(
v
).
Exp⁄ít
();

98 
	gn‹mÆized_exp⁄ít
 = 
N‹mÆizedExp⁄ít
(
signifiˇnd
, 
exp⁄ít
);

100 
	ge°im©ed_powî
 = 
E°im©ePowî
(
n‹mÆized_exp⁄ít
);

106 i‡(
	gmode
 =
BIGNUM_DTOA_FIXED
 && -
e°im©ed_powî
 - 1 > 
ªque°ed_digôs
) {

107 
buf„r
[0] = '\0';

108 *
	gÀngth
 = 0;

112 *
	gdecimÆ_poöt
 = -
ªque°ed_digôs
;

116 
Bignum
 
	gnumî©‹
;

117 
Bignum
 
	gdíomö©‹
;

118 
Bignum
 
	gdñè_möus
;

119 
Bignum
 
	gdñè_∂us
;

124 
ASSERT
(
Bignum
::
kMaxSignifiˇ¡Bôs
 >= 324*4);

125 
boﬁ
 
	g√ed_bound¨y_dñès
 = (
mode
 =
BIGNUM_DTOA_SHORTEST
);

126 
InôülSˇÀdSèπVÆues
(
v
, 
e°im©ed_powî
, 
√ed_bound¨y_dñès
,

127 &
numî©‹
, &
díomö©‹
,

128 &
dñè_möus
, &
dñè_∂us
);

130 
FixupMu…ùly10
(
e°im©ed_powî
, 
is_eví
, 
decimÆ_poöt
,

131 &
numî©‹
, &
díomö©‹
,

132 &
dñè_möus
, &
dñè_∂us
);

135 
	gmode
) {

136 
	gBIGNUM_DTOA_SHORTEST
:

137 
Gíî©eSh‹ã°Digôs
(&
numî©‹
, &
díomö©‹
,

138 &
dñè_möus
, &
dñè_∂us
,

139 
is_eví
, 
buf„r
, 
Àngth
);

141 
	gBIGNUM_DTOA_FIXED
:

142 
BignumToFixed
(
ªque°ed_digôs
, 
decimÆ_poöt
,

143 &
numî©‹
, &
díomö©‹
,

144 
buf„r
, 
Àngth
);

146 
	gBIGNUM_DTOA_PRECISION
:

147 
Gíî©eCou¡edDigôs
(
ªque°ed_digôs
, 
decimÆ_poöt
,

148 &
numî©‹
, &
díomö©‹
,

149 
buf„r
, 
Àngth
);

152 
UNREACHABLE
();

154 
	gbuf„r
[*
Àngth
] = '\0';

171 
Gíî©eSh‹ã°Digôs
(
Bignum
* 
numî©‹
, Bignum* 
díomö©‹
,

172 
Bignum
* 
dñè_möus
, Bignum* 
dñè_∂us
,

173 
boﬁ
 
is_eví
,

174 
Buf„rRe„ªn˚
<> 
buf„r
, * 
Àngth
) {

177 i‡(
	gBignum
::
EquÆ
(*
dñè_möus
, *
dñè_∂us
)) {

178 
	gdñè_∂us
 = 
dñè_möus
;

180 *
	gÀngth
 = 0;

181 
	gåue
) {

182 
uöt16_t
 
	gdigô
;

183 
	gdigô
 = 
numî©‹
->
DivideModuloI¡Bignum
(*
díomö©‹
);

184 
ASSERT
(
digô
 <= 9);

187 
	gbuf„r
[(*
Àngth
)++] = 
digô
 + '0';

194 
boﬁ
 
	gö_dñè_room_möus
;

195 
boﬁ
 
	gö_dñè_room_∂us
;

196 i‡(
	gis_eví
) {

197 
	gö_dñè_room_möus
 = 
Bignum
::
LessEquÆ
(*
numî©‹
, *
dñè_möus
);

199 
	gö_dñè_room_möus
 = 
Bignum
::
Less
(*
numî©‹
, *
dñè_möus
);

201 i‡(
	gis_eví
) {

202 
	gö_dñè_room_∂us
 =

203 
Bignum
::
PlusCom∑ª
(*
numî©‹
, *
dñè_∂us
, *
díomö©‹
) >= 0;

205 
	gö_dñè_room_∂us
 =

206 
Bignum
::
PlusCom∑ª
(*
numî©‹
, *
dñè_∂us
, *
díomö©‹
) > 0;

208 i‡(!
	gö_dñè_room_möus
 && !
	gö_dñè_room_∂us
) {

210 
	gnumî©‹
->
Times10
();

211 
	gdñè_möus
->
Times10
();

215 i‡(
	gdñè_möus
 !
dñè_∂us
) {

216 
dñè_∂us
->
Times10
();

218 } i‡(
	gö_dñè_room_möus
 && 
	gö_dñè_room_∂us
) {

221 
	gcom∑ª
 = 
Bignum
::
PlusCom∑ª
(*
numî©‹
, *numî©‹, *
díomö©‹
);

222 i‡(
	gcom∑ª
 < 0) {

224 } i‡(
	gcom∑ª
 > 0) {

230 
ASSERT
(
buf„r
[(*
Àngth
) - 1] != '9');

231 
	gbuf„r
[(*
Àngth
) - 1]++;

238 i‡((
	gbuf„r
[(*
Àngth
) - 1] - '0') % 2 == 0) {

241 
ASSERT
(
buf„r
[(*
Àngth
) - 1] != '9');

242 
	gbuf„r
[(*
Àngth
) - 1]++;

246 } i‡(
	gö_dñè_room_möus
) {

255 
ASSERT
(
buf„r
[(*
Àngth
) -1] != '9');

256 
	gbuf„r
[(*
Àngth
) - 1]++;

269 
Gíî©eCou¡edDigôs
(
cou¡
, * 
decimÆ_poöt
,

270 
Bignum
* 
numî©‹
, Bignum* 
díomö©‹
,

271 
Buf„rRe„ªn˚
<>(
buf„r
), * 
Àngth
) {

272 
ASSERT
(
cou¡
 >= 0);

273 
	gi
 = 0; i < 
	gcou¡
 - 1; ++i) {

274 
uöt16_t
 
	gdigô
;

275 
	gdigô
 = 
numî©‹
->
DivideModuloI¡Bignum
(*
díomö©‹
);

276 
ASSERT
(
digô
 <= 9);

279 
	gbuf„r
[
i
] = 
digô
 + '0';

281 
	gnumî©‹
->
Times10
();

284 
uöt16_t
 
	gdigô
;

285 
	gdigô
 = 
numî©‹
->
DivideModuloI¡Bignum
(*
díomö©‹
);

286 i‡(
	gBignum
::
PlusCom∑ª
(*
numî©‹
, *numî©‹, *
díomö©‹
) >= 0) {

287 
digô
++;

289 
	gbuf„r
[
cou¡
 - 1] = 
digô
 + '0';

292 
	gi
 = 
cou¡
 - 1; i > 0; --i) {

293 i‡(
	gbuf„r
[
i
] != '0' + 10) ;

294 
	gbuf„r
[
i
] = '0';

295 
	gbuf„r
[
i
 - 1]++;

297 i‡(
	gbuf„r
[0] == '0' + 10) {

299 
buf„r
[0] = '1';

300 (*
	gdecimÆ_poöt
)++;

302 *
	gÀngth
 = 
cou¡
;

311 
BignumToFixed
(
ªque°ed_digôs
, * 
decimÆ_poöt
,

312 
Bignum
* 
numî©‹
, Bignum* 
díomö©‹
,

313 
Buf„rRe„ªn˚
<>(
buf„r
), * 
Àngth
) {

317 i‡(-(*
	gdecimÆ_poöt
Ë> 
	gªque°ed_digôs
) {

323 *
	gdecimÆ_poöt
 = -
ªque°ed_digôs
;

324 *
	gÀngth
 = 0;

326 } i‡(-(*
	gdecimÆ_poöt
Ë=
ªque°ed_digôs
) {

329 
ASSERT
(*
decimÆ_poöt
 =-
ªque°ed_digôs
);

332 
	gdíomö©‹
->
Times10
();

333 i‡(
	gBignum
::
PlusCom∑ª
(*
numî©‹
, *numî©‹, *
díomö©‹
) >= 0) {

336 
buf„r
[0] = '1';

337 *
	gÀngth
 = 1;

338 (*
	gdecimÆ_poöt
)++;

341 *
	gÀngth
 = 0;

347 
	g√eded_digôs
 = (*
decimÆ_poöt
Ë+ 
ªque°ed_digôs
;

348 
Gíî©eCou¡edDigôs
(
√eded_digôs
, 
decimÆ_poöt
,

349 
numî©‹
, 
díomö©‹
,

350 
buf„r
, 
Àngth
);

370 
E°im©ePowî
(
exp⁄ít
) {

392 c⁄° 
	gk1Log10
 = 0.30102999566398114;

395 c⁄° 
	gkSignifiˇndSize
 = 53;

396 
	ge°im©e
 = 
˚û
((
exp⁄ít
 + 
kSignifiˇndSize
 - 1Ë* 
k1Log10
 - 1e-10);

397  
	g°©ic_ˇ°
<>(
	ge°im©e
);

402 
InôülSˇÀdSèπVÆuesPosôiveExp⁄ít
(

403 
v
, 
e°im©ed_powî
, 
boﬁ
 
√ed_bound¨y_dñès
,

404 
Bignum
* 
numî©‹
, Bignum* 
díomö©‹
,

405 
Bignum
* 
dñè_möus
, Bignum* 
dñè_∂us
) {

407 
ASSERT
(
e°im©ed_powî
 >= 0);

412 
	gnumî©‹
->
AssignUI¡64
(
DoubÀ
(
v
).
Signifiˇnd
());

413 
	gnumî©‹
->
Shi·Le·
(
DoubÀ
(
v
).
Exp⁄ít
());

415 
	gdíomö©‹
->
AssignPowîUI¡16
(10, 
e°im©ed_powî
);

417 i‡(
	g√ed_bound¨y_dñès
) {

420 
	gdíomö©‹
->
Shi·Le·
(1);

421 
	gnumî©‹
->
Shi·Le·
(1);

424 
	gdñè_∂us
->
AssignUI¡16
(1);

425 
	gdñè_∂us
->
Shi·Le·
(
DoubÀ
(
v
).
Exp⁄ít
());

427 
	gdñè_möus
->
AssignUI¡16
(1);

428 
	gdñè_möus
->
Shi·Le·
(
DoubÀ
(
v
).
Exp⁄ít
());

435 
uöt64_t
 
	gv_bôs
 = 
DoubÀ
(
v
).
AsUöt64
();

436 i‡((
	gv_bôs
 & 
	gDoubÀ
::
kSignifiˇndMask
) == 0) {

439 
díomö©‹
->
Shi·Le·
(1);

440 
	gnumî©‹
->
Shi·Le·
(1);

441 
	gdñè_∂us
->
Shi·Le·
(1);

448 
InôülSˇÀdSèπVÆuesNeg©iveExp⁄ítPosôivePowî
(

449 
v
, 
e°im©ed_powî
, 
boﬁ
 
√ed_bound¨y_dñès
,

450 
Bignum
* 
numî©‹
, Bignum* 
díomö©‹
,

451 
Bignum
* 
dñè_möus
, Bignum* 
dñè_∂us
) {

452 
uöt64_t
 
	gsignifiˇnd
 = 
DoubÀ
(
v
).
Signifiˇnd
();

453 
	gexp⁄ít
 = 
DoubÀ
(
v
).
Exp⁄ít
();

461 
	gnumî©‹
->
AssignUI¡64
(
signifiˇnd
);

463 
	gdíomö©‹
->
AssignPowîUI¡16
(10, 
e°im©ed_powî
);

464 
	gdíomö©‹
->
Shi·Le·
(-
exp⁄ít
);

466 i‡(
	g√ed_bound¨y_dñès
) {

469 
	gdíomö©‹
->
Shi·Le·
(1);

470 
	gnumî©‹
->
Shi·Le·
(1);

475 
	gdñè_∂us
->
AssignUI¡16
(1);

477 
	gdñè_möus
->
AssignUI¡16
(1);

485 
uöt64_t
 
	gv_bôs
 = 
DoubÀ
(
v
).
AsUöt64
();

486 i‡((
	gv_bôs
 & 
	gDoubÀ
::
kSignifiˇndMask
) == 0) {

489 
díomö©‹
->
Shi·Le·
(1);

490 
	gnumî©‹
->
Shi·Le·
(1);

491 
	gdñè_∂us
->
Shi·Le·
(1);

498 
InôülSˇÀdSèπVÆuesNeg©iveExp⁄ítNeg©ivePowî
(

499 
v
, 
e°im©ed_powî
, 
boﬁ
 
√ed_bound¨y_dñès
,

500 
Bignum
* 
numî©‹
, Bignum* 
díomö©‹
,

501 
Bignum
* 
dñè_möus
, Bignum* 
dñè_∂us
) {

502 c⁄° 
uöt64_t
 
	gkMöimÆN‹mÆizedExp⁄ít
 =

503 
UINT64_2PART_C
(0x00100000, 00000000);

504 
uöt64_t
 
	gsignifiˇnd
 = 
DoubÀ
(
v
).
Signifiˇnd
();

505 
	gexp⁄ít
 = 
DoubÀ
(
v
).
Exp⁄ít
();

510 
Bignum
* 
	gpowî_ãn
 = 
numî©‹
;

511 
	gpowî_ãn
->
AssignPowîUI¡16
(10, -
e°im©ed_powî
);

513 i‡(
	g√ed_bound¨y_dñès
) {

517 
	gdñè_∂us
->
AssignBignum
(*
powî_ãn
);

518 
	gdñè_möus
->
AssignBignum
(*
powî_ãn
);

526 
ASSERT
(
numî©‹
 =
powî_ãn
);

527 
	gnumî©‹
->
Mu…ùlyByUI¡64
(
signifiˇnd
);

530 
	gdíomö©‹
->
AssignUI¡16
(1);

531 
	gdíomö©‹
->
Shi·Le·
(-
exp⁄ít
);

533 i‡(
	g√ed_bound¨y_dñès
) {

536 
	gnumî©‹
->
Shi·Le·
(1);

537 
	gdíomö©‹
->
Shi·Le·
(1);

545 
uöt64_t
 
	gv_bôs
 = 
DoubÀ
(
v
).
AsUöt64
();

546 i‡((
	gv_bôs
 & 
	gDoubÀ
::
kSignifiˇndMask
) == 0 &&

549 (
v_bôs
 & 
DoubÀ
::
kExp⁄ítMask
Ë!
kMöimÆN‹mÆizedExp⁄ít
) {

550 
numî©‹
->
Shi·Le·
(1);

551 
	gdíomö©‹
->
Shi·Le·
(1);

552 
	gdñè_∂us
->
Shi·Le·
(1);

594 
InôülSˇÀdSèπVÆues
(
v
,

595 
e°im©ed_powî
,

596 
boﬁ
 
√ed_bound¨y_dñès
,

597 
Bignum
* 
numî©‹
,

598 
Bignum
* 
díomö©‹
,

599 
Bignum
* 
dñè_möus
,

600 
Bignum
* 
dñè_∂us
) {

601 i‡(
DoubÀ
(
v
).
Exp⁄ít
() >= 0) {

602 
InôülSˇÀdSèπVÆuesPosôiveExp⁄ít
(

603 
v
, 
e°im©ed_powî
, 
√ed_bound¨y_dñès
,

604 
numî©‹
, 
díomö©‹
, 
dñè_möus
, 
dñè_∂us
);

605 } i‡(
	ge°im©ed_powî
 >= 0) {

606 
InôülSˇÀdSèπVÆuesNeg©iveExp⁄ítPosôivePowî
(

607 
v
, 
e°im©ed_powî
, 
√ed_bound¨y_dñès
,

608 
numî©‹
, 
díomö©‹
, 
dñè_möus
, 
dñè_∂us
);

610 
InôülSˇÀdSèπVÆuesNeg©iveExp⁄ítNeg©ivePowî
(

611 
v
, 
e°im©ed_powî
, 
√ed_bound¨y_dñès
,

612 
numî©‹
, 
díomö©‹
, 
dñè_möus
, 
dñè_∂us
);

628 
FixupMu…ùly10
(
e°im©ed_powî
, 
boﬁ
 
is_eví
,

629 * 
decimÆ_poöt
,

630 
Bignum
* 
numî©‹
, Bignum* 
díomö©‹
,

631 
Bignum
* 
dñè_möus
, Bignum* 
dñè_∂us
) {

632 
boﬁ
 
	gö_ønge
;

633 i‡(
	gis_eví
) {

636 
	gö_ønge
 = 
Bignum
::
PlusCom∑ª
(*
numî©‹
, *
dñè_∂us
, *
díomö©‹
) >= 0;

638 
	gö_ønge
 = 
Bignum
::
PlusCom∑ª
(*
numî©‹
, *
dñè_∂us
, *
díomö©‹
) > 0;

640 i‡(
	gö_ønge
) {

643 *
	gdecimÆ_poöt
 = 
e°im©ed_powî
 + 1;

645 *
	gdecimÆ_poöt
 = 
e°im©ed_powî
;

646 
	gnumî©‹
->
Times10
();

647 i‡(
	gBignum
::
EquÆ
(*
dñè_möus
, *
dñè_∂us
)) {

648 
	gdñè_möus
->
Times10
();

649 
	gdñè_∂us
->
AssignBignum
(*
dñè_möus
);

651 
	gdñè_möus
->
Times10
();

652 
	gdñè_∂us
->
Times10
();

	@dtoa/bignum-dtoa.h

28 #i‚de‡
DOUBLE_CONVERSION_BIGNUM_DTOA_H_


29 
	#DOUBLE_CONVERSION_BIGNUM_DTOA_H_


	)

31 
	~"utûs.h
"

33 
«me•a˚
 
	gWTF
 {

35 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

37 
	eBignumDtﬂMode
 {

41 
	gBIGNUM_DTOA_SHORTEST
,

45 
	gBIGNUM_DTOA_FIXED
,

47 
	gBIGNUM_DTOA_PRECISION


79 
BignumDtﬂ
(
v
, 
BignumDtﬂMode
 
mode
, 
ªque°ed_digôs
,

80 
Buf„rRe„ªn˚
<> 
buf„r
, * 
Àngth
, * 
poöt
);

	@dtoa/bignum.cc

28 
	~"c⁄fig.h
"

30 
	~"bignum.h
"

31 
	~"utûs.h
"

33 
«me•a˚
 
	gWTF
 {

35 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

37 
	gBignum
::
Bignum
()

38 : 
bigôs_
(
bigôs_buf„r_
, 
kBigôC≠acôy
), 
u£d_digôs_
(0), 
exp⁄ít_
(0) {

39 
	gi
 = 0; i < 
	gkBigôC≠acôy
; ++i) {

40 
	gbigôs_
[
i
] = 0;

45 
	gãm∂©e
<
ty≥«me
 
	gS
>

46 
BôSize
(
S
 
vÆue
) {

47  8 * (
	gvÆue
);

51 
	gBignum
::
AssignUI¡16
(
uöt16_t
 
vÆue
) {

52 
ASSERT
(
kBigôSize
 >
BôSize
(
vÆue
));

53 
Zîo
();

54 i‡(
	gvÆue
 == 0) ;

56 
EnsuªC≠acôy
(1);

57 
	gbigôs_
[0] = 
vÆue
;

58 
	gu£d_digôs_
 = 1;

62 
	gBignum
::
AssignUI¡64
(
uöt64_t
 
vÆue
) {

63 c⁄° 
kUI¡64Size
 = 64;

65 
Zîo
();

66 i‡(
	gvÆue
 == 0) ;

68 
	g√eded_bigôs
 = 
kUI¡64Size
 / 
kBigôSize
 + 1;

69 
EnsuªC≠acôy
(
√eded_bigôs
);

70 
	gi
 = 0; i < 
	g√eded_bigôs
; ++i) {

71 
	gbigôs_
[
i
] = 
°©ic_ˇ°
<
Chunk
>(
vÆue
 & 
kBigôMask
);

72 
	gvÆue
 = 
vÆue
 >> 
kBigôSize
;

74 
	gu£d_digôs_
 = 
√eded_bigôs
;

75 
Cœmp
();

79 
	gBignum
::
AssignBignum
(c⁄° 
Bignum
& 
Ÿhî
) {

80 
exp⁄ít_
 = 
Ÿhî
.exponent_;

81 
	gi
 = 0; i < 
	gŸhî
.
	gu£d_digôs_
; ++i) {

82 
	gbigôs_
[
i
] = 
Ÿhî
.
bigôs_
[i];

85 
	gi
 = 
Ÿhî
.
u£d_digôs_
; i < 
	gu£d_digôs_
; ++i) {

86 
	gbigôs_
[
i
] = 0;

88 
	gu£d_digôs_
 = 
Ÿhî
.
u£d_digôs_
;

92 
uöt64_t
 
RódUI¡64
(
Buf„rRe„ªn˚
<c⁄° > 
buf„r
,

93 
‰om
,

94 
digôs_to_ªad
) {

95 
uöt64_t
 
	gªsu…
 = 0;

96 
	gi
 = 
‰om
; i < 
	g‰om
 + 
	gdigôs_to_ªad
; ++i) {

97 
	gdigô
 = 
buf„r
[
i
] - '0';

98 
ASSERT
(0 <
digô
 && digit <= 9);

99 
	gªsu…
 = 
ªsu…
 * 10 + 
digô
;

101  
	gªsu…
;

105 
	gBignum
::
AssignDecimÆSåög
(
Buf„rRe„ªn˚
<c⁄° > 
vÆue
) {

107 c⁄° 
kMaxUöt64DecimÆDigôs
 = 19;

108 
Zîo
();

109 
	gÀngth
 = 
vÆue
.
Àngth
();

110 
	gpos
 = 0;

112 
	gÀngth
 >
kMaxUöt64DecimÆDigôs
) {

113 
uöt64_t
 
digôs
 = 
RódUI¡64
(
vÆue
, 
pos
, 
kMaxUöt64DecimÆDigôs
);

114 
	gpos
 +
kMaxUöt64DecimÆDigôs
;

115 
	gÀngth
 -
kMaxUöt64DecimÆDigôs
;

116 
Mu…ùlyByPowîOfTí
(
kMaxUöt64DecimÆDigôs
);

117 
AddUI¡64
(
digôs
);

119 
uöt64_t
 
	gdigôs
 = 
RódUI¡64
(
vÆue
, 
pos
, 
Àngth
);

120 
Mu…ùlyByPowîOfTí
(
Àngth
);

121 
AddUI¡64
(
digôs
);

122 
Cœmp
();

126 
HexCh¨VÆue
(
c
) {

127 i‡('0' <
c
 && c <= '9')  c - '0';

128 i‡('a' <
c
 && c <= 'f')  10 + c - 'a';

129 i‡('A' <
c
 && c <= 'F')  10 + c - 'A';

130 
UNREACHABLE
();

135 
	gBignum
::
AssignHexSåög
(
Buf„rRe„ªn˚
<c⁄° > 
vÆue
) {

136 
Zîo
();

137 
	gÀngth
 = 
vÆue
.
Àngth
();

139 
	g√eded_bigôs
 = 
Àngth
 * 4 / 
kBigôSize
 + 1;

140 
EnsuªC≠acôy
(
√eded_bigôs
);

141 
	g°rög_ödex
 = 
Àngth
 - 1;

142 
	gi
 = 0; i < 
	g√eded_bigôs
 - 1; ++i) {

144 
Chunk
 
	gcuºít_bigô
 = 0;

145 
	gj
 = 0; j < 
	gkBigôSize
 / 4; j++) {

146 
	gcuºít_bigô
 +
HexCh¨VÆue
(
vÆue
[
°rög_ödex
--]Ë<< (
j
 * 4);

148 
	gbigôs_
[
i
] = 
cuºít_bigô
;

150 
	gu£d_digôs_
 = 
√eded_bigôs
 - 1;

152 
Chunk
 
	gmo°_signifiˇ¡_bigô
 = 0;

153 
	gj
 = 0; j <
°rög_ödex
; ++j) {

154 
	gmo°_signifiˇ¡_bigô
 <<= 4;

155 
	gmo°_signifiˇ¡_bigô
 +
HexCh¨VÆue
(
vÆue
[
j
]);

157 i‡(
	gmo°_signifiˇ¡_bigô
 != 0) {

158 
bigôs_
[
u£d_digôs_
] = 
mo°_signifiˇ¡_bigô
;

159 
	gu£d_digôs_
++;

161 
Cœmp
();

165 
	gBignum
::
AddUI¡64
(
uöt64_t
 
›î™d
) {

166 i‡(
›î™d
 == 0) ;

167 
Bignum
 
	gŸhî
;

168 
	gŸhî
.
AssignUI¡64
(
›î™d
);

169 
AddBignum
(
Ÿhî
);

173 
	gBignum
::
AddBignum
(c⁄° 
Bignum
& 
Ÿhî
) {

174 
ASSERT
(
IsCœm≥d
());

175 
ASSERT
(
Ÿhî
.
IsCœm≥d
());

179 
Align
(
Ÿhî
);

193 
EnsuªC≠acôy
(1 + 
Max
(
BigôLígth
(), 
Ÿhî
.BigôLígth()Ë- 
exp⁄ít_
);

194 
Chunk
 
	gˇºy
 = 0;

195 
	gbigô_pos
 = 
Ÿhî
.
exp⁄ít_
 -Éxponent_;

196 
ASSERT
(
bigô_pos
 >= 0);

197 
	gi
 = 0; i < 
	gŸhî
.
	gu£d_digôs_
; ++i) {

198 
Chunk
 
	gsum
 = 
bigôs_
[
bigô_pos
] + 
Ÿhî
.bigôs_[
i
] + 
ˇºy
;

199 
	gbigôs_
[
bigô_pos
] = 
sum
 & 
kBigôMask
;

200 
	gˇºy
 = 
sum
 >> 
kBigôSize
;

201 
	gbigô_pos
++;

204 
	gˇºy
 != 0) {

205 
Chunk
 
sum
 = 
bigôs_
[
bigô_pos
] + 
ˇºy
;

206 
	gbigôs_
[
bigô_pos
] = 
sum
 & 
kBigôMask
;

207 
	gˇºy
 = 
sum
 >> 
kBigôSize
;

208 
	gbigô_pos
++;

210 
	gu£d_digôs_
 = 
Max
(
bigô_pos
, 
u£d_digôs_
);

211 
ASSERT
(
IsCœm≥d
());

215 
	gBignum
::
Subåa˘Bignum
(c⁄° 
Bignum
& 
Ÿhî
) {

216 
ASSERT
(
IsCœm≥d
());

217 
ASSERT
(
Ÿhî
.
IsCœm≥d
());

219 
ASSERT
(
LessEquÆ
(
Ÿhî
, *
this
));

221 
Align
(
Ÿhî
);

223 
	goff£t
 = 
Ÿhî
.
exp⁄ít_
 -Éxponent_;

224 
Chunk
 
	gb‹row
 = 0;

225 
	gi
;

226 
	gi
 = 0; i < 
	gŸhî
.
	gu£d_digôs_
; ++i) {

227 
ASSERT
((
b‹row
 == 0) || (borrow == 1));

228 
Chunk
 
	gdif„ªn˚
 = 
bigôs_
[
i
 + 
off£t
] - 
Ÿhî
.bigôs_[i] - 
b‹row
;

229 
	gbigôs_
[
i
 + 
off£t
] = 
dif„ªn˚
 & 
kBigôMask
;

230 
	gb‹row
 = 
dif„ªn˚
 >> (
kChunkSize
 - 1);

232 
	gb‹row
 != 0) {

233 
Chunk
 
dif„ªn˚
 = 
bigôs_
[
i
 + 
off£t
] - 
b‹row
;

234 
	gbigôs_
[
i
 + 
off£t
] = 
dif„ªn˚
 & 
kBigôMask
;

235 
	gb‹row
 = 
dif„ªn˚
 >> (
kChunkSize
 - 1);

236 ++
	gi
;

238 
Cœmp
();

242 
	gBignum
::
Shi·Le·
(
shi·_amou¡
) {

243 i‡(
u£d_digôs_
 == 0) ;

244 
	gexp⁄ít_
 +
shi·_amou¡
 / 
kBigôSize
;

245 
	gloˇl_shi·
 = 
shi·_amou¡
 % 
kBigôSize
;

246 
EnsuªC≠acôy
(
u£d_digôs_
 + 1);

247 
BigôsShi·Le·
(
loˇl_shi·
);

251 
	gBignum
::
Mu…ùlyByUI¡32
(
uöt32_t
 
Á˘‹
) {

252 i‡(
Á˘‹
 == 1) ;

253 i‡(
	gÁ˘‹
 == 0) {

254 
Zîo
();

257 i‡(
	gu£d_digôs_
 == 0) ;

261 
ASSERT
(
kDoubÀChunkSize
 >
kBigôSize
 + 32 + 1);

262 
DoubÀChunk
 
	gˇºy
 = 0;

263 
	gi
 = 0; i < 
	gu£d_digôs_
; ++i) {

264 
DoubÀChunk
 
	g¥odu˘
 = 
°©ic_ˇ°
<DoubÀChunk>(
Á˘‹
Ë* 
bigôs_
[
i
] + 
ˇºy
;

265 
	gbigôs_
[
i
] = 
°©ic_ˇ°
<
Chunk
>(
¥odu˘
 & 
kBigôMask
);

266 
	gˇºy
 = (
¥odu˘
 >> 
kBigôSize
);

268 
	gˇºy
 != 0) {

269 
EnsuªC≠acôy
(
u£d_digôs_
 + 1);

270 
	gbigôs_
[
u£d_digôs_
] = 
°©ic_ˇ°
<
Chunk
>(
ˇºy
 & 
kBigôMask
);

271 
	gu£d_digôs_
++;

272 
	gˇºy
 >>
kBigôSize
;

277 
	gBignum
::
Mu…ùlyByUI¡64
(
uöt64_t
 
Á˘‹
) {

278 i‡(
Á˘‹
 == 1) ;

279 i‡(
	gÁ˘‹
 == 0) {

280 
Zîo
();

283 
ASSERT
(
kBigôSize
 < 32);

284 
uöt64_t
 
	gˇºy
 = 0;

285 
uöt64_t
 
	glow
 = 
Á˘‹
 & 0xFFFFFFFF;

286 
uöt64_t
 
	ghigh
 = 
Á˘‹
 >> 32;

287 
	gi
 = 0; i < 
	gu£d_digôs_
; ++i) {

288 
uöt64_t
 
	g¥odu˘_low
 = 
low
 * 
bigôs_
[
i
];

289 
uöt64_t
 
	g¥odu˘_high
 = 
high
 * 
bigôs_
[
i
];

290 
uöt64_t
 
	gtmp
 = (
ˇºy
 & 
kBigôMask
Ë+ 
¥odu˘_low
;

291 
	gbigôs_
[
i
] = 
°©ic_ˇ°
<
Chunk
>(
tmp
 & 
kBigôMask
);

292 
	gˇºy
 = (
ˇºy
 >> 
kBigôSize
Ë+ (
tmp
 >> kBigitSize) +

293 (
¥odu˘_high
 << (32 - 
kBigôSize
));

295 
	gˇºy
 != 0) {

296 
EnsuªC≠acôy
(
u£d_digôs_
 + 1);

297 
	gbigôs_
[
u£d_digôs_
] = 
°©ic_ˇ°
<
Chunk
>(
ˇºy
 & 
kBigôMask
);

298 
	gu£d_digôs_
++;

299 
	gˇºy
 >>
kBigôSize
;

304 
	gBignum
::
Mu…ùlyByPowîOfTí
(
exp⁄ít
) {

305 c⁄° 
uöt64_t
 
kFive27
 = 
UINT64_2PART_C
(0x6765c793, 
Á10079d
);

306 c⁄° 
uöt16_t
 
	gkFive1
 = 5;

307 c⁄° 
uöt16_t
 
	gkFive2
 = 
kFive1
 * 5;

308 c⁄° 
uöt16_t
 
	gkFive3
 = 
kFive2
 * 5;

309 c⁄° 
uöt16_t
 
	gkFive4
 = 
kFive3
 * 5;

310 c⁄° 
uöt16_t
 
	gkFive5
 = 
kFive4
 * 5;

311 c⁄° 
uöt16_t
 
	gkFive6
 = 
kFive5
 * 5;

312 c⁄° 
uöt32_t
 
	gkFive7
 = 
kFive6
 * 5;

313 c⁄° 
uöt32_t
 
	gkFive8
 = 
kFive7
 * 5;

314 c⁄° 
uöt32_t
 
	gkFive9
 = 
kFive8
 * 5;

315 c⁄° 
uöt32_t
 
	gkFive10
 = 
kFive9
 * 5;

316 c⁄° 
uöt32_t
 
	gkFive11
 = 
kFive10
 * 5;

317 c⁄° 
uöt32_t
 
	gkFive12
 = 
kFive11
 * 5;

318 c⁄° 
uöt32_t
 
	gkFive13
 = 
kFive12
 * 5;

319 c⁄° 
uöt32_t
 
	gkFive1_to_12
[] =

320 { 
kFive1
, 
kFive2
, 
kFive3
, 
kFive4
, 
kFive5
, 
kFive6
,

321 
kFive7
, 
kFive8
, 
kFive9
, 
kFive10
, 
kFive11
, 
kFive12
 };

323 
ASSERT
(
exp⁄ít
 >= 0);

324 i‡(
	gexp⁄ít
 == 0) ;

325 i‡(
	gu£d_digôs_
 == 0) ;

328 
	gªmaöög_exp⁄ít
 = 
exp⁄ít
;

329 
	gªmaöög_exp⁄ít
 >= 27) {

330 
Mu…ùlyByUI¡64
(
kFive27
);

331 
	gªmaöög_exp⁄ít
 -= 27;

333 
	gªmaöög_exp⁄ít
 >= 13) {

334 
Mu…ùlyByUI¡32
(
kFive13
);

335 
	gªmaöög_exp⁄ít
 -= 13;

337 i‡(
	gªmaöög_exp⁄ít
 > 0) {

338 
Mu…ùlyByUI¡32
(
kFive1_to_12
[
ªmaöög_exp⁄ít
 - 1]);

340 
Shi·Le·
(
exp⁄ít
);

344 
	gBignum
::
Squ¨e
() {

345 
ASSERT
(
IsCœm≥d
());

346 
	g¥odu˘_Àngth
 = 2 * 
u£d_digôs_
;

347 
EnsuªC≠acôy
(
¥odu˘_Àngth
);

361 i‡((1 << (2 * (
	gkChunkSize
 - 
	gkBigôSize
))Ë<
u£d_digôs_
) {

362 
UNIMPLEMENTED
();

364 
DoubÀChunk
 
	gaccumuœt‹
 = 0;

366 
	gc›y_off£t
 = 
u£d_digôs_
;

367 
	gi
 = 0; i < 
	gu£d_digôs_
; ++i) {

368 
	gbigôs_
[
c›y_off£t
 + 
i
] = 
bigôs_
[i];

371 
	gi
 = 0; i < 
	gu£d_digôs_
; ++i) {

374 
	gbigô_ödex1
 = 
i
;

375 
	gbigô_ödex2
 = 0;

377 
	gbigô_ödex1
 >= 0) {

378 
Chunk
 
chunk1
 = 
bigôs_
[
c›y_off£t
 + 
bigô_ödex1
];

379 
Chunk
 
	gchunk2
 = 
bigôs_
[
c›y_off£t
 + 
bigô_ödex2
];

380 
	gaccumuœt‹
 +
°©ic_ˇ°
<
DoubÀChunk
>(
chunk1
Ë* 
chunk2
;

381 
	gbigô_ödex1
--;

382 
	gbigô_ödex2
++;

384 
	gbigôs_
[
i
] = 
°©ic_ˇ°
<
Chunk
>(
accumuœt‹
Ë& 
kBigôMask
;

385 
	gaccumuœt‹
 >>
kBigôSize
;

387 
	gi
 = 
u£d_digôs_
; i < 
	g¥odu˘_Àngth
; ++i) {

388 
	gbigô_ödex1
 = 
u£d_digôs_
 - 1;

389 
	gbigô_ödex2
 = 
i
 - 
bigô_ödex1
;

392 
	gbigô_ödex2
 < 
	gu£d_digôs_
) {

393 
Chunk
 
	gchunk1
 = 
bigôs_
[
c›y_off£t
 + 
bigô_ödex1
];

394 
Chunk
 
	gchunk2
 = 
bigôs_
[
c›y_off£t
 + 
bigô_ödex2
];

395 
	gaccumuœt‹
 +
°©ic_ˇ°
<
DoubÀChunk
>(
chunk1
Ë* 
chunk2
;

396 
	gbigô_ödex1
--;

397 
	gbigô_ödex2
++;

402 
	gbigôs_
[
i
] = 
°©ic_ˇ°
<
Chunk
>(
accumuœt‹
Ë& 
kBigôMask
;

403 
	gaccumuœt‹
 >>
kBigôSize
;

407 
ASSERT
(
accumuœt‹
 == 0);

410 
	gu£d_digôs_
 = 
¥odu˘_Àngth
;

411 
	gexp⁄ít_
 *= 2;

412 
Cœmp
();

416 
	gBignum
::
AssignPowîUI¡16
(
uöt16_t
 
ba£
, 
powî_exp⁄ít
) {

417 
ASSERT
(
ba£
 != 0);

418 
ASSERT
(
powî_exp⁄ít
 >= 0);

419 i‡(
	gpowî_exp⁄ít
 == 0) {

420 
AssignUI¡16
(1);

423 
Zîo
();

424 
	gshi·s
 = 0;

428 (
	gba£
 & 1) == 0) {

429 
ba£
 >>= 1;

430 
	gshi·s
++;

432 
	gbô_size
 = 0;

433 
	gtmp_ba£
 = 
ba£
;

434 
	gtmp_ba£
 != 0) {

435 
tmp_ba£
 >>= 1;

436 
	gbô_size
++;

438 
	gföÆ_size
 = 
bô_size
 * 
powî_exp⁄ít
;

440 
EnsuªC≠acôy
(
föÆ_size
 / 
kBigôSize
 + 2);

443 
	gmask
 = 1;

444 
	gpowî_exp⁄ít
 >
mask
) mask <<= 1;

449 
	gmask
 >>= 2;

450 
uöt64_t
 
	gthis_vÆue
 = 
ba£
;

452 
boﬁ
 
	gdñayed_mu…ùlicüti⁄
 = 
Ál£
;

453 c⁄° 
uöt64_t
 
	gmax_32bôs
 = 0xFFFFFFFF;

454 
	gmask
 !0 && 
this_vÆue
 <
max_32bôs
) {

455 
this_vÆue
 =Åhis_value *Åhis_value;

458 i‡((
	gpowî_exp⁄ít
 & 
	gmask
) != 0) {

459 
uöt64_t
 
ba£_bôs_mask
 =

460 ~((
°©ic_ˇ°
<
uöt64_t
>(1Ë<< (64 - 
bô_size
)) - 1);

461 
boﬁ
 
	ghigh_bôs_zîo
 = (
this_vÆue
 & 
ba£_bôs_mask
) == 0;

462 i‡(
	ghigh_bôs_zîo
) {

463 
	gthis_vÆue
 *
ba£
;

465 
	gdñayed_mu…ùlicüti⁄
 = 
åue
;

468 
	gmask
 >>= 1;

470 
AssignUI¡64
(
this_vÆue
);

471 i‡(
	gdñayed_mu…ùlicüti⁄
) {

472 
Mu…ùlyByUI¡32
(
ba£
);

476 
	gmask
 != 0) {

477 
Squ¨e
();

478 i‡((
	gpowî_exp⁄ít
 & 
	gmask
) != 0) {

479 
Mu…ùlyByUI¡32
(
ba£
);

481 
	gmask
 >>= 1;

485 
Shi·Le·
(
shi·s
 * 
powî_exp⁄ít
);

490 
uöt16_t
 
	gBignum
::
DivideModuloI¡Bignum
(c⁄° 
Bignum
& 
Ÿhî
) {

491 
ASSERT
(
IsCœm≥d
());

492 
ASSERT
(
Ÿhî
.
IsCœm≥d
());

493 
ASSERT
(
Ÿhî
.
u£d_digôs_
 > 0);

497 i‡(
BigôLígth
(Ë< 
	gŸhî
.BigitLength()) {

501 
Align
(
Ÿhî
);

503 
uöt16_t
 
	gªsu…
 = 0;

507 
BigôLígth
(Ë> 
	gŸhî
.BigitLength()) {

511 
ASSERT
(
Ÿhî
.
bigôs_
[Ÿhî.
u£d_digôs_
 - 1] >((1 << 
kBigôSize
) / 16));

514 
	gªsu…
 +
bigôs_
[
u£d_digôs_
 - 1];

515 
Subåa˘Times
(
Ÿhî
, 
bigôs_
[
u£d_digôs_
 - 1]);

518 
ASSERT
(
BigôLígth
(Ë=
Ÿhî
.BigitLength());

523 
Chunk
 
	gthis_bigô
 = 
bigôs_
[
u£d_digôs_
 - 1];

524 
Chunk
 
	gŸhî_bigô
 = 
Ÿhî
.
bigôs_
[Ÿhî.
u£d_digôs_
 - 1];

526 i‡(
	gŸhî
.
	gu£d_digôs_
 == 1) {

528 
quŸõ¡
 = 
this_bigô
 / 
Ÿhî_bigô
;

529 
	gbigôs_
[
u£d_digôs_
 - 1] = 
this_bigô
 - 
Ÿhî_bigô
 * 
quŸõ¡
;

530 
	gªsu…
 +
quŸõ¡
;

531 
Cœmp
();

532  
	gªsu…
;

535 
	gdivisi⁄_e°im©e
 = 
this_bigô
 / (
Ÿhî_bigô
 + 1);

536 
	gªsu…
 +
divisi⁄_e°im©e
;

537 
Subåa˘Times
(
Ÿhî
, 
divisi⁄_e°im©e
);

539 i‡(
	gŸhî_bigô
 * (
	gdivisi⁄_e°im©e
 + 1Ë> 
	gthis_bigô
) {

542  
	gªsu…
;

545 
LessEquÆ
(
Ÿhî
, *
this
)) {

546 
Subåa˘Bignum
(
Ÿhî
);

547 
	gªsu…
++;

549  
	gªsu…
;

553 
	gãm∂©e
<
ty≥«me
 
	gS
>

554 
SizeInHexCh¨s
(
S
 
numbî
) {

555 
ASSERT
(
numbî
 > 0);

556 
	gªsu…
 = 0;

557 
	gnumbî
 != 0) {

558 
numbî
 >>= 4;

559 
	gªsu…
++;

561  
	gªsu…
;

565 
HexCh¨OfVÆue
(
vÆue
) {

566 
ASSERT
(0 <
vÆue
 && value <= 16);

567 i‡(
	gvÆue
 < 10)  value + '0';

568  
	gvÆue
 - 10 + 'A';

572 
boﬁ
 
	gBignum
::
ToHexSåög
(* 
buf„r
, 
buf„r_size
) const {

573 
ASSERT
(
IsCœm≥d
());

575 
ASSERT
(
kBigôSize
 % 4 == 0);

576 c⁄° 
	gkHexCh¨sPîBigô
 = 
kBigôSize
 / 4;

578 i‡(
	gu£d_digôs_
 == 0) {

579 i‡(
buf„r_size
 < 2Ë 
Ál£
;

580 
	gbuf„r
[0] = '0';

581 
	gbuf„r
[1] = '\0';

582  
	gåue
;

585 
	g√eded_ch¨s
 = (
BigôLígth
(Ë- 1Ë* 
kHexCh¨sPîBigô
 +

586 
SizeInHexCh¨s
(
bigôs_
[
u£d_digôs_
 - 1]) + 1;

587 i‡(
	g√eded_ch¨s
 > 
	gbuf„r_size
Ë 
	gÁl£
;

588 
	g°rög_ödex
 = 
√eded_ch¨s
 - 1;

589 
	gbuf„r
[
°rög_ödex
--] = '\0';

590 
	gi
 = 0; i < 
	gexp⁄ít_
; ++i) {

591 
	gj
 = 0; j < 
	gkHexCh¨sPîBigô
; ++j) {

592 
	gbuf„r
[
°rög_ödex
--] = '0';

595 
	gi
 = 0; i < 
	gu£d_digôs_
 - 1; ++i) {

596 
Chunk
 
	gcuºít_bigô
 = 
bigôs_
[
i
];

597 
	gj
 = 0; j < 
	gkHexCh¨sPîBigô
; ++j) {

598 
	gbuf„r
[
°rög_ödex
--] = 
HexCh¨OfVÆue
(
cuºít_bigô
 & 0xF);

599 
	gcuºít_bigô
 >>= 4;

603 
Chunk
 
	gmo°_signifiˇ¡_bigô
 = 
bigôs_
[
u£d_digôs_
 - 1];

604 
	gmo°_signifiˇ¡_bigô
 != 0) {

605 
buf„r
[
°rög_ödex
--] = 
HexCh¨OfVÆue
(
mo°_signifiˇ¡_bigô
 & 0xF);

606 
	gmo°_signifiˇ¡_bigô
 >>= 4;

608  
	gåue
;

612 
	gBignum
::
Chunk
 
Bignum
::
BigôAt
(
ödex
) const {

613 i‡(
ödex
 >
BigôLígth
())  0;

614 i‡(
	gödex
 < 
	gexp⁄ít_
)  0;

615  
	gbigôs_
[
ödex
 - 
exp⁄ít_
];

619 
	gBignum
::
Com∑ª
(c⁄° 
Bignum
& 
a
, c⁄° Bignum& 
b
) {

620 
ASSERT
(
a
.
IsCœm≥d
());

621 
ASSERT
(
b
.
IsCœm≥d
());

622 
	gbigô_Àngth_a
 = 
a
.
BigôLígth
();

623 
	gbigô_Àngth_b
 = 
b
.
BigôLígth
();

624 i‡(
	gbigô_Àngth_a
 < 
	gbigô_Àngth_b
)  -1;

625 i‡(
	gbigô_Àngth_a
 > 
	gbigô_Àngth_b
)  +1;

626 
	gi
 = 
bigô_Àngth_a
 - 1; i >
Mö
(
a
.
exp⁄ít_
, 
b
.exponent_); --i) {

627 
Chunk
 
	gbigô_a
 = 
a
.
BigôAt
(
i
);

628 
Chunk
 
	gbigô_b
 = 
b
.
BigôAt
(
i
);

629 i‡(
	gbigô_a
 < 
	gbigô_b
)  -1;

630 i‡(
	gbigô_a
 > 
	gbigô_b
)  +1;

637 
	gBignum
::
PlusCom∑ª
(c⁄° 
Bignum
& 
a
, c⁄° Bignum& 
b
, c⁄° Bignum& 
c
) {

638 
ASSERT
(
a
.
IsCœm≥d
());

639 
ASSERT
(
b
.
IsCœm≥d
());

640 
ASSERT
(
c
.
IsCœm≥d
());

641 i‡(
	ga
.
BigôLígth
(Ë< 
	gb
.BigitLength()) {

642  
PlusCom∑ª
(
b
, 
a
, 
c
);

644 i‡(
	ga
.
BigôLígth
(Ë+ 1 < 
	gc
.BigitLength())  -1;

645 i‡(
	ga
.
BigôLígth
(Ë> 
	gc
.BigitLength())  +1;

649 i‡(
	ga
.
	gexp⁄ít_
 >
b
.
BigôLígth
(Ë&& 
a
.BigôLígth(Ë< 
c
.BigitLength()) {

653 
Chunk
 
	gb‹row
 = 0;

655 
	gmö_exp⁄ít
 = 
Mö
(Mö(
a
.
exp⁄ít_
, 
b
.exp⁄ít_), 
c
.exponent_);

656 
	gi
 = 
c
.
BigôLígth
(Ë- 1; i >
mö_exp⁄ít
; --i) {

657 
Chunk
 
	gchunk_a
 = 
a
.
BigôAt
(
i
);

658 
Chunk
 
	gchunk_b
 = 
b
.
BigôAt
(
i
);

659 
Chunk
 
	gchunk_c
 = 
c
.
BigôAt
(
i
);

660 
Chunk
 
	gsum
 = 
chunk_a
 + 
chunk_b
;

661 i‡(
	gsum
 > 
	gchunk_c
 + 
	gb‹row
) {

664 
	gb‹row
 = 
chunk_c
 + 
b‹row
 - 
sum
;

665 i‡(
	gb‹row
 > 1)  -1;

666 
	gb‹row
 <<
kBigôSize
;

669 i‡(
	gb‹row
 == 0)  0;

674 
	gBignum
::
Cœmp
() {

675 
u£d_digôs_
 > 0 && 
bigôs_
[used_digits_ - 1] == 0) {

676 
u£d_digôs_
--;

678 i‡(
	gu£d_digôs_
 == 0) {

680 
exp⁄ít_
 = 0;

685 
boﬁ
 
	gBignum
::
IsCœm≥d
() const {

686  
u£d_digôs_
 =0 || 
bigôs_
[used_digits_ - 1] != 0;

690 
	gBignum
::
Zîo
() {

691 
i
 = 0; 
	gi
 < 
	gu£d_digôs_
; ++i) {

692 
	gbigôs_
[
i
] = 0;

694 
	gu£d_digôs_
 = 0;

695 
	gexp⁄ít_
 = 0;

699 
	gBignum
::
Align
(c⁄° 
Bignum
& 
Ÿhî
) {

700 i‡(
exp⁄ít_
 > 
Ÿhî
.exponent_) {

707 
zîo_digôs
 = 
exp⁄ít_
 - 
Ÿhî
.exponent_;

708 
EnsuªC≠acôy
(
u£d_digôs_
 + 
zîo_digôs
);

709 
	gi
 = 
u£d_digôs_
 - 1; i >= 0; --i) {

710 
	gbigôs_
[
i
 + 
zîo_digôs
] = 
bigôs_
[i];

712 
	gi
 = 0; i < 
	gzîo_digôs
; ++i) {

713 
	gbigôs_
[
i
] = 0;

715 
	gu£d_digôs_
 +
zîo_digôs
;

716 
	gexp⁄ít_
 -
zîo_digôs
;

717 
ASSERT
(
u£d_digôs_
 >= 0);

718 
ASSERT
(
exp⁄ít_
 >= 0);

723 
	gBignum
::
BigôsShi·Le·
(
shi·_amou¡
) {

724 
ASSERT
(
shi·_amou¡
 < 
kBigôSize
);

725 
ASSERT
(
shi·_amou¡
 >= 0);

726 
Chunk
 
	gˇºy
 = 0;

727 
	gi
 = 0; i < 
	gu£d_digôs_
; ++i) {

728 
Chunk
 
	g√w_ˇºy
 = 
bigôs_
[
i
] >> (
kBigôSize
 - 
shi·_amou¡
);

729 
	gbigôs_
[
i
] = ((
bigôs_
[i] << 
shi·_amou¡
Ë+ 
ˇºy
Ë& 
kBigôMask
;

730 
	gˇºy
 = 
√w_ˇºy
;

732 i‡(
	gˇºy
 != 0) {

733 
bigôs_
[
u£d_digôs_
] = 
ˇºy
;

734 
	gu£d_digôs_
++;

739 
	gBignum
::
Subåa˘Times
(c⁄° 
Bignum
& 
Ÿhî
, 
Á˘‹
) {

740 #i‚de‡
NDEBUG


741 
Bignum
 
	ga
, 
	gb
;

742 
	ga
.
AssignBignum
(*
this
);

743 
	gb
.
AssignBignum
(
Ÿhî
);

744 
	gb
.
Mu…ùlyByUI¡32
(
Á˘‹
);

745 
	ga
.
Subåa˘Bignum
(
b
);

747 
ASSERT
(
exp⁄ít_
 <
Ÿhî
.exponent_);

748 i‡(
	gÁ˘‹
 < 3) {

749 
	gi
 = 0; i < 
	gÁ˘‹
; ++i) {

750 
Subåa˘Bignum
(
Ÿhî
);

754 
Chunk
 
	gb‹row
 = 0;

755 
	gexp⁄ít_diff
 = 
Ÿhî
.
exp⁄ít_
 -Éxponent_;

756 
	gi
 = 0; i < 
	gŸhî
.
	gu£d_digôs_
; ++i) {

757 
DoubÀChunk
 
	g¥odu˘
 = 
°©ic_ˇ°
<DoubÀChunk>(
Á˘‹
Ë* 
Ÿhî
.
bigôs_
[
i
];

758 
DoubÀChunk
 
	gªmove
 = 
b‹row
 + 
¥odu˘
;

759 
Chunk
 
	gdif„ªn˚
 =

760 
bigôs_
[
i
 + 
exp⁄ít_diff
] - 
°©ic_ˇ°
<
Chunk
>(
ªmove
 & 
kBigôMask
);

761 
	gbigôs_
[
i
 + 
exp⁄ít_diff
] = 
dif„ªn˚
 & 
kBigôMask
;

762 
	gb‹row
 = 
°©ic_ˇ°
<
Chunk
>((
dif„ªn˚
 >> (
kChunkSize
 - 1)) +

763 (
ªmove
 >> 
kBigôSize
));

765 
	gi
 = 
Ÿhî
.
u£d_digôs_
 + 
exp⁄ít_diff
; i < 
	gu£d_digôs_
; ++i) {

766 i‡(
	gb‹row
 == 0) ;

767 
Chunk
 
	gdif„ªn˚
 = 
bigôs_
[
i
] - 
b‹row
;

768 
	gbigôs_
[
i
] = 
dif„ªn˚
 & 
kBigôMask
;

769 
	gb‹row
 = 
dif„ªn˚
 >> (
kChunkSize
 - 1);

771 
Cœmp
();

772 
ASSERT
(
Bignum
::
EquÆ
(
a
, *
this
));

	@dtoa/bignum.h

28 #i‚de‡
DOUBLE_CONVERSION_BIGNUM_H_


29 
	#DOUBLE_CONVERSION_BIGNUM_H_


	)

31 
	~"utûs.h
"

33 
«me•a˚
 
	gWTF
 {

35 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

37 ˛as†
	cBignum
 {

38 
	gpublic
:

42 c⁄° 
kMaxSignifiˇ¡Bôs
 = 3584;

44 
Bignum
();

45 
AssignUI¡16
(
uöt16_t
 
vÆue
);

46 
AssignUI¡64
(
uöt64_t
 
vÆue
);

47 
AssignBignum
(c⁄° 
Bignum
& 
Ÿhî
);

49 
AssignDecimÆSåög
(
Buf„rRe„ªn˚
<c⁄° > 
vÆue
);

50 
AssignHexSåög
(
Buf„rRe„ªn˚
<c⁄° > 
vÆue
);

52 
AssignPowîUI¡16
(
uöt16_t
 
ba£
, 
exp⁄ít
);

54 
AddUI¡16
(
uöt16_t
 
›î™d
);

55 
AddUI¡64
(
uöt64_t
 
›î™d
);

56 
AddBignum
(c⁄° 
Bignum
& 
Ÿhî
);

58 
Subåa˘Bignum
(c⁄° 
Bignum
& 
Ÿhî
);

60 
Squ¨e
();

61 
Shi·Le·
(
shi·_amou¡
);

62 
Mu…ùlyByUI¡32
(
uöt32_t
 
Á˘‹
);

63 
Mu…ùlyByUI¡64
(
uöt64_t
 
Á˘‹
);

64 
Mu…ùlyByPowîOfTí
(
exp⁄ít
);

65 
Times10
(Ë{  
Mu…ùlyByUI¡32
(10); }

70 
uöt16_t
 
DivideModuloI¡Bignum
(c⁄° 
Bignum
& 
Ÿhî
);

72 
boﬁ
 
ToHexSåög
(* 
buf„r
, 
buf„r_size
) const;

74 
Com∑ª
(c⁄° 
Bignum
& 
a
, c⁄° Bignum& 
b
);

75 
boﬁ
 
EquÆ
(c⁄° 
Bignum
& 
a
, c⁄° Bignum& 
b
) {

76  
Com∑ª
(
a
, 
b
) == 0;

78 
boﬁ
 
LessEquÆ
(c⁄° 
Bignum
& 
a
, c⁄° Bignum& 
b
) {

79  
Com∑ª
(
a
, 
b
) <= 0;

81 
boﬁ
 
Less
(c⁄° 
Bignum
& 
a
, c⁄° Bignum& 
b
) {

82  
Com∑ª
(
a
, 
b
) < 0;

85 
PlusCom∑ª
(c⁄° 
Bignum
& 
a
, c⁄° Bignum& 
b
, c⁄° Bignum& 
c
);

87 
boﬁ
 
PlusEquÆ
(c⁄° 
Bignum
& 
a
, c⁄° Bignum& 
b
, c⁄° Bignum& 
c
) {

88  
PlusCom∑ª
(
a
, 
b
, 
c
) == 0;

91 
boﬁ
 
PlusLessEquÆ
(c⁄° 
Bignum
& 
a
, c⁄° Bignum& 
b
, c⁄° Bignum& 
c
) {

92  
PlusCom∑ª
(
a
, 
b
, 
c
) <= 0;

95 
boﬁ
 
PlusLess
(c⁄° 
Bignum
& 
a
, c⁄° Bignum& 
b
, c⁄° Bignum& 
c
) {

96  
PlusCom∑ª
(
a
, 
b
, 
c
) < 0;

98 
	g¥iv©e
:

99 
uöt32_t
 
	tChunk
;

100 
uöt64_t
 
	tDoubÀChunk
;

102 c⁄° 
	gkChunkSize
 = (
Chunk
) * 8;

103 c⁄° 
	gkDoubÀChunkSize
 = (
DoubÀChunk
) * 8;

106 c⁄° 
	gkBigôSize
 = 28;

107 c⁄° 
Chunk
 
	gkBigôMask
 = (1 << 
kBigôSize
) - 1;

110 c⁄° 
	gkBigôC≠acôy
 = 
kMaxSignifiˇ¡Bôs
 / 
kBigôSize
;

112 
EnsuªC≠acôy
(
size
) {

113 i‡(
	gsize
 > 
	gkBigôC≠acôy
) {

114 
UNREACHABLE
();

117 
Align
(c⁄° 
Bignum
& 
Ÿhî
);

118 
Cœmp
();

119 
boﬁ
 
IsCœm≥d
() const;

120 
Zîo
();

124 
BigôsShi·Le·
(
shi·_amou¡
);

126 
BigôLígth
(Ëc⁄° {  
	gu£d_digôs_
 + 
	gexp⁄ít_
; }

127 
Chunk
 
BigôAt
(
ödex
) const;

128 
Subåa˘Times
(c⁄° 
Bignum
& 
Ÿhî
, 
Á˘‹
);

130 
Chunk
 
	gbigôs_buf„r_
[
kBigôC≠acôy
];

133 
	gBuf„rRe„ªn˚
<
	gChunk
> 
	gbigôs_
;

134 
	gu£d_digôs_
;

136 
	gexp⁄ít_
;

138 
DISALLOW_COPY_AND_ASSIGN
(
Bignum
);

	@dtoa/cached-powers.cc

28 
	~"c⁄fig.h
"

30 
	~<°d¨g.h
>

31 
	~<limôs.h
>

32 
	~<m©h.h
>

34 
	~"utûs.h
"

35 
	~"ˇched-powîs.h
"

37 
«me•a˚
 
	gWTF
 {

39 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

41 
	sCachedPowî
 {

42 
uöt64_t
 
	gsignifiˇnd
;

43 
öt16_t
 
	gbö¨y_exp⁄ít
;

44 
öt16_t
 
	gdecimÆ_exp⁄ít
;

47 
	gkCachedPowîsLígth
 = 1;

48 
	gkCachedPowîsOff£t
 = 1;

49 c⁄° 
	gkD_1_LOG2_10
 = 0.30102999566398114;

50 c⁄° 
CachedPowî
* 
	gkCachedPowîs
 = 0;

52 
	gPowîsOfTíCache
::
kDecimÆExp⁄ítDi°™˚
 = 1;

53 
	gPowîsOfTíCache
::
kMöDecimÆExp⁄ít
 = 1;

54 
	gPowîsOfTíCache
::
kMaxDecimÆExp⁄ít
 = 1;

56 
öôülize
() {

57 i‡(
	gkCachedPowîs
)

59 c⁄° 
CachedPowî
 
	gˇchedPowîs
[] = {

60 {
UINT64_2PART_C
(0xfa8fd5a0, 081c0288), -1220, -348},

61 {
UINT64_2PART_C
(0xbØì17f, 
a23ebf76
), -1193, -340},

62 {
UINT64_2PART_C
(0x8b16fb20, 3055ac76), -1166, -332},

63 {
UINT64_2PART_C
(0xcf42894a, 5dce35ea), -1140, -324},

64 {
UINT64_2PART_C
(0x9a6bb0aa, 55653b2d), -1113, -316},

65 {
UINT64_2PART_C
(0xe61acf03, 3d1a45df), -1087, -308},

66 {
UINT64_2PART_C
(0xab70„17, 
c79ac6ˇ
), -1060, -300},

67 {
UINT64_2PART_C
(0xff77b1fc, 
bebcdc4f
), -1034, -292},

68 {
UINT64_2PART_C
(0xbe5691ef, 416bd60c), -1007, -284},

69 {
UINT64_2PART_C
(0x8dd01fad, 907ffc3c), -980, -276},

70 {
UINT64_2PART_C
(0xd3515c28, 31559a83), -954, -268},

71 {
UINT64_2PART_C
(0x9d71ac8f, 
ada6c9b5
), -927, -260},

72 {
UINT64_2PART_C
(0xea9c2277, 23ee8bcb), -901, -252},

73 {
UINT64_2PART_C
(0xaecc4991, 4078536d), -874, -244},

74 {
UINT64_2PART_C
(0x823c1279, 5db6ce57), -847, -236},

75 {
UINT64_2PART_C
(0xc2109436, 4dfb5637), -821, -228},

76 {
UINT64_2PART_C
(0x9096ea6f, 3848984f), -794, -220},

77 {
UINT64_2PART_C
(0xd77485cb, 25823ac7), -768, -212},

78 {
UINT64_2PART_C
(0xa086cfcd, 97bf97f4), -741, -204},

79 {
UINT64_2PART_C
(0xef340a98, 172aace5), -715, -196},

80 {
UINT64_2PART_C
(0xb23867fb, 2a35b28e), -688, -188},

81 {
UINT64_2PART_C
(0x84c8d4df, 
d2c63f3b
), -661, -180},

82 {
UINT64_2PART_C
(0xc5dd4427, 1ad3cdba), -635, -172},

83 {
UINT64_2PART_C
(0x936b9f˚, 
bb25c996
), -608, -164},

84 {
UINT64_2PART_C
(0xdbac6c24, 7d62a584), -582, -156},

85 {
UINT64_2PART_C
(0xa3ab6658, 0d5fdaf6), -555, -148},

86 {
UINT64_2PART_C
(0xf3e2f893, 
dec3f126
), -529, -140},

87 {
UINT64_2PART_C
(0xb5b5ada8, 
Øff80b8
), -502, -132},

88 {
UINT64_2PART_C
(0x87625f05, 6c7c4a8b), -475, -124},

89 {
UINT64_2PART_C
(0xc9bcff60, 34c13053), -449, -116},

90 {
UINT64_2PART_C
(0x964e858c, 91ba2655), -422, -108},

91 {
UINT64_2PART_C
(0xdff97724, 70297ebd), -396, -100},

92 {
UINT64_2PART_C
(0xa6dfbd9f, 
b8e5b88f
), -369, -92},

93 {
UINT64_2PART_C
(0xf8a95fcf, 88747d94), -343, -84},

94 {
UINT64_2PART_C
(0xb9447093, 8fa89bcf), -316, -76},

95 {
UINT64_2PART_C
(0x8a08f0f8, 
bf0f156b
), -289, -68},

96 {
UINT64_2PART_C
(0xcdb02555, 653131b6), -263, -60},

97 {
UINT64_2PART_C
(0x993„2c6, 
d07b7Ác
), -236, -52},

98 {
UINT64_2PART_C
(0xe45c10c4, 2a2b3b06), -210, -44},

99 {
UINT64_2PART_C
(0xaa242499, 697392d3), -183, -36},

100 {
UINT64_2PART_C
(0xfd87b5f2, 8300ca0e), -157, -28},

101 {
UINT64_2PART_C
(0xbce50864, 92111aeb), -130, -20},

102 {
UINT64_2PART_C
(0x8cbccc09, 6f5088cc), -103, -12},

103 {
UINT64_2PART_C
(0xd1b71758, 
e219652c
), -77, -4},

104 {
UINT64_2PART_C
(0x9c400000, 00000000), -50, 4},

105 {
UINT64_2PART_C
(0xe8d4a510, 00000000), -24, 12},

106 {
UINT64_2PART_C
(0xad78ebc5, 
ac620000
), 3, 20},

107 {
UINT64_2PART_C
(0x813f3978, 
f8940984
), 30, 28},

108 {
UINT64_2PART_C
(0xc097˚7b, 
c90715b3
), 56, 36},

109 {
UINT64_2PART_C
(0x8f7e32ce, 7bea5c70), 83, 44},

110 {
UINT64_2PART_C
(0xd5d238a4, 
abe98068
), 109, 52},

111 {
UINT64_2PART_C
(0x9f4f2726, 179a2245), 136, 60},

112 {
UINT64_2PART_C
(0xed63a231, 
d4c4fb27
), 162, 68},

113 {
UINT64_2PART_C
(0xb0de6538, 8cc8ada8), 189, 76},

114 {
UINT64_2PART_C
(0x83c7088e, 1aab65db), 216, 84},

115 {
UINT64_2PART_C
(0xc45d1df9, 42711d9a), 242, 92},

116 {
UINT64_2PART_C
(0x924d692c, 
a61be758
), 269, 100},

117 {
UINT64_2PART_C
(0xda01ee64, 1a708dea), 295, 108},

118 {
UINT64_2PART_C
(0xa26da399, 9aef774a), 322, 116},

119 {
UINT64_2PART_C
(0xf209787b, 
b47d6b85
), 348, 124},

120 {
UINT64_2PART_C
(0xb454e4a1, 79dd1877), 375, 132},

121 {
UINT64_2PART_C
(0x865b8692, 5b9bc5c2), 402, 140},

122 {
UINT64_2PART_C
(0xc83553c5, 
c8965d3d
), 428, 148},

123 {
UINT64_2PART_C
(0x952ab45c, 
Á97a0b3
), 455, 156},

124 {
UINT64_2PART_C
(0xde469fbd, 99a05fe3), 481, 164},

125 {
UINT64_2PART_C
(0xa59bc234, 
db398c25
), 508, 172},

126 {
UINT64_2PART_C
(0xf6c69a72, 
a3989f5c
), 534, 180},

127 {
UINT64_2PART_C
(0xb7dcbf53, 54e9bece), 561, 188},

128 {
UINT64_2PART_C
(0x88fcf317, 
f22241e2
), 588, 196},

129 {
UINT64_2PART_C
(0xcc20˚9b, 
d35c78a5
), 614, 204},

130 {
UINT64_2PART_C
(0x98165af3, 7b2153df), 641, 212},

131 {
UINT64_2PART_C
(0xe2a0b5dc, 971f303a), 667, 220},

132 {
UINT64_2PART_C
(0xa8d9d153, 5ce3b396), 694, 228},

133 {
UINT64_2PART_C
(0xfb9b7cd9, 
a4a7443c
), 720, 236},

134 {
UINT64_2PART_C
(0xbb764c4c, 
a7a44410
), 747, 244},

135 {
UINT64_2PART_C
(0x8bab8ìf, 
b6409c1a
), 774, 252},

136 {
UINT64_2PART_C
(0xd01„f10, 
a657842c
), 800, 260},

137 {
UINT64_2PART_C
(0x9b10a4e5, 
e9913129
), 827, 268},

138 {
UINT64_2PART_C
(0xe7109bfb, 
a19c0c9d
), 853, 276},

139 {
UINT64_2PART_C
(0xac2820d9, 623bf429), 880, 284},

140 {
UINT64_2PART_C
(0x80444b5e, 7aa7cf85), 907, 292},

141 {
UINT64_2PART_C
(0xbf21e440, 03acdd2d), 933, 300},

142 {
UINT64_2PART_C
(0x8e679c2f, 5e44ff8f), 960, 308},

143 {
UINT64_2PART_C
(0xd433179d, 9c8cb841), 986, 316},

144 {
UINT64_2PART_C
(0x9e19db92, 
b4e31ba9
), 1013, 324},

145 {
UINT64_2PART_C
(0xeb96bf6e, 
badf77d9
), 1039, 332},

146 {
UINT64_2PART_C
(0xaf87023b, 9bf0ee6b), 1066, 340},

148 
	gkCachedPowîs
 = 
ˇchedPowîs
;

149 
	gkCachedPowîsLígth
 = 
ARRAY_SIZE
(
ˇchedPowîs
);

150 
	gkCachedPowîsOff£t
 = -
ˇchedPowîs
[0].
decimÆ_exp⁄ít
;

151 
	gPowîsOfTíCache
::
kDecimÆExp⁄ítDi°™˚
 = 
kCachedPowîs
[1].
decimÆ_exp⁄ít
 - kCachedPowers[0].decimal_exponent;

152 
	gPowîsOfTíCache
::
kMöDecimÆExp⁄ít
 = 
kCachedPowîs
[0].
decimÆ_exp⁄ít
;

153 
	gPowîsOfTíCache
::
kMaxDecimÆExp⁄ít
 = 
kCachedPowîs
[
kCachedPowîsLígth
 - 1].
decimÆ_exp⁄ít
;

156 
	gPowîsOfTíCache
::
GëCachedPowîF‹Bö¨yExp⁄ítR™ge
(

157 
mö_exp⁄ít
,

158 
max_exp⁄ít
,

159 
DiyFp
* 
powî
,

160 * 
decimÆ_exp⁄ít
) {

161 
UNUSED_PARAM
(
max_exp⁄ít
);

162 
	gkQ
 = 
DiyFp
::
kSignifiˇndSize
;

163 
	gk
 = 
˚û
((
mö_exp⁄ít
 + 
kQ
 - 1Ë* 
kD_1_LOG2_10
);

164 
	gfoo
 = 
kCachedPowîsOff£t
;

165 
	gödex
 =

166 (
foo
 + 
°©ic_ˇ°
<>(
k
Ë- 1Ë/ 
kDecimÆExp⁄ítDi°™˚
 + 1;

167 
ASSERT
(0 <
ödex
 && index < 
kCachedPowîsLígth
);

168 
CachedPowî
 
	gˇched_powî
 = 
kCachedPowîs
[
ödex
];

169 
ASSERT
(
mö_exp⁄ít
 <
ˇched_powî
.
bö¨y_exp⁄ít
);

170 
ASSERT
(
ˇched_powî
.
bö¨y_exp⁄ít
 <
max_exp⁄ít
);

171 *
	gdecimÆ_exp⁄ít
 = 
ˇched_powî
.
decimÆ_exp⁄ít
;

172 *
	gpowî
 = 
DiyFp
(
ˇched_powî
.
signifiˇnd
, cached_powî.
bö¨y_exp⁄ít
);

176 
	gPowîsOfTíCache
::
GëCachedPowîF‹DecimÆExp⁄ít
(
ªque°ed_exp⁄ít
,

177 
DiyFp
* 
powî
,

178 * 
found_exp⁄ít
) {

179 
ASSERT
(
kMöDecimÆExp⁄ít
 <
ªque°ed_exp⁄ít
);

180 
ASSERT
(
ªque°ed_exp⁄ít
 < 
kMaxDecimÆExp⁄ít
 + 
kDecimÆExp⁄ítDi°™˚
);

181 
	gödex
 =

182 (
ªque°ed_exp⁄ít
 + 
kCachedPowîsOff£t
Ë/ 
kDecimÆExp⁄ítDi°™˚
;

183 
CachedPowî
 
	gˇched_powî
 = 
kCachedPowîs
[
ödex
];

184 *
	gpowî
 = 
DiyFp
(
ˇched_powî
.
signifiˇnd
, cached_powî.
bö¨y_exp⁄ít
);

185 *
	gfound_exp⁄ít
 = 
ˇched_powî
.
decimÆ_exp⁄ít
;

186 
ASSERT
(*
found_exp⁄ít
 <
ªque°ed_exp⁄ít
);

187 
ASSERT
(
ªque°ed_exp⁄ít
 < *
found_exp⁄ít
 + 
kDecimÆExp⁄ítDi°™˚
);

	@dtoa/cached-powers.h

28 #i‚de‡
DOUBLE_CONVERSION_CACHED_POWERS_H_


29 
	#DOUBLE_CONVERSION_CACHED_POWERS_H_


	)

31 
	~"diy-Â.h
"

33 
«me•a˚
 
	gWTF
 {

35 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

37 ˛as†
	cPowîsOfTíCache
 {

38 
	gpublic
:

42 
kDecimÆExp⁄ítDi°™˚
;

44 
	gkMöDecimÆExp⁄ít
;

45 
	gkMaxDecimÆExp⁄ít
;

49 
GëCachedPowîF‹Bö¨yExp⁄ítR™ge
(
mö_exp⁄ít
,

50 
max_exp⁄ít
,

51 
DiyFp
* 
powî
,

52 * 
decimÆ_exp⁄ít
);

59 
GëCachedPowîF‹DecimÆExp⁄ít
(
ªque°ed_exp⁄ít
,

60 
DiyFp
* 
powî
,

61 * 
found_exp⁄ít
);

66 
WTF_EXPORT_PRIVATE
 
öôülize
();

	@dtoa/diy-fp.cc

28 
	~"c⁄fig.h
"

30 
	~"diy-Â.h
"

31 
	~"utûs.h
"

33 
«me•a˚
 
	gWTF
 {

35 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

37 
	gDiyFp
::
Mu…ùly
(c⁄° 
DiyFp
& 
Ÿhî
) {

42 c⁄° 
uöt64_t
 
kM32
 = 0xFFFFFFFFU;

43 
uöt64_t
 
	ga
 = 
f_
 >> 32;

44 
uöt64_t
 
	gb
 = 
f_
 & 
kM32
;

45 
uöt64_t
 
	gc
 = 
Ÿhî
.
f_
 >> 32;

46 
uöt64_t
 
	gd
 = 
Ÿhî
.
f_
 & 
kM32
;

47 
uöt64_t
 
	gac
 = 
a
 * 
c
;

48 
uöt64_t
 
	gbc
 = 
b
 * 
c
;

49 
uöt64_t
 
	gad
 = 
a
 * 
d
;

50 
uöt64_t
 
	gbd
 = 
b
 * 
d
;

51 
uöt64_t
 
	gtmp
 = (
bd
 >> 32Ë+ (
ad
 & 
kM32
Ë+ (
bc
 & kM32);

54 
	gtmp
 += 1U << 31;

55 
uöt64_t
 
	gªsu…_f
 = 
ac
 + (
ad
 >> 32Ë+ (
bc
 >> 32Ë+ (
tmp
 >> 32);

56 
	ge_
 +
Ÿhî
.
e_
 + 64;

57 
	gf_
 = 
ªsu…_f
;

	@dtoa/diy-fp.h

28 #i‚de‡
DOUBLE_CONVERSION_DIY_FP_H_


29 
	#DOUBLE_CONVERSION_DIY_FP_H_


	)

31 
	~"utûs.h
"

33 
«me•a˚
 
	gWTF
 {

35 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

42 ˛as†
	cDiyFp
 {

43 
	gpublic
:

44 c⁄° 
kSignifiˇndSize
 = 64;

46 
DiyFp
(Ë: 
f_
(0), 
e_
(0) {}

47 
DiyFp
(
uöt64_t
 
f
, 
e
Ë: 
f_
(f), 
e_
(e) {}

53 
Subåa˘
(c⁄° 
DiyFp
& 
Ÿhî
) {

54 
ASSERT
(
e_
 =
Ÿhî
.e_);

55 
ASSERT
(
f_
 >
Ÿhî
.f_);

56 
	gf_
 -
Ÿhî
.
f_
;

62 
DiyFp
 
Möus
(c⁄° DiyFp& 
a
, c⁄° DiyFp& 
b
) {

63 
DiyFp
 
	gªsu…
 = 
a
;

64 
	gªsu…
.
Subåa˘
(
b
);

65  
	gªsu…
;

70 
Mu…ùly
(c⁄° 
DiyFp
& 
Ÿhî
);

73 
DiyFp
 
Times
(c⁄° DiyFp& 
a
, c⁄° DiyFp& 
b
) {

74 
DiyFp
 
	gªsu…
 = 
a
;

75 
	gªsu…
.
Mu…ùly
(
b
);

76  
	gªsu…
;

79 
N‹mÆize
() {

80 
ASSERT
(
f_
 != 0);

81 
uöt64_t
 
	gf
 = 
f_
;

82 
	ge
 = 
e_
;

86 c⁄° 
uöt64_t
 
	gk10MSBôs
 = 
UINT64_2PART_C
(0xFFC00000, 00000000);

87 (
	gf
 & 
	gk10MSBôs
) == 0) {

88 
f
 <<= 10;

89 
	ge
 -= 10;

91 (
	gf
 & 
	gkUöt64MSB
) == 0) {

92 
f
 <<= 1;

93 
	ge
--;

95 
	gf_
 = 
f
;

96 
	ge_
 = 
e
;

99 
DiyFp
 
N‹mÆize
(c⁄° DiyFp& 
a
) {

100 
DiyFp
 
	gªsu…
 = 
a
;

101 
	gªsu…
.
N‹mÆize
();

102  
	gªsu…
;

105 
uöt64_t
 
f
(Ëc⁄° {  
	gf_
; }

106 
e
(Ëc⁄° {  
	ge_
; }

108 
£t_f
(
uöt64_t
 
√w_vÆue
Ë{ 
	gf_
 =Çew_value; }

109 
£t_e
(
√w_vÆue
Ë{ 
	ge_
 =Çew_value; }

111 
	g¥iv©e
:

112 c⁄° 
uöt64_t
 
kUöt64MSB
 = 
UINT64_2PART_C
(0x80000000, 00000000);

114 
uöt64_t
 
	gf_
;

115 
	ge_
;

	@dtoa/double-conversion.cc

28 
	~"c⁄fig.h
"

30 
	~<limôs.h
>

31 
	~<m©h.h
>

33 
	~"doubÀ-c⁄vîsi⁄.h
"

35 
	~"bignum-dtﬂ.h
"

36 
	~"doubÀ.h
"

37 
	~"Á°-dtﬂ.h
"

38 
	~"fixed-dtﬂ.h
"

39 
	~"°πod.h
"

40 
	~"utûs.h
"

42 
«me•a˚
 
	gWTF
 {

44 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

46 c⁄° 
	gDoubÀToSåögC⁄vîãr
& DoubÀToSåögC⁄vîãr::
EcmaS¸ùtC⁄vîãr
() {

47 
Êags
 = 
UNIQUE_ZERO
 | 
EMIT_POSITIVE_EXPONENT_SIGN
;

48 
DoubÀToSåögC⁄vîãr
 
c⁄vîãr
(
Êags
,

54  
	gc⁄vîãr
;

58 
boﬁ
 
	gDoubÀToSåögC⁄vîãr
::
H™dÀS≥cülVÆues
(

59 
vÆue
,

60 
SåögBuûdî
* 
ªsu…_buûdî
) const {

61 
DoubÀ
 
doubÀ_ö•e˘
(
vÆue
);

62 i‡(
	gdoubÀ_ö•e˘
.
IsInföôe
()) {

63 i‡(
	göföôy_symbﬁ_
 =
NULL
Ë 
Ál£
;

64 i‡(
	gvÆue
 < 0) {

65 
	gªsu…_buûdî
->
AddCh¨a˘î
('-');

67 
	gªsu…_buûdî
->
AddSåög
(
öföôy_symbﬁ_
);

68  
	gåue
;

70 i‡(
	gdoubÀ_ö•e˘
.
IsN™
()) {

71 i‡(
	g«n_symbﬁ_
 =
NULL
Ë 
Ál£
;

72 
	gªsu…_buûdî
->
AddSåög
(
«n_symbﬁ_
);

73  
	gåue
;

75  
	gÁl£
;

79 
	gDoubÀToSåögC⁄vîãr
::
Cª©eExp⁄ítülRïª£¡©i⁄
(

80 c⁄° * 
decimÆ_digôs
,

81 
Àngth
,

82 
exp⁄ít
,

83 
SåögBuûdî
* 
ªsu…_buûdî
) const {

84 
ASSERT
(
Àngth
 != 0);

85 
	gªsu…_buûdî
->
AddCh¨a˘î
(
decimÆ_digôs
[0]);

86 i‡(
	gÀngth
 != 1) {

87 
ªsu…_buûdî
->
AddCh¨a˘î
('.');

88 
	gªsu…_buûdî
->
AddSub°rög
(&
decimÆ_digôs
[1], 
Àngth
-1);

90 
	gªsu…_buûdî
->
AddCh¨a˘î
(
exp⁄ít_ch¨a˘î_
);

91 i‡(
	gexp⁄ít
 < 0) {

92 
	gªsu…_buûdî
->
AddCh¨a˘î
('-');

93 
	gexp⁄ít
 = -
exp⁄ít
;

95 i‡((
	gÊags_
 & 
	gEMIT_POSITIVE_EXPONENT_SIGN
) != 0) {

96 
ªsu…_buûdî
->
AddCh¨a˘î
('+');

99 i‡(
	gexp⁄ít
 == 0) {

100 
ªsu…_buûdî
->
AddCh¨a˘î
('0');

103 
ASSERT
(
exp⁄ít
 < 1e4);

104 c⁄° 
	gkMaxExp⁄ítLígth
 = 5;

105 
	gbuf„r
[
kMaxExp⁄ítLígth
 + 1];

106 
	gfú°_ch¨_pos
 = 
kMaxExp⁄ítLígth
;

107 
	gbuf„r
[
fú°_ch¨_pos
] = '\0';

108 
	gexp⁄ít
 > 0) {

109 
	gbuf„r
[--
fú°_ch¨_pos
] = '0' + (
exp⁄ít
 % 10);

110 
	gexp⁄ít
 /= 10;

112 
	gªsu…_buûdî
->
AddSub°rög
(&
buf„r
[
fú°_ch¨_pos
],

113 
kMaxExp⁄ítLígth
 - 
fú°_ch¨_pos
);

117 
	gDoubÀToSåögC⁄vîãr
::
Cª©eDecimÆRïª£¡©i⁄
(

118 c⁄° * 
decimÆ_digôs
,

119 
Àngth
,

120 
decimÆ_poöt
,

121 
digôs_a·î_poöt
,

122 
SåögBuûdî
* 
ªsu…_buûdî
) const {

124 i‡(
	gdecimÆ_poöt
 <= 0) {

126 
ªsu…_buûdî
->
AddCh¨a˘î
('0');

127 i‡(
	gdigôs_a·î_poöt
 > 0) {

128 
	gªsu…_buûdî
->
AddCh¨a˘î
('.');

129 
	gªsu…_buûdî
->
AddPaddög
('0', -
decimÆ_poöt
);

130 
ASSERT
(
Àngth
 <
digôs_a·î_poöt
 - (-
decimÆ_poöt
));

131 
	gªsu…_buûdî
->
AddSub°rög
(
decimÆ_digôs
, 
Àngth
);

132 
	gªmaöög_digôs
 = 
digôs_a·î_poöt
 - (-
decimÆ_poöt
Ë- 
Àngth
;

133 
	gªsu…_buûdî
->
AddPaddög
('0', 
ªmaöög_digôs
);

135 } i‡(
	gdecimÆ_poöt
 >
Àngth
) {

137 
ªsu…_buûdî
->
AddSub°rög
(
decimÆ_digôs
, 
Àngth
);

138 
	gªsu…_buûdî
->
AddPaddög
('0', 
decimÆ_poöt
 - 
Àngth
);

139 i‡(
	gdigôs_a·î_poöt
 > 0) {

140 
	gªsu…_buûdî
->
AddCh¨a˘î
('.');

141 
	gªsu…_buûdî
->
AddPaddög
('0', 
digôs_a·î_poöt
);

145 
ASSERT
(
digôs_a·î_poöt
 > 0);

146 
	gªsu…_buûdî
->
AddSub°rög
(
decimÆ_digôs
, 
decimÆ_poöt
);

147 
	gªsu…_buûdî
->
AddCh¨a˘î
('.');

148 
ASSERT
(
Àngth
 - 
decimÆ_poöt
 <
digôs_a·î_poöt
);

149 
	gªsu…_buûdî
->
AddSub°rög
(&
decimÆ_digôs
[
decimÆ_poöt
],

150 
Àngth
 - 
decimÆ_poöt
);

151 
	gªmaöög_digôs
 = 
digôs_a·î_poöt
 - (
Àngth
 - 
decimÆ_poöt
);

152 
	gªsu…_buûdî
->
AddPaddög
('0', 
ªmaöög_digôs
);

154 i‡(
	gdigôs_a·î_poöt
 == 0) {

155 i‡((
Êags_
 & 
EMIT_TRAILING_DECIMAL_POINT
) != 0) {

156 
ªsu…_buûdî
->
AddCh¨a˘î
('.');

158 i‡((
	gÊags_
 & 
	gEMIT_TRAILING_ZERO_AFTER_POINT
) != 0) {

159 
ªsu…_buûdî
->
AddCh¨a˘î
('0');

165 
boﬁ
 
	gDoubÀToSåögC⁄vîãr
::
ToSh‹ã°
(
vÆue
,

166 
SåögBuûdî
* 
ªsu…_buûdî
) const {

167 i‡(
DoubÀ
(
vÆue
).
IsS≥cül
()) {

168  
H™dÀS≥cülVÆues
(
vÆue
, 
ªsu…_buûdî
);

171 
	gdecimÆ_poöt
;

172 
boﬁ
 
	gsign
;

173 c⁄° 
	gkDecimÆRïC≠acôy
 = 
kBa£10MaximÆLígth
 + 1;

174 
	gdecimÆ_ªp
[
kDecimÆRïC≠acôy
];

175 
	gdecimÆ_ªp_Àngth
;

177 
DoubÀToAscii
(
vÆue
, 
SHORTEST
, 0, 
decimÆ_ªp
, 
kDecimÆRïC≠acôy
,

178 &
sign
, &
decimÆ_ªp_Àngth
, &
decimÆ_poöt
);

180 
boﬁ
 
	gunique_zîo
 = (
Êags_
 & 
UNIQUE_ZERO
) != 0;

181 i‡(
	gsign
 && (
	gvÆue
 !0.0 || !
unique_zîo
)) {

182 
ªsu…_buûdî
->
AddCh¨a˘î
('-');

185 
	gexp⁄ít
 = 
decimÆ_poöt
 - 1;

186 i‡((
	gdecimÆ_ö_sh‹ã°_low_
 <
exp⁄ít
) &&

187 (
exp⁄ít
 < 
decimÆ_ö_sh‹ã°_high_
)) {

188 
Cª©eDecimÆRïª£¡©i⁄
(
decimÆ_ªp
, 
decimÆ_ªp_Àngth
,

189 
decimÆ_poöt
,

190 
Max
(0, 
decimÆ_ªp_Àngth
 - 
decimÆ_poöt
),

191 
ªsu…_buûdî
);

193 
Cª©eExp⁄ítülRïª£¡©i⁄
(
decimÆ_ªp
, 
decimÆ_ªp_Àngth
, 
exp⁄ít
,

194 
ªsu…_buûdî
);

196  
	gåue
;

200 
boﬁ
 
	gDoubÀToSåögC⁄vîãr
::
ToFixed
(
vÆue
,

201 
ªque°ed_digôs
,

202 
SåögBuûdî
* 
ªsu…_buûdî
) const {

203 
ASSERT
(
kMaxFixedDigôsBef‹ePoöt
 == 60);

204 c⁄° 
	gkFú°N⁄Fixed
 = 1e60;

206 i‡(
DoubÀ
(
vÆue
).
IsS≥cül
()) {

207  
H™dÀS≥cülVÆues
(
vÆue
, 
ªsu…_buûdî
);

210 i‡(
	gªque°ed_digôs
 > 
	gkMaxFixedDigôsA·îPoöt
Ë 
	gÁl£
;

211 i‡(
	gvÆue
 >
kFú°N⁄Fixed
 || 
vÆue
 <-kFú°N⁄FixedË 
Ál£
;

214 
	gdecimÆ_poöt
;

215 
boﬁ
 
	gsign
;

217 c⁄° 
	gkDecimÆRïC≠acôy
 =

218 
kMaxFixedDigôsBef‹ePoöt
 + 
kMaxFixedDigôsA·îPoöt
 + 1;

219 
	gdecimÆ_ªp
[
kDecimÆRïC≠acôy
];

220 
	gdecimÆ_ªp_Àngth
;

221 
DoubÀToAscii
(
vÆue
, 
FIXED
, 
ªque°ed_digôs
,

222 
decimÆ_ªp
, 
kDecimÆRïC≠acôy
,

223 &
sign
, &
decimÆ_ªp_Àngth
, &
decimÆ_poöt
);

225 
boﬁ
 
	gunique_zîo
 = ((
Êags_
 & 
UNIQUE_ZERO
) != 0);

226 i‡(
	gsign
 && (
	gvÆue
 !0.0 || !
unique_zîo
)) {

227 
ªsu…_buûdî
->
AddCh¨a˘î
('-');

230 
Cª©eDecimÆRïª£¡©i⁄
(
decimÆ_ªp
, 
decimÆ_ªp_Àngth
, 
decimÆ_poöt
,

231 
ªque°ed_digôs
, 
ªsu…_buûdî
);

232  
	gåue
;

236 
boﬁ
 
	gDoubÀToSåögC⁄vîãr
::
ToExp⁄ítül
(

237 
vÆue
,

238 
ªque°ed_digôs
,

239 
SåögBuûdî
* 
ªsu…_buûdî
) const {

240 i‡(
DoubÀ
(
vÆue
).
IsS≥cül
()) {

241  
H™dÀS≥cülVÆues
(
vÆue
, 
ªsu…_buûdî
);

244 i‡(
	gªque°ed_digôs
 < -1Ë 
	gÁl£
;

245 i‡(
	gªque°ed_digôs
 > 
	gkMaxExp⁄ítülDigôs
Ë 
	gÁl£
;

247 
	gdecimÆ_poöt
;

248 
boﬁ
 
	gsign
;

250 c⁄° 
	gkDecimÆRïC≠acôy
 = 
kMaxExp⁄ítülDigôs
 + 2;

251 
ASSERT
(
kDecimÆRïC≠acôy
 > 
kBa£10MaximÆLígth
);

252 
	gdecimÆ_ªp
[
kDecimÆRïC≠acôy
];

253 
	gdecimÆ_ªp_Àngth
;

255 i‡(
	gªque°ed_digôs
 == -1) {

256 
DoubÀToAscii
(
vÆue
, 
SHORTEST
, 0,

257 
decimÆ_ªp
, 
kDecimÆRïC≠acôy
,

258 &
sign
, &
decimÆ_ªp_Àngth
, &
decimÆ_poöt
);

260 
DoubÀToAscii
(
vÆue
, 
PRECISION
, 
ªque°ed_digôs
 + 1,

261 
decimÆ_ªp
, 
kDecimÆRïC≠acôy
,

262 &
sign
, &
decimÆ_ªp_Àngth
, &
decimÆ_poöt
);

263 
ASSERT
(
decimÆ_ªp_Àngth
 <
ªque°ed_digôs
 + 1);

265 
	gi
 = 
decimÆ_ªp_Àngth
; i < 
	gªque°ed_digôs
 + 1; ++i) {

266 
	gdecimÆ_ªp
[
i
] = '0';

268 
	gdecimÆ_ªp_Àngth
 = 
ªque°ed_digôs
 + 1;

271 
boﬁ
 
	gunique_zîo
 = ((
Êags_
 & 
UNIQUE_ZERO
) != 0);

272 i‡(
	gsign
 && (
	gvÆue
 !0.0 || !
unique_zîo
)) {

273 
ªsu…_buûdî
->
AddCh¨a˘î
('-');

276 
	gexp⁄ít
 = 
decimÆ_poöt
 - 1;

277 
Cª©eExp⁄ítülRïª£¡©i⁄
(
decimÆ_ªp
,

278 
decimÆ_ªp_Àngth
,

279 
exp⁄ít
,

280 
ªsu…_buûdî
);

281  
	gåue
;

285 
boﬁ
 
	gDoubÀToSåögC⁄vîãr
::
ToPªcisi⁄
(
vÆue
,

286 
¥ecisi⁄
,

287 
SåögBuûdî
* 
ªsu…_buûdî
) const {

288 i‡(
DoubÀ
(
vÆue
).
IsS≥cül
()) {

289  
H™dÀS≥cülVÆues
(
vÆue
, 
ªsu…_buûdî
);

292 i‡(
	g¥ecisi⁄
 < 
	gkMöPªcisi⁄Digôs
 ||Öªcisi⁄ > 
	gkMaxPªcisi⁄Digôs
) {

293  
	gÁl£
;

297 
	gdecimÆ_poöt
;

298 
boﬁ
 
	gsign
;

300 c⁄° 
	gkDecimÆRïC≠acôy
 = 
kMaxPªcisi⁄Digôs
 + 1;

301 
	gdecimÆ_ªp
[
kDecimÆRïC≠acôy
];

302 
	gdecimÆ_ªp_Àngth
;

304 
DoubÀToAscii
(
vÆue
, 
PRECISION
, 
¥ecisi⁄
,

305 
decimÆ_ªp
, 
kDecimÆRïC≠acôy
,

306 &
sign
, &
decimÆ_ªp_Àngth
, &
decimÆ_poöt
);

307 
ASSERT
(
decimÆ_ªp_Àngth
 <
¥ecisi⁄
);

309 
boﬁ
 
	gunique_zîo
 = ((
Êags_
 & 
UNIQUE_ZERO
) != 0);

310 i‡(
	gsign
 && (
	gvÆue
 !0.0 || !
unique_zîo
)) {

311 
ªsu…_buûdî
->
AddCh¨a˘î
('-');

316 
	gexp⁄ít
 = 
decimÆ_poöt
 - 1;

318 
	gexåa_zîo
 = ((
Êags_
 & 
EMIT_TRAILING_ZERO_AFTER_POINT
) != 0) ? 1 : 0;

319 i‡((-
	gdecimÆ_poöt
 + 1 > 
	gmax_Àadög_∑ddög_zî€s_ö_¥ecisi⁄_mode_
) ||

320 (
	gdecimÆ_poöt
 - 
	g¥ecisi⁄
 + 
	gexåa_zîo
 >

321 
	gmax_åaûög_∑ddög_zî€s_ö_¥ecisi⁄_mode_
)) {

325 
	gi
 = 
decimÆ_ªp_Àngth
; i < 
	g¥ecisi⁄
; ++i) {

326 
	gdecimÆ_ªp
[
i
] = '0';

329 
Cª©eExp⁄ítülRïª£¡©i⁄
(
decimÆ_ªp
,

330 
¥ecisi⁄
,

331 
exp⁄ít
,

332 
ªsu…_buûdî
);

334 
Cª©eDecimÆRïª£¡©i⁄
(
decimÆ_ªp
, 
decimÆ_ªp_Àngth
, 
decimÆ_poöt
,

335 
Max
(0, 
¥ecisi⁄
 - 
decimÆ_poöt
),

336 
ªsu…_buûdî
);

338  
	gåue
;

342 
BignumDtﬂMode
 
DtﬂToBignumDtﬂMode
(

343 
DoubÀToSåögC⁄vîãr
::
DtﬂMode
 
dtﬂ_mode
) {

344 
dtﬂ_mode
) {

345 
DoubÀToSåögC⁄vîãr
::
SHORTEST
:  
BIGNUM_DTOA_SHORTEST
;

346 
	gDoubÀToSåögC⁄vîãr
::
FIXED
:  
BIGNUM_DTOA_FIXED
;

347 
	gDoubÀToSåögC⁄vîãr
::
PRECISION
:  
BIGNUM_DTOA_PRECISION
;

349 
UNREACHABLE
();

350  
	gBIGNUM_DTOA_SHORTEST
;

355 
	gDoubÀToSåögC⁄vîãr
::
DoubÀToAscii
(
v
,

356 
DtﬂMode
 
mode
,

357 
ªque°ed_digôs
,

358 * 
buf„r
,

359 
buf„r_Àngth
,

360 
boﬁ
* 
sign
,

361 * 
Àngth
,

362 * 
poöt
) {

363 
	gBuf„rRe„ªn˚
<> 
ve˘‹
(
buf„r
, 
buf„r_Àngth
);

364 
ASSERT
(!
DoubÀ
(
v
).
IsS≥cül
());

365 
ASSERT
(
mode
 =
SHORTEST
 || 
ªque°ed_digôs
 >= 0);

367 i‡(
DoubÀ
(
v
).
Sign
() < 0) {

368 *
	gsign
 = 
åue
;

369 
	gv
 = -
v
;

371 *
	gsign
 = 
Ál£
;

374 i‡(
	gmode
 =
PRECISION
 && 
ªque°ed_digôs
 == 0) {

375 
ve˘‹
[0] = '\0';

376 *
	gÀngth
 = 0;

380 i‡(
	gv
 == 0) {

381 
ve˘‹
[0] = '0';

382 
	gve˘‹
[1] = '\0';

383 *
	gÀngth
 = 1;

384 *
	gpoöt
 = 1;

388 
boﬁ
 
	gÁ°_w‹ked
;

389 
	gmode
) {

390 
	gSHORTEST
:

391 
Á°_w‹ked
 = 
Fa°Dtﬂ
(
v
, 
FAST_DTOA_SHORTEST
, 0, 
ve˘‹
, 
Àngth
, 
poöt
);

393 
	gFIXED
:

394 
Á°_w‹ked
 = 
Fa°FixedDtﬂ
(
v
, 
ªque°ed_digôs
, 
ve˘‹
, 
Àngth
, 
poöt
);

396 
	gPRECISION
:

397 
Á°_w‹ked
 = 
Fa°Dtﬂ
(
v
, 
FAST_DTOA_PRECISION
, 
ªque°ed_digôs
,

398 
ve˘‹
, 
Àngth
, 
poöt
);

401 
UNREACHABLE
();

402 
	gÁ°_w‹ked
 = 
Ál£
;

404 i‡(
	gÁ°_w‹ked
) ;

407 
BignumDtﬂMode
 
	gbignum_mode
 = 
DtﬂToBignumDtﬂMode
(
mode
);

408 
BignumDtﬂ
(
v
, 
bignum_mode
, 
ªque°ed_digôs
, 
ve˘‹
, 
Àngth
, 
poöt
);

409 
	gve˘‹
[*
Àngth
] = '\0';

420 c⁄° 
	gkMaxSignifiˇ¡Digôs
 = 772;

423 
Sig√dZîo
(
boﬁ
 
sign
) {

424  
	gsign
 ? -0.0 : 0.0;

428 
	gSåögToDoubÀC⁄vîãr
::
SåögToDoubÀ
(

429 c⁄° * 
öput
,

430 
size_t
 
Àngth
,

431 
size_t
* 
¥o˚s£d_ch¨a˘îs_cou¡
) {

432 c⁄° * 
	gcuºít
 = 
öput
;

433 c⁄° * 
	gíd
 = 
öput
 + 
Àngth
;

435 *
	g¥o˚s£d_ch¨a˘îs_cou¡
 = 0;

444 i‡(
	gcuºít
 =
íd
)  0.0;

447 c⁄° 
	gkBuf„rSize
 = 
kMaxSignifiˇ¡Digôs
 + 10;

448 
	gbuf„r
[
kBuf„rSize
];

449 
	gbuf„r_pos
 = 0;

453 
	gexp⁄ít
 = 0;

454 
	gsignifiˇ¡_digôs
 = 0;

455 
	gösignifiˇ¡_digôs
 = 0;

456 
boﬁ
 
	gn⁄zîo_digô_dr›≥d
 = 
Ál£
;

457 
boﬁ
 
	gsign
 = 
Ál£
;

459 i‡(*
	gcuºít
 ='+' || *
cuºít
 == '-') {

460 
sign
 = (*
cuºít
 == '-');

461 ++
	gcuºít
;

462 i‡(
	gcuºít
 =
íd
)  0.0;

465 
boﬁ
 
	gÀadög_zîo
 = 
Ál£
;

466 i‡(*
	gcuºít
 == '0') {

467 ++
cuºít
;

468 i‡(
	gcuºít
 =
íd
) {

469 *
¥o˚s£d_ch¨a˘îs_cou¡
 = 
cuºít
 - 
öput
;

470  
Sig√dZîo
(
sign
);

473 
	gÀadög_zîo
 = 
åue
;

476 *
	gcuºít
 == '0') {

477 ++
cuºít
;

478 i‡(
	gcuºít
 =
íd
) {

479 *
¥o˚s£d_ch¨a˘îs_cou¡
 = 
cuºít
 - 
öput
;

480  
Sig√dZîo
(
sign
);

486 *
	gcuºít
 >'0' && *
cuºít
 <= '9') {

487 i‡(
signifiˇ¡_digôs
 < 
kMaxSignifiˇ¡Digôs
) {

488 
ASSERT
(
buf„r_pos
 < 
kBuf„rSize
);

489 
	gbuf„r
[
buf„r_pos
++] = 
°©ic_ˇ°
<>(*
cuºít
);

490 
	gsignifiˇ¡_digôs
++;

492 
	gösignifiˇ¡_digôs
++;

493 
	gn⁄zîo_digô_dr›≥d
 = 
n⁄zîo_digô_dr›≥d
 || *
cuºít
 != '0';

495 ++
	gcuºít
;

496 i‡(
	gcuºít
 =
íd
Ë
∑rsög_d⁄e
;

499 i‡(*
	gcuºít
 == '.') {

500 ++
cuºít
;

501 i‡(
	gcuºít
 =
íd
) {

502 i‡(
signifiˇ¡_digôs
 =0 && !
Àadög_zîo
) {

505 
	g∑rsög_d⁄e
;

509 i‡(
	gsignifiˇ¡_digôs
 == 0) {

512 *
cuºít
 == '0') {

513 ++
cuºít
;

514 i‡(
	gcuºít
 =
íd
) {

515 *
¥o˚s£d_ch¨a˘îs_cou¡
 = 
cuºít
 - 
öput
;

516  
Sig√dZîo
(
sign
);

518 
	gexp⁄ít
--;

523 *
	gcuºít
 >'0' && *
cuºít
 <= '9') {

524 i‡(
signifiˇ¡_digôs
 < 
kMaxSignifiˇ¡Digôs
) {

525 
ASSERT
(
buf„r_pos
 < 
kBuf„rSize
);

526 
	gbuf„r
[
buf„r_pos
++] = 
°©ic_ˇ°
<>(*
cuºít
);

527 
	gsignifiˇ¡_digôs
++;

528 
	gexp⁄ít
--;

531 
	gn⁄zîo_digô_dr›≥d
 = 
n⁄zîo_digô_dr›≥d
 || *
cuºít
 != '0';

533 ++
	gcuºít
;

534 i‡(
	gcuºít
 =
íd
Ë
∑rsög_d⁄e
;

538 i‡(!
	gÀadög_zîo
 && 
	gexp⁄ít
 =0 && 
signifiˇ¡_digôs
 == 0) {

547 i‡(*
	gcuºít
 ='e' || *
cuºít
 == 'E') {

548 ++
cuºít
;

549 i‡(
	gcuºít
 =
íd
) {

550 --
cuºít
;

551 
	g∑rsög_d⁄e
;

553 
	gsign
 = 0;

554 i‡(*
	gcuºít
 ='+' || *
cuºít
 == '-') {

555 
sign
 = 
°©ic_ˇ°
<>(*
cuºít
);

556 ++
	gcuºít
;

557 i‡(
	gcuºít
 =
íd
) {

558 
cuºít
 -= 2;

559 
	g∑rsög_d⁄e
;

563 i‡(*
	gcuºít
 < '0' || *current > '9') {

564 i‡(
	gsign
)

565 --
	gcuºít
;

566 --
	gcuºít
;

567 
	g∑rsög_d⁄e
;

570 c⁄° 
	gmax_exp⁄ít
 = 
INT_MAX
 / 2;

571 
ASSERT
(-
max_exp⁄ít
 / 2 <
exp⁄ít
 &&Éxponent <= max_exponent / 2);

572 
	gnum
 = 0;

575 
	gdigô
 = *
cuºít
 - '0';

576 i‡(
	gnum
 >
max_exp⁄ít
 / 10

577 && !(
num
 =
max_exp⁄ít
 / 10 && 
digô
 <= max_exponent % 10)) {

578 
num
 = 
max_exp⁄ít
;

580 
	gnum
 = 
num
 * 10 + 
digô
;

582 ++
	gcuºít
;

583 } 
	gcuºít
 !
íd
 && *
cuºít
 >= '0' && *current <= '9');

585 
	gexp⁄ít
 +(
sign
 ='-' ? -
num
 :Çum);

588 
	g∑rsög_d⁄e
:

589 
exp⁄ít
 +
ösignifiˇ¡_digôs
;

591 i‡(
	gn⁄zîo_digô_dr›≥d
) {

592 
	gbuf„r
[
buf„r_pos
++] = '1';

593 
	gexp⁄ít
--;

596 
ASSERT
(
buf„r_pos
 < 
kBuf„rSize
);

597 
	gbuf„r
[
buf„r_pos
] = '\0';

599 
	gc⁄vîãd
 = 
Såtod
(
Buf„rRe„ªn˚
<c⁄° >(
buf„r
, 
buf„r_pos
), 
exp⁄ít
);

600 *
	g¥o˚s£d_ch¨a˘îs_cou¡
 = 
cuºít
 - 
öput
;

601  
	gsign
? -
	gc⁄vîãd
: 
c⁄vîãd
;

	@dtoa/double-conversion.h

28 #i‚de‡
DOUBLE_CONVERSION_DOUBLE_CONVERSION_H_


29 
	#DOUBLE_CONVERSION_DOUBLE_CONVERSION_H_


	)

31 
	~<wtf/dtﬂ/utûs.h
>

33 
«me•a˚
 
	gWTF
 {

35 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

37 ˛as†
	cDoubÀToSåögC⁄vîãr
 {

38 
	gpublic
:

42 c⁄° 
kMaxFixedDigôsBef‹ePoöt
 = 60;

43 c⁄° 
	gkMaxFixedDigôsA·îPoöt
 = 60;

47 c⁄° 
	gkMaxExp⁄ítülDigôs
 = 120;

52 c⁄° 
	gkMöPªcisi⁄Digôs
 = 1;

53 c⁄° 
	gkMaxPªcisi⁄Digôs
 = 120;

55 
	eFœgs
 {

56 
	gNO_FLAGS
 = 0,

57 
	gEMIT_POSITIVE_EXPONENT_SIGN
 = 1,

58 
	gEMIT_TRAILING_DECIMAL_POINT
 = 2,

59 
	gEMIT_TRAILING_ZERO_AFTER_POINT
 = 4,

60 
	gUNIQUE_ZERO
 = 8

109 
DoubÀToSåögC⁄vîãr
(
Êags
,

110 c⁄° * 
öföôy_symbﬁ
,

111 c⁄° * 
«n_symbﬁ
,

112 
exp⁄ít_ch¨a˘î
,

113 
decimÆ_ö_sh‹ã°_low
,

114 
decimÆ_ö_sh‹ã°_high
,

115 
max_Àadög_∑ddög_zî€s_ö_¥ecisi⁄_mode
,

116 
max_åaûög_∑ddög_zî€s_ö_¥ecisi⁄_mode
)

117 : 
Êags_
(
Êags
),

118 
öföôy_symbﬁ_
(
öföôy_symbﬁ
),

119 
«n_symbﬁ_
(
«n_symbﬁ
),

120 
exp⁄ít_ch¨a˘î_
(
exp⁄ít_ch¨a˘î
),

121 
decimÆ_ö_sh‹ã°_low_
(
decimÆ_ö_sh‹ã°_low
),

122 
decimÆ_ö_sh‹ã°_high_
(
decimÆ_ö_sh‹ã°_high
),

123 
max_Àadög_∑ddög_zî€s_ö_¥ecisi⁄_mode_
(

124 
max_Àadög_∑ddög_zî€s_ö_¥ecisi⁄_mode
),

125 
max_åaûög_∑ddög_zî€s_ö_¥ecisi⁄_mode_
(

126 
max_åaûög_∑ddög_zî€s_ö_¥ecisi⁄_mode
) {

129 
ASSERT
(((
Êags
 & 
EMIT_TRAILING_DECIMAL_POINT
) != 0) ||

130 !((
Êags
 & 
EMIT_TRAILING_ZERO_AFTER_POINT
) != 0));

134 
WTF_EXPORT_PRIVATE
 c⁄° 
	gDoubÀToSåögC⁄vîãr
& 
EcmaS¸ùtC⁄vîãr
();

159 
boﬁ
 
ToSh‹ã°
(
vÆue
, 
SåögBuûdî
* 
ªsu…_buûdî
) const;

195 
boﬁ
 
ToFixed
(
vÆue
,

196 
ªque°ed_digôs
,

197 
SåögBuûdî
* 
ªsu…_buûdî
) const;

227 
WTF_EXPORT_PRIVATE
 
boﬁ
 
ToExp⁄ítül
(
vÆue
,

228 
ªque°ed_digôs
,

229 
SåögBuûdî
* 
ªsu…_buûdî
) const;

265 
boﬁ
 
ToPªcisi⁄
(
vÆue
,

266 
¥ecisi⁄
,

267 
SåögBuûdî
* 
ªsu…_buûdî
) const;

269 
	eDtﬂMode
 {

273 
	gSHORTEST
,

277 
	gFIXED
,

279 
	gPRECISION


288 c⁄° 
	gkBa£10MaximÆLígth
 = 17;

321 
DoubÀToAscii
(
v
,

322 
DtﬂMode
 
mode
,

323 
ªque°ed_digôs
,

324 * 
buf„r
,

325 
buf„r_Àngth
,

326 
boﬁ
* 
sign
,

327 * 
Àngth
,

328 * 
poöt
);

330 
	g¥iv©e
:

335 
boﬁ
 
H™dÀS≥cülVÆues
(
vÆue
, 
SåögBuûdî
* 
ªsu…_buûdî
) const;

338 
Cª©eExp⁄ítülRïª£¡©i⁄
(c⁄° * 
decimÆ_digôs
,

339 
Àngth
,

340 
exp⁄ít
,

341 
SåögBuûdî
* 
ªsu…_buûdî
) const;

343 
Cª©eDecimÆRïª£¡©i⁄
(c⁄° * 
decimÆ_digôs
,

344 
Àngth
,

345 
decimÆ_poöt
,

346 
digôs_a·î_poöt
,

347 
SåögBuûdî
* 
ªsu…_buûdî
) const;

349 c⁄° 
	gÊags_
;

350 c⁄° * c⁄° 
	göföôy_symbﬁ_
;

351 c⁄° * c⁄° 
	g«n_symbﬁ_
;

352 c⁄° 
	gexp⁄ít_ch¨a˘î_
;

353 c⁄° 
	gdecimÆ_ö_sh‹ã°_low_
;

354 c⁄° 
	gdecimÆ_ö_sh‹ã°_high_
;

355 c⁄° 
	gmax_Àadög_∑ddög_zî€s_ö_¥ecisi⁄_mode_
;

356 c⁄° 
	gmax_åaûög_∑ddög_zî€s_ö_¥ecisi⁄_mode_
;

358 
DISALLOW_IMPLICIT_CONSTRUCTORS
(
DoubÀToSåögC⁄vîãr
);

362 ˛as†
	cSåögToDoubÀC⁄vîãr
 {

363 
	gpublic
:

367 
WTF_EXPORT_PRIVATE
 
SåögToDoubÀ
(c⁄° * 
buf„r
, 
size_t
 
Àngth
, size_t* 
¥o˚s£d_ch¨a˘îs_cou¡
);

369 
	g¥iv©e
:

370 
DISALLOW_IMPLICIT_CONSTRUCTORS
(
SåögToDoubÀC⁄vîãr
);

	@dtoa/double.h

28 #i‚de‡
DOUBLE_CONVERSION_DOUBLE_H_


29 
	#DOUBLE_CONVERSION_DOUBLE_H_


	)

31 
	~"diy-Â.h
"

33 
«me•a˚
 
	gWTF
 {

35 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

38 
uöt64_t
 
doubÀ_to_uöt64
(
d
Ë{  
	gBôCa°
<
	guöt64_t
>(
	gd
); }

39 
uöt64_to_doubÀ
(
uöt64_t
 
d64
Ë{  
	gBôCa°
<>(
	gd64
); }

42 ˛as†
	cDoubÀ
 {

43 
	gpublic
:

44 c⁄° 
uöt64_t
 
kSignMask
 = 
UINT64_2PART_C
(0x80000000, 00000000);

45 c⁄° 
uöt64_t
 
	gkExp⁄ítMask
 = 
UINT64_2PART_C
(0x7FF00000, 00000000);

46 c⁄° 
uöt64_t
 
	gkSignifiˇndMask
 = 
UINT64_2PART_C
(0x000FFFFF, 
FFFFFFFF
);

47 c⁄° 
uöt64_t
 
	gkHiddíBô
 = 
UINT64_2PART_C
(0x00100000, 00000000);

48 c⁄° 
	gkPhysiˇlSignifiˇndSize
 = 52;

49 c⁄° 
	gkSignifiˇndSize
 = 53;

51 
DoubÀ
(Ë: 
d64_
(0) {}

52 
ex∂icô
 
DoubÀ
(
d
Ë: 
d64_
(
doubÀ_to_uöt64
(d)) {}

53 
ex∂icô
 
DoubÀ
(
uöt64_t
 
d64
Ë: 
d64_
(d64) {}

54 
ex∂icô
 
DoubÀ
(
DiyFp
 
diy_Â
)

55 : 
d64_
(
DiyFpToUöt64
(
diy_Â
)) {}

59 
DiyFp
 
AsDiyFp
() const {

60 
ASSERT
(
Sign
() > 0);

61 
ASSERT
(!
IsS≥cül
());

62  
DiyFp
(
Signifiˇnd
(), 
Exp⁄ít
());

66 
DiyFp
 
AsN‹mÆizedDiyFp
() const {

67 
ASSERT
(
vÆue
() > 0.0);

68 
uöt64_t
 
	gf
 = 
Signifiˇnd
();

69 
	ge
 = 
Exp⁄ít
();

72 (
	gf
 & 
	gkHiddíBô
) == 0) {

73 
f
 <<= 1;

74 
	ge
--;

77 
	gf
 <<
DiyFp
::
kSignifiˇndSize
 - kSignificandSize;

78 
	ge
 -
DiyFp
::
kSignifiˇndSize
 - kSignificandSize;

79  
DiyFp
(
f
, 
e
);

83 
uöt64_t
 
AsUöt64
() const {

84  
	gd64_
;

88 
NextDoubÀ
() const {

89 i‡(
	gd64_
 =
kInföôy
Ë 
DoubÀ
(kInföôy).
vÆue
();

90 i‡(
Sign
(Ë< 0 && 
Signifiˇnd
() == 0) {

94 i‡(
Sign
() < 0) {

95  
DoubÀ
(
d64_
 - 1).
vÆue
();

97  
DoubÀ
(
d64_
 + 1).
vÆue
();

101 
Exp⁄ít
() const {

102 i‡(
IsDí‹mÆ
()Ë 
	gkDí‹mÆExp⁄ít
;

104 
uöt64_t
 
	gd64
 = 
AsUöt64
();

105 
	gbü£d_e
 =

106 
°©ic_ˇ°
<>((
d64
 & 
kExp⁄ítMask
Ë>> 
kPhysiˇlSignifiˇndSize
);

107  
	gbü£d_e
 - 
	gkExp⁄ítBüs
;

110 
uöt64_t
 
Signifiˇnd
() const {

111 
uöt64_t
 
	gd64
 = 
AsUöt64
();

112 
uöt64_t
 
	gsignifiˇnd
 = 
d64
 & 
kSignifiˇndMask
;

113 i‡(!
IsDí‹mÆ
()) {

114  
	gsignifiˇnd
 + 
	gkHiddíBô
;

116  
	gsignifiˇnd
;

121 
boﬁ
 
IsDí‹mÆ
() const {

122 
uöt64_t
 
	gd64
 = 
AsUöt64
();

123  (
	gd64
 & 
	gkExp⁄ítMask
) == 0;

128 
boﬁ
 
IsS≥cül
() const {

129 
uöt64_t
 
	gd64
 = 
AsUöt64
();

130  (
	gd64
 & 
	gkExp⁄ítMask
Ë=
kExp⁄ítMask
;

133 
boﬁ
 
IsN™
() const {

134 
uöt64_t
 
	gd64
 = 
AsUöt64
();

135  ((
	gd64
 & 
	gkExp⁄ítMask
Ë=
kExp⁄ítMask
) &&

136 ((
d64
 & 
kSignifiˇndMask
) != 0);

139 
boﬁ
 
IsInföôe
() const {

140 
uöt64_t
 
	gd64
 = 
AsUöt64
();

141  ((
	gd64
 & 
	gkExp⁄ítMask
Ë=
kExp⁄ítMask
) &&

142 ((
d64
 & 
kSignifiˇndMask
) == 0);

145 
Sign
() const {

146 
uöt64_t
 
	gd64
 = 
AsUöt64
();

147  (
	gd64
 & 
	gkSignMask
) == 0? 1: -1;

152 
DiyFp
 
UµîBound¨y
() const {

153 
ASSERT
(
Sign
() > 0);

154  
DiyFp
(
Signifiˇnd
(Ë* 2 + 1, 
Exp⁄ít
() - 1);

161 
N‹mÆizedBound¨õs
(
DiyFp
* 
out_m_möus
, DiyFp* 
out_m_∂us
) const {

162 
ASSERT
(
vÆue
() > 0.0);

163 
DiyFp
 
	gv
 = 
this
->
AsDiyFp
();

164 
boﬁ
 
	gsignifiˇnd_is_zîo
 = (
v
.
f
(Ë=
kHiddíBô
);

165 
DiyFp
 
	gm_∂us
 = DiyFp::
N‹mÆize
(DiyFp((
v
.
f
(Ë<< 1Ë+ 1, v.
e
() - 1));

166 
DiyFp
 
	gm_möus
;

167 i‡(
	gsignifiˇnd_is_zîo
 && 
	gv
.
e
(Ë!
kDí‹mÆExp⁄ít
) {

174 
m_möus
 = 
DiyFp
((
v
.
f
(Ë<< 2Ë- 1, v.
e
() - 2);

176 
	gm_möus
 = 
DiyFp
((
v
.
f
(Ë<< 1Ë- 1, v.
e
() - 1);

178 
	gm_möus
.
£t_f
(
m_möus
.
f
(Ë<< (m_möus.
e
(Ë- 
m_∂us
.e()));

179 
	gm_möus
.
£t_e
(
m_∂us
.
e
());

180 *
	gout_m_∂us
 = 
m_∂us
;

181 *
	gout_m_möus
 = 
m_möus
;

184 
vÆue
(Ëc⁄° {  
uöt64_to_doubÀ
(
d64_
); }

192 
SignifiˇndSizeF‹OrdîOfMagnôude
(
‹dî
) {

193 i‡(
	g‹dî
 >(
kDí‹mÆExp⁄ít
 + 
kSignifiˇndSize
)) {

194  
kSignifiˇndSize
;

196 i‡(
	g‹dî
 <
kDí‹mÆExp⁄ít
)  0;

197  
	g‹dî
 - 
	gkDí‹mÆExp⁄ít
;

200 
Inföôy
() {

201  
DoubÀ
(
kInföôy
).
vÆue
();

204 
NaN
() {

205  
DoubÀ
(
kNaN
).
vÆue
();

208 
	g¥iv©e
:

209 c⁄° 
kExp⁄ítBüs
 = 0x3FF + 
kPhysiˇlSignifiˇndSize
;

210 c⁄° 
	gkDí‹mÆExp⁄ít
 = -
kExp⁄ítBüs
 + 1;

211 c⁄° 
	gkMaxExp⁄ít
 = 0x7FF - 
kExp⁄ítBüs
;

212 c⁄° 
uöt64_t
 
	gkInföôy
 = 
UINT64_2PART_C
(0x7FF00000, 00000000);

213 c⁄° 
uöt64_t
 
	gkNaN
 = 
UINT64_2PART_C
(0x7FF80000, 00000000);

215 c⁄° 
uöt64_t
 
	gd64_
;

217 
uöt64_t
 
DiyFpToUöt64
(
DiyFp
 
diy_Â
) {

218 
uöt64_t
 
	gsignifiˇnd
 = 
diy_Â
.
f
();

219 
	gexp⁄ít
 = 
diy_Â
.
e
();

220 
	gsignifiˇnd
 > 
	gkHiddíBô
 + 
	gkSignifiˇndMask
) {

221 
	gsignifiˇnd
 >>= 1;

222 
	gexp⁄ít
++;

224 i‡(
	gexp⁄ít
 >
kMaxExp⁄ít
) {

225  
kInföôy
;

227 i‡(
	gexp⁄ít
 < 
	gkDí‹mÆExp⁄ít
) {

230 
	gexp⁄ít
 > 
	gkDí‹mÆExp⁄ít
 && (
	gsignifiˇnd
 & 
	gkHiddíBô
) == 0) {

231 
signifiˇnd
 <<= 1;

232 
	gexp⁄ít
--;

234 
uöt64_t
 
	gbü£d_exp⁄ít
;

235 i‡(
	gexp⁄ít
 =
kDí‹mÆExp⁄ít
 && (
signifiˇnd
 & 
kHiddíBô
) == 0) {

236 
bü£d_exp⁄ít
 = 0;

238 
	gbü£d_exp⁄ít
 = 
°©ic_ˇ°
<
uöt64_t
>(
exp⁄ít
 + 
kExp⁄ítBüs
);

240  (
	gsignifiˇnd
 & 
	gkSignifiˇndMask
) |

241 (
	gbü£d_exp⁄ít
 << 
	gkPhysiˇlSignifiˇndSize
);

	@dtoa/fast-dtoa.cc

28 
	~"c⁄fig.h
"

30 
	~"Á°-dtﬂ.h
"

32 
	~"ˇched-powîs.h
"

33 
	~"diy-Â.h
"

34 
	~"doubÀ.h
"

36 
«me•a˚
 
	gWTF
 {

38 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

46 c⁄° 
	gkMöimÆT¨gëExp⁄ít
 = -60;

47 c⁄° 
	gkMaximÆT¨gëExp⁄ít
 = -32;

65 
boﬁ
 
RoundWìd
(
Buf„rRe„ªn˚
<> 
buf„r
,

66 
Àngth
,

67 
uöt64_t
 
di°™˚_too_high_w
,

68 
uöt64_t
 
unß„_öãrvÆ
,

69 
uöt64_t
 
ª°
,

70 
uöt64_t
 
ãn_k≠∑
,

71 
uöt64_t
 
unô
) {

72 
uöt64_t
 
	gsmÆl_di°™˚
 = 
di°™˚_too_high_w
 - 
unô
;

73 
uöt64_t
 
	gbig_di°™˚
 = 
di°™˚_too_high_w
 + 
unô
;

145 
ASSERT
(
ª°
 <
unß„_öãrvÆ
);

146 
	gª°
 < 
	gsmÆl_di°™˚
 &&

147 
	gunß„_öãrvÆ
 - 
	gª°
 >
ãn_k≠∑
 &&

148 (
ª°
 + 
ãn_k≠∑
 < 
smÆl_di°™˚
 ||

149 
smÆl_di°™˚
 - 
ª°
 >ª° + 
ãn_k≠∑
 - small_distance)) {

150 
buf„r
[
Àngth
 - 1]--;

151 
	gª°
 +
ãn_k≠∑
;

157 i‡(
	gª°
 < 
	gbig_di°™˚
 &&

158 
	gunß„_öãrvÆ
 - 
	gª°
 >
ãn_k≠∑
 &&

159 (
ª°
 + 
ãn_k≠∑
 < 
big_di°™˚
 ||

160 
big_di°™˚
 - 
ª°
 >Ñe° + 
ãn_k≠∑
 - big_distance)) {

161  
Ál£
;

169  (2 * 
	gunô
 <
ª°
Ë&& (ª° <
unß„_öãrvÆ
 - 4 * 
unô
);

185 
boﬁ
 
RoundWìdCou¡ed
(
Buf„rRe„ªn˚
<> 
buf„r
,

186 
Àngth
,

187 
uöt64_t
 
ª°
,

188 
uöt64_t
 
ãn_k≠∑
,

189 
uöt64_t
 
unô
,

190 * 
k≠∑
) {

191 
ASSERT
(
ª°
 < 
ãn_k≠∑
);

198 i‡(
	gunô
 >
ãn_k≠∑
Ë 
Ál£
;

202 i‡(
	gãn_k≠∑
 - 
	gunô
 <
unô
Ë 
Ál£
;

204 i‡((
	gãn_k≠∑
 - 
	gª°
 >Ñe°Ë&& (ãn_k≠∑ - 2 *Ñe° >2 * 
unô
)) {

205  
åue
;

208 i‡((
	gª°
 > 
	gunô
Ë&& (
	gãn_k≠∑
 - (ª° - unôË<(
ª°
 - 
unô
))) {

210 
buf„r
[
Àngth
 - 1]++;

211 
	gi
 = 
Àngth
 - 1; i > 0; --i) {

212 i‡(
	gbuf„r
[
i
] != '0' + 10) ;

213 
	gbuf„r
[
i
] = '0';

214 
	gbuf„r
[
i
 - 1]++;

220 i‡(
	gbuf„r
[0] == '0' + 10) {

221 
buf„r
[0] = '1';

222 (*
	gk≠∑
) += 1;

224  
	gåue
;

226  
	gÁl£
;

230 c⁄° 
uöt32_t
 
	gkTí4
 = 10000;

231 c⁄° 
uöt32_t
 
	gkTí5
 = 100000;

232 c⁄° 
uöt32_t
 
	gkTí6
 = 1000000;

233 c⁄° 
uöt32_t
 
	gkTí7
 = 10000000;

234 c⁄° 
uöt32_t
 
	gkTí8
 = 100000000;

235 c⁄° 
uöt32_t
 
	gkTí9
 = 1000000000;

242 
Bigge°PowîTí
(
uöt32_t
 
numbî
,

243 
numbî_bôs
,

244 
uöt32_t
* 
powî
,

245 * 
exp⁄ít
) {

246 
ASSERT
(
numbî
 < (
uöt32_t
)(1 << (
numbî_bôs
 + 1)));

248 
	gnumbî_bôs
) {

252 i‡(
kTí9
 <
numbî
) {

253 *
powî
 = 
kTí9
;

254 *
	gexp⁄ít
 = 9;

257 
	gFALLTHROUGH
;

261 i‡(
kTí8
 <
numbî
) {

262 *
powî
 = 
kTí8
;

263 *
	gexp⁄ít
 = 8;

266 
	gFALLTHROUGH
;

270 i‡(
kTí7
 <
numbî
) {

271 *
powî
 = 
kTí7
;

272 *
	gexp⁄ít
 = 7;

275 
	gFALLTHROUGH
;

280 i‡(
kTí6
 <
numbî
) {

281 *
powî
 = 
kTí6
;

282 *
	gexp⁄ít
 = 6;

285 
	gFALLTHROUGH
;

289 i‡(
kTí5
 <
numbî
) {

290 *
powî
 = 
kTí5
;

291 *
	gexp⁄ít
 = 5;

294 
	gFALLTHROUGH
;

298 i‡(
kTí4
 <
numbî
) {

299 *
powî
 = 
kTí4
;

300 *
	gexp⁄ít
 = 4;

303 
	gFALLTHROUGH
;

308 i‡(1000 <
numbî
) {

309 *
powî
 = 1000;

310 *
	gexp⁄ít
 = 3;

313 
	gFALLTHROUGH
;

317 i‡(100 <
numbî
) {

318 *
powî
 = 100;

319 *
	gexp⁄ít
 = 2;

322 
	gFALLTHROUGH
;

326 i‡(10 <
numbî
) {

327 *
powî
 = 10;

328 *
	gexp⁄ít
 = 1;

331 
	gFALLTHROUGH
;

335 i‡(1 <
numbî
) {

336 *
powî
 = 1;

337 *
	gexp⁄ít
 = 0;

340 
	gFALLTHROUGH
;

342 *
powî
 = 0;

343 *
	gexp⁄ít
 = -1;

347 *
powî
 = 0;

348 *
	gexp⁄ít
 = 0;

349 
UNREACHABLE
();

396 
boﬁ
 
DigôGí
(
DiyFp
 
low
,

397 
DiyFp
 
w
,

398 
DiyFp
 
high
,

399 
Buf„rRe„ªn˚
<> 
buf„r
,

400 * 
Àngth
,

401 * 
k≠∑
) {

402 
ASSERT
(
low
.
e
(Ë=
w
.e(Ë&& w.e(Ë=
high
.e());

403 
ASSERT
(
low
.
f
(Ë+ 1 <
high
.f() - 1);

404 
ASSERT
(
kMöimÆT¨gëExp⁄ít
 <
w
.
e
(Ë&& w.e(Ë<
kMaximÆT¨gëExp⁄ít
);

416 
uöt64_t
 
	gunô
 = 1;

417 
DiyFp
 
	gtoo_low
 = DiyFp(
low
.
f
(Ë- 
unô
,Üow.
e
());

418 
DiyFp
 
	gtoo_high
 = DiyFp(
high
.
f
(Ë+ 
unô
, high.
e
());

421 
DiyFp
 
	gunß„_öãrvÆ
 = DiyFp::
Möus
(
too_high
, 
too_low
);

429 
DiyFp
 
	g⁄e
 = DiyFp(
°©ic_ˇ°
<
uöt64_t
>(1Ë<< -
w
.
e
(), w.e());

431 
uöt32_t
 
	göãgøls
 = 
°©ic_ˇ°
<uöt32_t>(
too_high
.
f
(Ë>> -
⁄e
.
e
());

433 
uöt64_t
 
	g‰a˘i⁄Æs
 = 
too_high
.
f
(Ë& (
⁄e
.f() - 1);

434 
uöt32_t
 
	gdivis‹
;

435 
	gdivis‹_exp⁄ít
;

436 
Bigge°PowîTí
(
öãgøls
, 
DiyFp
::
kSignifiˇndSize
 - (-
⁄e
.
e
()),

437 &
divis‹
, &
divis‹_exp⁄ít
);

438 *
	gk≠∑
 = 
divis‹_exp⁄ít
 + 1;

439 *
	gÀngth
 = 0;

444 *
	gk≠∑
 > 0) {

445 
	gdigô
 = 
öãgøls
 / 
divis‹
;

446 
	gbuf„r
[*
Àngth
] = '0' + 
digô
;

447 (*
	gÀngth
)++;

448 
	göãgøls
 %
divis‹
;

449 (*
	gk≠∑
)--;

452 
uöt64_t
 
	gª°
 =

453 (
°©ic_ˇ°
<
uöt64_t
>(
öãgøls
Ë<< -
⁄e
.
e
()Ë+ 
‰a˘i⁄Æs
;

456 i‡(
	gª°
 < 
	gunß„_öãrvÆ
.
f
()) {

459  
RoundWìd
(
buf„r
, *
Àngth
, 
DiyFp
::
Möus
(
too_high
, 
w
).
f
(),

460 
unß„_öãrvÆ
.
f
(), 
ª°
,

461 
°©ic_ˇ°
<
uöt64_t
>(
divis‹
Ë<< -
⁄e
.
e
(), 
unô
);

463 
	gdivis‹
 /= 10;

472 
ASSERT
(
⁄e
.
e
() >= -60);

473 
ASSERT
(
‰a˘i⁄Æs
 < 
⁄e
.
f
());

474 
ASSERT
(
UINT64_2PART_C
(0xFFFFFFFF, 
FFFFFFFF
Ë/ 10 >
⁄e
.
f
());

475 
	gåue
) {

476 
	g‰a˘i⁄Æs
 *= 10;

477 
	gunô
 *= 10;

478 
	gunß„_öãrvÆ
.
£t_f
(
unß„_öãrvÆ
.
f
() * 10);

480 
	gdigô
 = 
°©ic_ˇ°
<>(
‰a˘i⁄Æs
 >> -
⁄e
.
e
());

481 
	gbuf„r
[*
Àngth
] = '0' + 
digô
;

482 (*
	gÀngth
)++;

483 
	g‰a˘i⁄Æs
 &
⁄e
.
f
() - 1;

484 (*
	gk≠∑
)--;

485 i‡(
	g‰a˘i⁄Æs
 < 
	gunß„_öãrvÆ
.
f
()) {

486  
RoundWìd
(
buf„r
, *
Àngth
, 
DiyFp
::
Möus
(
too_high
, 
w
).
f
(Ë* 
unô
,

487 
unß„_öãrvÆ
.
f
(), 
‰a˘i⁄Æs
, 
⁄e
.f(), 
unô
);

522 
boﬁ
 
DigôGíCou¡ed
(
DiyFp
 
w
,

523 
ªque°ed_digôs
,

524 
Buf„rRe„ªn˚
<> 
buf„r
,

525 * 
Àngth
,

526 * 
k≠∑
) {

527 
ASSERT
(
kMöimÆT¨gëExp⁄ít
 <
w
.
e
(Ë&& w.e(Ë<
kMaximÆT¨gëExp⁄ít
);

528 
ASSERT
(
kMöimÆT¨gëExp⁄ít
 >= -60);

529 
ASSERT
(
kMaximÆT¨gëExp⁄ít
 <= -32);

532 
uöt64_t
 
	gw_îr‹
 = 1;

537 
DiyFp
 
	g⁄e
 = DiyFp(
°©ic_ˇ°
<
uöt64_t
>(1Ë<< -
w
.
e
(), w.e());

539 
uöt32_t
 
	göãgøls
 = 
°©ic_ˇ°
<uöt32_t>(
w
.
f
(Ë>> -
⁄e
.
e
());

541 
uöt64_t
 
	g‰a˘i⁄Æs
 = 
w
.
f
(Ë& (
⁄e
.f() - 1);

542 
uöt32_t
 
	gdivis‹
;

543 
	gdivis‹_exp⁄ít
;

544 
Bigge°PowîTí
(
öãgøls
, 
DiyFp
::
kSignifiˇndSize
 - (-
⁄e
.
e
()),

545 &
divis‹
, &
divis‹_exp⁄ít
);

546 *
	gk≠∑
 = 
divis‹_exp⁄ít
 + 1;

547 *
	gÀngth
 = 0;

553 *
	gk≠∑
 > 0) {

554 
	gdigô
 = 
öãgøls
 / 
divis‹
;

555 
	gbuf„r
[*
Àngth
] = '0' + 
digô
;

556 (*
	gÀngth
)++;

557 
	gªque°ed_digôs
--;

558 
	göãgøls
 %
divis‹
;

559 (*
	gk≠∑
)--;

562 i‡(
	gªque°ed_digôs
 == 0) ;

563 
	gdivis‹
 /= 10;

566 i‡(
	gªque°ed_digôs
 == 0) {

567 
uöt64_t
 
ª°
 =

568 (
°©ic_ˇ°
<
uöt64_t
>(
öãgøls
Ë<< -
⁄e
.
e
()Ë+ 
‰a˘i⁄Æs
;

569  
RoundWìdCou¡ed
(
buf„r
, *
Àngth
, 
ª°
,

570 
°©ic_ˇ°
<
uöt64_t
>(
divis‹
Ë<< -
⁄e
.
e
(), 
w_îr‹
,

571 
k≠∑
);

580 
ASSERT
(
⁄e
.
e
() >= -60);

581 
ASSERT
(
‰a˘i⁄Æs
 < 
⁄e
.
f
());

582 
ASSERT
(
UINT64_2PART_C
(0xFFFFFFFF, 
FFFFFFFF
Ë/ 10 >
⁄e
.
f
());

583 
	gªque°ed_digôs
 > 0 && 
	g‰a˘i⁄Æs
 > 
	gw_îr‹
) {

584 
	g‰a˘i⁄Æs
 *= 10;

585 
	gw_îr‹
 *= 10;

587 
	gdigô
 = 
°©ic_ˇ°
<>(
‰a˘i⁄Æs
 >> -
⁄e
.
e
());

588 
	gbuf„r
[*
Àngth
] = '0' + 
digô
;

589 (*
	gÀngth
)++;

590 
	gªque°ed_digôs
--;

591 
	g‰a˘i⁄Æs
 &
⁄e
.
f
() - 1;

592 (*
	gk≠∑
)--;

594 i‡(
	gªque°ed_digôs
 !0Ë 
Ál£
;

595  
RoundWìdCou¡ed
(
buf„r
, *
Àngth
, 
‰a˘i⁄Æs
, 
⁄e
.
f
(), 
w_îr‹
,

596 
k≠∑
);

611 
boﬁ
 
Grisu3
(
v
,

612 
Buf„rRe„ªn˚
<> 
buf„r
,

613 * 
Àngth
,

614 * 
decimÆ_exp⁄ít
) {

615 
DiyFp
 
	gw
 = 
DoubÀ
(
v
).
AsN‹mÆizedDiyFp
();

620 
DiyFp
 
	gbound¨y_möus
, 
	gbound¨y_∂us
;

621 
DoubÀ
(
v
).
N‹mÆizedBound¨õs
(&
bound¨y_möus
, &
bound¨y_∂us
);

622 
ASSERT
(
bound¨y_∂us
.
e
(Ë=
w
.e());

623 
DiyFp
 
	gãn_mk
;

624 
	gmk
;

625 
	gãn_mk_möimÆ_bö¨y_exp⁄ít
 =

626 
kMöimÆT¨gëExp⁄ít
 - (
w
.
e
(Ë+ 
DiyFp
::
kSignifiˇndSize
);

627 
	gãn_mk_maximÆ_bö¨y_exp⁄ít
 =

628 
kMaximÆT¨gëExp⁄ít
 - (
w
.
e
(Ë+ 
DiyFp
::
kSignifiˇndSize
);

629 
	gPowîsOfTíCache
::
GëCachedPowîF‹Bö¨yExp⁄ítR™ge
(

630 
ãn_mk_möimÆ_bö¨y_exp⁄ít
,

631 
ãn_mk_maximÆ_bö¨y_exp⁄ít
,

632 &
ãn_mk
, &
mk
);

633 
ASSERT
((
kMöimÆT¨gëExp⁄ít
 <
w
.
e
(Ë+ 
ãn_mk
.e() +

634 
DiyFp
::
kSignifiˇndSize
) &&

635 (
kMaximÆT¨gëExp⁄ít
 >
w
.
e
(Ë+ 
ãn_mk
.e() +

636 
DiyFp
::
kSignifiˇndSize
));

646 
DiyFp
 
	gsˇÀd_w
 = DiyFp::
Times
(
w
, 
ãn_mk
);

647 
ASSERT
(
sˇÀd_w
.
e
() ==

648 
bound¨y_∂us
.
e
(Ë+ 
ãn_mk
.e(Ë+ 
DiyFp
::
kSignifiˇndSize
);

654 
DiyFp
 
	gsˇÀd_bound¨y_möus
 = DiyFp::
Times
(
bound¨y_möus
, 
ãn_mk
);

655 
DiyFp
 
	gsˇÀd_bound¨y_∂us
 = DiyFp::
Times
(
bound¨y_∂us
, 
ãn_mk
);

663 
	gk≠∑
;

664 
boﬁ
 
	gªsu…
 = 
DigôGí
(
sˇÀd_bound¨y_möus
, 
sˇÀd_w
, 
sˇÀd_bound¨y_∂us
,

665 
buf„r
, 
Àngth
, &
k≠∑
);

666 *
	gdecimÆ_exp⁄ít
 = -
mk
 + 
k≠∑
;

667  
	gªsu…
;

676 
boﬁ
 
Grisu3Cou¡ed
(
v
,

677 
ªque°ed_digôs
,

678 
Buf„rRe„ªn˚
<> 
buf„r
,

679 * 
Àngth
,

680 * 
decimÆ_exp⁄ít
) {

681 
DiyFp
 
	gw
 = 
DoubÀ
(
v
).
AsN‹mÆizedDiyFp
();

682 
DiyFp
 
	gãn_mk
;

683 
	gmk
;

684 
	gãn_mk_möimÆ_bö¨y_exp⁄ít
 =

685 
kMöimÆT¨gëExp⁄ít
 - (
w
.
e
(Ë+ 
DiyFp
::
kSignifiˇndSize
);

686 
	gãn_mk_maximÆ_bö¨y_exp⁄ít
 =

687 
kMaximÆT¨gëExp⁄ít
 - (
w
.
e
(Ë+ 
DiyFp
::
kSignifiˇndSize
);

688 
	gPowîsOfTíCache
::
GëCachedPowîF‹Bö¨yExp⁄ítR™ge
(

689 
ãn_mk_möimÆ_bö¨y_exp⁄ít
,

690 
ãn_mk_maximÆ_bö¨y_exp⁄ít
,

691 &
ãn_mk
, &
mk
);

692 
ASSERT
((
kMöimÆT¨gëExp⁄ít
 <
w
.
e
(Ë+ 
ãn_mk
.e() +

693 
DiyFp
::
kSignifiˇndSize
) &&

694 (
kMaximÆT¨gëExp⁄ít
 >
w
.
e
(Ë+ 
ãn_mk
.e() +

695 
DiyFp
::
kSignifiˇndSize
));

705 
DiyFp
 
	gsˇÀd_w
 = DiyFp::
Times
(
w
, 
ãn_mk
);

712 
	gk≠∑
;

713 
boﬁ
 
	gªsu…
 = 
DigôGíCou¡ed
(
sˇÀd_w
, 
ªque°ed_digôs
,

714 
buf„r
, 
Àngth
, &
k≠∑
);

715 *
	gdecimÆ_exp⁄ít
 = -
mk
 + 
k≠∑
;

716  
	gªsu…
;

720 
boﬁ
 
Fa°Dtﬂ
(
v
,

721 
Fa°DtﬂMode
 
mode
,

722 
ªque°ed_digôs
,

723 
Buf„rRe„ªn˚
<> 
buf„r
,

724 * 
Àngth
,

725 * 
decimÆ_poöt
) {

726 
ASSERT
(
v
 > 0);

727 
ASSERT
(!
DoubÀ
(
v
).
IsS≥cül
());

729 
boﬁ
 
	gªsu…
 = 
Ál£
;

730 
	gdecimÆ_exp⁄ít
 = 0;

731 
	gmode
) {

732 
	gFAST_DTOA_SHORTEST
:

733 
ªsu…
 = 
Grisu3
(
v
, 
buf„r
, 
Àngth
, &
decimÆ_exp⁄ít
);

735 
	gFAST_DTOA_PRECISION
:

736 
ªsu…
 = 
Grisu3Cou¡ed
(
v
, 
ªque°ed_digôs
,

737 
buf„r
, 
Àngth
, &
decimÆ_exp⁄ít
);

740 
UNREACHABLE
();

742 i‡(
	gªsu…
) {

743 *
	gdecimÆ_poöt
 = *
Àngth
 + 
decimÆ_exp⁄ít
;

744 
	gbuf„r
[*
Àngth
] = '\0';

746  
	gªsu…
;

	@dtoa/fast-dtoa.h

28 #i‚de‡
DOUBLE_CONVERSION_FAST_DTOA_H_


29 
	#DOUBLE_CONVERSION_FAST_DTOA_H_


	)

31 
	~"utûs.h
"

33 
«me•a˚
 
	gWTF
 {

35 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

37 
	eFa°DtﬂMode
 {

41 
	gFAST_DTOA_SHORTEST
,

44 
	gFAST_DTOA_PRECISION


49 c⁄° 
	gkFa°DtﬂMaximÆLígth
 = 17;

77 
boﬁ
 
Fa°Dtﬂ
(
d
,

78 
Fa°DtﬂMode
 
mode
,

79 
ªque°ed_digôs
,

80 
Buf„rRe„ªn˚
<> 
buf„r
,

81 * 
Àngth
,

82 * 
decimÆ_poöt
);

	@dtoa/fixed-dtoa.cc

28 
	~"c⁄fig.h
"

30 
	~<m©h.h
>

32 
	~"fixed-dtﬂ.h
"

33 
	~"doubÀ.h
"

35 
«me•a˚
 
	gWTF
 {

37 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

41 ˛as†
	cUI¡128
 {

42 
	gpublic
:

43 
UI¡128
(Ë: 
high_bôs_
(0), 
low_bôs_
(0) { }

44 
UI¡128
(
uöt64_t
 
high
, uöt64_à
low
Ë: 
high_bôs_
(high), 
low_bôs_
(low) { }

46 
Mu…ùly
(
uöt32_t
 
mu…ùliˇnd
) {

47 
uöt64_t
 
	gaccumuœt‹
;

49 
	gaccumuœt‹
 = (
low_bôs_
 & 
kMask32
Ë* 
mu…ùliˇnd
;

50 
uöt32_t
 
	g∑π
 = 
°©ic_ˇ°
<uöt32_t>(
accumuœt‹
 & 
kMask32
);

51 
	gaccumuœt‹
 >>= 32;

52 
	gaccumuœt‹
 = 
accumuœt‹
 + (
low_bôs_
 >> 32Ë* 
mu…ùliˇnd
;

53 
	glow_bôs_
 = (
accumuœt‹
 << 32Ë+ 
∑π
;

54 
	gaccumuœt‹
 >>= 32;

55 
	gaccumuœt‹
 = 
accumuœt‹
 + (
high_bôs_
 & 
kMask32
Ë* 
mu…ùliˇnd
;

56 
	g∑π
 = 
°©ic_ˇ°
<
uöt32_t
>(
accumuœt‹
 & 
kMask32
);

57 
	gaccumuœt‹
 >>= 32;

58 
	gaccumuœt‹
 = 
accumuœt‹
 + (
high_bôs_
 >> 32Ë* 
mu…ùliˇnd
;

59 
	ghigh_bôs_
 = (
accumuœt‹
 << 32Ë+ 
∑π
;

60 
ASSERT
((
accumuœt‹
 >> 32) == 0);

63 
Shi·
(
shi·_amou¡
) {

64 
ASSERT
(-64 <
shi·_amou¡
 && shift_amount <= 64);

65 i‡(
	gshi·_amou¡
 == 0) {

67 } i‡(
	gshi·_amou¡
 == -64) {

68 
high_bôs_
 = 
low_bôs_
;

69 
	glow_bôs_
 = 0;

70 } i‡(
	gshi·_amou¡
 == 64) {

71 
low_bôs_
 = 
high_bôs_
;

72 
	ghigh_bôs_
 = 0;

73 } i‡(
	gshi·_amou¡
 <= 0) {

74 
high_bôs_
 <<-
shi·_amou¡
;

75 
	ghigh_bôs_
 +
low_bôs_
 >> (64 + 
shi·_amou¡
);

76 
	glow_bôs_
 <<-
shi·_amou¡
;

78 
	glow_bôs_
 >>
shi·_amou¡
;

79 
	glow_bôs_
 +
high_bôs_
 << (64 - 
shi·_amou¡
);

80 
	ghigh_bôs_
 >>
shi·_amou¡
;

86 
DivModPowîOf2
(
powî
) {

87 i‡(
	gpowî
 >= 64) {

88 
ªsu…
 = 
°©ic_ˇ°
<>(
high_bôs_
 >> (
powî
 - 64));

89 
	ghigh_bôs_
 -
°©ic_ˇ°
<
uöt64_t
>(
ªsu…
Ë<< (
powî
 - 64);

90  
	gªsu…
;

92 
uöt64_t
 
	g∑π_low
 = 
low_bôs_
 >> 
powî
;

93 
uöt64_t
 
	g∑π_high
 = 
high_bôs_
 << (64 - 
powî
);

94 
	gªsu…
 = 
°©ic_ˇ°
<>(
∑π_low
 + 
∑π_high
);

95 
	ghigh_bôs_
 = 0;

96 
	glow_bôs_
 -
∑π_low
 << 
powî
;

97  
	gªsu…
;

101 
boﬁ
 
IsZîo
() const {

102  
	ghigh_bôs_
 =0 && 
low_bôs_
 == 0;

105 
BôAt
(
posôi⁄
) {

106 i‡(
	gposôi⁄
 >= 64) {

107  
°©ic_ˇ°
<>(
high_bôs_
 >> (
posôi⁄
 - 64)) & 1;

109  
	g°©ic_ˇ°
<>(
	glow_bôs_
 >> 
	gposôi⁄
) & 1;

113 
	g¥iv©e
:

114 c⁄° 
uöt64_t
 
kMask32
 = 0xFFFFFFFF;

116 
uöt64_t
 
	ghigh_bôs_
;

117 
uöt64_t
 
	glow_bôs_
;

121 c⁄° 
	gkDoubÀSignifiˇndSize
 = 53;

124 
FûlDigôs32FixedLígth
(
uöt32_t
 
numbî
, 
ªque°ed_Àngth
,

125 
Buf„rRe„ªn˚
<> 
buf„r
, * 
Àngth
) {

126 
	gi
 = 
ªque°ed_Àngth
 - 1; i >= 0; --i) {

127 
	gbuf„r
[(*
Àngth
Ë+ 
i
] = '0' + 
numbî
 % 10;

128 
	gnumbî
 /= 10;

130 *
	gÀngth
 +
ªque°ed_Àngth
;

134 
FûlDigôs32
(
uöt32_t
 
numbî
, 
Buf„rRe„ªn˚
<> 
buf„r
, * 
Àngth
) {

135 
	gnumbî_Àngth
 = 0;

137 
	gnumbî
 != 0) {

138 
digô
 = 
numbî
 % 10;

139 
	gnumbî
 /= 10;

140 
	gbuf„r
[(*
Àngth
Ë+ 
numbî_Àngth
] = '0' + 
digô
;

141 
	gnumbî_Àngth
++;

144 
	gi
 = *
Àngth
;

145 
	gj
 = *
Àngth
 + 
numbî_Àngth
 - 1;

146 
	gi
 < 
	gj
) {

147 
	gtmp
 = 
buf„r
[
i
];

148 
	gbuf„r
[
i
] = 
buf„r
[
j
];

149 
	gbuf„r
[
j
] = 
tmp
;

150 
	gi
++;

151 
	gj
--;

153 *
	gÀngth
 +
numbî_Àngth
;

157 
FûlDigôs64FixedLígth
(
uöt64_t
 
numbî
, 
ªque°ed_Àngth
,

158 
Buf„rRe„ªn˚
<> 
buf„r
, * 
Àngth
) {

159 
UNUSED_PARAM
(
ªque°ed_Àngth
);

160 c⁄° 
uöt32_t
 
	gkTí7
 = 10000000;

162 
uöt32_t
 
	g∑π2
 = 
°©ic_ˇ°
<uöt32_t>(
numbî
 % 
kTí7
);

163 
	gnumbî
 /
kTí7
;

164 
uöt32_t
 
	g∑π1
 = 
°©ic_ˇ°
<uöt32_t>(
numbî
 % 
kTí7
);

165 
uöt32_t
 
	g∑π0
 = 
°©ic_ˇ°
<uöt32_t>(
numbî
 / 
kTí7
);

167 
FûlDigôs32FixedLígth
(
∑π0
, 3, 
buf„r
, 
Àngth
);

168 
FûlDigôs32FixedLígth
(
∑π1
, 7, 
buf„r
, 
Àngth
);

169 
FûlDigôs32FixedLígth
(
∑π2
, 7, 
buf„r
, 
Àngth
);

173 
FûlDigôs64
(
uöt64_t
 
numbî
, 
Buf„rRe„ªn˚
<> 
buf„r
, * 
Àngth
) {

174 c⁄° 
uöt32_t
 
	gkTí7
 = 10000000;

176 
uöt32_t
 
	g∑π2
 = 
°©ic_ˇ°
<uöt32_t>(
numbî
 % 
kTí7
);

177 
	gnumbî
 /
kTí7
;

178 
uöt32_t
 
	g∑π1
 = 
°©ic_ˇ°
<uöt32_t>(
numbî
 % 
kTí7
);

179 
uöt32_t
 
	g∑π0
 = 
°©ic_ˇ°
<uöt32_t>(
numbî
 / 
kTí7
);

181 i‡(
	g∑π0
 != 0) {

182 
FûlDigôs32
(
∑π0
, 
buf„r
, 
Àngth
);

183 
FûlDigôs32FixedLígth
(
∑π1
, 7, 
buf„r
, 
Àngth
);

184 
FûlDigôs32FixedLígth
(
∑π2
, 7, 
buf„r
, 
Àngth
);

185 } i‡(
	g∑π1
 != 0) {

186 
FûlDigôs32
(
∑π1
, 
buf„r
, 
Àngth
);

187 
FûlDigôs32FixedLígth
(
∑π2
, 7, 
buf„r
, 
Àngth
);

189 
FûlDigôs32
(
∑π2
, 
buf„r
, 
Àngth
);

194 
RoundUp
(
Buf„rRe„ªn˚
<> 
buf„r
, * 
Àngth
, * 
decimÆ_poöt
) {

196 i‡(*
	gÀngth
 == 0) {

197 
buf„r
[0] = '1';

198 *
	gdecimÆ_poöt
 = 1;

199 *
	gÀngth
 = 1;

204 
	gbuf„r
[(*
Àngth
) - 1]++;

205 
	gi
 = (*
Àngth
) - 1; i > 0; --i) {

206 i‡(
	gbuf„r
[
i
] != '0' + 10) {

209 
	gbuf„r
[
i
] = '0';

210 
	gbuf„r
[
i
 - 1]++;

217 i‡(
	gbuf„r
[0] == '0' + 10) {

218 
buf„r
[0] = '1';

219 (*
	gdecimÆ_poöt
)++;

235 
FûlFø˘i⁄Æs
(
uöt64_t
 
‰a˘i⁄Æs
, 
exp⁄ít
,

236 
‰a˘i⁄Æ_cou¡
, 
Buf„rRe„ªn˚
<> 
buf„r
,

237 * 
Àngth
, * 
decimÆ_poöt
) {

238 
ASSERT
(-128 <
exp⁄ít
 &&Éxponent <= 0);

242 i‡(-
	gexp⁄ít
 <= 64) {

244 
ASSERT
(
‰a˘i⁄Æs
 >> 56 == 0);

245 
	gpoöt
 = -
exp⁄ít
;

246 
	gi
 = 0; i < 
	g‰a˘i⁄Æ_cou¡
; ++i) {

247 i‡(
	g‰a˘i⁄Æs
 == 0) ;

258 
	g‰a˘i⁄Æs
 *= 5;

259 
	gpoöt
--;

260 
	gdigô
 = 
°©ic_ˇ°
<>(
‰a˘i⁄Æs
 >> 
poöt
);

261 
	gbuf„r
[*
Àngth
] = '0' + 
digô
;

262 (*
	gÀngth
)++;

263 
	g‰a˘i⁄Æs
 -
°©ic_ˇ°
<
uöt64_t
>(
digô
Ë<< 
poöt
;

266 i‡(((
	g‰a˘i⁄Æs
 >> (
	gpoöt
 - 1)) & 1) == 1) {

267 
RoundUp
(
buf„r
, 
Àngth
, 
decimÆ_poöt
);

270 
ASSERT
(64 < -
exp⁄ít
 && -exponent <= 128);

271 
UI¡128
 
	g‰a˘i⁄Æs128
 = UI¡128(
‰a˘i⁄Æs
, 0);

272 
	g‰a˘i⁄Æs128
.
Shi·
(-
exp⁄ít
 - 64);

273 
	gpoöt
 = 128;

274 
	gi
 = 0; i < 
	g‰a˘i⁄Æ_cou¡
; ++i) {

275 i‡(
	g‰a˘i⁄Æs128
.
IsZîo
()) ;

279 
	g‰a˘i⁄Æs128
.
Mu…ùly
(5);

280 
	gpoöt
--;

281 
	gdigô
 = 
‰a˘i⁄Æs128
.
DivModPowîOf2
(
poöt
);

282 
	gbuf„r
[*
Àngth
] = '0' + 
digô
;

283 (*
	gÀngth
)++;

285 i‡(
	g‰a˘i⁄Æs128
.
BôAt
(
poöt
 - 1) == 1) {

286 
RoundUp
(
buf„r
, 
Àngth
, 
decimÆ_poöt
);

294 
TrimZîos
(
Buf„rRe„ªn˚
<> 
buf„r
, * 
Àngth
, * 
decimÆ_poöt
) {

295 *
	gÀngth
 > 0 && 
	gbuf„r
[(*
Àngth
) - 1] == '0') {

296 (*
Àngth
)--;

298 
	gfú°_n⁄_zîo
 = 0;

299 
	gfú°_n⁄_zîo
 < *
	gÀngth
 && 
	gbuf„r
[
fú°_n⁄_zîo
] == '0') {

300 
fú°_n⁄_zîo
++;

302 i‡(
	gfú°_n⁄_zîo
 != 0) {

303 
i
 = 
fú°_n⁄_zîo
; 
	gi
 < *
	gÀngth
; ++i) {

304 
	gbuf„r
[
i
 - 
fú°_n⁄_zîo
] = 
buf„r
[i];

306 *
	gÀngth
 -
fú°_n⁄_zîo
;

307 *
	gdecimÆ_poöt
 -
fú°_n⁄_zîo
;

312 
boﬁ
 
Fa°FixedDtﬂ
(
v
,

313 
‰a˘i⁄Æ_cou¡
,

314 
Buf„rRe„ªn˚
<> 
buf„r
,

315 * 
Àngth
,

316 * 
decimÆ_poöt
) {

317 c⁄° 
uöt32_t
 
	gkMaxUI¡32
 = 0xFFFFFFFF;

318 
uöt64_t
 
	gsignifiˇnd
 = 
DoubÀ
(
v
).
Signifiˇnd
();

319 
	gexp⁄ít
 = 
DoubÀ
(
v
).
Exp⁄ít
();

325 i‡(
	gexp⁄ít
 > 20Ë 
	gÁl£
;

326 i‡(
	g‰a˘i⁄Æ_cou¡
 > 20Ë 
	gÁl£
;

327 *
	gÀngth
 = 0;

331 i‡(
	gexp⁄ít
 + 
	gkDoubÀSignifiˇndSize
 > 64) {

340 c⁄° 
uöt64_t
 
	gkFive17
 = 
UINT64_2PART_C
(0xB1, 
A2BC2EC5
);

341 
uöt64_t
 
	gdivis‹
 = 
kFive17
;

342 
	gdivis‹_powî
 = 17;

343 
uöt64_t
 
	gdividíd
 = 
signifiˇnd
;

344 
uöt32_t
 
	gquŸõ¡
;

345 
uöt64_t
 
	gªmaödî
;

355 i‡(
	gexp⁄ít
 > 
	gdivis‹_powî
) {

357 
	gdividíd
 <<
exp⁄ít
 - 
divis‹_powî
;

358 
	gquŸõ¡
 = 
°©ic_ˇ°
<
uöt32_t
>(
dividíd
 / 
divis‹
);

359 
	gªmaödî
 = (
dividíd
 % 
divis‹
Ë<< 
divis‹_powî
;

361 
	gdivis‹
 <<
divis‹_powî
 - 
exp⁄ít
;

362 
	gquŸõ¡
 = 
°©ic_ˇ°
<
uöt32_t
>(
dividíd
 / 
divis‹
);

363 
	gªmaödî
 = (
dividíd
 % 
divis‹
Ë<< 
exp⁄ít
;

365 
FûlDigôs32
(
quŸõ¡
, 
buf„r
, 
Àngth
);

366 
FûlDigôs64FixedLígth
(
ªmaödî
, 
divis‹_powî
, 
buf„r
, 
Àngth
);

367 *
	gdecimÆ_poöt
 = *
Àngth
;

368 } i‡(
	gexp⁄ít
 >= 0) {

370 
signifiˇnd
 <<
exp⁄ít
;

371 
FûlDigôs64
(
signifiˇnd
, 
buf„r
, 
Àngth
);

372 *
	gdecimÆ_poöt
 = *
Àngth
;

373 } i‡(
	gexp⁄ít
 > -
	gkDoubÀSignifiˇndSize
) {

375 
uöt64_t
 
	göãgøls
 = 
signifiˇnd
 >> -
exp⁄ít
;

376 
uöt64_t
 
	g‰a˘i⁄Æs
 = 
signifiˇnd
 - (
öãgøls
 << -
exp⁄ít
);

377 i‡(
	göãgøls
 > 
	gkMaxUI¡32
) {

378 
FûlDigôs64
(
öãgøls
, 
buf„r
, 
Àngth
);

380 
FûlDigôs32
(
°©ic_ˇ°
<
uöt32_t
>(
öãgøls
), 
buf„r
, 
Àngth
);

382 *
	gdecimÆ_poöt
 = *
Àngth
;

383 
FûlFø˘i⁄Æs
(
‰a˘i⁄Æs
, 
exp⁄ít
, 
‰a˘i⁄Æ_cou¡
,

384 
buf„r
, 
Àngth
, 
decimÆ_poöt
);

385 } i‡(
	gexp⁄ít
 < -128) {

388 
ASSERT
(
‰a˘i⁄Æ_cou¡
 <= 20);

389 
	gbuf„r
[0] = '\0';

390 *
	gÀngth
 = 0;

391 *
	gdecimÆ_poöt
 = -
‰a˘i⁄Æ_cou¡
;

393 *
	gdecimÆ_poöt
 = 0;

394 
FûlFø˘i⁄Æs
(
signifiˇnd
, 
exp⁄ít
, 
‰a˘i⁄Æ_cou¡
,

395 
buf„r
, 
Àngth
, 
decimÆ_poöt
);

397 
TrimZîos
(
buf„r
, 
Àngth
, 
decimÆ_poöt
);

398 
	gbuf„r
[*
Àngth
] = '\0';

399 i‡((*
	gÀngth
) == 0) {

402 *
decimÆ_poöt
 = -
‰a˘i⁄Æ_cou¡
;

404  
	gåue
;

	@dtoa/fixed-dtoa.h

28 #i‚de‡
DOUBLE_CONVERSION_FIXED_DTOA_H_


29 
	#DOUBLE_CONVERSION_FIXED_DTOA_H_


	)

31 
	~"utûs.h
"

33 
«me•a˚
 
	gWTF
 {

35 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

53 
boﬁ
 
Fa°FixedDtﬂ
(
v
, 
‰a˘i⁄Æ_cou¡
,

54 
Buf„rRe„ªn˚
<> 
buf„r
, * 
Àngth
, * 
decimÆ_poöt
);

	@dtoa/strtod.cc

28 
	~"c⁄fig.h
"

30 
	~<°d¨g.h
>

31 
	~<limôs.h
>

33 
	~"°πod.h
"

34 
	~"bignum.h
"

35 
	~"ˇched-powîs.h
"

36 
	~"doubÀ.h
"

38 
«me•a˚
 
	gWTF
 {

40 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

42 #i‡
deföed
(
DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS
)

46 c⁄° 
	gkMaxExa˘DoubÀI¡egîDecimÆDigôs
 = 15;

49 c⁄° 
	gkMaxUöt64DecimÆDigôs
 = 19;

57 c⁄° 
	gkMaxDecimÆPowî
 = 309;

58 c⁄° 
	gkMöDecimÆPowî
 = -324;

61 c⁄° 
uöt64_t
 
	gkMaxUöt64
 = 
UINT64_2PART_C
(0xFFFFFFFF, 
FFFFFFFF
);

63 #i‡
deföed
(
DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS
)

64 c⁄° 
	gexa˘_powîs_of_ãn
[] = {

90 c⁄° 
	gkExa˘PowîsOfTíSize
 = 
ARRAY_SIZE
(
exa˘_powîs_of_ãn
);

96 c⁄° 
	gkMaxSignifiˇ¡DecimÆDigôs
 = 780;

98 
	gBuf„rRe„ªn˚
<c⁄° > 
TrimLódögZîos
(
Buf„rRe„ªn˚
<c⁄° > 
buf„r
) {

99 
	gi
 = 0; i < 
	gbuf„r
.
Àngth
(); i++) {

100 i‡(
	gbuf„r
[
i
] != '0') {

101  
buf„r
.
SubBuf„rRe„ªn˚
(
i
, buf„r.
Àngth
());

104  
	gBuf„rRe„ªn˚
<c⁄° >(
	gbuf„r
.
°¨t
(), 0);

108 
	gBuf„rRe„ªn˚
<c⁄° > 
TrimTøûögZîos
(
Buf„rRe„ªn˚
<c⁄° > 
buf„r
) {

109 
	gi
 = 
buf„r
.
Àngth
() - 1; i >= 0; --i) {

110 i‡(
	gbuf„r
[
i
] != '0') {

111  
buf„r
.
SubBuf„rRe„ªn˚
(0, 
i
 + 1);

114  
	gBuf„rRe„ªn˚
<c⁄° >(
	gbuf„r
.
°¨t
(), 0);

118 
TrimToMaxSignifiˇ¡Digôs
(
Buf„rRe„ªn˚
<c⁄° > 
buf„r
,

119 
exp⁄ít
,

120 * 
signifiˇ¡_buf„r
,

121 * 
signifiˇ¡_exp⁄ít
) {

122 
	gi
 = 0; i < 
	gkMaxSignifiˇ¡DecimÆDigôs
 - 1; ++i) {

123 
	gsignifiˇ¡_buf„r
[
i
] = 
buf„r
[i];

127 
ASSERT
(
buf„r
[buf„r.
Àngth
() - 1] != '0');

130 
	gsignifiˇ¡_buf„r
[
kMaxSignifiˇ¡DecimÆDigôs
 - 1] = '1';

131 *
	gsignifiˇ¡_exp⁄ít
 =

132 
exp⁄ít
 + (
buf„r
.
Àngth
(Ë- 
kMaxSignifiˇ¡DecimÆDigôs
);

140 
uöt64_t
 
RódUöt64
(
Buf„rRe„ªn˚
<c⁄° > 
buf„r
,

141 * 
numbî_of_ªad_digôs
) {

142 
uöt64_t
 
	gªsu…
 = 0;

143 
	gi
 = 0;

144 
	gi
 < 
	gbuf„r
.
Àngth
(Ë&& 
	gªsu…
 <(
kMaxUöt64
 / 10 - 1)) {

145 
digô
 = 
buf„r
[
i
++] - '0';

146 
ASSERT
(0 <
digô
 && digit <= 9);

147 
	gªsu…
 = 10 * 
ªsu…
 + 
digô
;

149 *
	gnumbî_of_ªad_digôs
 = 
i
;

150  
	gªsu…
;

158 
RódDiyFp
(
Buf„rRe„ªn˚
<c⁄° > 
buf„r
,

159 
DiyFp
* 
ªsu…
,

160 * 
ªmaöög_decimÆs
) {

161 
	gªad_digôs
;

162 
uöt64_t
 
	gsignifiˇnd
 = 
RódUöt64
(
buf„r
, &
ªad_digôs
);

163 i‡(
	gbuf„r
.
Àngth
(Ë=
ªad_digôs
) {

164 *
ªsu…
 = 
DiyFp
(
signifiˇnd
, 0);

165 *
	gªmaöög_decimÆs
 = 0;

168 i‡(
	gbuf„r
[
ªad_digôs
] >= '5') {

169 
signifiˇnd
++;

172 
	gexp⁄ít
 = 0;

173 *
	gªsu…
 = 
DiyFp
(
signifiˇnd
, 
exp⁄ít
);

174 *
	gªmaöög_decimÆs
 = 
buf„r
.
Àngth
(Ë- 
ªad_digôs
;

179 
boﬁ
 
DoubÀSåtod
(
Buf„rRe„ªn˚
<c⁄° > 
åimmed
,

180 
exp⁄ít
,

181 * 
ªsu…
) {

182 #i‡!
deföed
(
DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS
)

183 
UNUSED_PARAM
(
åimmed
);

184 
UNUSED_PARAM
(
exp⁄ít
);

185 
UNUSED_PARAM
(
ªsu…
);

192  
	gÁl£
;

194 i‡(
	gåimmed
.
Àngth
(Ë<
kMaxExa˘DoubÀI¡egîDecimÆDigôs
) {

195 
ªad_digôs
;

202 i‡(
	gexp⁄ít
 < 0 && -exp⁄íà< 
	gkExa˘PowîsOfTíSize
) {

204 *
	gªsu…
 = 
°©ic_ˇ°
<>(
RódUöt64
(
åimmed
, &
ªad_digôs
));

205 
ASSERT
(
ªad_digôs
 =
åimmed
.
Àngth
());

206 *
	gªsu…
 /
exa˘_powîs_of_ãn
[-
exp⁄ít
];

207  
	gåue
;

209 i‡(0 <
exp⁄ít
 &&Éxp⁄íà< 
kExa˘PowîsOfTíSize
) {

211 *
ªsu…
 = 
°©ic_ˇ°
<>(
RódUöt64
(
åimmed
, &
ªad_digôs
));

212 
ASSERT
(
ªad_digôs
 =
åimmed
.
Àngth
());

213 *
	gªsu…
 *
exa˘_powîs_of_ãn
[
exp⁄ít
];

214  
	gåue
;

216 
	gªmaöög_digôs
 =

217 
kMaxExa˘DoubÀI¡egîDecimÆDigôs
 - 
åimmed
.
Àngth
();

218 i‡((0 <
exp⁄ít
) &&

219 (
exp⁄ít
 - 
ªmaöög_digôs
 < 
kExa˘PowîsOfTíSize
)) {

223 *
ªsu…
 = 
°©ic_ˇ°
<>(
RódUöt64
(
åimmed
, &
ªad_digôs
));

224 
ASSERT
(
ªad_digôs
 =
åimmed
.
Àngth
());

225 *
	gªsu…
 *
exa˘_powîs_of_ãn
[
ªmaöög_digôs
];

226 *
	gªsu…
 *
exa˘_powîs_of_ãn
[
exp⁄ít
 - 
ªmaöög_digôs
];

227  
	gåue
;

230  
	gÁl£
;

237 
DiyFp
 
Adju°mítPowîOfTí
(
exp⁄ít
) {

238 
ASSERT
(0 < 
exp⁄ít
);

239 
ASSERT
(
exp⁄ít
 < 
PowîsOfTíCache
::
kDecimÆExp⁄ítDi°™˚
);

242 
ASSERT
(
PowîsOfTíCache
::
kDecimÆExp⁄ítDi°™˚
 == 8);

243 
	gexp⁄ít
) {

244 1:  
DiyFp
(
UINT64_2PART_C
(0xa0000000, 00000000), -60);

245 2:  
DiyFp
(
UINT64_2PART_C
(0xc8000000, 00000000), -57);

246 3:  
DiyFp
(
UINT64_2PART_C
(0xfa000000, 00000000), -54);

247 4:  
DiyFp
(
UINT64_2PART_C
(0x9c400000, 00000000), -50);

248 5:  
DiyFp
(
UINT64_2PART_C
(0xc3500000, 00000000), -47);

249 6:  
DiyFp
(
UINT64_2PART_C
(0xf4240000, 00000000), -44);

250 7:  
DiyFp
(
UINT64_2PART_C
(0x98968000, 00000000), -40);

252 
UNREACHABLE
();

253  
DiyFp
(0, 0);

261 
boﬁ
 
DiyFpSåtod
(
Buf„rRe„ªn˚
<c⁄° > 
buf„r
,

262 
exp⁄ít
,

263 * 
ªsu…
) {

264 
DiyFp
 
	göput
;

265 
	gªmaöög_decimÆs
;

266 
RódDiyFp
(
buf„r
, &
öput
, &
ªmaöög_decimÆs
);

272 c⁄° 
	gkDíomö©‹Log
 = 3;

273 c⁄° 
	gkDíomö©‹
 = 1 << 
kDíomö©‹Log
;

275 
	gexp⁄ít
 +
ªmaöög_decimÆs
;

276 
	gîr‹
 = (
ªmaöög_decimÆs
 =0 ? 0 : 
kDíomö©‹
 / 2);

278 
	gﬁd_e
 = 
öput
.
e
();

279 
	göput
.
N‹mÆize
();

280 
	gîr‹
 <<
ﬁd_e
 - 
öput
.
e
();

282 
ASSERT
(
exp⁄ít
 <
PowîsOfTíCache
::
kMaxDecimÆExp⁄ít
);

283 i‡(
	gexp⁄ít
 < 
	gPowîsOfTíCache
::
kMöDecimÆExp⁄ít
) {

284 *
ªsu…
 = 0.0;

285  
	gåue
;

287 
DiyFp
 
	gˇched_powî
;

288 
	gˇched_decimÆ_exp⁄ít
;

289 
	gPowîsOfTíCache
::
GëCachedPowîF‹DecimÆExp⁄ít
(
exp⁄ít
,

290 &
ˇched_powî
,

291 &
ˇched_decimÆ_exp⁄ít
);

293 i‡(
	gˇched_decimÆ_exp⁄ít
 !
exp⁄ít
) {

294 
adju°mít_exp⁄ít
 = 
exp⁄ít
 - 
ˇched_decimÆ_exp⁄ít
;

295 
DiyFp
 
	gadju°mít_powî
 = 
Adju°mítPowîOfTí
(
adju°mít_exp⁄ít
);

296 
	göput
.
Mu…ùly
(
adju°mít_powî
);

297 i‡(
	gkMaxUöt64DecimÆDigôs
 - 
	gbuf„r
.
Àngth
(Ë>
adju°mít_exp⁄ít
) {

300 
ASSERT
(
DiyFp
::
kSignifiˇndSize
 == 64);

303 
	gîr‹
 +
kDíomö©‹
 / 2;

307 
	göput
.
Mu…ùly
(
ˇched_powî
);

313 
	gîr‹_b
 = 
kDíomö©‹
 / 2;

314 
	gîr‹_ab
 = (
îr‹
 == 0 ? 0 : 1);

315 
	gfixed_îr‹
 = 
kDíomö©‹
 / 2;

316 
	gîr‹
 +
îr‹_b
 + 
îr‹_ab
 + 
fixed_îr‹
;

318 
	gﬁd_e
 = 
öput
.
e
();

319 
	göput
.
N‹mÆize
();

320 
	gîr‹
 <<
ﬁd_e
 - 
öput
.
e
();

323 
	g‹dî_of_magnôude
 = 
DiyFp
::
kSignifiˇndSize
 + 
öput
.
e
();

324 
	gef„˘ive_signifiˇnd_size
 =

325 
DoubÀ
::
SignifiˇndSizeF‹OrdîOfMagnôude
(
‹dî_of_magnôude
);

326 
	g¥ecisi⁄_digôs_cou¡
 =

327 
DiyFp
::
kSignifiˇndSize
 - 
ef„˘ive_signifiˇnd_size
;

328 i‡(
	g¥ecisi⁄_digôs_cou¡
 + 
	gkDíomö©‹Log
 >
DiyFp
::
kSignifiˇndSize
) {

332 
shi·_amou¡
 = (
¥ecisi⁄_digôs_cou¡
 + 
kDíomö©‹Log
) -

333 
DiyFp
::
kSignifiˇndSize
 + 1;

334 
	göput
.
£t_f
(
öput
.
f
(Ë>> 
shi·_amou¡
);

335 
	göput
.
£t_e
(
öput
.
e
(Ë+ 
shi·_amou¡
);

338 
	gîr‹
 = (
îr‹
 >> 
shi·_amou¡
Ë+ 1 + 
kDíomö©‹
;

339 
	g¥ecisi⁄_digôs_cou¡
 -
shi·_amou¡
;

342 
ASSERT
(
DiyFp
::
kSignifiˇndSize
 == 64);

343 
ASSERT
(
¥ecisi⁄_digôs_cou¡
 < 64);

344 
uöt64_t
 
	g⁄e64
 = 1;

345 
uöt64_t
 
	g¥ecisi⁄_bôs_mask
 = (
⁄e64
 << 
¥ecisi⁄_digôs_cou¡
) - 1;

346 
uöt64_t
 
	g¥ecisi⁄_bôs
 = 
öput
.
f
(Ë& 
¥ecisi⁄_bôs_mask
;

347 
uöt64_t
 
	ghÆf_way
 = 
⁄e64
 << (
¥ecisi⁄_digôs_cou¡
 - 1);

348 
	g¥ecisi⁄_bôs
 *
kDíomö©‹
;

349 
	ghÆf_way
 *
kDíomö©‹
;

350 
DiyFp
 
rounded_öput
(
öput
.
f
(Ë>> 
¥ecisi⁄_digôs_cou¡
,

351 
öput
.
e
(Ë+ 
¥ecisi⁄_digôs_cou¡
);

352 i‡(
	g¥ecisi⁄_bôs
 >
hÆf_way
 + 
îr‹
) {

353 
rounded_öput
.
£t_f
‘ounded_öput.
f
() + 1);

359 *
	gªsu…
 = 
DoubÀ
(
rounded_öput
).
vÆue
();

360 i‡(
	ghÆf_way
 - 
	gîr‹
 < 
	g¥ecisi⁄_bôs
 &&Örecision_bits < half_way +Érror) {

364  
	gÁl£
;

366  
	gåue
;

378 
BignumSåtod
(
Buf„rRe„ªn˚
<c⁄° > 
buf„r
,

379 
exp⁄ít
,

380 
guess
) {

381 i‡(
	gguess
 =
DoubÀ
::
Inföôy
()) {

382  
guess
;

385 
DiyFp
 
	guµî_bound¨y
 = 
DoubÀ
(
guess
).
UµîBound¨y
();

387 
ASSERT
(
buf„r
.
Àngth
(Ë+ 
exp⁄ít
 <
kMaxDecimÆPowî
 + 1);

388 
ASSERT
(
buf„r
.
Àngth
(Ë+ 
exp⁄ít
 > 
kMöDecimÆPowî
);

389 
ASSERT
(
buf„r
.
Àngth
(Ë<
kMaxSignifiˇ¡DecimÆDigôs
);

394 
ASSERT
(((
kMaxDecimÆPowî
 + 1Ë* 333 / 100Ë< 
Bignum
::
kMaxSignifiˇ¡Bôs
);

395 
Bignum
 
	göput
;

396 
Bignum
 
	gbound¨y
;

397 
	göput
.
AssignDecimÆSåög
(
buf„r
);

398 
	gbound¨y
.
AssignUI¡64
(
uµî_bound¨y
.
f
());

399 i‡(
	gexp⁄ít
 >= 0) {

400 
öput
.
Mu…ùlyByPowîOfTí
(
exp⁄ít
);

402 
	gbound¨y
.
Mu…ùlyByPowîOfTí
(-
exp⁄ít
);

404 i‡(
	guµî_bound¨y
.
e
() > 0) {

405 
	gbound¨y
.
Shi·Le·
(
uµî_bound¨y
.
e
());

407 
	göput
.
Shi·Le·
(-
uµî_bound¨y
.
e
());

409 
	gcom∑ris⁄
 = 
Bignum
::
Com∑ª
(
öput
, 
bound¨y
);

410 i‡(
	gcom∑ris⁄
 < 0) {

411  
	gguess
;

412 } i‡(
	gcom∑ris⁄
 > 0) {

413  
DoubÀ
(
guess
).
NextDoubÀ
();

414 } i‡((
DoubÀ
(
guess
).
Signifiˇnd
() & 1) == 0) {

416  
guess
;

418  
DoubÀ
(
guess
).
NextDoubÀ
();

423 
Såtod
(
Buf„rRe„ªn˚
<c⁄° > 
buf„r
, 
exp⁄ít
) {

424 
	gBuf„rRe„ªn˚
<c⁄° > 
	gÀ·_åimmed
 = 
TrimLódögZîos
(
buf„r
);

425 
	gBuf„rRe„ªn˚
<c⁄° > 
	gåimmed
 = 
TrimTøûögZîos
(
À·_åimmed
);

426 
	gexp⁄ít
 +
À·_åimmed
.
Àngth
(Ë- 
åimmed
.length();

427 i‡(
	gåimmed
.
Àngth
() == 0)  0.0;

428 i‡(
	gåimmed
.
Àngth
(Ë> 
	gkMaxSignifiˇ¡DecimÆDigôs
) {

429 
	gsignifiˇ¡_buf„r
[
kMaxSignifiˇ¡DecimÆDigôs
];

430 
	gsignifiˇ¡_exp⁄ít
;

431 
TrimToMaxSignifiˇ¡Digôs
(
åimmed
, 
exp⁄ít
,

432 
signifiˇ¡_buf„r
, &
signifiˇ¡_exp⁄ít
);

433  
Såtod
(
Buf„rRe„ªn˚
<c⁄° >(
signifiˇ¡_buf„r
,

434 
kMaxSignifiˇ¡DecimÆDigôs
),

435 
signifiˇ¡_exp⁄ít
);

437 i‡(
	gexp⁄ít
 + 
	gåimmed
.
Àngth
(Ë- 1 >
kMaxDecimÆPowî
) {

438  
DoubÀ
::
Inföôy
();

440 i‡(
	gexp⁄ít
 + 
	gåimmed
.
Àngth
(Ë<
kMöDecimÆPowî
) {

444 
	gguess
;

445 i‡(
DoubÀSåtod
(
åimmed
, 
exp⁄ít
, &
guess
) ||

446 
DiyFpSåtod
(
åimmed
, 
exp⁄ít
, &
guess
)) {

447  
	gguess
;

449  
BignumSåtod
(
åimmed
, 
exp⁄ít
, 
guess
);

	@dtoa/strtod.h

28 #i‚de‡
DOUBLE_CONVERSION_STRTOD_H_


29 
	#DOUBLE_CONVERSION_STRTOD_H_


	)

31 
	~"utûs.h
"

33 
«me•a˚
 
	gWTF
 {

35 
«me•a˚
 
	gdoubÀ_c⁄vîsi⁄
 {

39 
Såtod
(
Buf„rRe„ªn˚
<c⁄° > 
buf„r
, 
exp⁄ít
);

	@dtoa/utils.h

28 #i‚de‡
DOUBLE_CONVERSION_UTILS_H_


29 
	#DOUBLE_CONVERSION_UTILS_H_


	)

31 
	~<wtf/As£πi⁄s.h
>

32 
	~<°dlib.h
>

33 
	~<°rög.h
>

35 
	#UNIMPLEMENTED
 
ASSERT_NOT_REACHED


	)

36 
	#UNREACHABLE
 
ASSERT_NOT_REACHED


	)

48 #i‡
deföed
(
_M_X64
Ë|| deföed(
__x86_64__
) || \

49 
deföed
(
__ARMEL__
) || \

50 
	$deföed
(
_MIPS_ARCH_MIPS32R2
)

51 
	#DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS
 1

	)

52 #ñi‡
	`CPU
(
MIPS
Ë|| CPU(
PPC
Ë|| CPU(
PPC64
Ë|| CPU(
PPC64LE
Ë|| CPU(
SH4
Ë|| CPU(
S390
Ë|| CPU(
S390X
Ë|| CPU(
IA64
Ë|| CPU(
ALPHA
Ë|| CPU(
ARM64
Ë|| CPU(
HPPA
)

53 
	#DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS
 1

	)

54 #ñi‡
	`deföed
(
_M_IX86
Ë|| deföed(
__i386__
)

55 #i‡
	`deföed
(
_WIN32
)

57 
	#DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS
 1

	)

59 #unde‡
DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS


62 #îr‹ 
T¨gë
 
¨chôe˘uª
 
was
 
nŸ
 
dëe˘ed
 
as
 
suµ‹ãd
 
by
 
DoubÀ
-
C⁄vîsi⁄
.

66 #i‡
	`deföed
(
_WIN32
Ë&& !deföed(
__MINGW32__
)

68 sig√d 
	töt8_t
;

69 
	tuöt8_t
;

70 
	töt16_t
;

71 
	tuöt16_t
;

72 
	töt32_t
;

73 
	tuöt32_t
;

74 
__öt64
 
	töt64_t
;

75 
	t__öt64
 
	tuöt64_t
;

80 
	~<°döt.h
>

87 
	#UINT64_2PART_C
(
a
, 
b
Ë(((
°©ic_ˇ°
<
uöt64_t
>◊Ë<< 32Ë+ 0x##b##
u
))

	)

94 
	#ARRAY_SIZE
(
a
) \

95 (((
a
) / (*(a))) / \

96 
°©ic_ˇ°
<
size_t
>(!((
a
Ë% (*◊)))))

	)

100 
	#DISALLOW_COPY_AND_ASSIGN
(
Ty≥Name
) \

101 
	`Ty≥Name
(c⁄° 
Ty≥Name
&); \

102 
›î©‹
=(c⁄° 
Ty≥Name
&)

	)

110 
	#DISALLOW_IMPLICIT_CONSTRUCTORS
(
Ty≥Name
) \

111 
	`Ty≥Name
(); \

112 
	`DISALLOW_COPY_AND_ASSIGN
(
Ty≥Name
)

	)

114 
«me•a˚
 
WTF
 {

116 
«me•a˚
 
doubÀ_c⁄vîsi⁄
 {

118 c⁄° 
kCh¨Size
 = ();

121 
ãm∂©e
 <
ty≥«me
 
T
>

122 
T
 
	`Max
(T 
a
, T 
b
) {

123  
a
 < 
b
 ? b :á;

128 
ãm∂©e
 <
ty≥«me
 
T
>

129 
T
 
	`Mö
(T 
a
, T 
b
) {

130  
a
 < 
b
 ?á : b;

134 
ölöe
 
	`SåLígth
(c⁄° * 
°rög
) {

135 
size_t
 
Àngth
 = 
	`°æí
(
°rög
);

136 
	`ASSERT
(
Àngth
 =
°©ic_ˇ°
<
size_t
>(static_cast<>(length)));

137  
°©ic_ˇ°
<>(
Àngth
);

142 
ãm∂©e
 <
ty≥«me
 
T
>

143 ˛as†
	cBuf„rRe„ªn˚
 {

144 
public
:

145 
	`Buf„rRe„ªn˚
(Ë: 
	`°¨t_
(
NULL
), 
	`Àngth_
(0) {}

146 
	`Buf„rRe„ªn˚
(
T
* 
d©a
, 
Àngth
Ë: 
	`°¨t_
(d©a), 
	`Àngth_
(length) {

147 
	`ASSERT
(
Àngth
 =0 || (Àngth > 0 && 
d©a
 !
NULL
));

152 
Buf„rRe„ªn˚
<
T
> 
	`SubBuf„rRe„ªn˚
(
‰om
, 
to
) {

153 
	`ASSERT
(
to
 <
Àngth_
);

154 
	`ASSERT_WITH_SECURITY_IMPLICATION
(
‰om
 < 
to
);

155 
	`ASSERT
(0 <
‰om
);

156  
Buf„rRe„ªn˚
<
T
>(
	`°¨t
(Ë+ 
‰om
, 
to
 - from);

160 
	`Àngth
(Ëc⁄° {  
Àngth_
; }

163 
boﬁ
 
	`is_em±y
(Ëc⁄° {  
Àngth_
 == 0; }

166 
T
* 
	`°¨t
(Ëc⁄° {  
°¨t_
; }

169 
T
& 
›î©‹
[](
ödex
) const {

170 
	`ASSERT
(0 <
ödex
 && index < 
Àngth_
);

171  
°¨t_
[
ödex
];

174 
T
& 
	`fú°
(Ë{  
°¨t_
[0]; }

176 
T
& 
	`œ°
(Ë{  
°¨t_
[
Àngth_
 - 1]; }

178 
¥iv©e
:

179 
T
* 
°¨t_
;

180 
Àngth_
;

187 ˛as†
	cSåögBuûdî
 {

188 
public
:

189 
	`SåögBuûdî
(* 
buf„r
, 
size
)

190 : 
	`buf„r_
(
buf„r
, 
size
), 
	`posôi⁄_
(0) { }

192 ~
	`SåögBuûdî
(Ë{ i‡(!
	`is_föÆized
()Ë
	`FöÆize
(); }

194 
	`size
(Ëc⁄° {  
buf„r_
.
	`Àngth
(); }

197 
	`posôi⁄
() const {

198 
	`ASSERT
(!
	`is_föÆized
());

199  
posôi⁄_
;

203 
	`SëPosôi⁄
(
posôi⁄
)

205 
	`ASSERT
(!
	`is_föÆized
());

206 
	`ASSERT_WITH_SECURITY_IMPLICATION
(
posôi⁄
 < 
	`size
());

207 
posôi⁄_
 = 
posôi⁄
;

211 
	`Re£t
(Ë{ 
posôi⁄_
 = 0; }

216 
	`AddCh¨a˘î
(
c
) {

217 
	`ASSERT
(
c
 != '\0');

218 
	`ASSERT
(!
	`is_föÆized
(Ë&& 
posôi⁄_
 < 
buf„r_
.
	`Àngth
());

219 
buf„r_
[
posôi⁄_
++] = 
c
;

224 
	`AddSåög
(c⁄° * 
s
) {

225 
	`AddSub°rög
(
s
, 
	`SåLígth
(s));

230 
	`AddSub°rög
(c⁄° * 
s
, 
n
) {

231 
	`ASSERT
(!
	`is_föÆized
(Ë&& 
posôi⁄_
 + 
n
 < 
buf„r_
.
	`Àngth
());

232 
	`ASSERT_WITH_SECURITY_IMPLICATION
(
°©ic_ˇ°
<
size_t
>(
n
Ë<
	`°æí
(
s
));

233 
	`mem˝y
(&
buf„r_
[
posôi⁄_
], 
s
, 
n
 * 
kCh¨Size
);

234 
posôi⁄_
 +
n
;

240 
	`AddPaddög
(
c
, 
cou¡
) {

241 
i
 = 0; i < 
cou¡
; i++) {

242 
	`AddCh¨a˘î
(
c
);

247 * 
	`FöÆize
() {

248 
	`ASSERT
(!
	`is_föÆized
(Ë&& 
posôi⁄_
 < 
buf„r_
.
	`Àngth
());

249 
buf„r_
[
posôi⁄_
] = '\0';

252 
	`ASSERT
(
	`°æí
(
buf„r_
.
	`°¨t
()Ë=
°©ic_ˇ°
<
size_t
>(
posôi⁄_
));

253 
posôi⁄_
 = -1;

254 
	`ASSERT
(
	`is_föÆized
());

255  
buf„r_
.
	`°¨t
();

258 
¥iv©e
:

259 
Buf„rRe„ªn˚
<> 
buf„r_
;

260 
posôi⁄_
;

262 
boﬁ
 
	`is_föÆized
(Ëc⁄° {  
posôi⁄_
 < 0; }

264 
	`DISALLOW_IMPLICIT_CONSTRUCTORS
(
SåögBuûdî
);

291 
ãm∂©e
 <
˛ass
 
De°
, cœs†
Sour˚
>

292 
ölöe
 
De°
 
	`BôCa°
(c⁄° 
Sour˚
& 
sour˚
) {

295 
	tVîifySizesAªEquÆ
[(
De°
Ë=(
Sour˚
) ? 1 : -1];

297 
De°
 
de°
;

298 
	`mem˝y
(&
de°
, &
sour˚
, (dest));

299  
de°
;

302 
ãm∂©e
 <
˛ass
 
De°
, cœs†
Sour˚
>

303 
ölöe
 
De°
 
	`BôCa°
(
Sour˚
* 
sour˚
) {

304  
BôCa°
<
De°
>(
ªöãΩªt_ˇ°
<
uöçå_t
>(
sour˚
));

307 
	}
}

	@efl/EflTypedefs.h

28 #i‚de‡
WTF_EÊTy≥defs_h


29 
	#WTF_EÊTy≥defs_h


	)

31 #ifde‡
__˝lu•lus


33 #i‡
PLATFORM
(
EFL
)

34 
	tEc‹e_X_ID
;

35 
Ec‹e_X_ID
 
	tEc‹e_X_Wödow
;

37 
	tEöa_Boﬁ
;

38 
_Evas_Poöt
 
	tEvas_Poöt
;

39 
_Evas_GL
 
	tEvas_GL
;

40 
_Evas_GL_C⁄ãxt
 
	tEvas_GL_C⁄ãxt
;

41 
_Evas_GL_SurÁ˚
 
	tEvas_GL_SurÁ˚
;

42 
_Ec‹e_Evas
 
	tEc‹e_Evas
;

43 
_Ec‹e_Fd_H™dÀr
 
	tEc‹e_Fd_H™dÀr
;

44 
_Eöa_Li°
 
	tEöa_Li°
;

45 
_Eöa_ModuÀ
 
	tEöa_ModuÀ
;

46 
_Eöa_Re˘™gÀ
 
	tEöa_Re˘™gÀ
;

47 #i‡
USE
(
EO
)

48 
_Eo_O∑que
 
	tEvas
;

49 
_Eo_O∑que
 
	tEvas_Obje˘
;

50 
_Eo_O∑que
 
	tEc‹e_Timî
;

52 
_Evas
 
	tEvas
;

53 
_Evas_Obje˘
 
	tEvas_Obje˘
;

54 
_Ec‹e_Timî
 
	tEc‹e_Timî
;

	@efl/MainThreadEfl.cpp

34 
	~"c⁄fig.h
"

35 
	~"MaöThªad.h
"

37 
	~<Ec‹e.h
>

38 
	~<wtf/StdLibExåas.h
>

39 
	~<wtf/eÊ/UniquePåEÊ.h
>

41 
«me•a˚
 
	gWTF
 {

43 
	gEÊUniquePå
<
	gEc‹e_Pùe
>& 
pùeObje˘
()

45 
DEPRECATED_DEFINE_STATIC_LOCAL
(
EÊUniquePå
<
Ec‹e_Pùe
>, 
pùeObje˘
, ());

46  
	gpùeObje˘
;

49 
m⁄ô‹Di•©chFun˘i⁄s
(*, *, )

51 
di•©chFun˘i⁄sFromMaöThªad
();

54 
öôülizeMaöThªadPœtf‹m
()

56 
pùeObje˘
(Ë
EÊUniquePå
<
Ec‹e_Pùe
>(
ec‹e_pùe_add
(
m⁄ô‹Di•©chFun˘i⁄s
, 0));

59 
scheduÀDi•©chFun˘i⁄sOnMaöThªad
()

61 
ec‹e_pùe_wrôe
(
pùeObje˘
().
gë
(), "", 0);

	@efl/RunLoopEfl.cpp

27 
	~"c⁄fig.h
"

28 
	~"RunLo›.h
"

30 
	~<Ec‹e.h
>

31 
	~<wtf/OwnPå.h
>

32 
	~<wtf/PassOwnPå.h
>

34 c⁄° 
	gec‹ePùeMesßgeSize
 = 1;

35 c⁄° 
	gwakupEc‹ePùeMesßge
[] = "W";

37 
«me•a˚
 
	gWTF
 {

39 
	gRunLo›
::
RunLo›
()

40 : 
m_wakeUpEvítReque°ed
(
Ál£
)

42 
m_pùe
 = 
EÊUniquePå
<
Ec‹e_Pùe
>(
ec‹e_pùe_add
(
wakeUpEvít
, 
this
));

45 
	gRunLo›
::~
RunLo›
()

49 
RunLo›
::
run
()

51 
ec‹e_maö_lo›_begö
();

54 
	gRunLo›
::
°›
()

56 
ec‹e_maö_lo›_quô
();

59 
	gRunLo›
::
wakeUpEvít
(* 
d©a
, *, )

61 
RunLo›
* 
	glo›
 = 
°©ic_ˇ°
<RunLo›*>(
d©a
);

64 
MuãxLockî
 
lockî
(
lo›
->
m_wakeUpEvítReque°edLock
);

65 
	glo›
->
	gm_wakeUpEvítReque°ed
 = 
Ál£
;

68 
	glo›
->
≥rf‹mW‹k
();

71 
	gRunLo›
::
wakeUp
()

74 
MuãxLockî
 
lockî
(
m_wakeUpEvítReque°edLock
);

75 i‡(
	gm_wakeUpEvítReque°ed
)

77 
	gm_wakeUpEvítReque°ed
 = 
åue
;

81 
MuãxLockî
 
lockî
(
m_pùeLock
);

82 
ec‹e_pùe_wrôe
(
m_pùe
.
gë
(), 
wakupEc‹ePùeMesßge
, 
ec‹ePùeMesßgeSize
);

86 
	gRunLo›
::
TimîBa£
::TimîBa£(
RunLo›
& 
runLo›
)

87 : 
m_runLo›
(
runLo›
)

88 , 
m_timî
(0)

89 , 
m_isRïótög
(
Ál£
)

93 
	gRunLo›
::
TimîBa£
::~TimerBase()

95 
°›
();

98 
boﬁ
 
	gRunLo›
::
TimîBa£
::
timîFúed
(* 
d©a
)

100 
RunLo›
::
TimîBa£
* 
timî
 = 
°©ic_ˇ°
<RunLo›::TimîBa£*>(
d©a
);

102 i‡(!
	gtimî
->
	gm_isRïótög
)

103 
	gtimî
->
	gm_timî
 = 0;

105 
	gtimî
->
fúed
();

107  
	gtimî
->
	gm_isRïótög
 ? 
	gECORE_CALLBACK_RENEW
 : 
ECORE_CALLBACK_CANCEL
;

110 
	gRunLo›
::
TimîBa£
::
°¨t
(
√xtFúeI¡îvÆ
, 
boﬁ
 
ª≥©
)

112 i‡(
isA˘ive
())

113 
°›
();

115 
	gm_isRïótög
 = 
ª≥©
;

116 
ASSERT
(!
m_timî
);

117 
	gm_timî
 = 
ec‹e_timî_add
(
√xtFúeI¡îvÆ
, 
ªöãΩªt_ˇ°
<
Ec‹e_Task_Cb
>(
timîFúed
), 
this
);

120 
	gRunLo›
::
TimîBa£
::
°›
()

122 i‡(
m_timî
) {

123 
ec‹e_timî_dñ
(
m_timî
);

124 
	gm_timî
 = 0;

128 
boﬁ
 
	gRunLo›
::
TimîBa£
::
isA˘ive
() const

130  (
m_timî
Ë? 
åue
 : 
Ál£
;

	@efl/UniquePtrEfl.h

26 #i‚de‡
UniquePåEÊ_h


27 
	#UniquePåEÊ_h


	)

29 #i‡
PLATFORM
(
EFL
)

31 
	~<Ec‹e.h
>

32 
	~<Ec‹e_Evas.h
>

33 
	~<Ec‹e_IMF.h
>

34 
	~<Eöa.h
>

35 
	~<Evas.h
>

36 
	~<Evas_GL.h
>

38 
«me•a˚
 
	gWTF
 {

40 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sEÊPåDñëî
 {

41 
›î©‹
()(
T
* 
	g±r
Ëc⁄° = 
dñëe
;

44 
	gãm∂©e
<
ty≥«me
 
	gT
>

45 
usög
 
	gEÊUniquePå
 = 
°d
::
unique_±r
<
T
, 
	gEÊPåDñëî
<
	gT
>>;

47 
	#FOR_EACH_EFL_DELETER
(
ma¸o
) \

48 
	`ma¸o
(
Ec‹e_Evas
, 
ec‹e_evas_‰ì
) \

49 
	`ma¸o
(
Ec‹e_IMF_C⁄ãxt
, 
ec‹e_imf_c⁄ãxt_dñ
) \

50 
	`ma¸o
(
Ec‹e_Pùe
, 
ec‹e_pùe_dñ
) \

51 
	`ma¸o
(
Eöa_Hash
, 
eöa_hash_‰ì
) \

52 
	`ma¸o
(
Eöa_ModuÀ
, 
eöa_moduÀ_‰ì
) \

53 
	`ma¸o
(
Evas_Obje˘
, 
evas_obje˘_dñ
) \

54 
	`ma¸o
(
Evas_GL
, 
evas_gl_‰ì
)

	)

56 
	#WTF_DEFINE_EFLPTR_DELETER
(
ty≥Name
, 
dñëîFunc
) \

57 
ãm∂©e
<> 
EÊPåDñëî
<
ty≥Name
> \

59 
	`›î©‹
(Ë(
ty≥Name
* 
±r
) const \

61 i‡(
±r
) \

62 
	`dñëîFunc
(
±r
); \

64 };

	)

66 
FOR_EACH_EFL_DELETER
(
WTF_DEFINE_EFLPTR_DELETER
)

67 #unde‡
FOR_EACH_EFL_DELETER


71 
usög
 
	gWTF
::
EÊUniquePå
;

	@gobject/GMainLoopSource.cpp

26 
	~"c⁄fig.h
"

28 #i‡
USE
(
GLIB
)

30 
	~"GMaöLo›Sour˚.h
"

31 
	~<gio/gio.h
>

32 
	~<wtf/gobje˘/GMuãxLockî.h
>

34 
«me•a˚
 
	gWTF
 {

36 
	gGMaöLo›Sour˚
& GMaöLo›Sour˚::
¸óã
()

38  *
√w
 
GMaöLo›Sour˚
(
DñëeOnDe°roy
);

41 
	gGMaöLo›Sour˚
::
GMaöLo›Sour˚
()

42 : 
m_dñëeOnDe°roy
(
DoNŸDñëeOnDe°roy
)

43 , 
m_°©us
(
Ródy
)

45 
g_muãx_öô
(&
m_muãx
);

48 
	gGMaöLo›Sour˚
::
GMaöLo›Sour˚
(
DñëeOnDe°royTy≥
 
dñëeOnDe°roy
)

49 : 
m_dñëeOnDe°roy
(
dñëeOnDe°roy
)

50 , 
m_°©us
(
Ródy
)

52 
g_muãx_öô
(&
m_muãx
);

55 
	gGMaöLo›Sour˚
::~
GMaöLo›Sour˚
()

57 
ˇn˚l
();

58 
g_muãx_˛ór
(&
m_muãx
);

61 
boﬁ
 
	gGMaöLo›Sour˚
::
isScheduÀd
() const

63  
m_°©us
 =
ScheduÀd
;

66 
boﬁ
 
	gGMaöLo›Sour˚
::
isA˘ive
() const

68  
m_°©us
 !
Ródy
;

71 
	gGMaöLo›Sour˚
::
ˇn˚l
()

73 
GMuãxLockî
 
lockî
(
m_muãx
);

74 
ˇn˚lWôhoutLockög
();

77 
	gGMaöLo›Sour˚
::
ˇn˚lWôhoutLockög
()

80 i‡(
m_dñëeOnDe°roy
 =
DñëeOnDe°roy
)

84 
ASSERT
(!
m_c⁄ãxt
.
sour˚
 || 
m_°©us
 =
ScheduÀd
 || m_°©u†=
Di•©chög
);

86 
ASSERT
(!
m_ˇn˚ŒabÀ
 || 
m_°©us
 =
Di•©chög
);

88 
	gm_°©us
 = 
Ródy
;

93 
g_ˇn˚ŒabÀ_ˇn˚l
(
m_ˇn˚ŒabÀ
.
gë
());

94 
	gm_ˇn˚ŒabÀ
 = 
nuŒ±r
;

95 
g_ˇn˚ŒabÀ_ˇn˚l
(
m_c⁄ãxt
.
sockëC™˚ŒabÀ
.
gë
());

97 i‡(!
	gm_c⁄ãxt
.
	gsour˚
)

100 
C⁄ãxt
 
	gc⁄ãxt
 = 
WTF
::
move
(
m_c⁄ãxt
);

101 
	gc⁄ãxt
.
de°roySour˚
();

104 
	gGMaöLo›Sour˚
::
scheduÀIdÀSour˚
(c⁄° * 
«me
, 
GSour˚Func
 
sour˚Fun˘i⁄
, 
¥i‹ôy
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

106 
ASSERT
(
m_°©us
 =
Ródy
);

107 
	gm_°©us
 = 
ScheduÀd
;

109 
g_sour˚_£t_«me
(
m_c⁄ãxt
.
sour˚
.
gë
(), 
«me
);

110 i‡(
	g¥i‹ôy
 !
G_PRIORITY_DEFAULT_IDLE
)

111 
g_sour˚_£t_¥i‹ôy
(
m_c⁄ãxt
.
sour˚
.
gë
(), 
¥i‹ôy
);

112 
g_sour˚_£t_ˇŒback
(
m_c⁄ãxt
.
sour˚
.
gë
(), 
sour˚Fun˘i⁄
, 
this
, 
nuŒ±r
);

113 
g_sour˚_©èch
(
m_c⁄ãxt
.
sour˚
.
gë
(), 
c⁄ãxt
);

116 
	gGMaöLo›Sour˚
::
scheduÀ
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<()> fun˘i⁄, 
¥i‹ôy
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

118 
GMuãxLockî
 
lockî
(
m_muãx
);

119 
ˇn˚lWôhoutLockög
();

121 
ASSERT
(!
m_c⁄ãxt
.
sour˚
);

122 
	gm_c⁄ãxt
 = {

123 
ad›tGRef
(
g_idÀ_sour˚_√w
()),

124 
ad›tGRef
(
g_ˇn˚ŒabÀ_√w
()),

125 
nuŒ±r
,

126 
WTF
::
move
(
fun˘i⁄
),

127 
nuŒ±r
,

128 
nuŒ±r
,

129 
WTF
::
move
(
de°royFun˘i⁄
)

131 
scheduÀIdÀSour˚
(
«me
, 
ªöãΩªt_ˇ°
<
GSour˚Func
>(
voidSour˚CÆlback
), 
¥i‹ôy
, 
c⁄ãxt
);

134 
	gGMaöLo›Sour˚
::
scheduÀ
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
 ()> fun˘i⁄, 
¥i‹ôy
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

136 
GMuãxLockî
 
lockî
(
m_muãx
);

137 
ˇn˚lWôhoutLockög
();

139 
ASSERT
(!
m_c⁄ãxt
.
sour˚
);

140 
	gm_c⁄ãxt
 = {

141 
ad›tGRef
(
g_idÀ_sour˚_√w
()),

142 
ad›tGRef
(
g_ˇn˚ŒabÀ_√w
()),

143 
nuŒ±r
,

144 
nuŒ±r
,

145 
WTF
::
move
(
fun˘i⁄
),

146 
nuŒ±r
,

147 
WTF
::
move
(
de°royFun˘i⁄
)

149 
scheduÀIdÀSour˚
(
«me
, 
ªöãΩªt_ˇ°
<
GSour˚Func
>(
boﬁSour˚CÆlback
), 
¥i‹ôy
, 
c⁄ãxt
);

152 
	gGMaöLo›Sour˚
::
scheduÀ
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
 (
GIOC⁄dôi⁄
)> fun˘i⁄, 
GSockë
* 
sockë
, GIOC⁄dôi⁄ 
c⁄dôi⁄
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

154 
GMuãxLockî
 
lockî
(
m_muãx
);

155 
ˇn˚lWôhoutLockög
();

157 
ASSERT
(!
m_c⁄ãxt
.
sour˚
);

158 
GC™˚ŒabÀ
* 
	gsockëC™˚ŒabÀ
 = 
g_ˇn˚ŒabÀ_√w
();

159 
	gm_c⁄ãxt
 = {

160 
ad›tGRef
(
g_sockë_¸óã_sour˚
(
sockë
, 
c⁄dôi⁄
, 
sockëC™˚ŒabÀ
)),

161 
ad›tGRef
(
g_ˇn˚ŒabÀ_√w
()),

162 
ad›tGRef
(
sockëC™˚ŒabÀ
),

163 
nuŒ±r
,

164 
nuŒ±r
,

165 
WTF
::
move
(
fun˘i⁄
),

166 
WTF
::
move
(
de°royFun˘i⁄
)

169 
ASSERT
(
m_°©us
 =
Ródy
);

170 
	gm_°©us
 = 
ScheduÀd
;

171 
g_sour˚_£t_«me
(
m_c⁄ãxt
.
sour˚
.
gë
(), 
«me
);

172 
g_sour˚_£t_ˇŒback
(
m_c⁄ãxt
.
sour˚
.
gë
(), 
ªöãΩªt_ˇ°
<
GSour˚Func
>(
sockëSour˚CÆlback
), 
this
, 
nuŒ±r
);

173 
g_sour˚_©èch
(
m_c⁄ãxt
.
sour˚
.
gë
(), 
c⁄ãxt
);

176 
	gGMaöLo›Sour˚
::
scheduÀTimeoutSour˚
(c⁄° * 
«me
, 
GSour˚Func
 
sour˚Fun˘i⁄
, 
¥i‹ôy
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

178 
ASSERT
(
m_°©us
 =
Ródy
);

179 
	gm_°©us
 = 
ScheduÀd
;

181 
g_sour˚_£t_«me
(
m_c⁄ãxt
.
sour˚
.
gë
(), 
«me
);

182 i‡(
	g¥i‹ôy
 !
G_PRIORITY_DEFAULT
)

183 
g_sour˚_£t_¥i‹ôy
(
m_c⁄ãxt
.
sour˚
.
gë
(), 
¥i‹ôy
);

184 
g_sour˚_£t_ˇŒback
(
m_c⁄ãxt
.
sour˚
.
gë
(), 
sour˚Fun˘i⁄
, 
this
, 
nuŒ±r
);

185 
g_sour˚_©èch
(
m_c⁄ãxt
.
sour˚
.
gë
(), 
c⁄ãxt
);

188 
	gGMaöLo›Sour˚
::
scheduÀA·îDñay
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<()> fun˘i⁄, std::
chr⁄o
::
mûli£c⁄ds
 
dñay
, 
¥i‹ôy
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

190 
GMuãxLockî
 
lockî
(
m_muãx
);

191 
ˇn˚lWôhoutLockög
();

193 
ASSERT
(!
m_c⁄ãxt
.
sour˚
);

194 
	gm_c⁄ãxt
 = {

195 
ad›tGRef
(
g_timeout_sour˚_√w
(
dñay
.
cou¡
())),

196 
ad›tGRef
(
g_ˇn˚ŒabÀ_√w
()),

197 
nuŒ±r
,

198 
WTF
::
move
(
fun˘i⁄
),

199 
nuŒ±r
,

200 
nuŒ±r
,

201 
WTF
::
move
(
de°royFun˘i⁄
)

203 
scheduÀTimeoutSour˚
(
«me
, 
ªöãΩªt_ˇ°
<
GSour˚Func
>(
voidSour˚CÆlback
), 
¥i‹ôy
, 
c⁄ãxt
);

206 
	gGMaöLo›Sour˚
::
scheduÀA·îDñay
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
 ()> fun˘i⁄, std::
chr⁄o
::
mûli£c⁄ds
 
dñay
, 
¥i‹ôy
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

208 
GMuãxLockî
 
lockî
(
m_muãx
);

209 
ˇn˚lWôhoutLockög
();

211 
ASSERT
(!
m_c⁄ãxt
.
sour˚
);

212 
	gm_c⁄ãxt
 = {

213 
ad›tGRef
(
g_timeout_sour˚_√w
(
dñay
.
cou¡
())),

214 
ad›tGRef
(
g_ˇn˚ŒabÀ_√w
()),

215 
nuŒ±r
,

216 
nuŒ±r
,

217 
WTF
::
move
(
fun˘i⁄
),

218 
nuŒ±r
,

219 
WTF
::
move
(
de°royFun˘i⁄
)

221 
scheduÀTimeoutSour˚
(
«me
, 
ªöãΩªt_ˇ°
<
GSour˚Func
>(
boﬁSour˚CÆlback
), 
¥i‹ôy
, 
c⁄ãxt
);

224 
	gGMaöLo›Sour˚
::
scheduÀA·îDñay
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<()> fun˘i⁄, std::
chr⁄o
::
£c⁄ds
 
dñay
, 
¥i‹ôy
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

226 
GMuãxLockî
 
lockî
(
m_muãx
);

227 
ˇn˚lWôhoutLockög
();

229 
ASSERT
(!
m_c⁄ãxt
.
sour˚
);

230 
	gm_c⁄ãxt
 = {

231 
ad›tGRef
(
g_timeout_sour˚_√w_£c⁄ds
(
dñay
.
cou¡
())),

232 
ad›tGRef
(
g_ˇn˚ŒabÀ_√w
()),

233 
nuŒ±r
,

234 
WTF
::
move
(
fun˘i⁄
),

235 
nuŒ±r
,

236 
nuŒ±r
,

237 
WTF
::
move
(
de°royFun˘i⁄
)

239 
scheduÀTimeoutSour˚
(
«me
, 
ªöãΩªt_ˇ°
<
GSour˚Func
>(
voidSour˚CÆlback
), 
¥i‹ôy
, 
c⁄ãxt
);

242 
	gGMaöLo›Sour˚
::
scheduÀA·îDñay
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
 ()> fun˘i⁄, std::
chr⁄o
::
£c⁄ds
 
dñay
, 
¥i‹ôy
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

244 
GMuãxLockî
 
lockî
(
m_muãx
);

245 
ˇn˚lWôhoutLockög
();

247 
ASSERT
(!
m_c⁄ãxt
.
sour˚
);

248 
	gm_c⁄ãxt
 = {

249 
ad›tGRef
(
g_timeout_sour˚_√w_£c⁄ds
(
dñay
.
cou¡
())),

250 
ad›tGRef
(
g_ˇn˚ŒabÀ_√w
()),

251 
nuŒ±r
,

252 
nuŒ±r
,

253 
WTF
::
move
(
fun˘i⁄
),

254 
nuŒ±r
,

255 
WTF
::
move
(
de°royFun˘i⁄
)

257 
scheduÀTimeoutSour˚
(
«me
, 
ªöãΩªt_ˇ°
<
GSour˚Func
>(
boﬁSour˚CÆlback
), 
¥i‹ôy
, 
c⁄ãxt
);

260 
	gGMaöLo›Sour˚
::
scheduÀAndDñëeOnDe°roy
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<()> fun˘i⁄, 
¥i‹ôy
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

262 
¸óã
().
scheduÀ
(
«me
, 
fun˘i⁄
, 
¥i‹ôy
, 
de°royFun˘i⁄
, 
c⁄ãxt
);

265 
	gGMaöLo›Sour˚
::
scheduÀAndDñëeOnDe°roy
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
()> fun˘i⁄, 
¥i‹ôy
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

267 
¸óã
().
scheduÀ
(
«me
, 
fun˘i⁄
, 
¥i‹ôy
, 
de°royFun˘i⁄
, 
c⁄ãxt
);

270 
	gGMaöLo›Sour˚
::
scheduÀA·îDñayAndDñëeOnDe°roy
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<()> fun˘i⁄, std::
chr⁄o
::
mûli£c⁄ds
 
dñay
, 
¥i‹ôy
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

272 
¸óã
().
scheduÀA·îDñay
(
«me
, 
fun˘i⁄
, 
dñay
, 
¥i‹ôy
, 
de°royFun˘i⁄
, 
c⁄ãxt
);

275 
	gGMaöLo›Sour˚
::
scheduÀA·îDñayAndDñëeOnDe°roy
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
()> fun˘i⁄, std::
chr⁄o
::
mûli£c⁄ds
 
dñay
, 
¥i‹ôy
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

277 
¸óã
().
scheduÀA·îDñay
(
«me
, 
fun˘i⁄
, 
dñay
, 
¥i‹ôy
, 
de°royFun˘i⁄
, 
c⁄ãxt
);

280 
	gGMaöLo›Sour˚
::
scheduÀA·îDñayAndDñëeOnDe°roy
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<()> fun˘i⁄, std::
chr⁄o
::
£c⁄ds
 
dñay
, 
¥i‹ôy
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

282 
¸óã
().
scheduÀA·îDñay
(
«me
, 
fun˘i⁄
, 
dñay
, 
¥i‹ôy
, 
de°royFun˘i⁄
, 
c⁄ãxt
);

285 
	gGMaöLo›Sour˚
::
scheduÀA·îDñayAndDñëeOnDe°roy
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
()> fun˘i⁄, std::
chr⁄o
::
£c⁄ds
 
dñay
, 
¥i‹ôy
, std::fun˘i⁄<()> 
de°royFun˘i⁄
, 
GMaöC⁄ãxt
* 
c⁄ãxt
)

287 
¸óã
().
scheduÀA·îDñay
(
«me
, 
fun˘i⁄
, 
dñay
, 
¥i‹ôy
, 
de°royFun˘i⁄
, 
c⁄ãxt
);

290 
	gGMaöLo›Sour˚
::
voidCÆlback
()

292 
C⁄ãxt
 
c⁄ãxt
;

295 
GMuãxLockî
 
lockî
(
m_muãx
);

296 i‡(!
	gm_c⁄ãxt
.
	gsour˚
)

299 
	gc⁄ãxt
 = 
WTF
::
move
(
m_c⁄ãxt
);

301 
ASSERT
(
c⁄ãxt
.
voidCÆlback
);

302 
ASSERT
(
m_°©us
 =
ScheduÀd
);

303 
	gm_°©us
 = 
Di•©chög
;

305 
	gm_ˇn˚ŒabÀ
 = 
c⁄ãxt
.
ˇn˚ŒabÀ
;

308 
	gc⁄ãxt
.
voidCÆlback
();

310 i‡(
g_ˇn˚ŒabÀ_is_ˇn˚Œed
(
c⁄ãxt
.
ˇn˚ŒabÀ
.
gë
())) {

311 
	gc⁄ãxt
.
de°roySour˚
();

315 
boﬁ
 
	gshouldSñfDe°ru˘
 = 
Ál£
;

317 
GMuãxLockî
 
lockî
(
m_muãx
);

318 
	gm_°©us
 = 
Ródy
;

319 
	gm_ˇn˚ŒabÀ
 = 
nuŒ±r
;

320 
	gshouldSñfDe°ru˘
 = 
m_dñëeOnDe°roy
 =
DñëeOnDe°roy
;

323 
	gc⁄ãxt
.
de°roySour˚
();

324 i‡(
	gshouldSñfDe°ru˘
)

325 
dñëe
 
	gthis
;

328 
boﬁ
 
	gGMaöLo›Sour˚
::
boﬁCÆlback
()

330 
C⁄ãxt
 
c⁄ãxt
;

333 
GMuãxLockî
 
lockî
(
m_muãx
);

334 i‡(!
	gm_c⁄ãxt
.
	gsour˚
)

335  
	gSt›
;

337 
	gc⁄ãxt
 = 
WTF
::
move
(
m_c⁄ãxt
);

339 
ASSERT
(
c⁄ãxt
.
boﬁCÆlback
);

340 
ASSERT
(
m_°©us
 =
ScheduÀd
 || m_°©u†=
Di•©chög
);

341 
	gm_°©us
 = 
Di•©chög
;

343 
	gm_ˇn˚ŒabÀ
 = 
c⁄ãxt
.
ˇn˚ŒabÀ
;

346 
boﬁ
 
	gªtvÆ
 = 
c⁄ãxt
.
boﬁCÆlback
();

348 i‡(
g_ˇn˚ŒabÀ_is_ˇn˚Œed
(
c⁄ãxt
.
ˇn˚ŒabÀ
.
gë
())) {

349 
	gc⁄ãxt
.
de°roySour˚
();

350  
	gSt›
;

353 
boﬁ
 
	gshouldSñfDe°ru˘
 = 
Ál£
;

355 
GMuãxLockî
 
lockî
(
m_muãx
);

356 
	gm_ˇn˚ŒabÀ
 = 
nuŒ±r
;

357 
	gshouldSñfDe°ru˘
 = 
m_dñëeOnDe°roy
 =
DñëeOnDe°roy
;

360 
ASSERT
((!
m_c⁄ãxt
.
sour˚
 && 
m_°©us
 =
Di•©chög
Ë|| m_°©u†=
ScheduÀd
);

361 i‡(
	gªtvÆ
 && !
	gm_c⁄ãxt
.
	gsour˚
)

362 
	gm_c⁄ãxt
 = 
WTF
::
move
(
c⁄ãxt
);

363 i‡(!
	gªtvÆ
)

364 
	gm_°©us
 = 
Ródy
;

367 i‡(
	gc⁄ãxt
.
	gsour˚
) {

368 
	gc⁄ãxt
.
de°roySour˚
();

369 i‡(
	gshouldSñfDe°ru˘
)

370 
dñëe
 
	gthis
;

373  
	gªtvÆ
;

376 
boﬁ
 
	gGMaöLo›Sour˚
::
sockëCÆlback
(
GIOC⁄dôi⁄
 
c⁄dôi⁄
)

378 
C⁄ãxt
 
c⁄ãxt
;

381 
GMuãxLockî
 
lockî
(
m_muãx
);

382 i‡(!
	gm_c⁄ãxt
.
	gsour˚
)

383  
	gSt›
;

385 
	gc⁄ãxt
 = 
WTF
::
move
(
m_c⁄ãxt
);

387 
ASSERT
(
c⁄ãxt
.
sockëCÆlback
);

388 
ASSERT
(
m_°©us
 =
ScheduÀd
 || m_°©u†=
Di•©chög
);

389 
	gm_°©us
 = 
Di•©chög
;

391 
	gm_ˇn˚ŒabÀ
 = 
c⁄ãxt
.
ˇn˚ŒabÀ
;

394 i‡(
g_ˇn˚ŒabÀ_is_ˇn˚Œed
(
c⁄ãxt
.
sockëC™˚ŒabÀ
.
gë
())) {

395 
	gc⁄ãxt
.
de°roySour˚
();

396  
	gSt›
;

399 
boﬁ
 
	gªtvÆ
 = 
c⁄ãxt
.
sockëCÆlback
(
c⁄dôi⁄
);

401 i‡(
g_ˇn˚ŒabÀ_is_ˇn˚Œed
(
c⁄ãxt
.
ˇn˚ŒabÀ
.
gë
())) {

402 
	gc⁄ãxt
.
de°roySour˚
();

403  
	gSt›
;

407 
GMuãxLockî
 
lockî
(
m_muãx
);

408 
	gm_ˇn˚ŒabÀ
 = 
nuŒ±r
;

411 
ASSERT
((!
m_c⁄ãxt
.
sour˚
 && 
m_°©us
 =
Di•©chög
Ë|| m_°©u†=
ScheduÀd
);

413 i‡(
	gªtvÆ
 && !
	gm_c⁄ãxt
.
	gsour˚
)

414 
	gm_c⁄ãxt
 = 
WTF
::
move
(
c⁄ãxt
);

415 i‡(!
	gªtvÆ
)

416 
	gm_°©us
 = 
Ródy
;

419 i‡(
	gc⁄ãxt
.
	gsour˚
)

420 
	gc⁄ãxt
.
de°roySour˚
();

422  
	gªtvÆ
;

425 
gboﬁón
 
	gGMaöLo›Sour˚
::
voidSour˚CÆlback
(
GMaöLo›Sour˚
* 
sour˚
)

427 
sour˚
->
voidCÆlback
();

428  
	gG_SOURCE_REMOVE
;

431 
gboﬁón
 
	gGMaöLo›Sour˚
::
boﬁSour˚CÆlback
(
GMaöLo›Sour˚
* 
sour˚
)

433  
sour˚
->
boﬁCÆlback
(Ë=
C⁄töue
;

436 
gboﬁón
 
	gGMaöLo›Sour˚
::
sockëSour˚CÆlback
(
GSockë
*, 
GIOC⁄dôi⁄
 
c⁄dôi⁄
, 
GMaöLo›Sour˚
* 
sour˚
)

438  
	gsour˚
->
sockëCÆlback
(
c⁄dôi⁄
Ë=
C⁄töue
;

441 
	gGMaöLo›Sour˚
::
C⁄ãxt
::
de°roySour˚
()

443 
g_sour˚_de°roy
(
sour˚
.
gë
());

444 i‡(
	gde°royCÆlback
)

445 
de°royCÆlback
();

	@gobject/GMainLoopSource.h

26 #i‚de‡
GMaöLo›Sour˚_h


27 
	#GMaöLo›Sour˚_h


	)

29 
	~<fun˘i⁄Æ
>

30 
	~<glib.h
>

31 
	~<wtf/N⁄c›yabÀ.h
>

32 
	~<wtf/gobje˘/GRefPå.h
>

34 
_GSockë
 
	tGSockë
;

35 
_GMuãx
 
	tGMuãx
;

37 
«me•a˚
 
	gWTF
 {

39 ˛as†
	cGMaöLo›Sour˚
 {

40 
WTF_MAKE_NONCOPYABLE
(
GMaöLo›Sour˚
);

41 
	gWTF_MAKE_FAST_ALLOCATED
;

42 
	gpublic
:

43 
WTF_EXPORT_PRIVATE
 
GMaöLo›Sour˚
();

44 
	gWTF_EXPORT_PRIVATE
 ~
GMaöLo›Sour˚
();

46 c⁄° 
boﬁ
 
	gSt›
 = 
Ál£
;

47 c⁄° 
boﬁ
 
	gC⁄töue
 = 
åue
;

49 
WTF_EXPORT_PRIVATE
 
boﬁ
 
isScheduÀd
() const;

50 
WTF_EXPORT_PRIVATE
 
boﬁ
 
isA˘ive
() const;

52 
WTF_EXPORT_PRIVATE
 
scheduÀ
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<()>, 
¥i‹ôy
 = 
G_PRIORITY_DEFAULT
, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

53 
WTF_EXPORT_PRIVATE
 
scheduÀ
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
()>, 
¥i‹ôy
 = 
G_PRIORITY_DEFAULT
, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

54 
WTF_EXPORT_PRIVATE
 
scheduÀ
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
(
GIOC⁄dôi⁄
)>, 
GSockë
*, GIOC⁄dôi⁄, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

55 
WTF_EXPORT_PRIVATE
 
scheduÀA·îDñay
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<()>, std::
chr⁄o
::
mûli£c⁄ds
, 
¥i‹ôy
 = 
G_PRIORITY_DEFAULT
, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

56 
WTF_EXPORT_PRIVATE
 
scheduÀA·îDñay
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
()>, std::
chr⁄o
::
mûli£c⁄ds
, 
¥i‹ôy
 = 
G_PRIORITY_DEFAULT
, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

57 
WTF_EXPORT_PRIVATE
 
scheduÀA·îDñay
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<()>, std::
chr⁄o
::
£c⁄ds
, 
¥i‹ôy
 = 
G_PRIORITY_DEFAULT
, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

58 
WTF_EXPORT_PRIVATE
 
scheduÀA·îDñay
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
()>, std::
chr⁄o
::
£c⁄ds
, 
¥i‹ôy
 = 
G_PRIORITY_DEFAULT
, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

59 
WTF_EXPORT_PRIVATE
 
ˇn˚l
();

61 
scheduÀAndDñëeOnDe°roy
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<()>, 
¥i‹ôy
 = 
G_PRIORITY_DEFAULT
, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

62 
scheduÀAndDñëeOnDe°roy
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
()>, 
¥i‹ôy
 = 
G_PRIORITY_DEFAULT
, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

63 
scheduÀA·îDñayAndDñëeOnDe°roy
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<()>, std::
chr⁄o
::
mûli£c⁄ds
, 
¥i‹ôy
 = 
G_PRIORITY_DEFAULT
, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

64 
scheduÀA·îDñayAndDñëeOnDe°roy
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
()>, std::
chr⁄o
::
mûli£c⁄ds
, 
¥i‹ôy
 = 
G_PRIORITY_DEFAULT
, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

65 
scheduÀA·îDñayAndDñëeOnDe°roy
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<()>, std::
chr⁄o
::
£c⁄ds
, 
¥i‹ôy
 = 
G_PRIORITY_DEFAULT
, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

66 
scheduÀA·îDñayAndDñëeOnDe°roy
(c⁄° * 
«me
, 
°d
::
fun˘i⁄
<
boﬁ
()>, std::
chr⁄o
::
£c⁄ds
, 
¥i‹ôy
 = 
G_PRIORITY_DEFAULT
, std::fun˘i⁄<()> 
de°royFun˘i⁄
 = 
nuŒ±r
, 
GMaöC⁄ãxt
* =Çullptr);

68 
	g¥iv©e
:

69 
GMaöLo›Sour˚
& 
¸óã
();

71 
	eDñëeOnDe°royTy≥
 { 
	gDñëeOnDe°roy
, 
	gDoNŸDñëeOnDe°roy
 };

72 
GMaöLo›Sour˚
(
DñëeOnDe°royTy≥
);

74 
	eSètus
 { 
	gRódy
, 
	gScheduÀd
, 
	gDi•©chög
 };

76 
ˇn˚lWôhoutLockög
();

77 
scheduÀIdÀSour˚
(c⁄° * 
«me
, 
GSour˚Func
, 
¥i‹ôy
, 
GMaöC⁄ãxt
*);

78 
scheduÀTimeoutSour˚
(c⁄° * 
«me
, 
GSour˚Func
, 
¥i‹ôy
, 
GMaöC⁄ãxt
*);

79 
voidCÆlback
();

80 
boﬁ
 
boﬁCÆlback
();

81 
boﬁ
 
sockëCÆlback
(
GIOC⁄dôi⁄
);

83 
de°roy
();

85 
gboﬁón
 
voidSour˚CÆlback
(
GMaöLo›Sour˚
*);

86 
gboﬁón
 
boﬁSour˚CÆlback
(
GMaöLo›Sour˚
*);

87 
gboﬁón
 
sockëSour˚CÆlback
(
GSockë
*, 
GIOC⁄dôi⁄
, 
GMaöLo›Sour˚
*);

89 
DñëeOnDe°royTy≥
 
	gm_dñëeOnDe°roy
;

90 
Sètus
 
	gm_°©us
;

91 
GMuãx
 
	gm_muãx
;

92 
	gGRefPå
<
	gGC™˚ŒabÀ
> 
	gm_ˇn˚ŒabÀ
;

94 
	sC⁄ãxt
 {

95 
C⁄ãxt
() = ;

96 
C⁄ãxt
(Context&&) = ;

97 
	gC⁄ãxt
& 
	g›î©‹
=(
C⁄ãxt
&&) = ;

99 
de°roySour˚
();

101 
	gGRefPå
<
	gGSour˚
> 
	gsour˚
;

102 
	gGRefPå
<
	gGC™˚ŒabÀ
> 
	gˇn˚ŒabÀ
;

103 
	gGRefPå
<
	gGC™˚ŒabÀ
> 
	gsockëC™˚ŒabÀ
;

104 
	g°d
::
fun˘i⁄
<()> 
voidCÆlback
;

105 
	g°d
::
fun˘i⁄
<
boﬁ
 ()> 
boﬁCÆlback
;

106 
	g°d
::
fun˘i⁄
<
boﬁ
 (
GIOC⁄dôi⁄
)> 
sockëCÆlback
;

107 
	g°d
::
fun˘i⁄
<()> 
de°royCÆlback
;

108 } 
	gm_c⁄ãxt
;

113 
usög
 
	gWTF
::
GMaöLo›Sour˚
;

	@gobject/GMutexLocker.h

20 #i‚de‡
GMuãxLockî_h


21 
	#GMuãxLockî_h


	)

23 #i‡
USE
(
GLIB
)

25 
	~<glib.h
>

26 
	~<wtf/N⁄c›yabÀ.h
>

28 
«me•a˚
 
	gWTF
 {

30 ˛as†
	cGMuãxLockî
 {

31 
WTF_MAKE_NONCOPYABLE
(
GMuãxLockî
);

32 
	gpublic
:

33 
ex∂icô
 
GMuãxLockî
(
GMuãx
& 
muãx
)

34 : 
m_muãx
(
muãx
)

35 , 
m_locked
(
Ál£
)

37 
lock
();

40 ~
GMuãxLockî
()

42 
u∆ock
();

45 
lock
()

47 i‡(!
	gm_locked
) {

48 
g_muãx_lock
(&
m_muãx
);

49 
	gm_locked
 = 
åue
;

53 
u∆ock
()

55 i‡(
	gm_locked
) {

56 
	gm_locked
 = 
Ál£
;

57 
g_muãx_u∆ock
(&
m_muãx
);

61 
	g¥iv©e
:

62 
GMuãx
& 
m_muãx
;

63 
boﬁ
 
	gm_locked
;

68 
usög
 
	gWTF
::
GMuãxLockî
;

	@gobject/GRefPtr.cpp

19 
	~"c⁄fig.h
"

20 
	~"GRefPå.h
"

22 #i‡
USE
(
GLIB
)

24 
	~<glib-obje˘.h
>

25 
	~<glib.h
>

27 
«me•a˚
 
	gWTF
 {

29 
	gãm∂©e
 <> 
GHashTabÀ
* 
ªfGPå
(GHashTabÀ* 
±r
)

31 i‡(
	g±r
)

32 
g_hash_èbÀ_ªf
(
±r
);

33  
	g±r
;

36 
	gãm∂©e
 <> 
dîefGPå
(
GHashTabÀ
* 
±r
)

38 
g_hash_èbÀ_uƒef
(
±r
);

41 
	gãm∂©e
 <> 
GMaöC⁄ãxt
* 
ªfGPå
(GMaöC⁄ãxt* 
±r
)

43 i‡(
	g±r
)

44 
g_maö_c⁄ãxt_ªf
(
±r
);

45  
	g±r
;

48 
	gãm∂©e
 <> 
dîefGPå
(
GMaöC⁄ãxt
* 
±r
)

50 i‡(
	g±r
)

51 
g_maö_c⁄ãxt_uƒef
(
±r
);

54 
	gãm∂©e
 <> 
GMaöLo›
* 
ªfGPå
(GMaöLo›* 
±r
)

56 i‡(
	g±r
)

57 
g_maö_lo›_ªf
(
±r
);

58  
	g±r
;

61 
	gãm∂©e
 <> 
dîefGPå
(
GMaöLo›
* 
±r
)

63 i‡(
	g±r
)

64 
g_maö_lo›_uƒef
(
±r
);

67 
	gãm∂©e
 <> 
GByãs
* 
ªfGPå
(GByãs* 
±r
)

69 i‡(
	g±r
)

70 
g_byãs_ªf
(
±r
);

71  
	g±r
;

74 
	gãm∂©e
 <> 
dîefGPå
(
GByãs
* 
±r
)

76 i‡(
	g±r
)

77 
g_byãs_uƒef
(
±r
);

80 
	gãm∂©e
 <> 
GV¨ü¡
* 
ªfGPå
(GV¨ü¡* 
±r
)

82 i‡(
	g±r
)

83 
g_v¨ü¡_ªf_sök
(
±r
);

84  
	g±r
;

87 
	gãm∂©e
 <> 
dîefGPå
(
GV¨ü¡
* 
±r
)

89 
g_v¨ü¡_uƒef
(
±r
);

92 
	gãm∂©e
 <> 
GSour˚
* 
ªfGPå
(GSour˚* 
±r
)

94 i‡(
	g±r
)

95 
g_sour˚_ªf
(
±r
);

96  
	g±r
;

99 
	gãm∂©e
 <> 
dîefGPå
(
GSour˚
* 
±r
)

101 i‡(
	g±r
)

102 
g_sour˚_uƒef
(
±r
);

105 
	gãm∂©e
 <> 
GPåAºay
* 
ªfGPå
(GPåAºay* 
±r
)

107 i‡(
	g±r
)

108 
g_±r_¨øy_ªf
(
±r
);

109  
	g±r
;

112 
	gãm∂©e
 <> 
dîefGPå
(
GPåAºay
* 
±r
)

114 i‡(
	g±r
)

115 
g_±r_¨øy_uƒef
(
±r
);

118 
	gãm∂©e
 <> 
GByãAºay
* 
ªfGPå
(GByãAºay* 
±r
)

120 i‡(
	g±r
)

121 
g_byã_¨øy_ªf
(
±r
);

122  
	g±r
;

125 
	gãm∂©e
 <> 
dîefGPå
(
GByãAºay
* 
±r
)

127 i‡(
	g±r
)

128 
g_byã_¨øy_uƒef
(
±r
);

131 
	gãm∂©e
 <> 
GClosuª
* 
ªfGPå
(GClosuª* 
±r
)

133 i‡(
	g±r
)

134 
g_˛osuª_ªf
(
±r
);

135  
	g±r
;

138 
	gãm∂©e
 <> 
dîefGPå
(
GClosuª
* 
±r
)

140 i‡(
	g±r
)

141 
g_˛osuª_uƒef
(
±r
);

	@gobject/GRefPtr.h

23 #i‚de‡
WTF_GRefPå_h


24 
	#WTF_GRefPå_h


	)

26 #i‡
USE
(
GLIB
)

28 
	~<wtf/GëPå.h
>

29 
	~<wtf/RefPå.h
>

30 
	~<Æg‹ôhm
>

32 "C" 
g_obje˘_uƒef
(
gpoöãr
);

33 "C" 
gpoöãr
 
g_obje˘_ªf_sök
(gpointer);

35 
«me•a˚
 
	gWTF
 {

37 
	eGRefPåAd›tTy≥
 { 
	gGRefPåAd›t
 };

38 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
T
* 
ªfGPå
(T*);

39 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
dîefGPå
(
T
*);

40 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
˛ass
 
	gGRefPå
;

41 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gGRefPå
<T> 
ad›tGRef
(
T
*);

43 
	gãm∂©e
 <
ty≥«me
 
	gT
> cœs†
	cGRefPå
 {

44 
	gpublic
:

45 
T
 
	tVÆueTy≥
;

46 
VÆueTy≥
* 
	tPåTy≥
;

48 
GRefPå
(Ë: 
m_±r
(0) { }

50 
GRefPå
(
T
* 
±r
)

51 : 
m_±r
(
±r
)

53 i‡(
±r
)

54 
ªfGPå
(
±r
);

57 
GRefPå
(c⁄° GRefPå& 
o
)

58 : 
m_±r
(
o
.m_ptr)

60 i‡(
T
* 
±r
 = 
m_±r
)

61 
ªfGPå
(
±r
);

64 
	gãm∂©e
 <
ty≥«me
 
	gU
> 
GRefPå
(c⁄° GRefPå<
U
>& 
o
)

65 : 
m_±r
(
o
.
gë
())

67 i‡(
T
* 
±r
 = 
m_±r
)

68 
ªfGPå
(
±r
);

71 
GRefPå
(GRefPå&& 
o
Ë: 
m_±r
(o.
ÀakRef
()) { }

72 
ãm∂©e
 <
ty≥«me
 
U
> 
GRefPå
(GRefPå<U>&& 
o
Ë: 
m_±r
(o.
ÀakRef
()) { }

74 ~
GRefPå
()

76 i‡(
T
* 
±r
 = 
m_±r
)

77 
dîefGPå
(
±r
);

80 
˛ór
()

82 
T
* 
	g±r
 = 
m_±r
;

83 
	gm_±r
 = 0;

84 i‡(
	g±r
)

85 
dîefGPå
(
±r
);

88 
T
* 
ÀakRef
(Ë
	gWARN_UNUSED_RETURN


90 
T
* 
	g±r
 = 
m_±r
;

91 
	gm_±r
 = 0;

92  
	g±r
;

95 
	gT
*& 
outPå
()

97 
ASSERT
(!
m_±r
);

98  
	gm_±r
;

102 
GRefPå
(
HashTabÀDñëedVÆueTy≥
Ë: 
m_±r
(
hashTabÀDñëedVÆue
()) { }

103 
boﬁ
 
isHashTabÀDñëedVÆue
(Ëc⁄° {  
m_±r
 =
hashTabÀDñëedVÆue
(); }

105 
T
* 
gë
(Ëc⁄° {  
	gm_±r
; }

106 
	gT
& 
	g›î©‹
*(Ëc⁄° {  *
	gm_±r
; }

107 
ALWAYS_INLINE
 
T
* 
	g›î©‹
->(Ëc⁄° {  
	gm_±r
; }

109 
boﬁ
 
	g›î©‹
!(Ëc⁄° {  !
	gm_±r
; }

112 
T
* 
	tGRefPå
::*
	tUn•ecifõdBoﬁTy≥
;

113 
›î©‹
 
Un•ecifõdBoﬁTy≥
(Ëc⁄° {  
	gm_±r
 ? &
	gGRefPå
::
m_±r
 : 0; }

115 
	gGRefPå
& 
	g›î©‹
=(c⁄° 
GRefPå
&);

116 
	gGRefPå
& 
	g›î©‹
=(
GRefPå
&&);

117 
	gGRefPå
& 
	g›î©‹
=(
T
*);

118 
	gãm∂©e
 <
ty≥«me
 
	gU
> 
	gGRefPå
& 
	g›î©‹
=(c⁄° 
GRefPå
<
U
>&);

120 
sw≠
(
GRefPå
&);

121 
‰õnd
 
GRefPå
 
	gad›tGRef
<
	gT
>(T*);

123 
	g¥iv©e
:

124 
T
* 
hashTabÀDñëedVÆue
(Ë{  
ªöãΩªt_ˇ°
<T*>(-1); }

126 
GRefPå
(
T
* 
±r
, 
GRefPåAd›tTy≥
Ë: 
m_±r
(ptr) {}

128 
T
* 
m_±r
;

131 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
	gGRefPå
<T>& GRefPå<T>::
›î©‹
=(c⁄° 
GRefPå
<
T
>& 
o
)

133 
T
* 
›å
 = 
o
.
gë
();

134 i‡(
	g›å
)

135 
ªfGPå
(
›å
);

136 
T
* 
	g±r
 = 
m_±r
;

137 
	gm_±r
 = 
›å
;

138 i‡(
	g±r
)

139 
dîefGPå
(
±r
);

140  *
	gthis
;

143 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
	gGRefPå
<T>& GRefPå<T>::
›î©‹
=(
GRefPå
<
T
>&& 
o
)

145 
GRefPå
 
±r
 = 
WTF
::
move
(
o
);

146 
sw≠
(
±r
);

147  *
	gthis
;

150 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
	gGRefPå
<T>& GRefPå<T>::
›î©‹
=(
T
* 
›å
)

152 
T
* 
±r
 = 
m_±r
;

153 i‡(
	g›å
)

154 
ªfGPå
(
›å
);

155 
	gm_±r
 = 
›å
;

156 i‡(
	g±r
)

157 
dîefGPå
(
±r
);

158  *
	gthis
;

161 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
	gGRefPå
<T>::
sw≠
(
GRefPå
<
T
>& 
o
)

163 
°d
::
sw≠
(
m_±r
, 
o
.m_ptr);

166 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
sw≠
(
GRefPå
<
T
>& 
a
, GRefPå<T>& 
b
)

168 
	ga
.
sw≠
(
b
);

171 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
GRefPå
<
T
>& 
a
, c⁄° 
	gGRefPå
<U>& 
	gb
)

173  
	ga
.
gë
(Ë=
b
.get();

176 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
GRefPå
<
T
>& 
a
, 
U
* 
	gb
)

178  
	ga
.
gë
(Ë=
b
;

181 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
==(
T
* 
a
, c⁄° 
	gGRefPå
<U>& 
	gb
)

183  
	ga
 =
b
.
gë
();

186 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
GRefPå
<
T
>& 
a
, c⁄° 
	gGRefPå
<U>& 
	gb
)

188  
	ga
.
gë
(Ë!
b
.get();

191 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
GRefPå
<
T
>& 
a
, 
U
* 
	gb
)

193  
	ga
.
gë
(Ë!
b
;

196 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
boﬁ
 
	g›î©‹
!=(
T
* 
a
, c⁄° 
	gGRefPå
<U>& 
	gb
)

198  
	ga
 !
b
.
gë
();

201 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
	gGRefPå
<T> 
°©ic_poöãr_ˇ°
(c⁄° 
GRefPå
<
U
>& 
p
)

203  
	gGRefPå
<
	gT
>(
	g°©ic_ˇ°
<T*>(
	gp
.
gë
()));

206 
	gãm∂©e
 <
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
ölöe
 
	gGRefPå
<T> 
c⁄°_poöãr_ˇ°
(c⁄° 
GRefPå
<
U
>& 
p
)

208  
	gGRefPå
<
	gT
>(
	gc⁄°_ˇ°
<T*>(
	gp
.
gë
()));

211 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gIsSm¨tPå
<
	gGRefPå
<T>> {

212 c⁄° 
boﬁ
 
	gvÆue
 = 
åue
;

215 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gGRefPå
<T> 
	$ad›tGRef
(
T
* 
p
)

217  
GRefPå
<
T
>(
p
, 
GRefPåAd›t
);

218 
	}
}

220 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
GHashTabÀ
* 
ªfGPå
(GHashTabÀ* 
±r
);

221 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
dîefGPå
(
GHashTabÀ
* 
±r
);

222 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
GMaöC⁄ãxt
* 
ªfGPå
(GMaöC⁄ãxt* 
±r
);

223 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
dîefGPå
(
GMaöC⁄ãxt
* 
±r
);

224 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
GMaöLo›
* 
ªfGPå
(GMaöLo›* 
±r
);

225 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
dîefGPå
(
GMaöLo›
* 
±r
);

226 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
GV¨ü¡
* 
ªfGPå
(GV¨ü¡* 
±r
);

227 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
dîefGPå
(
GV¨ü¡
* 
±r
);

228 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
GSour˚
* 
ªfGPå
(GSour˚* 
±r
);

229 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
dîefGPå
(
GSour˚
* 
±r
);

230 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
GPåAºay
* 
ªfGPå
(GPtrArray*);

231 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
dîefGPå
(
GPåAºay
*);

232 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
GByãAºay
* 
ªfGPå
(GByteArray*);

233 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
dîefGPå
(
GByãAºay
*);

234 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
GByãs
* 
ªfGPå
(GBytes*);

235 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
dîefGPå
(
GByãs
*);

236 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
GClosuª
* 
ªfGPå
(GClosure*);

237 
	gãm∂©e
 <> 
WTF_EXPORT_PRIVATE
 
dîefGPå
(
GClosuª
*);

239 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
T
* 
	$ªfGPå
(
T
* 
±r
)

241 i‡(
±r
)

242 
	`g_obje˘_ªf_sök
(
±r
);

243  
±r
;

244 
	}
}

246 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ölöe
 
	$dîefGPå
(
T
* 
±r
)

248 i‡(
±r
)

249 
	`g_obje˘_uƒef
(
±r
);

250 
	}
}

254 
usög
 
	gWTF
::
GRefPå
;

255 
usög
 
	gWTF
::
ad›tGRef
;

	@gobject/GTypedefs.h

20 #i‚de‡
GtkTy≥defs_h


21 
	#GtkTy≥defs_h


	)

24 #ifde‡ 
__˝lu•lus


26 
	tgch¨
;

27 
	tgdoubÀ
;

28 
	tgÊﬂt
;

29 
	tgöt
;

30 
göt
 
	tgboﬁón
;

31 
	tgl⁄g
;

32 
	tgsh‹t
;

33 
	tguch¨
;

34 
	tguöt
;

35 
	tgul⁄g
;

36 
	tgush‹t
;

37 * 
	tgpoöãr
;

39 
_GAsyncResu…
 
	tGAsyncResu…
;

40 
_GC™˚ŒabÀ
 
	tGC™˚ŒabÀ
;

41 
_GCh¨£tC⁄vîãr
 
	tGCh¨£tC⁄vîãr
;

42 
_GDú
 
	tGDú
;

43 
_GdkAtom
* 
	tGdkAtom
;

44 
_GdkCurs‹
 
	tGdkCurs‹
;

45 
_GdkDøgC⁄ãxt
 
	tGdkDøgC⁄ãxt
;

46 
_GdkEvítC⁄figuª
 
	tGdkEvítC⁄figuª
;

47 
_GdkEvítExpo£
 
	tGdkEvítExpo£
;

48 
_GdkPixbuf
 
	tGdkPixbuf
;

49 
_GEº‹
 
	tGEº‹
;

50 
_GFûe
 
	tGFûe
;

51 
_GHashTabÀ
 
	tGHashTabÀ
;

52 
_GI≈utSåóm
 
	tGI≈utSåóm
;

53 
_GLi°
 
	tGLi°
;

54 
_GMaöC⁄ãxt
 
	tGMaöC⁄ãxt
;

55 
_GMaöLo›
 
	tGMaöLo›
;

56 
_GP©ã∫S≥c
 
	tGP©ã∫S≥c
;

57 
_GPﬁœbÀOuçutSåóm
 
	tGPﬁœbÀOuçutSåóm
;

58 
_GSLi°
 
	tGSLi°
;

59 
_GSockëClõ¡
 
	tGSockëClõ¡
;

60 
_GSockëC⁄√˘i⁄
 
	tGSockëC⁄√˘i⁄
;

61 
_GSour˚
 
	tGSour˚
;

62 
_GV¨ü¡
 
	tGV¨ü¡
;

63 
_GdkEvít
 
	tGdkEvít
;

64 
_GTimî
 
	tGTimî
;

65 
_GKeyFûe
 
	tGKeyFûe
;

66 
_GPåAºay
 
	tGPåAºay
;

67 
_GByãAºay
 
	tGByãAºay
;

68 
_GByãs
 
	tGByãs
;

69 
_GClosuª
 
	tGClosuª
;

71 #i‡
USE
(
CAIRO
)

72 
_ˇúo_surÁ˚
 
	tˇúo_surÁ˚_t
;

73 
_ˇúo_ª˘™gÀ_öt
 
	tˇúo_ª˘™gÀ_öt_t
;

76 #i‡
USE
(
CLUTTER
)

77 
_CluâîA˘‹
 
	tCluâîA˘‹
;

78 
_GøphicsLayîA˘‹
 
	tGøphicsLayîA˘‹
;

81 #i‡
PLATFORM
(
GTK
)

82 
_GtkA˘i⁄
 
	tGtkA˘i⁄
;

83 
_GtkAdju°mít
 
	tGtkAdju°mít
;

84 
_GtkB‹dî
 
	tGtkB‹dî
;

85 
_GtkClùbﬂrd
 
	tGtkClùbﬂrd
;

86 
_GtkC⁄èöî
 
	tGtkC⁄èöî
;

87 
_GtkIc⁄Info
 
	tGtkIc⁄Info
;

88 
_GtkMíu
 
	tGtkMíu
;

89 
_GtkMíuIãm
 
	tGtkMíuIãm
;

90 
_GtkObje˘
 
	tGtkObje˘
;

91 
_GtkSñe˘i⁄D©a
 
	tGtkSñe˘i⁄D©a
;

92 
_GtkStyÀ
 
	tGtkStyÀ
;

93 
_GtkT¨gëLi°
 
	tGtkT¨gëLi°
;

94 
_GtkThemeP¨ts
 
	tGtkThemeP¨ts
;

95 
_GtkWidgë
 
	tGtkWidgë
;

96 
_GtkWödow
 
	tGtkWödow
;

98 #ifde‡
GTK_API_VERSION_2


99 
_GdkRe˘™gÀ
 
	tGdkRe˘™gÀ
;

100 
_GdkDøwabÀ
 
	tGdkWödow
;

102 
_GdkWödow
 
	tGdkWödow
;

103 
_GtkStyÀC⁄ãxt
 
	tGtkStyÀC⁄ãxt
;

	@gobject/GUniquePtr.h

21 #i‚de‡
GUniquePå_h


22 
	#GUniquePå_h


	)

24 #i‡
USE
(
GLIB
)

26 
	~<gio/gio.h
>

27 
	~<wtf/N⁄c›yabÀ.h
>

29 
«me•a˚
 
	gWTF
 {

31 
	gãm∂©e
<
ty≥«me
 
	gT
>

32 
	sGPåDñëî
 {

33 
›î©‹
()(
T
* 
	g±r
Ëc⁄° { 
g_‰ì
(
±r
); }

36 
	gãm∂©e
<
ty≥«me
 
	gT
>

37 
usög
 
	gGUniquePå
 = 
°d
::
unique_±r
<
T
, 
	gGPåDñëî
<
	gT
>>;

39 
	#FOR_EACH_GLIB_DELETER
(
ma¸o
) \

40 
	`ma¸o
(
GEº‹
, 
g_îr‹_‰ì
) \

41 
	`ma¸o
(
GLi°
, 
g_li°_‰ì
) \

42 
	`ma¸o
(
GSLi°
, 
g_¶i°_‰ì
) \

43 
	`ma¸o
(
GP©ã∫S≥c
, 
g_∑âîn_•ec_‰ì
) \

44 
	`ma¸o
(
GDú
, 
g_dú_˛o£
) \

45 
	`ma¸o
(
GTimî
, 
g_timî_de°roy
) \

46 
	`ma¸o
(
GKeyFûe
, 
g_key_fûe_‰ì
)

	)

48 
	#WTF_DEFINE_GPTR_DELETER
(
ty≥Name
, 
dñëîFunc
) \

49 
ãm∂©e
<> 
GPåDñëî
<
ty≥Name
> \

51 
	`›î©‹
(Ë(
ty≥Name
* 
±r
) const \

53 i‡(
±r
) \

54 
	`dñëîFunc
(
±r
); \

56 };

	)

58 
FOR_EACH_GLIB_DELETER
(
WTF_DEFINE_GPTR_DELETER
)

59 #unde‡
FOR_EACH_GLIB_DELETER


61 
	gãm∂©e
 <
ty≥«me
 
	gT
> cœs†
	cGUniqueOutPå
 {

62 
WTF_MAKE_NONCOPYABLE
(
GUniqueOutPå
);

63 
	gpublic
:

64 
GUniqueOutPå
()

65 : 
m_±r
(
nuŒ±r
)

69 ~
GUniqueOutPå
()

71 
ª£t
();

74 
	gT
*& 
outPå
()

76 
ª£t
();

77  
	gm_±r
;

80 
	gGUniquePå
<
	gT
> 
ªÀa£
()

82 
	gGUniquePå
<
	gT
> 
±r
(
m_±r
);

83 
	gm_±r
 = 
nuŒ±r
;

84  
	g±r
;

87 
	gT
& 
	g›î©‹
*() const

89 
ASSERT
(
m_±r
);

90  *
	gm_±r
;

93 
T
* 
	g›î©‹
->() const

95 
ASSERT
(
m_±r
);

96  
	gm_±r
;

99 
T
* 
gë
(Ëc⁄° {  
	gm_±r
; }

101 
boﬁ
 
	g›î©‹
!(Ëc⁄° {  !
	gm_±r
; }

104 
T
* 
	tGUniqueOutPå
::*
	tUn•ecifõdBoﬁTy≥
;

105 
›î©‹
 
Un•ecifõdBoﬁTy≥
(Ëc⁄° {  
	gm_±r
 ? &
	gGUniqueOutPå
::
m_±r
 : 0; }

107 
	g¥iv©e
:

108 
ª£t
()

110 i‡(
m_±r
) {

111 
GUniquePå
<
T
> 
dñëePå
(
m_±r
);

112 
	gm_±r
 = 
nuŒ±r
;

116 
T
* 
	gm_±r
;

121 
usög
 
	gWTF
::
GUniquePå
;

122 
usög
 
	gWTF
::
GUniqueOutPå
;

	@gobject/GlibUtilities.cpp

20 
	~"c⁄fig.h
"

21 
	~"GlibUtûôõs.h
"

23 #i‡
OS
(
WINDOWS
)

24 
	~<wödows.h
>

25 
	~<wtf/ãxt/WTFSåög.h
>

27 
	~<limôs.h
>

28 
	~<uni°d.h
>

31 #i‡
OS
(
LINUX
)

32 
CSåög
 
	$gëCuºítExecuèbÀP©h
()

34 
ªadLökBuf„r
[
PATH_MAX
];

35 
ssize_t
 
ªsu…
 = 
	`ªadlök
("/¥oc/£lf/exe", 
ªadLökBuf„r
, 
PATH_MAX
);

36 i‡(
ªsu…
 == -1)

37  
	`CSåög
();

38  
	`CSåög
(
ªadLökBuf„r
, 
ªsu…
);

39 
	}
}

40 #ñi‡
OS
(
HURD
)

41 
CSåög
 
	$gëCuºítExecuèbÀP©h
()

43  
	`CSåög
();

44 
	}
}

45 #ñi‡
OS
(
UNIX
)

46 
CSåög
 
	$gëCuºítExecuèbÀP©h
()

48 
ªadLökBuf„r
[
PATH_MAX
];

49 
ssize_t
 
ªsu…
 = 
	`ªadlök
("/¥oc/cuΩroc/fûe", 
ªadLökBuf„r
, 
PATH_MAX
);

50 i‡(
ªsu…
 == -1)

51  
	`CSåög
();

52  
	`CSåög
(
ªadLökBuf„r
, 
ªsu…
);

53 
	}
}

54 #ñi‡
OS
(
WINDOWS
)

55 
CSåög
 
	$gëCuºítExecuèbÀP©h
()

57 
WCHAR
 
buf„r
[
MAX_PATH
];

58 
DWORD
 
Àngth
 = 
	`GëModuÀFûeNameW
(0, 
buf„r
, 
MAX_PATH
);

59 i‡(!
Àngth
 || (Àngth =
MAX_PATH
 && 
	`GëLa°Eº‹
(Ë=
ERROR_INSUFFICIENT_BUFFER
))

60  
	`CSåög
();

62 
Såög
 
	`∑th
(
buf„r
, 
Àngth
);

63  
∑th
.
	`utf8
();

64 
	}
}

	@gobject/GlibUtilities.h

20 #i‚de‡
GlibUtûôõs_h


21 
	#GlibUtûôõs_h


	)

23 
	~<wtf/As£πi⁄s.h
>

24 
	~<wtf/ãxt/CSåög.h
>

26 
CSåög
 
gëCuºítExecuèbÀP©h
();

	@gtk/MainThreadGtk.cpp

30 
	~"c⁄fig.h
"

31 
	~"MaöThªad.h
"

33 
	~<wtf/gobje˘/GMaöLo›Sour˚.h
>

35 
«me•a˚
 
	gWTF
 {

37 
öôülizeMaöThªadPœtf‹m
()

41 
scheduÀDi•©chFun˘i⁄sOnMaöThªad
()

43 
	gGMaöLo›Sour˚
::
scheduÀAndDñëeOnDe°roy
("[WebKô] di•©chFun˘i⁄sFromMaöThªad", 
°d
::
fun˘i⁄
<()>(
di•©chFun˘i⁄sFromMaöThªad
));

	@gtk/RunLoopGtk.cpp

27 
	~"c⁄fig.h
"

28 
	~"RunLo›.h
"

30 
	~<glib.h
>

31 
	~<wtf/MaöThªad.h
>

33 
«me•a˚
 
	gWTF
 {

35 
	gRunLo›
::
RunLo›
()

38 
m_runLo›C⁄ãxt
 = 
isMaöThªad
(Ë? 
g_maö_c⁄ãxt_deÁu…
(Ë: 
ad›tGRef
(
g_maö_c⁄ãxt_√w
());

39 
ASSERT
(
m_runLo›C⁄ãxt
);

40 
	gGRefPå
<
	gGMaöLo›
> 
	gö√rmo°Lo›
 = 
ad›tGRef
(
g_maö_lo›_√w
(
m_runLo›C⁄ãxt
.
gë
(), 
FALSE
));

41 
ASSERT
(
ö√rmo°Lo›
);

42 
	gm_runLo›MaöLo›s
.
≠≥nd
(
ö√rmo°Lo›
);

45 
	gRunLo›
::~
RunLo›
()

47 
i
 = 
m_runLo›MaöLo›s
.
size
(Ë- 1; 
	gi
 >= 0; --i) {

48 i‡(!
g_maö_lo›_is_ru¬ög
(
m_runLo›MaöLo›s
[
i
].
gë
()))

50 
g_maö_lo›_quô
(
m_runLo›MaöLo›s
[
i
].
gë
());

54 
	gRunLo›
::
run
()

56 
RunLo›
& 
maöRunLo›
 = RunLo›::
cuºít
();

57 
GMaöLo›
* 
	gö√rmo°Lo›
 = 
maöRunLo›
.
ö√rmo°Lo›
();

58 i‡(!
g_maö_lo›_is_ru¬ög
(
ö√rmo°Lo›
)) {

59 
g_maö_lo›_run
(
ö√rmo°Lo›
);

64 
GMaöLo›
* 
	g√°edMaöLo›
 = 
g_maö_lo›_√w
(0, 
FALSE
);

65 
	gmaöRunLo›
.
pushNe°edMaöLo›
(
√°edMaöLo›
);

66 
g_maö_lo›_run
(
√°edMaöLo›
);

67 
	gmaöRunLo›
.
p›Ne°edMaöLo›
();

70 
GMaöLo›
* 
	gRunLo›
::
ö√rmo°Lo›
()

73 
ASSERT
(!
m_runLo›MaöLo›s
.
isEm±y
());

74  
	gm_runLo›MaöLo›s
[0].
gë
();

77 
	gRunLo›
::
pushNe°edMaöLo›
(
GMaöLo›
* 
√°edLo›
)

80 
ASSERT
(!
m_runLo›MaöLo›s
.
isEm±y
());

81 
	gm_runLo›MaöLo›s
.
≠≥nd
(
ad›tGRef
(
√°edLo›
));

84 
	gRunLo›
::
p›Ne°edMaöLo›
()

87 
ASSERT
(!
m_runLo›MaöLo›s
.
isEm±y
());

88 
	gm_runLo›MaöLo›s
.
ªmoveLa°
();

91 
	gRunLo›
::
°›
()

94 
ASSERT
(!
m_runLo›MaöLo›s
.
isEm±y
());

95 
	gGRefPå
<
	gGMaöLo›
> 
	gœ°MaöLo›
 = 
m_runLo›MaöLo›s
.
œ°
();

96 i‡(
g_maö_lo›_is_ru¬ög
(
œ°MaöLo›
.
gë
()))

97 
g_maö_lo›_quô
(
œ°MaöLo›
.
gë
());

100 
	gRunLo›
::
wakeUp
()

102 
RefPå
<
RunLo›
> 
runLo›
(
this
);

103 
	gGMaöLo›Sour˚
::
scheduÀAndDñëeOnDe°roy
("[WebKô] RunLo› w‹k", 
°d
::
fun˘i⁄
<()>([
runLo›
] {

104 
runLo›
->
≥rf‹mW‹k
();

105 }), 
G_PRIORITY_DEFAULT
, 
nuŒ±r
, 
m_runLo›C⁄ãxt
.
gë
());

106 
g_maö_c⁄ãxt_wakeup
(
m_runLo›C⁄ãxt
.
gë
());

109 
	gRunLo›
::
TimîBa£
::TimîBa£(
RunLo›
& 
runLo›
)

110 : 
m_runLo›
(
runLo›
)

114 
RunLo›
::
TimîBa£
::~TimerBase()

116 
°›
();

119 
	gRunLo›
::
TimîBa£
::
°¨t
(
fúeI¡îvÆ
, 
boﬁ
 
ª≥©
)

121 
	gm_timîSour˚
.
scheduÀA·îDñay
("[WebKô] RunLo›::Timî", 
°d
::
fun˘i⁄
<
boﬁ
 ()>([
this
, 
ª≥©
] { 
fúed
(); Ñepeat; }),

122 
°d
::
chr⁄o
::
duøti⁄_ˇ°
<°d::chr⁄o::
mûli£c⁄ds
>(°d::chr⁄o::
duøti⁄
<>(
fúeI¡îvÆ
)), 
G_PRIORITY_DEFAULT
, 
nuŒ±r
, 
m_runLo›
.
m_runLo›C⁄ãxt
.
gë
());

125 
	gRunLo›
::
TimîBa£
::
°›
()

127 
m_timîSour˚
.
ˇn˚l
();

130 
boﬁ
 
	gRunLo›
::
TimîBa£
::
isA˘ive
() const

132  
m_timîSour˚
.
isScheduÀd
();

	@ios/WebCoreThread.cpp

26 
	~"c⁄fig.h
"

27 
	~"WebC‹eThªad.h
"

29 #i‡
USE
(
WEB_THREAD
)

30 
WTF_EXPORT_PRIVATE
 
	$boﬁ
 (*
WebC‹eWebThªadIsLockedOrDißbÀd
)();

31 
WTF_EXPORT_PRIVATE
 
	$boﬁ
 (*
WebC‹eWebThªadIsE«bÀd
)();

32 
WTF_EXPORT_PRIVATE
 (*
WebC‹eWebThªadRun
)((^
block
)());

33 
WTF_EXPORT_PRIVATE
 (*
WebC‹eWebThªadRunSync
)((^
block
)());

	@ios/WebCoreThread.h

28 #i‚de‡
WTF_WebC‹eThªad_h


29 
	#WTF_WebC‹eThªad_h


	)

31 #ifde‡
__˝lu•lus


35 
boﬁ
 (*
WebC‹eWebThªadIsLockedOrDißbÀd
)();

36 
boﬁ
 (*
WebC‹eWebThªadIsE«bÀd
)();

37 (*
WebC‹eWebThªadRun
)((^
block
)());

38 (*
WebC‹eWebThªadRunSync
)((^
block
)());

40 #ifde‡
__˝lu•lus


	@mbmalloc.cpp

26 
	~"c⁄fig.h
"

27 
	~"Fa°MÆloc.h
"

29 
	#EXPORT
 
	`__©åibuã__
((
	`visibûôy
("deÁu…")))

	)

33 
EXPORT
 * 
mbmÆloc
(
size_t
);

34 
EXPORT
 
mb‰ì
(*, 
size_t
);

35 
EXPORT
 * 
mbªÆloc
(*, 
size_t
, size_t);

36 
EXPORT
 
mbsˇvíge
();

38 * 
mbmÆloc
(
size_t
 
size
)

40  
WTF
::
Á°MÆloc
(
size
);

43 
mb‰ì
(* 
p
, 
size_t
)

45  
WTF
::
Á°Fªe
(
p
);

48 * 
mbªÆloc
(* 
p
, 
size_t
, size_à
size
)

50  
WTF
::
Á°RóŒoc
(
p
, 
size
);

53 
mbsˇvíge
()

55 
WTF
::
ªÀa£Fa°MÆlocFªeMem‹y
();

	@text/ASCIIFastPath.h

22 #i‚de‡
ASCIIFa°P©h_h


23 
	#ASCIIFa°P©h_h


	)

25 
	~<°döt.h
>

26 
	~<unicode/uty≥s.h
>

27 
	~<wtf/StdLibExåas.h
>

28 
	~<wtf/ãxt/LCh¨.h
>

30 #i‡
OS
(
DARWIN
Ë&& (
CPU
(
X86
Ë|| CPU(
X86_64
))

31 
	~<emmöåö.h
>

34 
«me•a˚
 
	gWTF
 {

36 
	gãm∂©e
 <
uöçå_t
 
	gmask
>

37 
ölöe
 
boﬁ
 
isAlig√dTo
(c⁄° * 
poöãr
)

39  !(
	gªöãΩªt_ˇ°
<
	guöçå_t
>(
	gpoöãr
Ë& 
	gmask
);

44 
uöçå_t
 
	tMachöeW‹d
;

45 c⁄° 
uöçå_t
 
	gmachöeW‹dAlignmítMask
 = (
MachöeW‹d
) - 1;

47 
ölöe
 
boﬁ
 
isAlig√dToMachöeW‹d
(c⁄° * 
poöãr
)

49  
	gisAlig√dTo
<
	gmachöeW‹dAlignmítMask
>(
	gpoöãr
);

52 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
T
* 
ÆignToMachöeW‹d
(T* 
poöãr
)

54  
	gªöãΩªt_ˇ°
<
	gT
*>‘eöãΩªt_ˇ°<
	guöçå_t
>(
	gpoöãr
Ë& ~
	gmachöeW‹dAlignmítMask
);

57 
	gãm∂©e
<
size_t
 
	gsize
, 
ty≥«me
 
	gCh¨a˘îTy≥
> 
	gN⁄ASCIIMask
;

58 
	gãm∂©e
<> 
	gN⁄ASCIIMask
<4, 
	gUCh¨
> {

59 
ölöe
 
uöt32_t
 
vÆue
() {  0xFF80FF80U; }

61 
	gãm∂©e
<> 
	gN⁄ASCIIMask
<4, 
	gLCh¨
> {

62 
ölöe
 
uöt32_t
 
vÆue
() {  0x80808080U; }

64 
	gãm∂©e
<> 
	gN⁄ASCIIMask
<8, 
	gUCh¨
> {

65 
ölöe
 
uöt64_t
 
vÆue
() {  0xFF80FF80FF80FF80ULL; }

67 
	gãm∂©e
<> 
	gN⁄ASCIIMask
<8, 
	gLCh¨
> {

68 
ölöe
 
uöt64_t
 
vÆue
() {  0x8080808080808080ULL; }

72 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
>

73 
ölöe
 
boﬁ
 
isAŒASCII
(
MachöeW‹d
 
w‹d
)

75  !(
	gw‹d
 & 
	gN⁄ASCIIMask
<(
	gMachöeW‹d
), 
	gCh¨a˘îTy≥
>::
vÆue
());

80 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
>

81 
ölöe
 
boﬁ
 
ch¨a˘îsAªAŒASCII
(c⁄° 
Ch¨a˘îTy≥
* 
ch¨a˘îs
, 
size_t
 
Àngth
)

83 
MachöeW‹d
 
	gÆlCh¨Bôs
 = 0;

84 c⁄° 
Ch¨a˘îTy≥
* 
	gíd
 = 
ch¨a˘îs
 + 
Àngth
;

87 !
isAlig√dToMachöeW‹d
(
ch¨a˘îs
Ë&& 
	gch¨a˘îs
 !
íd
) {

88 
ÆlCh¨Bôs
 |*
ch¨a˘îs
;

89 ++
	gch¨a˘îs
;

93 c⁄° 
Ch¨a˘îTy≥
* 
	gw‹dEnd
 = 
ÆignToMachöeW‹d
(
íd
);

94 c⁄° 
size_t
 
	glo›In¸emít
 = (
MachöeW‹d
Ë/ (
Ch¨a˘îTy≥
);

95 
	gch¨a˘îs
 < 
	gw‹dEnd
) {

96 
	gÆlCh¨Bôs
 |*(
ªöãΩªt_ˇ°_±r
<c⁄° 
MachöeW‹d
*>(
ch¨a˘îs
));

97 
	gch¨a˘îs
 +
lo›In¸emít
;

101 
	gch¨a˘îs
 !
íd
) {

102 
ÆlCh¨Bôs
 |*
ch¨a˘îs
;

103 ++
	gch¨a˘îs
;

106 
MachöeW‹d
 
	gn⁄ASCIIBôMask
 = 
N⁄ASCIIMask
<(MachöeW‹d), 
	gCh¨a˘îTy≥
>::
vÆue
();

107  !(
	gÆlCh¨Bôs
 & 
	gn⁄ASCIIBôMask
);

110 
ölöe
 
c›yLCh¨sFromUCh¨Sour˚
(
LCh¨
* 
de°ö©i⁄
, c⁄° 
UCh¨
* 
sour˚
, 
size_t
 
Àngth
)

112 #i‡
OS
(
DARWIN
Ë&& (
CPU
(
X86
Ë|| CPU(
X86_64
))

113 c⁄° 
uöçå_t
 
	gmem‹yAc˚ssSize
 = 16;

114 c⁄° 
uöçå_t
 
	gmem‹yAc˚ssMask
 = 
mem‹yAc˚ssSize
 - 1;

116 
size_t
 
	gi
 = 0;

117 ;
	gi
 < 
	gÀngth
 && !
	gisAlig√dTo
<
	gmem‹yAc˚ssMask
>(&
	gsour˚
[
i
]); ++i) {

118 
ASSERT
(!(
sour˚
[
i
] & 0xff00));

119 
	gde°ö©i⁄
[
i
] = 
°©ic_ˇ°
<
LCh¨
>(
sour˚
[i]);

122 c⁄° 
uöçå_t
 
	gsour˚LﬂdSize
 = 32;

123 c⁄° 
size_t
 
	guch¨sPîLo›
 = 
sour˚LﬂdSize
 / (
UCh¨
);

124 i‡(
	gÀngth
 > 
	guch¨sPîLo›
) {

125 c⁄° 
size_t
 
	gídLígth
 = 
Àngth
 - 
uch¨sPîLo›
 + 1;

126 ; 
	gi
 < 
	gídLígth
; i +
uch¨sPîLo›
) {

127 #i‚de‡
NDEBUG


128 
checkIndex
 = 0; 
	gcheckIndex
 < 
	guch¨sPîLo›
; ++checkIndex)

129 
ASSERT
(!(
sour˚
[
i
+
checkIndex
] & 0xff00));

131 
__m128i
 
	gfú°8UCh¨s
 = 
_mm_lﬂd_si128
(
ªöãΩªt_ˇ°
<c⁄° __m128i*>(&
sour˚
[
i
]));

132 
__m128i
 
	g£c⁄d8UCh¨s
 = 
_mm_lﬂd_si128
(
ªöãΩªt_ˇ°
<c⁄° __m128i*>(&
sour˚
[
i
+8]));

133 
__m128i
 
	g∑ckedCh¨s
 = 
_mm_∑ckus_ïi16
(
fú°8UCh¨s
, 
£c⁄d8UCh¨s
);

134 
_mm_°‹eu_si128
(
ªöãΩªt_ˇ°
<
__m128i
*>(&
de°ö©i⁄
[
i
]), 
∑ckedCh¨s
);

138 ; 
	gi
 < 
	gÀngth
; ++i) {

139 
ASSERT
(!(
sour˚
[
i
] & 0xff00));

140 
	gde°ö©i⁄
[
i
] = 
°©ic_ˇ°
<
LCh¨
>(
sour˚
[i]);

142 #ñi‡
COMPILER
(
GCC
Ë&& 
CPU
(
ARM64
Ë&& 
deföed
(
NDEBUG
)

143 c⁄° 
LCh¨
* c⁄° 
	gíd
 = 
de°ö©i⁄
 + 
Àngth
;

144 c⁄° 
uöçå_t
 
	gmem‹yAc˚ssSize
 = 16;

146 i‡(
	gÀngth
 >
mem‹yAc˚ssSize
) {

147 c⁄° 
uöçå_t
 
mem‹yAc˚ssMask
 = 
mem‹yAc˚ssSize
 - 1;

150 c⁄° 
uöçå_t
 
	gÀngthLe·
 = 
íd
 - 
de°ö©i⁄
;

151 c⁄° 
LCh¨
* c⁄° 
	gsimdEnd
 = 
de°ö©i⁄
 + (
ÀngthLe·
 & ~
mem‹yAc˚ssMask
);

153 
asm
("ld2 { v0.16B, v1.16B }, [%[SOURCE]], #32\n\t"

155 : [
SOURCE
]"+r" (
sour˚
), [
DESTINATION
]"+r" (
de°ö©i⁄
)

158 } 
	gde°ö©i⁄
 !
simdEnd
);

161 
	gde°ö©i⁄
 !
íd
)

162 *
de°ö©i⁄
++ = 
°©ic_ˇ°
<
LCh¨
>(*
sour˚
++);

163 #ñi‡
COMPILER
(
GCC
Ë&& 
CPU
(
ARM_NEON
Ë&& !(CPU(
BIG_ENDIAN
Ë|| CPU(
MIDDLE_ENDIAN
)Ë&& 
deföed
(
NDEBUG
)

164 c⁄° 
LCh¨
* c⁄° 
	gíd
 = 
de°ö©i⁄
 + 
Àngth
;

165 c⁄° 
uöçå_t
 
	gmem‹yAc˚ssSize
 = 8;

167 i‡(
	gÀngth
 >(2 * 
mem‹yAc˚ssSize
) - 1) {

169 c⁄° 
uöçå_t
 
mem‹yAc˚ssMask
 = 
mem‹yAc˚ssSize
 - 1;

170 !
	gisAlig√dTo
<
	gmem‹yAc˚ssMask
>(
	gde°ö©i⁄
))

171 *
	gde°ö©i⁄
++ = 
°©ic_ˇ°
<
LCh¨
>(*
sour˚
++);

174 c⁄° 
uöçå_t
 
	gÀngthLe·
 = 
íd
 - 
de°ö©i⁄
;

175 c⁄° 
LCh¨
* c⁄° 
	gsimdEnd
 = 
íd
 - (
ÀngthLe·
 % 
mem‹yAc˚ssSize
);

177 
asm
("vld2.8 { d0-d1 }, [%[SOURCE]] !\n\t"

179 : [
SOURCE
]"+r" (
sour˚
), [
DESTINATION
]"+r" (
de°ö©i⁄
)

182 } 
	gde°ö©i⁄
 !
simdEnd
);

185 
	gde°ö©i⁄
 !
íd
)

186 *
de°ö©i⁄
++ = 
°©ic_ˇ°
<
LCh¨
>(*
sour˚
++);

188 
size_t
 
	gi
 = 0; i < 
	gÀngth
; ++i) {

189 
ASSERT
(!(
sour˚
[
i
] & 0xff00));

190 
	gde°ö©i⁄
[
i
] = 
°©ic_ˇ°
<
LCh¨
>(
sour˚
[i]);

	@text/AtomicString.cpp

23 
	~"c⁄fig.h
"

24 
	~"AtomicSåög.h
"

26 
	~"AtomicSåögTabÀ.h
"

27 
	~"HashSë.h
"

28 
	~"I¡egîToSåögC⁄vîsi⁄.h
"

29 
	~"SåögHash.h
"

30 
	~"Thªadög.h
"

31 
	~"WTFThªadD©a.h
"

32 
	~"dtﬂ.h
"

33 
	~<wtf/unicode/UTF8.h
>

36 #i‡
USE
(
WEB_THREAD
Ë|| 
ENABLE
(
VMOLAB
)

37 
	~"TCSpöLock.h
"

40 
«me•a˚
 
	gWTF
 {

42 
usög
 
«me•a˚
 
	gUnicode
;

44 
°©ic_as£π
((
AtomicSåög
Ë=(
Såög
), "AtomicStringánd String must be same size!");

47 #i‡
USE
(
WEB_THREAD
Ë|| 
ENABLE
(
VMOLAB
)

49 ˛as†
	cAtomicSåögTabÀLockî
 : 
public
 
SpöLockHﬁdî
 {

50 
WTF_MAKE_NONCOPYABLE
(
AtomicSåögTabÀLockî
);

52 
SpöLock
 
	gs_°rögTabÀLock
;

53 
	gpublic
:

54 
AtomicSåögTabÀLockî
()

55 : 
SpöLockHﬁdî
(&
s_°rögTabÀLock
)

60 
SpöLock
 
	gAtomicSåögTabÀLockî
::
s_°rögTabÀLock
 = 
SPINLOCK_INITIALIZER
;

64 ˛as†
	cAtomicSåögTabÀLockî
 {

65 
WTF_MAKE_NONCOPYABLE
(
AtomicSåögTabÀLockî
);

66 
	gpublic
:

67 
AtomicSåögTabÀLockî
() { }

72 
ALWAYS_INLINE
 
	gHashSë
<
	gSåögIm∂
*>& 
	$°rögTabÀ
()

74  
	`wtfThªadD©a
().
	`©omicSåögTabÀ
()->
	`èbÀ
();

75 
	}
}

77 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gHashTøn¶©‹
>

78 
ölöe
 
	gPassRefPå
<
	gSåögIm∂
> 
	$addToSåögTabÀ
(c⁄° 
T
& 
vÆue
)

80 
AtomicSåögTabÀLockî
 
lockî
;

82 
HashSë
<
SåögIm∂
*>::
AddResu…
 
addResu…
 = 
	`°rögTabÀ
().
add
<
HashTøn¶©‹
>(
vÆue
);

86  
addResu…
.
isNewE¡ry
 ? 
	`ad›tRef
(*addResu….
ôî©‹
) : *addResult.iterator;

87 
	}
}

89 
	sCSåögTøn¶©‹
 {

90 
hash
(c⁄° 
LCh¨
* 
c
)

92  
	gSåögHashî
::
compuãHashAndMaskT›8Bôs
(
c
);

95 
ölöe
 
boﬁ
 
equÆ
(
SåögIm∂
* 
r
, c⁄° 
LCh¨
* 
s
)

97  
	gWTF
::
equÆ
(
r
, 
s
);

100 
å™¶©e
(
SåögIm∂
*& 
loˇti⁄
, c⁄° 
LCh¨
* c⁄°& 
c
, 
hash
)

102 
	gloˇti⁄
 = &
SåögIm∂
::
¸óã
(
c
).
ÀakRef
();

103 
	gloˇti⁄
->
£tHash
(
hash
);

104 
	gloˇti⁄
->
£tIsAtomic
(
åue
);

108 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
	$add
(c⁄° 
LCh¨
* 
c
)

110 i‡(!
c
)

112 i‡(!*
c
)

113  
SåögIm∂
::
	`em±y
();

115  
addToSåögTabÀ
<c⁄° 
LCh¨
*, 
CSåögTøn¶©‹
>(
c
);

116 
	}
}

118 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
>

119 
	sHashTøn¶©‹Ch¨Buf„r
 {

120 c⁄° 
Ch¨a˘îTy≥
* 
	gs
;

121 
	gÀngth
;

124 
	gHashTøn¶©‹Ch¨Buf„r
<
	tUCh¨
> 
	tUCh¨Buf„r
;

125 
	sUCh¨Buf„rTøn¶©‹
 {

126 
hash
(c⁄° 
UCh¨Buf„r
& 
buf
)

128  
	gSåögHashî
::
compuãHashAndMaskT›8Bôs
(
buf
.
s
, buf.
Àngth
);

131 
boﬁ
 
equÆ
(
SåögIm∂
* c⁄°& 
°r
, c⁄° 
UCh¨Buf„r
& 
buf
)

133  
	gWTF
::
equÆ
(
°r
, 
buf
.
s
, buf.
Àngth
);

136 
å™¶©e
(
SåögIm∂
*& 
loˇti⁄
, c⁄° 
UCh¨Buf„r
& 
buf
, 
hash
)

138 
	gloˇti⁄
 = &
SåögIm∂
::
¸óã8BôIfPossibÀ
(
buf
.
s
, buf.
Àngth
).
ÀakRef
();

139 
	gloˇti⁄
->
£tHash
(
hash
);

140 
	gloˇti⁄
->
£tIsAtomic
(
åue
);

144 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
>

145 
	sHashAndCh¨a˘îs
 {

146 
	ghash
;

147 c⁄° 
Ch¨a˘îTy≥
* 
	gch¨a˘îs
;

148 
	gÀngth
;

151 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
>

152 
	sHashAndCh¨a˘îsTøn¶©‹
 {

153 
hash
(c⁄° 
HashAndCh¨a˘îs
<
Ch¨a˘îTy≥
>& 
buf„r
)

155 
ASSERT
(
buf„r
.
hash
 =
SåögHashî
::
compuãHashAndMaskT›8Bôs
(buf„r.
ch¨a˘îs
, buf„r.
Àngth
));

156  
	gbuf„r
.
	ghash
;

159 
boﬁ
 
equÆ
(
SåögIm∂
* c⁄°& 
°rög
, c⁄° 
HashAndCh¨a˘îs
<
Ch¨a˘îTy≥
>& 
buf„r
)

161  
	gWTF
::
equÆ
(
°rög
, 
buf„r
.
ch¨a˘îs
, buf„r.
Àngth
);

164 
å™¶©e
(
SåögIm∂
*& 
loˇti⁄
, c⁄° 
HashAndCh¨a˘îs
<
Ch¨a˘îTy≥
>& 
buf„r
, 
hash
)

166 
	gloˇti⁄
 = &
SåögIm∂
::
¸óã
(
buf„r
.
ch¨a˘îs
, buf„r.
Àngth
).
ÀakRef
();

167 
	gloˇti⁄
->
£tHash
(
hash
);

168 
	gloˇti⁄
->
£tIsAtomic
(
åue
);

172 
	sHashAndUTF8Ch¨a˘îs
 {

173 
	ghash
;

174 c⁄° * 
	gch¨a˘îs
;

175 
	gÀngth
;

176 
	gutf16Lígth
;

179 
	sHashAndUTF8Ch¨a˘îsTøn¶©‹
 {

180 
hash
(c⁄° 
HashAndUTF8Ch¨a˘îs
& 
buf„r
)

182  
	gbuf„r
.
	ghash
;

185 
boﬁ
 
equÆ
(
SåögIm∂
* c⁄°& 
°rög
, c⁄° 
HashAndUTF8Ch¨a˘îs
& 
buf„r
)

187 i‡(
	gbuf„r
.
	gutf16Lígth
 !
°rög
->
Àngth
())

188  
Ál£
;

191 i‡(
	gbuf„r
.
	gutf16Lígth
 !
buf„r
.
Àngth
) {

192 i‡(
°rög
->
is8Bô
())

193  
equÆL©ö1WôhUTF8
(
°rög
->
ch¨a˘îs8
(), 
buf„r
.
ch¨a˘îs
, buf„r.ch¨a˘î†+ buf„r.
Àngth
);

195  
equÆUTF16WôhUTF8
(
°rög
->
ch¨a˘îs16
(), 
buf„r
.
ch¨a˘îs
, buf„r.ch¨a˘î†+ buf„r.
Àngth
);

198 i‡(
	g°rög
->
is8Bô
()) {

199 c⁄° 
LCh¨
* 
	g°rögCh¨a˘îs
 = 
°rög
->
ch¨a˘îs8
();

201 
	gi
 = 0; i < 
	gbuf„r
.
	gÀngth
; ++i) {

202 
ASSERT
(
isASCII
(
buf„r
.
ch¨a˘îs
[
i
]));

203 i‡(
	g°rögCh¨a˘îs
[
i
] !
buf„r
.
ch¨a˘îs
[i])

204  
Ál£
;

207  
	gåue
;

210 c⁄° 
UCh¨
* 
	g°rögCh¨a˘îs
 = 
°rög
->
ch¨a˘îs16
();

212 
	gi
 = 0; i < 
	gbuf„r
.
	gÀngth
; ++i) {

213 
ASSERT
(
isASCII
(
buf„r
.
ch¨a˘îs
[
i
]));

214 i‡(
	g°rögCh¨a˘îs
[
i
] !
buf„r
.
ch¨a˘îs
[i])

215  
Ál£
;

218  
	gåue
;

221 
å™¶©e
(
SåögIm∂
*& 
loˇti⁄
, c⁄° 
HashAndUTF8Ch¨a˘îs
& 
buf„r
, 
hash
)

223 
UCh¨
* 
	gèrgë
;

224 
	gRefPå
<
	gSåögIm∂
> 
	g√wSåög
 = 
SåögIm∂
::
¸óãUnöôülized
(
buf„r
.
utf16Lígth
, 
èrgë
);

226 
boﬁ
 
	gisAŒASCII
;

227 c⁄° * 
	gsour˚
 = 
buf„r
.
ch¨a˘îs
;

228 i‡(
c⁄vîtUTF8ToUTF16
(&
sour˚
, sour˚ + 
buf„r
.
Àngth
, &
èrgë
,Å¨gë + buf„r.
utf16Lígth
, &
isAŒASCII
Ë!
c⁄vîsi⁄OK
)

229 
ASSERT_NOT_REACHED
();

231 i‡(
	gisAŒASCII
)

232 
	g√wSåög
 = 
SåögIm∂
::
¸óã
(
buf„r
.
ch¨a˘îs
, buf„r.
Àngth
);

234 
	gloˇti⁄
 = 
√wSåög
.
ªÀa£
().
ÀakRef
();

235 
	gloˇti⁄
->
£tHash
(
hash
);

236 
	gloˇti⁄
->
£tIsAtomic
(
åue
);

240 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
	$add
(c⁄° 
UCh¨
* 
s
, 
Àngth
)

242 i‡(!
s
)

245 i‡(!
Àngth
)

246  
SåögIm∂
::
	`em±y
();

248 
UCh¨Buf„r
 
buf„r
 = { 
s
, 
Àngth
 };

249  
addToSåögTabÀ
<
UCh¨Buf„r
, 
UCh¨Buf„rTøn¶©‹
>(
buf„r
);

250 
	}
}

252 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
	$add
(c⁄° 
UCh¨
* 
s
, 
Àngth
, 
exi°ögHash
)

254 
	`ASSERT
(
s
);

255 
	`ASSERT
(
exi°ögHash
);

257 i‡(!
Àngth
)

258  
SåögIm∂
::
	`em±y
();

260 
HashAndCh¨a˘îs
<
UCh¨
> 
buf„r
 = { 
exi°ögHash
, 
s
, 
Àngth
 };

261  
addToSåögTabÀ
<
HashAndCh¨a˘îs
<
UCh¨
>, 
HashAndCh¨a˘îsTøn¶©‹
<UCh¨>>(
buf„r
);

262 
	}
}

264 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
	$add
(c⁄° 
UCh¨
* 
s
)

266 i‡(!
s
)

269 
Àngth
 = 0;

270 
s
[
Àngth
] !
	`UCh¨
(0))

271 ++
Àngth
;

273 i‡(!
Àngth
)

274  
SåögIm∂
::
	`em±y
();

276 
UCh¨Buf„r
 
buf„r
 = { 
s
, 
Àngth
 };

277  
addToSåögTabÀ
<
UCh¨Buf„r
, 
UCh¨Buf„rTøn¶©‹
>(
buf„r
);

278 
	}
}

280 
	sSub°rögLoˇti⁄
 {

281 
SåögIm∂
* 
	gba£Såög
;

282 
	g°¨t
;

283 
	gÀngth
;

286 
	sSub°rögTøn¶©‹
 {

287 
å™¶©e
(
SåögIm∂
*& 
loˇti⁄
, c⁄° 
Sub°rögLoˇti⁄
& 
buf„r
, 
hash
)

289 
	gloˇti⁄
 = &
SåögIm∂
::
¸óãSub°rögSh¨ögIm∂
(
buf„r
.
ba£Såög
, buf„r.
°¨t
, buf„r.
Àngth
).
ÀakRef
();

290 
	gloˇti⁄
->
£tHash
(
hash
);

291 
	gloˇti⁄
->
£tIsAtomic
(
åue
);

295 
	gSub°rögTøn¶©‹8
 : 
Sub°rögTøn¶©‹
 {

296 
hash
(c⁄° 
Sub°rögLoˇti⁄
& 
buf„r
)

298  
SåögHashî
::
compuãHashAndMaskT›8Bôs
(
buf„r
.
ba£Såög
->
ch¨a˘îs8
(Ë+ buf„r.
°¨t
, buf„r.
Àngth
);

301 
boﬁ
 
equÆ
(
SåögIm∂
* c⁄°& 
°rög
, c⁄° 
Sub°rögLoˇti⁄
& 
buf„r
)

303  
	gWTF
::
equÆ
(
°rög
, 
buf„r
.
ba£Såög
->
ch¨a˘îs8
(Ë+ buf„r.
°¨t
, buf„r.
Àngth
);

307 
	gSub°rögTøn¶©‹16
 : 
Sub°rögTøn¶©‹
 {

308 
hash
(c⁄° 
Sub°rögLoˇti⁄
& 
buf„r
)

310  
SåögHashî
::
compuãHashAndMaskT›8Bôs
(
buf„r
.
ba£Såög
->
ch¨a˘îs16
(Ë+ buf„r.
°¨t
, buf„r.
Àngth
);

313 
boﬁ
 
equÆ
(
SåögIm∂
* c⁄°& 
°rög
, c⁄° 
Sub°rögLoˇti⁄
& 
buf„r
)

315  
	gWTF
::
equÆ
(
°rög
, 
buf„r
.
ba£Såög
->
ch¨a˘îs16
(Ë+ buf„r.
°¨t
, buf„r.
Àngth
);

319 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
	$add
(
SåögIm∂
* 
ba£Såög
, 
°¨t
, 
Àngth
)

321 i‡(!
ba£Såög
)

322  
nuŒ±r
;

324 i‡(!
Àngth
 || 
°¨t
 >
ba£Såög
->
	`Àngth
())

325  
SåögIm∂
::
	`em±y
();

327 
maxLígth
 = 
ba£Såög
->
	`Àngth
(Ë- 
°¨t
;

328 i‡(
Àngth
 >
maxLígth
) {

329 i‡(!
°¨t
)

330  
	`add
(
ba£Såög
);

331 
Àngth
 = 
maxLígth
;

334 
Sub°rögLoˇti⁄
 
buf„r
 = { 
ba£Såög
, 
°¨t
, 
Àngth
 };

335 i‡(
ba£Såög
->
	`is8Bô
())

336  
addToSåögTabÀ
<
Sub°rögLoˇti⁄
, 
Sub°rögTøn¶©‹8
>(
buf„r
);

337  
addToSåögTabÀ
<
Sub°rögLoˇti⁄
, 
Sub°rögTøn¶©‹16
>(
buf„r
);

338 
	}
}

340 
	gHashTøn¶©‹Ch¨Buf„r
<
	tLCh¨
> 
	tLCh¨Buf„r
;

341 
	sLCh¨Buf„rTøn¶©‹
 {

342 
hash
(c⁄° 
LCh¨Buf„r
& 
buf
)

344  
	gSåögHashî
::
compuãHashAndMaskT›8Bôs
(
buf
.
s
, buf.
Àngth
);

347 
boﬁ
 
equÆ
(
SåögIm∂
* c⁄°& 
°r
, c⁄° 
LCh¨Buf„r
& 
buf
)

349  
	gWTF
::
equÆ
(
°r
, 
buf
.
s
, buf.
Àngth
);

352 
å™¶©e
(
SåögIm∂
*& 
loˇti⁄
, c⁄° 
LCh¨Buf„r
& 
buf
, 
hash
)

354 
	gloˇti⁄
 = &
SåögIm∂
::
¸óã
(
buf
.
s
, buf.
Àngth
).
ÀakRef
();

355 
	gloˇti⁄
->
£tHash
(
hash
);

356 
	gloˇti⁄
->
£tIsAtomic
(
åue
);

360 
	gHashTøn¶©‹Ch¨Buf„r
<> 
	tCh¨Buf„r
;

361 
	sCh¨Buf„rFromLôîÆD©aTøn¶©‹
 {

362 
hash
(c⁄° 
Ch¨Buf„r
& 
buf
)

364  
	gSåögHashî
::
compuãHashAndMaskT›8Bôs
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
buf
.
s
), buf.
Àngth
);

367 
boﬁ
 
equÆ
(
SåögIm∂
* c⁄°& 
°r
, c⁄° 
Ch¨Buf„r
& 
buf
)

369  
	gWTF
::
equÆ
(
°r
, 
buf
.
s
, buf.
Àngth
);

372 
å™¶©e
(
SåögIm∂
*& 
loˇti⁄
, c⁄° 
Ch¨Buf„r
& 
buf
, 
hash
)

374 
	gloˇti⁄
 = &
SåögIm∂
::
¸óãFromLôîÆ
(
buf
.
s
, buf.
Àngth
).
ÀakRef
();

375 
	gloˇti⁄
->
£tHash
(
hash
);

376 
	gloˇti⁄
->
£tIsAtomic
(
åue
);

380 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
	$add
(c⁄° 
LCh¨
* 
s
, 
Àngth
)

382 i‡(!
s
)

385 i‡(!
Àngth
)

386  
SåögIm∂
::
	`em±y
();

388 
LCh¨Buf„r
 
buf„r
 = { 
s
, 
Àngth
 };

389  
addToSåögTabÀ
<
LCh¨Buf„r
, 
LCh¨Buf„rTøn¶©‹
>(
buf„r
);

390 
	}
}

392 #i‡
	$ENABLE
(
VMOLAB
)

393 
PassRefPå
<
SåögIm∂
> 
AtomicSåög
::
	$addSlowCa£
(
AtomicSåögTabÀ
& 
°rögTabÀ
, c⁄° 
LCh¨
* 
c
)

395 i‡(!
c
)

397 i‡(!*
c
)

398  
SåögIm∂
::
	`em±y
();

401 
AtomicSåögTabÀLockî
 
lockî
;

402 
HashSë
<
SåögIm∂
*>::
AddResu…
 
addResu…
 = 
°rögTabÀ
.
	`èbÀ
().
add
<
CSåögTøn¶©‹
>(
c
);

404  
addResu…
.
isNewE¡ry
 ? 
	`ad›tRef
(*addResu….
ôî©‹
) : *addResult.iterator;

405 
	}
}

407 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
	$addSlowCa£
(
AtomicSåögTabÀ
& 
°rögTabÀ
, c⁄° 
LCh¨
* 
s
, 
Àngth
)

409 i‡(!
s
)

411 i‡(!
Àngth
)

412  
SåögIm∂
::
	`em±y
();

414 
LCh¨Buf„r
 
buf„r
 = { 
s
, 
Àngth
 };

416 
AtomicSåögTabÀLockî
 
lockî
;

417 
HashSë
<
SåögIm∂
*>::
AddResu…
 
addResu…
 = 
°rögTabÀ
.
	`èbÀ
().
add
<
LCh¨Buf„rTøn¶©‹
>(
buf„r
);

419  
addResu…
.
isNewE¡ry
 ? 
	`ad›tRef
(*addResu….
ôî©‹
) : *addResult.iterator;

420 
	}
}

422 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
	$addSlowCa£
(
AtomicSåögTabÀ
& 
°rögTabÀ
, c⁄° 
UCh¨
* 
s
, 
Àngth
)

424 i‡(!
s
)

426 i‡(!
Àngth
)

427  
SåögIm∂
::
	`em±y
();

429 
UCh¨Buf„r
 
buf„r
 = { 
s
, 
Àngth
 };

431 
AtomicSåögTabÀLockî
 
lockî
;

432 
HashSë
<
SåögIm∂
*>::
AddResu…
 
addResu…
 = 
°rögTabÀ
.
	`èbÀ
().
add
<
UCh¨Buf„rTøn¶©‹
>(
buf„r
);

434  
addResu…
.
isNewE¡ry
 ? 
	`ad›tRef
(*addResu….
ôî©‹
) : *addResult.iterator;

435 
	}
}

437 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
	$addSlowCa£
(
AtomicSåögTabÀ
& 
°rögTabÀ
, c⁄° 
UCh¨
* 
s
)

439 i‡(!
s
)

442 
Àngth
 = 0;

443 
s
[
Àngth
] !
	`UCh¨
(0))

444 ++
Àngth
;

446 i‡(!
Àngth
)

447  
SåögIm∂
::
	`em±y
();

449 
UCh¨Buf„r
 
buf„r
 = { 
s
, 
Àngth
 };

451 
AtomicSåögTabÀLockî
 
lockî
;

452 
HashSë
<
SåögIm∂
*>::
AddResu…
 
addResu…
 = 
°rögTabÀ
.
	`èbÀ
().
add
<
UCh¨Buf„rTøn¶©‹
>(
buf„r
);

454  
addResu…
.
isNewE¡ry
 ? 
	`ad›tRef
(*addResu….
ôî©‹
) : *addResult.iterator;

455 
	}
}

458 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
	$addFromLôîÆD©a
(c⁄° * 
ch¨a˘îs
, 
Àngth
)

460 
	`ASSERT
(
ch¨a˘îs
);

461 
	`ASSERT
(
Àngth
);

463 
Ch¨Buf„r
 
buf„r
 = { 
ch¨a˘îs
, 
Àngth
 };

464  
addToSåögTabÀ
<
Ch¨Buf„r
, 
Ch¨Buf„rFromLôîÆD©aTøn¶©‹
>(
buf„r
);

465 
	}
}

467 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
	$addSlowCa£
(
SåögIm∂
& 
°rög
)

469 i‡(!
°rög
.
	`Àngth
())

470  
SåögIm∂
::
	`em±y
();

472 
	`ASSERT_WITH_MESSAGE
(!
°rög
.
	`isAtomic
(), "AtomicString shouldÇot hitÅhe slow case ifÅhe string isálreadyátomic.");

474 
AtomicSåögTabÀLockî
 
lockî
;

475 autÿ
addResu…
 = 
	`°rögTabÀ
().
	`add
(&
°rög
);

477 i‡(
addResu…
.
isNewE¡ry
) {

478 
	`ASSERT
(*
addResu…
.
ôî©‹
 =&
°rög
);

479 
°rög
.
	`£tIsAtomic
(
åue
);

482  *
addResu…
.
ôî©‹
;

483 
	}
}

485 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
	$addSlowCa£
(
AtomicSåögTabÀ
& 
°rögTabÀ
, 
SåögIm∂
& 
°rög
)

487 i‡(!
°rög
.
	`Àngth
())

488  
SåögIm∂
::
	`em±y
();

490 
	`ASSERT_WITH_MESSAGE
(!
°rög
.
	`isAtomic
(), "AtomicString shouldÇot hitÅhe slow case ifÅhe string isálreadyátomic.");

492 
AtomicSåögTabÀLockî
 
lockî
;

493 autÿ
addResu…
 = 
°rögTabÀ
.
	`èbÀ
().
	`add
(&
°rög
);

495 i‡(
addResu…
.
isNewE¡ry
) {

496 
	`ASSERT
(*
addResu…
.
ôî©‹
 =&
°rög
);

497 
°rög
.
	`£tIsAtomic
(
åue
);

500  *
addResu…
.
ôî©‹
;

501 
	}
}

503 
	gAtomicSåög
::
	$ªmove
(
SåögIm∂
* 
°rög
)

505 
	`ASSERT
(
°rög
->
	`isAtomic
());

506 
AtomicSåögTabÀLockî
 
lockî
;

507 
HashSë
<
SåögIm∂
*>& 
©omicSåögTabÀ
 = 
	`°rögTabÀ
();

508 
HashSë
<
SåögIm∂
*>::
ôî©‹
 iãøt‹ = 
©omicSåögTabÀ
.
	`föd
(
°rög
);

509 
	`ASSERT_WITH_MESSAGE
(
ôî©‹
 !
©omicSåögTabÀ
.
	`íd
(), "The string beingÑemoved isátomic inÅhe stringÅable ofán otherÅhread!");

510 
©omicSåögTabÀ
.
	`ªmove
(
ôî©‹
);

511 
	}
}

513 
AtomicSåög
 
	gAtomicSåög
::
	$lowî
() const

516 
SåögIm∂
* 
im∂
 = 
this
->
	`im∂
();

517 i‡(
	`UNLIKELY
(!
im∂
))

518  
	`AtomicSåög
();

520 
RefPå
<
SåögIm∂
> 
lowîˇ£dSåög
 = 
im∂
->
	`lowî
();

521 i‡(
	`LIKELY
(
lowîˇ£dSåög
 =
im∂
))

522  *
this
;

524 
AtomicSåög
 
ªsu…
;

525 
ªsu…
.
m_°rög
 = 
	`addSlowCa£
(*
lowîˇ£dSåög
);

526  
ªsu…
;

527 
	}
}

529 
AtomicSåög
 
	gAtomicSåög
::
	$c⁄vîtToASCIILowîˇ£
() const

531 
SåögIm∂
* 
im∂
 = 
this
->
	`im∂
();

532 i‡(
	`UNLIKELY
(!
im∂
))

533  
	`AtomicSåög
();

538 
Àngth
;

539 c⁄° 
loˇlBuf„rSize
 = 100;

540 i‡(
im∂
->
	`is8Bô
(Ë&& (
Àngth
 = im∂->
	`Àngth
()Ë<
loˇlBuf„rSize
) {

541 c⁄° 
LCh¨
* 
ch¨a˘îs
 = 
im∂
->
	`ch¨a˘îs8
();

542 
ÁûögIndex
;

543 
i
 = 0; i < 
Àngth
; ++i) {

544 i‡(
	`UNLIKELY
(
	`isASCIIUµî
(
ch¨a˘îs
[
i
]))) {

545 
ÁûögIndex
 = 
i
;

546 
SlowP©h
;

549  *
this
;

550 
SlowP©h
:

551 
LCh¨
 
loˇlBuf„r
[
loˇlBuf„rSize
];

552 
i
 = 0; i < 
ÁûögIndex
; ++i)

553 
loˇlBuf„r
[
i
] = 
ch¨a˘îs
[i];

554 
i
 = 
ÁûögIndex
; i < 
Àngth
; ++i)

555 
loˇlBuf„r
[
i
] = 
	`toASCIILowî
(
ch¨a˘îs
[i]);

556  
	`AtomicSåög
(
loˇlBuf„r
, 
Àngth
);

559 
RefPå
<
SåögIm∂
> 
c⁄vîãdSåög
 = 
im∂
->
	`c⁄vîtToASCIILowîˇ£
();

560 i‡(
	`LIKELY
(
c⁄vîãdSåög
 =
im∂
))

561  *
this
;

563 
AtomicSåög
 
ªsu…
;

564 
ªsu…
.
m_°rög
 = 
	`addSlowCa£
(*
c⁄vîãdSåög
);

565  
ªsu…
;

566 
	}
}

568 
AtomicSåögIm∂
* 
	gAtomicSåög
::
	$födSlowCa£
(
SåögIm∂
& 
°rög
)

570 
	`ASSERT_WITH_MESSAGE
(!
°rög
.
	`isAtomic
(), "AtomicStringImpls shouldÑeturn fromÅhe fast case.");

572 
AtomicSåögTabÀLockî
 
lockî
;

573 
HashSë
<
SåögIm∂
*>& 
©omicSåögTabÀ
 = 
	`°rögTabÀ
();

574 autÿ
ôî©‹
 = 
©omicSåögTabÀ
.
	`föd
(&
°rög
);

575 i‡(
ôî©‹
 !
©omicSåögTabÀ
.
	`íd
())

576  
°©ic_ˇ°
<
AtomicSåögIm∂
*>(*
ôî©‹
);

577  
nuŒ±r
;

578 
	}
}

580 
AtomicSåög
 
	gAtomicSåög
::
	$‰omUTF8I¡î«l
(c⁄° * 
ch¨a˘îsSèπ
, c⁄° * 
ch¨a˘îsEnd
)

582 
HashAndUTF8Ch¨a˘îs
 
buf„r
;

583 
buf„r
.
ch¨a˘îs
 = 
ch¨a˘îsSèπ
;

584 
buf„r
.
hash
 = 
	`ˇlcuœãSåögHashAndLígthFromUTF8MaskögT›8Bôs
(
ch¨a˘îsSèπ
, 
ch¨a˘îsEnd
, buf„r.
Àngth
, buf„r.
utf16Lígth
);

586 i‡(!
buf„r
.
hash
)

587  
nuŒAtom
;

589 
AtomicSåög
 
©omicSåög
;

590 
©omicSåög
.
m_°rög
 = 
addToSåögTabÀ
<
HashAndUTF8Ch¨a˘îs
, 
HashAndUTF8Ch¨a˘îsTøn¶©‹
>(
buf„r
);

591  
©omicSåög
;

592 
	}
}

594 
AtomicSåög
 
	gAtomicSåög
::
	$numbî
(
numbî
)

596  
numbîToSåögSig√d
<
AtomicSåög
>(
numbî
);

597 
	}
}

599 
AtomicSåög
 
	gAtomicSåög
::
	$numbî
(
numbî
)

601  
numbîToSåögUnsig√d
<
AtomicSåög
>(
numbî
);

602 
	}
}

604 
AtomicSåög
 
	gAtomicSåög
::
	$numbî
(
numbî
)

606 
NumbîToSåögBuf„r
 
buf„r
;

607  
	`Såög
(
	`numbîToFixedPªcisi⁄Såög
(
numbî
, 6, 
buf„r
, 
åue
));

608 
	}
}

610 
AtomicSåögIm∂
* 
	gAtomicSåög
::
	$föd
(
LCh¨
* 
ch¨a˘îs
, 
Àngth
)

612 
AtomicSåögTabÀLockî
 
lockî
;

613 auto& 
èbÀ
 = 
	`°rögTabÀ
();

615 
LCh¨Buf„r
 
buf„r
 = { 
ch¨a˘îs
, 
Àngth
 };

616 autÿ
ôî©‹
 = 
èbÀ
.
föd
<
LCh¨Buf„rTøn¶©‹
>(
buf„r
);

617 i‡(
ôî©‹
 !
èbÀ
.
	`íd
())

618  
°©ic_ˇ°
<
AtomicSåögIm∂
*>(*
ôî©‹
);

619  
nuŒ±r
;

620 
	}
}

622 
AtomicSåögIm∂
* 
	gAtomicSåög
::
	$föd
(
UCh¨
* 
ch¨a˘îs
, 
Àngth
)

624 
AtomicSåögTabÀLockî
 
lockî
;

625 auto& 
èbÀ
 = 
	`°rögTabÀ
();

627 
UCh¨Buf„r
 
buf„r
 = { 
ch¨a˘îs
, 
Àngth
 };

628 autÿ
ôî©‹
 = 
èbÀ
.
föd
<
UCh¨Buf„rTøn¶©‹
>(
buf„r
);

629 i‡(
ôî©‹
 !
èbÀ
.
	`íd
())

630  
°©ic_ˇ°
<
AtomicSåögIm∂
*>(*
ôî©‹
);

631  
nuŒ±r
;

632 
	}
}

634 #i‡!
ASSERT_DISABLED


635 
boﬁ
 
	gAtomicSåög
::
	$isInAtomicSåögTabÀ
(
SåögIm∂
* 
°rög
)

637 
AtomicSåögTabÀLockî
 
lockî
;

638  
	`°rögTabÀ
().
	`c⁄èös
(
°rög
);

639 
	}
}

641 #i‡
	$ENABLE
(
VMOLAB
)

642 
boﬁ
 
AtomicSåög
::
	$isInSåögProvidîTabÀ
(
AtomicSåögTabÀ
& 
°rögTabÀ
, 
SåögIm∂
* 
°rög
)

644 
AtomicSåögTabÀLockî
 
lockî
;

645  
°rögTabÀ
.
	`èbÀ
().
	`c⁄èös
(
°rög
);

646 
	}
}

650 #i‚de‡
NDEBUG


651 
	gAtomicSåög
::
	$show
() const

653 
m_°rög
.
	`show
();

654 
	}
}

	@text/AtomicString.h

21 #i‚de‡
AtomicSåög_h


22 
	#AtomicSåög_h


	)

24 
	~<utûôy
>

25 
	~<wtf/ãxt/AtomicSåögIm∂.h
>

26 
	~<wtf/ãxt/WTFSåög.h
>

30 #ifde‡
NO_IMPLICIT_ATOMICSTRING


31 
	#ATOMICSTRING_CONVERSION
 
ex∂icô


	)

33 
	#ATOMICSTRING_CONVERSION


	)

36 
«me•a˚
 
	gWTF
 {

38 
˛ass
 
	gAtomicSåögTabÀ
;

39 
	gAtomicSåögHash
;

41 ˛as†
	cAtomicSåög
 {

42 
	gpublic
:

43 
WTF_EXPORT_PRIVATE
 
öô
();

45 
AtomicSåög
() { }

46 
AtomicSåög
(c⁄° 
LCh¨
* 
s
Ë: 
m_°rög
(
add
(s)) { }

47 
AtomicSåög
(c⁄° * 
s
Ë: 
m_°rög
(
add
(s)) { }

48 
AtomicSåög
(c⁄° 
LCh¨
* 
s
, 
Àngth
Ë: 
m_°rög
(
add
(s,Üength)) { }

49 
AtomicSåög
(c⁄° 
UCh¨
* 
s
, 
Àngth
Ë: 
m_°rög
(
add
(s,Üength)) { }

50 
AtomicSåög
(c⁄° 
UCh¨
* 
s
, 
Àngth
, 
exi°ögHash
Ë: 
m_°rög
(
add
(s,Üength,ÉxistingHash)) { }

51 
AtomicSåög
(c⁄° 
UCh¨
* 
s
Ë: 
m_°rög
(
add
(s)) { }

53 
ãm∂©e
<
size_t
 
ölöeC≠acôy
>

54 
ex∂icô
 
AtomicSåög
(c⁄° 
Ve˘‹
<
UCh¨
, 
ölöeC≠acôy
>& 
ch¨a˘îs
)

55 : 
m_°rög
(
add
(
ch¨a˘îs
.
d©a
(), ch¨a˘îs.
size
()))

59 
ATOMICSTRING_CONVERSION
 
AtomicSåög
(
SåögIm∂
* 
imp
Ë: 
m_°rög
(
add
(imp)) { }

60 
AtomicSåög
(
AtomicSåögIm∂
* 
imp
Ë: 
m_°rög
(imp) { }

61 
ATOMICSTRING_CONVERSION
 
AtomicSåög
(c⁄° 
Såög
& 
s
Ë: 
m_°rög
(
add
(s.
im∂
())) { }

62 
AtomicSåög
(
SåögIm∂
* 
ba£Såög
, 
°¨t
, 
Àngth
Ë: 
m_°rög
(
add
(baseString, start,Üength)) { }

64 
	eC⁄°ru˘FromLôîÆTag
 { 
	gC⁄°ru˘FromLôîÆ
 };

65 
AtomicSåög
(c⁄° * 
ch¨a˘îs
, 
Àngth
, 
C⁄°ru˘FromLôîÆTag
)

66 : 
m_°rög
(
addFromLôîÆD©a
(
ch¨a˘îs
, 
Àngth
))

70 
	gãm∂©e
<
	gch¨a˘îsCou¡
>

71 
ALWAYS_INLINE
 
AtomicSåög
(c⁄° (&
ch¨a˘îs
)[
ch¨a˘îsCou¡
], 
C⁄°ru˘FromLôîÆTag
)

72 : 
m_°rög
(
addFromLôîÆD©a
(
ch¨a˘îs
, 
ch¨a˘îsCou¡
 - 1))

74 
COMPILE_ASSERT
(
ch¨a˘îsCou¡
 > 1, 
AtomicSåögFromLôîÆNŸEm±y
);

75 
COMPILE_ASSERT
((
ch¨a˘îsCou¡
 - 1 <(((~0Ë- (
SåögIm∂
)Ë/ (
LCh¨
))), 
AtomicSåögFromLôîÆC™nŸOvîÊow
);

80 
AtomicSåög
(c⁄° AtomicSåög& 
Ÿhî
Ë: 
m_°rög
(other.m_string) { }

81 
AtomicSåög
(AtomicSåög&& 
Ÿhî
Ë: 
m_°rög
(
WTF
::
move
(other.m_string)) { }

82 
AtomicSåög
& 
›î©‹
=(c⁄° AtomicSåög& 
Ÿhî
Ë{ 
m_°rög
 = othî.m_°rög;  *
	gthis
; }

83 
	gAtomicSåög
& 
	g›î©‹
=(
AtomicSåög
&& 
Ÿhî
Ë{ 
m_°rög
 = 
WTF
::
move
(Ÿhî.m_°rög);  *
	gthis
; }

86 
AtomicSåög
(
WTF
::
HashTabÀDñëedVÆueTy≥
Ë: 
m_°rög
(WTF::
HashTabÀDñëedVÆue
) { }

87 
boﬁ
 
isHashTabÀDñëedVÆue
(Ëc⁄° {  
m_°rög
.isHashTableDeletedValue(); }

89 
WTF_EXPORT_STRING_API
 
AtomicSåögIm∂
* 
föd
(
LCh¨
*, 
Àngth
);

90 
WTF_EXPORT_STRING_API
 
AtomicSåögIm∂
* 
föd
(
UCh¨
*, 
Àngth
);

91 
AtomicSåögIm∂
* 
föd
(
SåögIm∂
* 
°rög
)

93 i‡(!
	g°rög
 || såög->
isAtomic
())

94  
	g°©ic_ˇ°
<
	gAtomicSåögIm∂
*>(
	g°rög
);

95  
födSlowCa£
(*
°rög
);

98 
›î©‹
 c⁄° 
	gSåög
&(Ëc⁄° {  
	gm_°rög
; }

99 c⁄° 
	gSåög
& 
°rög
(Ëc⁄° {  
	gm_°rög
; };

101 
AtomicSåögIm∂
* 
im∂
(Ëc⁄° {  
	g°©ic_ˇ°
<
	gAtomicSåögIm∂
 *>(
	gm_°rög
.impl()); }

103 
boﬁ
 
is8Bô
(Ëc⁄° {  
	gm_°rög
.is8Bit(); }

104 c⁄° 
LCh¨
* 
ch¨a˘îs8
(Ëc⁄° {  
	gm_°rög
.characters8(); }

105 c⁄° 
UCh¨
* 
ch¨a˘îs16
(Ëc⁄° {  
	gm_°rög
.characters16(); }

106 
Àngth
(Ëc⁄° {  
	gm_°rög
.length(); }

108 
UCh¨
 
	g›î©‹
[](
	gi
Ëc⁄° {  
	gm_°rög
[
i
]; }

110 
WTF_EXPORT_STRING_API
 
AtomicSåög
 
numbî
();

111 
WTF_EXPORT_STRING_API
 
AtomicSåög
 
numbî
();

112 
WTF_EXPORT_STRING_API
 
AtomicSåög
 
numbî
();

115 
boﬁ
 
c⁄èös
(
UCh¨
 
c
Ëc⁄° {  
	gm_°rög
.contains(c); }

116 
boﬁ
 
c⁄èös
(c⁄° 
LCh¨
* 
s
, boﬁ 
ˇ£Sísôive
 = 
åue
) const

117 {  
m_°rög
.
c⁄èös
(
s
, 
ˇ£Sísôive
); }

118 
boﬁ
 
c⁄èös
(c⁄° 
Såög
& 
s
, boﬁ 
ˇ£Sísôive
 = 
åue
) const

119 {  
m_°rög
.
c⁄èös
(
s
, 
ˇ£Sísôive
); }

121 
size_t
 
föd
(
UCh¨
 
c
, 
°¨t
 = 0Ëc⁄° {  
m_°rög
.find(c, start); }

122 
size_t
 
föd
(c⁄° 
LCh¨
* 
s
, 
°¨t
 = 0, 
boﬁ
 
ˇ£Sítôive
 = 
åue
) const

123 {  
m_°rög
.
föd
(
s
, 
°¨t
, 
ˇ£Sítôive
); }

124 
size_t
 
föd
(c⁄° 
Såög
& 
s
, 
°¨t
 = 0, 
boﬁ
 
ˇ£Sítôive
 = 
åue
) const

125 {  
m_°rög
.
föd
(
s
, 
°¨t
, 
ˇ£Sítôive
); }

126 
size_t
 
föd
(
Ch¨a˘îM©chFun˘i⁄På
 
m©chFun˘i⁄
, 
°¨t
 = 0) const

127 {  
m_°rög
.
föd
(
m©chFun˘i⁄
, 
°¨t
); }

129 
boﬁ
 
°¨tsWôh
(c⁄° 
Såög
& 
s
, boﬁ 
ˇ£Sísôive
 = 
åue
) const

130 {  
m_°rög
.
°¨tsWôh
(
s
, 
ˇ£Sísôive
); }

131 
boﬁ
 
°¨tsWôh
(
UCh¨
 
ch¨a˘î
) const

132 {  
	gm_°rög
.
°¨tsWôh
(
ch¨a˘î
); }

133 
	gãm∂©e
<
	gm©chLígth
>

134 
boﬁ
 
°¨tsWôh
(c⁄° (&
¥efix
)[
m©chLígth
], boﬁ 
ˇ£Sísôive
 = 
åue
) const

135 {  
m_°rög
.
°¨tsWôh
<
m©chLígth
>(
¥efix
, 
ˇ£Sísôive
); }

137 
boﬁ
 
ídsWôh
(c⁄° 
Såög
& 
s
, boﬁ 
ˇ£Sísôive
 = 
åue
) const

138 {  
m_°rög
.
ídsWôh
(
s
, 
ˇ£Sísôive
); }

139 
boﬁ
 
ídsWôh
(
UCh¨
 
ch¨a˘î
) const

140 {  
	gm_°rög
.
ídsWôh
(
ch¨a˘î
); }

141 
	gãm∂©e
<
	gm©chLígth
>

142 
boﬁ
 
ídsWôh
(c⁄° (&
¥efix
)[
m©chLígth
], boﬁ 
ˇ£Sísôive
 = 
åue
) const

143 {  
m_°rög
.
ídsWôh
<
m©chLígth
>(
¥efix
, 
ˇ£Sísôive
); }

145 
WTF_EXPORT_STRING_API
 
AtomicSåög
 
c⁄vîtToASCIILowîˇ£
() const;

146 
WTF_EXPORT_STRING_API
 
AtomicSåög
 
lowî
() const;

147 
AtomicSåög
 
uµî
(Ëc⁄° {  AtomicSåög(
im∂
()->upper()); }

149 
toI¡
(
boﬁ
* 
ok
 = 0Ëc⁄° {  
m_°rög
.toInt(ok); }

150 
toDoubÀ
(
boﬁ
* 
ok
 = 0Ëc⁄° {  
m_°rög
.toDouble(ok); }

151 
toFlﬂt
(
boﬁ
* 
ok
 = 0Ëc⁄° {  
m_°rög
.toFloat(ok); }

152 
boﬁ
 
≥r˚¡age
(& 
p
Ëc⁄° {  
	gm_°rög
.percentage(p); }

154 
boﬁ
 
isNuŒ
(Ëc⁄° {  
	gm_°rög
.isNull(); }

155 
boﬁ
 
isEm±y
(Ëc⁄° {  
	gm_°rög
.isEmpty(); }

157 
ªmove
(
SåögIm∂
*);

159 #i‡
USE
(
CF
)

160 
AtomicSåög
(
CFSåögRef
 
s
Ë: 
m_°rög
(
add
(s)) { }

162 #ifde‡
__OBJC__


163 
AtomicSåög
(
NSSåög
* 
s
Ë: 
m_°rög
(
add
((
CFSåögRef
)s)) { }

164 
›î©‹
 
NSSåög
*(Ëc⁄° {  
m_°rög
; }

169 
AtomicSåög
 
‰omUTF8
(c⁄° *, 
size_t
);

170 
AtomicSåög
 
‰omUTF8
(const *);

172 #i‚de‡
NDEBUG


173 
show
() const;

176 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
add
(c⁄° 
LCh¨
*);

177 
ALWAYS_INLINE
 
	gPassRefPå
<
	gSåögIm∂
> 
add
(c⁄° * 
s
Ë{ ádd(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(s)); };

178 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
add
(c⁄° 
LCh¨
*, 
Àngth
);

179 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
add
(c⁄° 
UCh¨
*, 
Àngth
);

180 
ALWAYS_INLINE
 
	gPassRefPå
<
	gSåögIm∂
> 
add
(c⁄° * 
s
, 
Àngth
Ë{ ádd(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(s),Üength); };

181 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
add
(c⁄° 
UCh¨
*, 
Àngth
, 
exi°ögHash
);

182 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
add
(c⁄° 
UCh¨
*);

183 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
add
(
SåögIm∂
*, 
off£t
, 
Àngth
);

185 #i‡
ENABLE
(
VMOLAB
)

186 
	gãm∂©e
<
ty≥«me
 
	gSåögTabÀProvidî
>

187 
ALWAYS_INLINE
 
	gPassRefPå
<
	gSåögIm∂
> 
addIdítifõr
(
SåögTabÀProvidî
& 
°rögTabÀProvidî
, c⁄° * 
s
Ë{ áddIdítifõr(°rögTabÀProvidî, 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(s)); };

189 
	gãm∂©e
<
ty≥«me
 
	gSåögTabÀProvidî
>

190 
ALWAYS_INLINE
 
	gPassRefPå
<
	gSåögIm∂
> 
addIdítifõr
(
SåögTabÀProvidî
& 
°rögTabÀProvidî
, c⁄° * 
s
, 
Àngth
Ë{ áddIdítifõr(°rögTabÀProvidî, 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(s),Üength); };

192 
	gãm∂©e
<
ty≥«me
 
	gSåögTabÀProvidî
>

193 
ALWAYS_INLINE
 
	gPassRefPå
<
	gSåögIm∂
> 
addIdítifõr
(
SåögTabÀProvidî
& 
°rögTabÀProvidî
, c⁄° 
LCh¨
* 
c
)

195  
addSlowCa£
(*
°rögTabÀProvidî
.
©omicSåögTabÀ
(), 
c
);

198 
	gãm∂©e
<
ty≥«me
 
	gSåögTabÀProvidî
>

199 
ALWAYS_INLINE
 
	gPassRefPå
<
	gSåögIm∂
> 
addIdítifõr
(
SåögTabÀProvidî
& 
°rögTabÀProvidî
, c⁄° 
LCh¨
* 
s
, 
Àngth
)

201  
addSlowCa£
(*
°rögTabÀProvidî
.
©omicSåögTabÀ
(), 
s
, 
Àngth
);

204 
	gãm∂©e
<
ty≥«me
 
	gSåögTabÀProvidî
>

205 
ALWAYS_INLINE
 
	gPassRefPå
<
	gSåögIm∂
> 
addIdítifõr
(
SåögTabÀProvidî
& 
°rögTabÀProvidî
, c⁄° 
UCh¨
* 
s
, 
Àngth
)

207  
addSlowCa£
(*
°rögTabÀProvidî
.
©omicSåögTabÀ
(), 
s
, 
Àngth
);

210 
	gãm∂©e
<
ty≥«me
 
	gSåögTabÀProvidî
>

211 
ALWAYS_INLINE
 
	gPassRefPå
<
	gSåögIm∂
> 
addIdítifõr
(
SåögTabÀProvidî
& 
°rögTabÀProvidî
, c⁄° 
UCh¨
* 
s
)

213  
addSlowCa£
(*
°rögTabÀProvidî
.
©omicSåögTabÀ
(), 
s
);

216 
	gãm∂©e
<
ty≥«me
 
	gSåögTabÀProvidî
>

217 
ALWAYS_INLINE
 
	gPassRefPå
<
	gSåögIm∂
> 
addIdítifõr
(
SåögTabÀProvidî
& 
°rögTabÀProvidî
, 
SåögIm∂
* 
°rög
)

219 i‡(!
	g°rög
 || såög->
isAtomic
()) {

220 
ASSERT_WITH_MESSAGE
(!
°rög
 || !°rög->
Àngth
(Ë|| 
isInSåögProvidîTabÀ
(*
°rögTabÀProvidî
.
©omicSåögTabÀ
(), string), "Theátomic string comes fromán otherÅhread!");

221  
	g°rög
;

223  
addSlowCa£
(*
°rögTabÀProvidî
.
©omicSåögTabÀ
(), *
°rög
);

227 
ALWAYS_INLINE
 
	gPassRefPå
<
	gSåögIm∂
> 
add
(
SåögIm∂
* 
°rög
)

229 i‡(!
	g°rög
 || såög->
isAtomic
()) {

230 
ASSERT_WITH_MESSAGE
(!
°rög
 || !°rög->
Àngth
(Ë|| 
isInAtomicSåögTabÀ
(string), "Theátomic string comes fromán otherÅhread!");

231  
	g°rög
;

233  
addSlowCa£
(*
°rög
);

235 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
addFromLôîÆD©a
(c⁄° * 
ch¨a˘îs
, 
Àngth
);

236 #i‡
USE
(
CF
)

237 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
add
(
CFSåögRef
);

240 
	gãm∂©e
<
ty≥«me
 
	gSåögTabÀProvidî
>

241 
ALWAYS_INLINE
 
	gPassRefPå
<
	gSåögIm∂
> 
addWôhSåögTabÀProvidî
(
SåögTabÀProvidî
& 
°rögTabÀProvidî
, 
SåögIm∂
* 
°rög
)

243 i‡(!
	g°rög
 || såög->
isAtomic
()) {

244 
ASSERT_WITH_MESSAGE
(!
°rög
 || !°rög->
Àngth
(Ë|| 
isInAtomicSåögTabÀ
(string), "Theátomic string comes fromán otherÅhread!");

245  
	g°rög
;

247  
addSlowCa£
(*
°rögTabÀProvidî
.
©omicSåögTabÀ
(), *
°rög
);

250 
	g¥iv©e
:

252 
AtomicSåög
(
ASCIILôîÆ
);

254 
Såög
 
	gm_°rög
;

256 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
addSlowCa£
(
SåögIm∂
&);

257 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
addSlowCa£
(
AtomicSåögTabÀ
&, 
SåögIm∂
&);

259 #i‡
ENABLE
(
VMOLAB
)

260 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
addSlowCa£
(
AtomicSåögTabÀ
&, c⁄° 
LCh¨
*);

261 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
addSlowCa£
(
AtomicSåögTabÀ
&, c⁄° 
LCh¨
*, );

262 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
addSlowCa£
(
AtomicSåögTabÀ
&, c⁄° 
UCh¨
*, );

263 
WTF_EXPORT_STRING_API
 
	gPassRefPå
<
	gSåögIm∂
> 
addSlowCa£
(
AtomicSåögTabÀ
&, c⁄° 
UCh¨
*);

266 
WTF_EXPORT_STRING_API
 
AtomicSåögIm∂
* 
födSlowCa£
(
SåögIm∂
&);

267 
WTF_EXPORT_STRING_API
 
AtomicSåög
 
‰omUTF8I¡î«l
(const *, const *);

269 #i‡!
ASSERT_DISABLED


270 
WTF_EXPORT_STRING_API
 
boﬁ
 
isInAtomicSåögTabÀ
(
SåögIm∂
*);

271 
WTF_EXPORT_STRING_API
 
boﬁ
 
isInSåögProvidîTabÀ
(
AtomicSåögTabÀ
&, 
SåögIm∂
*);

275 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
AtomicSåög
& 
a
, c⁄° 
	gAtomicSåög
& 
	gb
Ë{  
	ga
.
im∂
(Ë=
b
.impl(); }

276 
boﬁ
 
	g›î©‹
==(c⁄° 
AtomicSåög
&, c⁄° 
	gLCh¨
*);

277 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
AtomicSåög
& 
a
, c⁄° * 
	gb
Ë{  
	gWTF
::
equÆ
◊.
im∂
(), 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
b
)); }

278 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
AtomicSåög
& 
a
, c⁄° 
	gVe˘‹
<
	gUCh¨
>& 
	gb
Ë{  
	ga
.
im∂
(Ë&& 
equÆ
◊.im∂(), 
b
.
d©a
(), b.
size
()); }

279 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
AtomicSåög
& 
a
, c⁄° 
	gSåög
& 
	gb
Ë{  
equÆ
◊.
im∂
(), 
b
.impl()); }

280 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
LCh¨
* 
a
, c⁄° 
	gAtomicSåög
& 
	gb
) {  b ==á; }

281 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
Såög
& 
a
, c⁄° 
	gAtomicSåög
& 
	gb
Ë{  
equÆ
◊.
im∂
(), 
b
.impl()); }

282 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ve˘‹
<
UCh¨
>& 
a
, c⁄° 
	gAtomicSåög
& 
	gb
) {  b ==á; }

284 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
AtomicSåög
& 
a
, c⁄° 
	gAtomicSåög
& 
	gb
Ë{  
	ga
.
im∂
(Ë!
b
.impl(); }

285 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
AtomicSåög
& 
a
, c⁄° 
LCh¨
* 
	gb
Ë{  !(
	ga
 =
b
); }

286 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
AtomicSåög
& 
a
, c⁄° * 
	gb
Ë{  !(
	ga
 =
b
); }

287 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
AtomicSåög
& 
a
, c⁄° 
	gSåög
& 
	gb
Ë{  !
equÆ
◊.
im∂
(), 
b
.impl()); }

288 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
AtomicSåög
& 
a
, c⁄° 
	gVe˘‹
<
	gUCh¨
>& 
	gb
Ë{  !(
	ga
 =
b
); }

289 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
LCh¨
* 
a
, c⁄° 
	gAtomicSåög
& 
	gb
) {  !(b ==á); }

290 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Såög
& 
a
, c⁄° 
	gAtomicSåög
& 
	gb
Ë{  !
equÆ
◊.
im∂
(), 
b
.impl()); }

291 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Ve˘‹
<
UCh¨
>& 
a
, c⁄° 
	gAtomicSåög
& 
	gb
Ë{  !(
	ga
 =
b
); }

293 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
AtomicSåög
& 
a
, c⁄° AtomicSåög& 
b
Ë{  
	`equÆIgn‹ögCa£
◊.
	`im∂
(), b.im∂()); 
	}
}

294 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
AtomicSåög
& 
a
, c⁄° 
LCh¨
* 
b
Ë{  
	`equÆIgn‹ögCa£
◊.
	`im∂
(), b); 
	}
}

295 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
AtomicSåög
& 
a
, c⁄° * 
b
Ë{  
	`equÆIgn‹ögCa£
◊.
	`im∂
(), 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(b)); 
	}
}

296 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
AtomicSåög
& 
a
, c⁄° 
Såög
& 
b
Ë{  
	`equÆIgn‹ögCa£
◊.
	`im∂
(), b.im∂()); 
	}
}

297 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
LCh¨
* 
a
, c⁄° 
AtomicSåög
& 
b
Ë{  
	`equÆIgn‹ögCa£
◊, b.
	`im∂
()); 
	}
}

298 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° * 
a
, c⁄° 
AtomicSåög
& 
b
Ë{  
	`equÆIgn‹ögCa£
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>◊), b.
	`im∂
()); 
	}
}

299 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
Såög
& 
a
, c⁄° 
AtomicSåög
& 
b
Ë{  
	`equÆIgn‹ögCa£
◊.
	`im∂
(), b.im∂()); 
	}
}

303 #i‚de‡
ATOMICSTRING_HIDE_GLOBALS


304 c⁄° 
WTF_EXPORTDATA
 
AtomicSåög
 
nuŒAtom
;

305 c⁄° 
WTF_EXPORTDATA
 
AtomicSåög
 
em±yAtom
;

306 c⁄° 
WTF_EXPORTDATA
 
AtomicSåög
 
ãxtAtom
;

307 c⁄° 
WTF_EXPORTDATA
 
AtomicSåög
 
commítAtom
;

308 c⁄° 
WTF_EXPORTDATA
 
AtomicSåög
 
°¨Atom
;

309 c⁄° 
WTF_EXPORTDATA
 
AtomicSåög
 
xmlAtom
;

310 c⁄° 
WTF_EXPORTDATA
 
AtomicSåög
 
xm sAtom
;

311 c⁄° 
WTF_EXPORTDATA
 
AtomicSåög
 
xlökAtom
;

313 
ölöe
 
AtomicSåög
 
	gAtomicSåög
::
	$‰omUTF8
(c⁄° * 
ch¨a˘îs
, 
size_t
 
Àngth
)

315 i‡(!
ch¨a˘îs
)

316  
nuŒAtom
;

317 i‡(!
Àngth
)

318  
em±yAtom
;

319  
	`‰omUTF8I¡î«l
(
ch¨a˘îs
, ch¨a˘î†+ 
Àngth
);

320 
	}
}

322 
ölöe
 
AtomicSåög
 
	gAtomicSåög
::
	$‰omUTF8
(c⁄° * 
ch¨a˘îs
)

324 i‡(!
ch¨a˘îs
)

325  
nuŒAtom
;

326 i‡(!*
ch¨a˘îs
)

327  
em±yAtom
;

328  
	`‰omUTF8I¡î«l
(
ch¨a˘îs
, 0);

329 
	}
}

333 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gDeÁu…Hash
;

334 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	gAtomicSåög
> {

335 
AtomicSåögHash
 
	tHash
;

340 #i‚de‡
ATOMICSTRING_HIDE_GLOBALS


341 
usög
 
	gWTF
::
AtomicSåög
;

342 
usög
 
	gWTF
::
nuŒAtom
;

343 
usög
 
	gWTF
::
em±yAtom
;

344 
usög
 
	gWTF
::
ãxtAtom
;

345 
usög
 
	gWTF
::
commítAtom
;

346 
usög
 
	gWTF
::
°¨Atom
;

347 
usög
 
	gWTF
::
xmlAtom
;

348 
usög
 
	gWTF
::
xm sAtom
;

349 
usög
 
	gWTF
::
xlökAtom
;

352 
	~<wtf/ãxt/SåögC⁄ˇã«ã.h
>

	@text/AtomicStringHash.h

29 #i‚de‡
AtomicSåögHash_h


30 
	#AtomicSåögHash_h


	)

32 
	~<wtf/ãxt/AtomicSåög.h
>

33 
	~<wtf/HashTøôs.h
>

35 
«me•a˚
 
	gWTF
 {

37 
	sAtomicSåögHash
 {

38 
hash
(c⁄° 
AtomicSåög
& 
key
)

40  
	gkey
.
im∂
()->
exi°ögHash
();

43 
boﬁ
 
equÆ
(c⁄° 
AtomicSåög
& 
a
, c⁄° AtomicSåög& 
b
)

45  
	ga
 =
b
;

48 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
Ál£
;

52 
	gãm∂©e
<> 
	gHashTøôs
<
	gWTF
::
AtomicSåög
> : 
GíîicHashTøôs
<
WTF
::AtomicString> {

53 c⁄° 
boﬁ
 
em±yVÆueIsZîo
 = 
åue
;

54 
c⁄°ru˘DñëedVÆue
(
WTF
::
AtomicSåög
& 
¶Ÿ
Ë{ 
√w
 (
NŸNuŒ
, &¶ŸË
	gWTF
::AtomicSåög(
HashTabÀDñëedVÆue
); }

55 
boﬁ
 
isDñëedVÆue
(c⁄° 
WTF
::
AtomicSåög
& 
¶Ÿ
Ë{  slŸ.
isHashTabÀDñëedVÆue
(); }

60 
usög
 
	gWTF
::
AtomicSåögHash
;

	@text/AtomicStringImpl.h

21 #i‚de‡
AtomicSåögIm∂_h


22 
	#AtomicSåögIm∂_h


	)

24 
	~<wtf/ãxt/SåögIm∂.h
>

26 
«me•a˚
 
	gWTF
 {

28 ˛as†
	cAtomicSåögIm∂
 : 
public
 
SåögIm∂


30 
public
:

31 
AtomicSåögIm∂
(Ë: 
SåögIm∂
(0) {}

34 #i‡!
ASSERT_DISABLED


40 
	gãm∂©e
<> 

41 
	gVÆueCheck
<
	gAtomicSåögIm∂
*> {

42 
checkC⁄si°ícy
(c⁄° 
AtomicSåögIm∂
*) { }

45 
	gãm∂©e
<> 

46 
	gVÆueCheck
<c⁄° 
	gAtomicSåögIm∂
*> {

47 
checkC⁄si°ícy
(c⁄° 
AtomicSåögIm∂
*) { }

53 
usög
 
	gWTF
::
AtomicSåögIm∂
;

	@text/AtomicStringTable.cpp

23 
	~"c⁄fig.h
"

24 
	~"AtomicSåögTabÀ.h
"

26 
	~<wtf/HashSë.h
>

27 
	~<wtf/MaöThªad.h
>

28 
	~<wtf/WTFThªadD©a.h
>

30 
«me•a˚
 
	gWTF
 {

32 
	gAtomicSåögTabÀ
::
¸óã
(
WTFThªadD©a
& 
d©a
)

34 #i‡
USE
(
WEB_THREAD
)

36 
AtomicSåögTabÀ
* 
sh¨edSåögTabÀ
 = 
√w
 AtomicStringTable;

38 
boﬁ
 
	gcuºítThªadIsWebThªad
 = 
isWebThªad
();

39 i‡(
	gcuºítThªadIsWebThªad
 || 
isUIThªad
())

40 
	gd©a
.
	gm_deÁu…AtomicSåögTabÀ
 = 
sh¨edSåögTabÀ
;

42 
	gd©a
.
	gm_deÁu…AtomicSåögTabÀ
 = 
√w
 
AtomicSåögTabÀ
;

46 i‡(!
	gcuºítThªadIsWebThªad
)

47 
	gd©a
.
	gm_©omicSåögTabÀDe°ru˘‹
 = 
AtomicSåögTabÀ
::
de°roy
;

49 
	gd©a
.
	gm_deÁu…AtomicSåögTabÀ
 = 
√w
 
AtomicSåögTabÀ
;

50 
	gd©a
.
	gm_©omicSåögTabÀDe°ru˘‹
 = 
AtomicSåögTabÀ
::
de°roy
;

54 
	gAtomicSåögTabÀ
::~
AtomicSåögTabÀ
()

56 auto* 
°rög
 : 
m_èbÀ
)

57 
°rög
->
£tIsAtomic
(
Ál£
);

60 
	gAtomicSåögTabÀ
::
de°roy
(
AtomicSåögTabÀ
* 
èbÀ
)

62 
dñëe
 
èbÀ
;

	@text/AtomicStringTable.h

23 #i‚de‡
WTF_AtomicSåögTabÀ_h


24 
	#WTF_AtomicSåögTabÀ_h


	)

26 
	~<wtf/HashSë.h
>

27 
	~<wtf/WTFThªadD©a.h
>

29 
«me•a˚
 
	gWTF
 {

31 
˛ass
 
	gSåögIm∂
;

33 ˛as†
	cAtomicSåögTabÀ
 {

34 
	gWTF_MAKE_FAST_ALLOCATED
;

35 
	gpublic
:

36 
WTF_EXPORT_PRIVATE
 ~
AtomicSåögTabÀ
();

38 
¸óã
(
WTFThªadD©a
&);

39 
	gHashSë
<
	gSåögIm∂
*>& 
èbÀ
(Ë{  
	gm_èbÀ
; }

41 
	g¥iv©e
:

42 
de°roy
(
AtomicSåögTabÀ
*);

44 
	gHashSë
<
	gSåögIm∂
*> 
	gm_èbÀ
;

	@text/Base64.cpp

24 
	~"c⁄fig.h
"

25 
	~"Ba£64.h
"

27 
	~<limôs.h
>

28 
	~<wtf/SåögExåas.h
>

29 
	~<wtf/ãxt/WTFSåög.h
>

31 
«me•a˚
 
	gWTF
 {

33 c⁄° 
	gn⁄AÕhabë
 = -1;

35 c⁄° 
	gba£64EncM≠
[64] = {

46 c⁄° 
	gba£64DecM≠
[128] = {

47 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

48 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

49 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

50 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

51 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

52 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet, 0x3E,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet, 0x3F,

54 0x3C, 0x3D, 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

55 
n⁄AÕhabë
, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06,

58 0x17, 0x18, 0x19, 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

59 
n⁄AÕhabë
, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,

62 0x31, 0x32, 0x33, 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet

65 c⁄° 
	gba£64URLEncM≠
[64] = {

76 c⁄° 
	gba£64URLDecM≠
[128] = {

77 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

78 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

79 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

80 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

81 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

82 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet, 0x3E,ÇonAlphabet,ÇonAlphabet,

84 0x3C, 0x3D, 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,

85 
n⁄AÕhabë
, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06,

88 0x17, 0x18, 0x19, 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet, 0x3F,

89 
n⁄AÕhabë
, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,

92 0x31, 0x32, 0x33, 
n⁄AÕhabë
,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet,ÇonAlphabet

95 
ölöe
 
ba£64EncodeI¡î«l
(c⁄° * 
d©a
, 
Àn
, 
Ve˘‹
<>& 
out
, 
Ba£64EncodePﬁicy
 
pﬁicy
, c⁄° (&
ícodeM≠
)[64])

97 
	gout
.
˛ór
();

98 i‡(!
	gÀn
)

104 c⁄° 
	gmaxI≈utBuf„rSize
 = 
UINT_MAX
 / 77 * 76 / 4 * 3 - 2;

105 i‡(
	gÀn
 > 
	gmaxI≈utBuf„rSize
)

108 
	gsidx
 = 0;

109 
	gdidx
 = 0;

111 
	goutLígth
 = ((
Àn
 + 2) / 3) * 4;

114 
boﬁ
 
	gö£πLFs
 = (
pﬁicy
 =
Ba£64In£πLFs
 && 
outLígth
 > 76);

115 i‡(
	gö£πLFs
)

116 
	goutLígth
 +((
outLígth
 - 1) / 76);

118 
	gcou¡
 = 0;

119 
	gout
.
grow
(
outLígth
);

122 i‡(
	gÀn
 > 1) {

123 
	gsidx
 < 
	gÀn
 - 2) {

124 i‡(
	gö£πLFs
) {

125 i‡(
	gcou¡
 && !(count % 76))

126 
	gout
[
didx
++] = '\n';

127 
	gcou¡
 += 4;

129 
	gout
[
didx
++] = 
ícodeM≠
[(
d©a
[
sidx
] >> 2) & 077];

130 
	gout
[
didx
++] = 
ícodeM≠
[((
d©a
[
sidx
 + 1] >> 4) & 017) | ((data[sidx] << 4) & 077)];

131 
	gout
[
didx
++] = 
ícodeM≠
[((
d©a
[
sidx
 + 2] >> 6) & 003) | ((data[sidx + 1] << 2) & 077)];

132 
	gout
[
didx
++] = 
ícodeM≠
[
d©a
[
sidx
 + 2] & 077];

133 
	gsidx
 += 3;

137 i‡(
	gsidx
 < 
	gÀn
) {

138 i‡(
	gö£πLFs
 && (
	gcou¡
 > 0) && !(count % 76))

139 
	gout
[
didx
++] = '\n';

141 
	gout
[
didx
++] = 
ícodeM≠
[(
d©a
[
sidx
] >> 2) & 077];

142 i‡(
	gsidx
 < 
	gÀn
 - 1) {

143 
	gout
[
didx
++] = 
ícodeM≠
[((
d©a
[
sidx
 + 1] >> 4) & 017) | ((data[sidx] << 4) & 077)];

144 
	gout
[
didx
++] = 
ícodeM≠
[(
d©a
[
sidx
 + 1] << 2) & 077];

146 
	gout
[
didx
++] = 
ícodeM≠
[(
d©a
[
sidx
] << 4) & 077];

150 i‡(
	gpﬁicy
 =
Ba£64URLPﬁicy
)

151 
out
.
ªsize
(
didx
);

153 
	gdidx
 < 
	gout
.
size
()) {

154 
	gout
[
didx
] = '=';

155 ++
	gdidx
;

160 
Såög
 
ba£64Encode
(c⁄° * 
d©a
, 
Àngth
, 
Ba£64EncodePﬁicy
 
pﬁicy
)

162 
	gVe˘‹
<> 
	gªsu…
;

163 
ba£64EncodeI¡î«l
(
°©ic_ˇ°
<c⁄° *>(
d©a
), 
Àngth
, 
ªsu…
, 
pﬁicy
, 
ba£64EncM≠
);

164  
Såög
(
ªsu…
.
d©a
(),Ñesu….
size
());

167 
ba£64Encode
(c⁄° * 
d©a
, 
Àn
, 
Ve˘‹
<>& 
out
, 
Ba£64EncodePﬁicy
 
pﬁicy
)

169 
ba£64EncodeI¡î«l
(
°©ic_ˇ°
<c⁄° *>(
d©a
), 
Àn
, 
out
, 
pﬁicy
, 
ba£64EncM≠
);

172 
Såög
 
ba£64URLEncode
(c⁄° * 
d©a
, 
Àngth
)

174 
	gVe˘‹
<> 
	gªsu…
;

175 
ba£64EncodeI¡î«l
(
°©ic_ˇ°
<c⁄° *>(
d©a
), 
Àngth
, 
ªsu…
, 
Ba£64URLPﬁicy
, 
ba£64URLEncM≠
);

176  
Såög
(
ªsu…
.
d©a
(),Ñesu….
size
());

179 
ba£64URLEncode
(c⁄° * 
d©a
, 
Àn
, 
Ve˘‹
<>& 
out
)

181 
ba£64EncodeI¡î«l
(
°©ic_ˇ°
<c⁄° *>(
d©a
), 
Àn
, 
out
, 
Ba£64URLPﬁicy
, 
ba£64URLEncM≠
);

184 
	gãm∂©e
<
ty≥«me
 
	gT
>

185 
ölöe
 
boﬁ
 
ba£64DecodeI¡î«l
(c⁄° 
T
* 
d©a
, 
Àngth
, 
Ve˘‹
<>& 
out
, 
Ba£64DecodePﬁicy
 
pﬁicy
, c⁄° (&
decodeM≠
)[128])

187 
	gout
.
˛ór
();

188 i‡(!
	gÀngth
)

189  
	gåue
;

191 
	gout
.
grow
(
Àngth
);

193 
	gequÆsSignCou¡
 = 0;

194 
	goutLígth
 = 0;

195 
	gidx
 = 0; idx < 
	gÀngth
; ++idx) {

196 
	gch
 = 
d©a
[
idx
];

197 i‡(
	gch
 == '=') {

198 ++
equÆsSignCou¡
;

201 i‡(
	gpﬁicy
 =
Ba£64FaûOnInvÆidCh¨a˘îOrEx˚ssPaddög
 && (
Àngth
 % 4 || 
equÆsSignCou¡
 > 2))

202  
Ál£
;

204 
	gdecodedCh¨a˘î
 = 
ch
 < 
WTF_ARRAY_LENGTH
(
decodeM≠
Ë? decodeM≠[ch] : 
n⁄AÕhabë
;

205 i‡(
	gdecodedCh¨a˘î
 !
n⁄AÕhabë
) {

206 i‡(
equÆsSignCou¡
)

207  
Ál£
;

208 
	gout
[
outLígth
] = 
decodedCh¨a˘î
;

209 ++
	goutLígth
;

210 } i‡(
	gpﬁicy
 =
Ba£64FaûOnInvÆidCh¨a˘îOrEx˚ssPaddög
 || 
pﬁicy
 =
Ba£64FaûOnInvÆidCh¨a˘î
 || (pﬁicy =
Ba£64Ign‹eWhôe•a˚
 && !
isS∑˚OrNewlöe
(
ch
)))

211  
Ál£
;

215 i‡(!
	goutLígth
)

216  !
	gequÆsSignCou¡
;

219 i‡((
	goutLígth
 % 4) == 1)

220  
Ál£
;

223 
	goutLígth
 -(
outLígth
 + 3) / 4;

224 i‡(!
	goutLígth
)

225  
	gÁl£
;

227 
	gsidx
 = 0;

228 
	gdidx
 = 0;

229 i‡(
	goutLígth
 > 1) {

230 
	gdidx
 < 
	goutLígth
 - 2) {

231 
	gout
[
didx
] = (((
out
[
sidx
] << 2) & 255) | ((out[sidx + 1] >> 4) & 003));

232 
	gout
[
didx
 + 1] = (((
out
[
sidx
 + 1] << 4) & 255) | ((out[sidx + 2] >> 2) & 017));

233 
	gout
[
didx
 + 2] = (((
out
[
sidx
 + 2] << 6) & 255) | (out[sidx + 3] & 077));

234 
	gsidx
 += 4;

235 
	gdidx
 += 3;

239 i‡(
	gdidx
 < 
	goutLígth
)

240 
	gout
[
didx
] = (((
out
[
sidx
] << 2) & 255) | ((out[sidx + 1] >> 4) & 003));

242 i‡(++
	gdidx
 < 
	goutLígth
)

243 
	gout
[
didx
] = (((
out
[
sidx
 + 1] << 4) & 255) | ((out[sidx + 2] >> 2) & 017));

245 i‡(
	goutLígth
 < 
	gout
.
size
())

246 
	gout
.
shrök
(
outLígth
);

248  
	gåue
;

251 
boﬁ
 
ba£64Decode
(c⁄° 
Såög
& 
ö
, 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
 
out
, 
Ba£64DecodePﬁicy
 
pﬁicy
)

253 
	gÀngth
 = 
ö
.
Àngth
();

254 i‡(!
	gÀngth
 || 
	gö
.
is8Bô
())

255  
ba£64DecodeI¡î«l
(
ö
.
ch¨a˘îs8
(), 
Àngth
, 
out
, 
pﬁicy
, 
ba£64DecM≠
);

256  
ba£64DecodeI¡î«l
(
ö
.
ch¨a˘îs16
(), 
Àngth
, 
out
, 
pﬁicy
, 
ba£64DecM≠
);

259 
boﬁ
 
ba£64Decode
(c⁄° 
Ve˘‹
<>& 
ö
, 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
 
out
, 
Ba£64DecodePﬁicy
 
pﬁicy
)

261 
	gout
.
˛ór
();

264 i‡(
	gö
.
size
(Ë> 
	gUINT_MAX
)

265  
	gÁl£
;

267  
ba£64DecodeI¡î«l
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
ö
.
d©a
()), in.
size
(), 
out
, 
pﬁicy
, 
ba£64DecM≠
);

270 
boﬁ
 
ba£64Decode
(c⁄° * 
d©a
, 
Àn
, 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
 
out
, 
Ba£64DecodePﬁicy
 
pﬁicy
)

272  
ba£64DecodeI¡î«l
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
d©a
), 
Àn
, 
out
, 
pﬁicy
, 
ba£64DecM≠
);

275 
boﬁ
 
ba£64URLDecode
(c⁄° 
Såög
& 
ö
, 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
 
out
)

277 
	gÀngth
 = 
ö
.
Àngth
();

278 i‡(!
	gÀngth
 || 
	gö
.
is8Bô
())

279  
ba£64DecodeI¡î«l
(
ö
.
ch¨a˘îs8
(), 
Àngth
, 
out
, 
Ba£64FaûOnInvÆidCh¨a˘î
, 
ba£64URLDecM≠
);

280  
ba£64DecodeI¡î«l
(
ö
.
ch¨a˘îs16
(), 
Àngth
, 
out
, 
Ba£64FaûOnInvÆidCh¨a˘î
, 
ba£64URLDecM≠
);

283 
boﬁ
 
ba£64URLDecode
(c⁄° 
Ve˘‹
<>& 
ö
, 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
 
out
)

285 
	gout
.
˛ór
();

288 i‡(
	gö
.
size
(Ë> 
	gUINT_MAX
)

289  
	gÁl£
;

291  
ba£64DecodeI¡î«l
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
ö
.
d©a
()), in.
size
(), 
out
, 
Ba£64FaûOnInvÆidCh¨a˘î
, 
ba£64URLDecM≠
);

294 
boﬁ
 
ba£64URLDecode
(c⁄° * 
d©a
, 
Àn
, 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
 
out
)

296  
ba£64DecodeI¡î«l
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
d©a
), 
Àn
, 
out
, 
Ba£64FaûOnInvÆidCh¨a˘î
, 
ba£64URLDecM≠
);

	@text/Base64.h

28 #i‚de‡
Ba£64_h


29 
	#Ba£64_h


	)

31 
	~<wtf/Ve˘‹.h
>

32 
	~<wtf/ãxt/CSåög.h
>

33 
	~<wtf/ãxt/WTFSåög.h
>

35 
«me•a˚
 
	gWTF
 {

37 
	eBa£64EncodePﬁicy
 {

38 
	gBa£64DoNŸIn£πLFs
,

39 
	gBa£64In£πLFs
,

40 
	gBa£64URLPﬁicy


43 
	eBa£64DecodePﬁicy
 {

44 
	gBa£64FaûOnInvÆidCh¨a˘îOrEx˚ssPaddög
,

45 
	gBa£64FaûOnInvÆidCh¨a˘î
,

46 
	gBa£64Ign‹eWhôe•a˚
,

47 
	gBa£64Ign‹eInvÆidCh¨a˘îs


50 ˛as†
	cSig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
 {

51 
	gpublic
:

52 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
(
Ve˘‹
<>& 
ve˘‹
Ë{ 
m_ve˘‹
.
c
 = &vector; }

53 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
(
Ve˘‹
<
uöt8_t
>& 
ve˘‹
Ë{ 
	gm_ve˘‹
.
	gu
 = &vector; }

55 
›î©‹
 
	gVe˘‹
<>&(Ë{  *
	gm_ve˘‹
.
	gc
; }

56 
˛ór
(Ë{ 
	gm_ve˘‹
.
	gc
->clear(); }

58 
	g¥iv©e
:

60 
Ve˘‹
<>* 
c
;

61 
	gVe˘‹
<
	guöt8_t
>* 
	gu
;

62 } 
	gm_ve˘‹
;

65 ˛as†
	cC⁄°Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
 {

66 
	gpublic
:

67 
C⁄°Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
(c⁄° 
Ve˘‹
<>& 
ve˘‹
Ë{ 
m_ve˘‹
.
c
 = &vector; }

68 
C⁄°Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
(c⁄° 
Ve˘‹
<
uöt8_t
>& 
ve˘‹
Ë{ 
	gm_ve˘‹
.
	gu
 = &vector; }

70 
›î©‹
 c⁄° 
	gVe˘‹
<>&(Ë{  *
	gm_ve˘‹
.
	gc
; }

71 c⁄° * 
d©a
(Ëc⁄° {  
	gm_ve˘‹
.
	gc
->data(); }

72 
size_t
 
size
(Ëc⁄° {  
	gm_ve˘‹
.
	gc
->size(); }

74 
	g¥iv©e
:

76 c⁄° 
Ve˘‹
<>* 
c
;

77 c⁄° 
	gVe˘‹
<
	guöt8_t
>* 
	gu
;

78 } 
	gm_ve˘‹
;

81 
WTF_EXPORT_PRIVATE
 
ba£64Encode
(c⁄° *, , 
Ve˘‹
<>&, 
Ba£64EncodePﬁicy
 = 
Ba£64DoNŸIn£πLFs
);

82 
ba£64Encode
(
C⁄°Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
, 
Ve˘‹
<>&, 
Ba£64EncodePﬁicy
 = 
Ba£64DoNŸIn£πLFs
);

83 
ba£64Encode
(c⁄° 
CSåög
&, 
Ve˘‹
<>&, 
Ba£64EncodePﬁicy
 = 
Ba£64DoNŸIn£πLFs
);

84 
WTF_EXPORT_PRIVATE
 
Såög
 
ba£64Encode
(c⁄° *, , 
Ba£64EncodePﬁicy
 = 
Ba£64DoNŸIn£πLFs
);

85 
Såög
 
ba£64Encode
(
C⁄°Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
, 
Ba£64EncodePﬁicy
 = 
Ba£64DoNŸIn£πLFs
);

86 
Såög
 
ba£64Encode
(c⁄° 
CSåög
&, 
Ba£64EncodePﬁicy
 = 
Ba£64DoNŸIn£πLFs
);

88 
WTF_EXPORT_PRIVATE
 
boﬁ
 
ba£64Decode
(c⁄° 
Såög
&, 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
, 
Ba£64DecodePﬁicy
 = 
Ba£64FaûOnInvÆidCh¨a˘î
);

89 
WTF_EXPORT_PRIVATE
 
boﬁ
 
ba£64Decode
(c⁄° 
Ve˘‹
<>&, 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
, 
Ba£64DecodePﬁicy
 = 
Ba£64FaûOnInvÆidCh¨a˘î
);

90 
WTF_EXPORT_PRIVATE
 
boﬁ
 
ba£64Decode
(c⁄° *, , 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
, 
Ba£64DecodePﬁicy
 = 
Ba£64FaûOnInvÆidCh¨a˘î
);

92 
ölöe
 
ba£64Encode
(
C⁄°Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
 
ö
, 
Ve˘‹
<>& 
out
, 
Ba£64EncodePﬁicy
 
pﬁicy
)

94 
ba£64Encode
(
ö
.
d©a
(), in.
size
(), 
out
, 
pﬁicy
);

97 
ölöe
 
ba£64Encode
(c⁄° 
CSåög
& 
ö
, 
Ve˘‹
<>& 
out
, 
Ba£64EncodePﬁicy
 
pﬁicy
)

99 
ba£64Encode
(
ö
.
d©a
(), in.
Àngth
(), 
out
, 
pﬁicy
);

102 
ölöe
 
Såög
 
	$ba£64Encode
(
C⁄°Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
 
ö
, 
Ba£64EncodePﬁicy
 
pﬁicy
)

104  
	`ba£64Encode
(
ö
.
	`d©a
(), in.
	`size
(), 
pﬁicy
);

105 
	}
}

107 
ölöe
 
Såög
 
	$ba£64Encode
(c⁄° 
CSåög
& 
ö
, 
Ba£64EncodePﬁicy
 
pﬁicy
)

109  
	`ba£64Encode
(
ö
.
	`d©a
(), in.
	`Àngth
(), 
pﬁicy
);

110 
	}
}

117 
WTF_EXPORT_PRIVATE
 
ba£64URLEncode
(c⁄° *, , 
Ve˘‹
<>&);

118 
ba£64URLEncode
(
C⁄°Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
, 
Ve˘‹
<>&);

119 
ba£64URLEncode
(c⁄° 
CSåög
&, 
Ve˘‹
<>&);

121 
WTF_EXPORT_PRIVATE
 
Såög
 
ba£64URLEncode
(const *, );

122 
Såög
 
ba£64URLEncode
(
C⁄°Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
);

123 
Såög
 
ba£64URLEncode
(c⁄° 
CSåög
&);

125 
WTF_EXPORT_PRIVATE
 
boﬁ
 
ba£64URLDecode
(c⁄° 
Såög
&, 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
);

126 
WTF_EXPORT_PRIVATE
 
boﬁ
 
ba£64URLDecode
(c⁄° 
Ve˘‹
<>&, 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
);

127 
WTF_EXPORT_PRIVATE
 
boﬁ
 
ba£64URLDecode
(c⁄° *, , 
Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
);

129 
ölöe
 
ba£64URLEncode
(
C⁄°Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
 
ö
, 
Ve˘‹
<>& 
out
)

131 
ba£64URLEncode
(
ö
.
d©a
(), in.
size
(), 
out
);

134 
ölöe
 
ba£64URLEncode
(c⁄° 
CSåög
& 
ö
, 
Ve˘‹
<>& 
out
)

136 
ba£64URLEncode
(
ö
.
d©a
(), in.
Àngth
(), 
out
);

139 
ölöe
 
Såög
 
	$ba£64URLEncode
(
C⁄°Sig√dOrUnsig√dCh¨Ve˘‹Ad≠ãr
 
ö
)

141  
	`ba£64URLEncode
(
ö
.
	`d©a
(), in.
	`size
());

142 
	}
}

144 
ölöe
 
Såög
 
	$ba£64URLEncode
(c⁄° 
CSåög
& 
ö
)

146  
	`ba£64URLEncode
(
ö
.
	`d©a
(), in.
	`Àngth
());

147 
	}
}

151 
usög
 
	gWTF
::
Ba£64EncodePﬁicy
;

152 
usög
 
	gWTF
::
Ba£64DoNŸIn£πLFs
;

153 
usög
 
	gWTF
::
Ba£64In£πLFs
;

154 
usög
 
	gWTF
::
Ba£64DecodePﬁicy
;

155 
usög
 
	gWTF
::
Ba£64FaûOnInvÆidCh¨a˘îOrEx˚ssPaddög
;

156 
usög
 
	gWTF
::
Ba£64FaûOnInvÆidCh¨a˘î
;

157 
usög
 
	gWTF
::
Ba£64Ign‹eWhôe•a˚
;

158 
usög
 
	gWTF
::
Ba£64Ign‹eInvÆidCh¨a˘îs
;

159 
usög
 
	gWTF
::
ba£64Encode
;

160 
usög
 
	gWTF
::
ba£64Decode
;

161 
usög
 
	gWTF
::
ba£64URLDecode
;

	@text/CString.cpp

27 
	~"c⁄fig.h
"

28 
	~"CSåög.h
"

30 
	~<°rög.h
>

31 
	~<wtf/SåögHashî.h
>

33 
«me•a˚
 
	gWTF
 {

35 
	gPassRefPå
<
	gCSåögBuf„r
> CSåögBuf„r::
¸óãUnöôülized
(
size_t
 
Àngth
)

37 
RELEASE_ASSERT
(
Àngth
 < (
°d
::
numîic_limôs
<>::
max
(Ë- (
CSåögBuf„r
)));

40 
size_t
 
	gsize
 = (
CSåögBuf„r
Ë+ 
Àngth
 + 1;

41 
CSåögBuf„r
* 
	g°rögBuf„r
 = 
°©ic_ˇ°
<CSåögBuf„r*>(
Á°MÆloc
(
size
));

42  
ad›tRef
(
√w
 (
NŸNuŒ
, 
°rögBuf„r
Ë
CSåögBuf„r
(
Àngth
));

45 
	gCSåög
::
CSåög
(c⁄° * 
°r
)

47 i‡(!
°r
)

50 
öô
(
°r
, 
°æí
(str));

53 
	gCSåög
::
CSåög
(c⁄° * 
°r
, 
size_t
 
Àngth
)

55 i‡(!
	g°r
) {

56 
ASSERT
(!
Àngth
);

60 
öô
(
°r
, 
Àngth
);

63 
	gCSåög
::
öô
(c⁄° * 
°r
, 
size_t
 
Àngth
)

65 
ASSERT
(
°r
);

67 
	gm_buf„r
 = 
CSåögBuf„r
::
¸óãUnöôülized
(
Àngth
);

68 
mem˝y
(
m_buf„r
->
muèbÀD©a
(), 
°r
, 
Àngth
);

69 
	gm_buf„r
->
muèbÀD©a
()[
Àngth
] = '\0';

72 * 
	gCSåög
::
muèbÀD©a
()

74 
c›yBuf„rIfNìded
();

75 i‡(!
	gm_buf„r
)

77  
	gm_buf„r
->
muèbÀD©a
();

80 
CSåög
 
	gCSåög
::
√wUnöôülized
(
size_t
 
Àngth
, *& 
ch¨a˘îBuf„r
)

82 
CSåög
 
	gªsu…
;

83 
	gªsu…
.
	gm_buf„r
 = 
CSåögBuf„r
::
¸óãUnöôülized
(
Àngth
);

84 * 
	gbyãs
 = 
ªsu…
.
m_buf„r
->
muèbÀD©a
();

85 
	gbyãs
[
Àngth
] = '\0';

86 
	gch¨a˘îBuf„r
 = 
byãs
;

87  
	gªsu…
;

90 
	gCSåög
::
c›yBuf„rIfNìded
()

92 i‡(!
m_buf„r
 || m_buf„r->
hasO√Ref
())

95 
	gRefPå
<
	gCSåögBuf„r
> 
	gbuf„r
 = 
m_buf„r
.
ªÀa£
();

96 
size_t
 
	gÀngth
 = 
buf„r
->
Àngth
();

97 
	gm_buf„r
 = 
CSåögBuf„r
::
¸óãUnöôülized
(
Àngth
);

98 
mem˝y
(
m_buf„r
->
muèbÀD©a
(), 
buf„r
->
d©a
(), 
Àngth
 + 1);

101 
boﬁ
 
	gCSåög
::
isSa„ToSídToAnŸhîThªad
() const

103  !
m_buf„r
 || m_buf„r->
hasO√Ref
();

106 
boﬁ
 
	g›î©‹
==(c⁄° 
CSåög
& 
a
, c⁄° 
	gCSåög
& 
	gb
)

108 i‡(
	ga
.
isNuŒ
(Ë!
b
.isNull())

109  
Ál£
;

110 i‡(
	ga
.
Àngth
(Ë!
b
.length())

111  
Ál£
;

112  !
memcmp
(
a
.
d©a
(), 
b
.d©a(),á.
Àngth
());

115 
boﬁ
 
	g›î©‹
==(c⁄° 
CSåög
& 
a
, c⁄° * 
	gb
)

117 i‡(
	ga
.
isNuŒ
(Ë!!
b
)

118  
Ál£
;

119 i‡(!
	gb
)

120  
	gåue
;

121  !
°rcmp
(
a
.
d©a
(), 
b
);

124 
	gCSåög
::
hash
() const

126 i‡(
isNuŒ
())

128 
SåögHashî
 
	ghashî
;

129 c⁄° * 
	g±r
 = 
d©a
(); *ptr; ++ptr)

130 
	ghashî
.
addCh¨a˘î
(*
±r
);

131  
	ghashî
.
hash
();

134 
boﬁ
 
	g›î©‹
<(c⁄° 
	gCSåög
& 
	ga
, c⁄° CSåög& 
	gb
)

136 i‡(
	ga
.
isNuŒ
())

137  !
	gb
.
isNuŒ
();

138 i‡(
	gb
.
isNuŒ
())

139  
	gÁl£
;

140  
°rcmp
(
a
.
d©a
(), 
b
.data()) < 0;

143 
boﬁ
 
	gCSåögHash
::
equÆ
(c⁄° 
CSåög
& 
a
, c⁄° CSåög& 
b
)

145 i‡(
	ga
.
isHashTabÀDñëedVÆue
())

146  
	gb
.
isHashTabÀDñëedVÆue
();

147 i‡(
	gb
.
isHashTabÀDñëedVÆue
())

148  
	gÁl£
;

149  
	ga
 =
b
;

	@text/CString.h

26 #i‚de‡
CSåög_h


27 
	#CSåög_h


	)

29 
	~<wtf/HashFun˘i⁄s.h
>

30 
	~<wtf/HashTøôs.h
>

31 
	~<wtf/PassRefPå.h
>

32 
	~<wtf/RefCou¡ed.h
>

34 
«me•a˚
 
	gWTF
 {

38 
˛ass
 
	gCSåögBuf„r
 : 
public
 
RefCou¡ed
<
CSåögBuf„r
> {

39 
public
:

40 c⁄° * 
d©a
(Ë{  
muèbÀD©a
(); }

41 
size_t
 
Àngth
(Ëc⁄° {  
	gm_Àngth
; }

43 
	g¥iv©e
:

44 
‰õnd
 
˛ass
 
CSåög
;

46 
	gPassRefPå
<
	gCSåögBuf„r
> 
¸óãUnöôülized
(
size_t
 
Àngth
);

48 
CSåögBuf„r
(
size_t
 
Àngth
Ë: 
m_Àngth
(length) { }

49 * 
muèbÀD©a
(Ë{  
ªöãΩªt_ˇ°_±r
<*>(
this
 + 1); }

51 c⁄° 
size_t
 
	gm_Àngth
;

56 ˛as†
	cCSåög
 {

57 
	gpublic
:

58 
CSåög
() { }

59 
WTF_EXPORT_PRIVATE
 
CSåög
(const *);

60 
WTF_EXPORT_PRIVATE
 
CSåög
(c⁄° *, 
size_t
 
Àngth
);

61 
CSåög
(
CSåögBuf„r
* 
buf„r
Ë: 
m_buf„r
(buffer) { }

62 
WTF_EXPORT_PRIVATE
 
CSåög
 
√wUnöôülized
(
size_t
 
Àngth
, *& 
ch¨a˘îBuf„r
);

63 
CSåög
(
HashTabÀDñëedVÆueTy≥
Ë: 
m_buf„r
(
HashTabÀDñëedVÆue
) { }

65 c⁄° * 
d©a
() const

67  
m_buf„r
 ? m_buf„r->
d©a
() : 0;

69 
WTF_EXPORT_PRIVATE
 * 
muèbÀD©a
();

70 
size_t
 
Àngth
() const

72  
	gm_buf„r
 ? m_buf„r->
Àngth
() : 0;

75 
boﬁ
 
isNuŒ
(Ëc⁄° {  !
	gm_buf„r
; }

76 
boﬁ
 
isSa„ToSídToAnŸhîThªad
() const;

78 
CSåögBuf„r
* 
buf„r
(Ëc⁄° {  
	gm_buf„r
.
gë
(); }

80 
boﬁ
 
isHashTabÀDñëedVÆue
(Ëc⁄° {  
	gm_buf„r
.isHashTableDeletedValue(); }

82 
WTF_EXPORT_PRIVATE
 
hash
() const;

84 
	g¥iv©e
:

85 
c›yBuf„rIfNìded
();

86 
öô
(c⁄° *, 
size_t
 
Àngth
);

87 
	gRefPå
<
	gCSåögBuf„r
> 
	gm_buf„r
;

90 
WTF_EXPORT_PRIVATE
 
boﬁ
 
	g›î©‹
==(c⁄° 
CSåög
& 
a
, c⁄° 
	gCSåög
& 
	gb
);

91 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
CSåög
& 
a
, c⁄° 
	gCSåög
& 
	gb
Ë{  !(
	ga
 =
b
); }

92 
WTF_EXPORT_PRIVATE
 
boﬁ
 
	g›î©‹
==(c⁄° 
CSåög
& 
a
, c⁄° * 
	gb
);

93 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
CSåög
& 
a
, c⁄° * 
	gb
Ë{  !(
	ga
 =
b
); }

94 
WTF_EXPORT_PRIVATE
 
boﬁ
 
	g›î©‹
<(c⁄° 
	gCSåög
& 
	ga
, c⁄° CSåög& 
	gb
);

96 
	sCSåögHash
 {

97 
hash
(c⁄° 
CSåög
& 
°rög
Ë{  
	g°rög
.hash(); }

98 
WTF_EXPORT_PRIVATE
 
boﬁ
 
equÆ
(c⁄° 
CSåög
& 
a
, c⁄° CSåög& 
b
);

99 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
åue
;

102 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gDeÁu…Hash
;

103 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	gCSåög
> {

104 
CSåögHash
 
	tHash
;

107 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gHashTøôs
;

108 
	gãm∂©e
<> 
	gHashTøôs
<
	gCSåög
> : 
Sim∂eCœssHashTøôs
<
CSåög
> { };

112 
usög
 
	gWTF
::
CSåög
;

	@text/ConversionMode.h

26 #i‚de‡
C⁄vîsi⁄Mode_h


27 
	#C⁄vîsi⁄Mode_h


	)

29 
«me•a˚
 
	gWTF
 {

32 
	gLíõ¡C⁄vîsi⁄
,

33 
	gSåi˘C⁄vîsi⁄
,

34 
	gSåi˘C⁄vîsi⁄RïœcögU≈aúedSuºog©esWôhFFFD
,

35 } 
	tC⁄vîsi⁄Mode
;

39 
usög
 
	gWTF
::
C⁄vîsi⁄Mode
;

40 
usög
 
	gWTF
::
Líõ¡C⁄vîsi⁄
;

41 
usög
 
	gWTF
::
Såi˘C⁄vîsi⁄
;

42 
usög
 
	gWTF
::
Såi˘C⁄vîsi⁄RïœcögU≈aúedSuºog©esWôhFFFD
;

	@text/IntegerToStringConversion.h

22 #i‚de‡
I¡egîToSåögC⁄vîsi⁄_h


23 
	#I¡egîToSåögC⁄vîsi⁄_h


	)

25 
	~"SåögBuûdî.h
"

27 
«me•a˚
 
	gWTF
 {

29 
	ePosôiveOrNeg©iveNumbî
 {

30 
	gPosôiveNumbî
,

31 
	gNeg©iveNumbî


34 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gI¡egîToSåögC⁄vîsi⁄Tøô
;

36 
	gãm∂©e
<> 
	gI¡egîToSåögC⁄vîsi⁄Tøô
<
	gAtomicSåög
> {

37 
AtomicSåög
 
	tRëu∫Ty≥
;

38 
	tAddôi⁄ÆArgumítTy≥
;

39 
Rëu∫Ty≥
 
Êush
(
LCh¨
* 
ch¨a˘îs
, 
Àngth
, *Ë{  
AtomicSåög
(characters,Üength); }

41 
	gãm∂©e
<> 
	gI¡egîToSåögC⁄vîsi⁄Tøô
<
	gSåög
> {

42 
Såög
 
	tRëu∫Ty≥
;

43 
	tAddôi⁄ÆArgumítTy≥
;

44 
Rëu∫Ty≥
 
Êush
(
LCh¨
* 
ch¨a˘îs
, 
Àngth
, *Ë{  
Såög
(characters,Üength); }

46 
	gãm∂©e
<> 
	gI¡egîToSåögC⁄vîsi⁄Tøô
<
	gSåögBuûdî
> {

47 
	tRëu∫Ty≥
;

48 
SåögBuûdî
 
	tAddôi⁄ÆArgumítTy≥
;

49 
Rëu∫Ty≥
 
Êush
(
LCh¨
* 
ch¨a˘îs
, 
Àngth
, 
SåögBuûdî
* 
°rögBuûdî
Ë{ 
	g°rögBuûdî
->
≠≥nd
(characters,Üength); }

52 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gUnsig√dI¡egîTy≥
, 
PosôiveOrNeg©iveNumbî
 
	gNumbîTy≥
,Åy≥«mê
	gAddôi⁄ÆArgumítTy≥
>

53 
ty≥«me
 
	gI¡egîToSåögC⁄vîsi⁄Tøô
<
	gT
>::
Rëu∫Ty≥
 
numbîToSåögIm∂
(
Unsig√dI¡egîTy≥
 
numbî
, 
Addôi⁄ÆArgumítTy≥
 
addôi⁄ÆArgumít
)

55 
LCh¨
 
	gbuf
[(
Unsig√dI¡egîTy≥
) * 3 + 1];

56 
LCh¨
* 
	gíd
 = 
buf
 + 
WTF_ARRAY_LENGTH
(buf);

57 
LCh¨
* 
	gp
 = 
íd
;

60 *--
	gp
 = 
°©ic_ˇ°
<
LCh¨
>((
numbî
 % 10) + '0');

61 
	gnumbî
 /= 10;

62 } 
	gnumbî
);

64 i‡(
	gNumbîTy≥
 =
Neg©iveNumbî
)

65 *--
p
 = '-';

67  
	gI¡egîToSåögC⁄vîsi⁄Tøô
<
	gT
>::
Êush
(
p
, 
°©ic_ˇ°
<>(
íd
 -Ö), 
addôi⁄ÆArgumít
);

70 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gSig√dI¡egîTy≥
>

71 
ölöe
 
ty≥«me
 
	gI¡egîToSåögC⁄vîsi⁄Tøô
<
	gT
>::
Rëu∫Ty≥
 
numbîToSåögSig√d
(
Sig√dI¡egîTy≥
 
numbî
,Åy≥«mê
I¡egîToSåögC⁄vîsi⁄Tøô
<
T
>::
Addôi⁄ÆArgumítTy≥
* 
addôi⁄ÆArgumít
 = 
nuŒ±r
)

73 i‡(
numbî
 < 0)

74  
numbîToSåögIm∂
<
T
, 
ty≥«me
 
°d
::
make_unsig√d
<
Sig√dI¡egîTy≥
>::
ty≥
, 
Neg©iveNumbî
>(-
numbî
, 
addôi⁄ÆArgumít
);

75  
	gnumbîToSåögIm∂
<
	gT
, 
ty≥«me
 
	g°d
::
make_unsig√d
<
Sig√dI¡egîTy≥
>::
ty≥
, 
	gPosôiveNumbî
>(
	gnumbî
, 
	gaddôi⁄ÆArgumít
);

78 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gUnsig√dI¡egîTy≥
>

79 
ölöe
 
ty≥«me
 
	gI¡egîToSåögC⁄vîsi⁄Tøô
<
	gT
>::
Rëu∫Ty≥
 
numbîToSåögUnsig√d
(
Unsig√dI¡egîTy≥
 
numbî
,Åy≥«mê
I¡egîToSåögC⁄vîsi⁄Tøô
<
T
>::
Addôi⁄ÆArgumítTy≥
* 
addôi⁄ÆArgumít
 = 
nuŒ±r
)

81  
numbîToSåögIm∂
<
T
, 
Unsig√dI¡egîTy≥
, 
PosôiveNumbî
>(
numbî
, 
addôi⁄ÆArgumít
);

	@text/LChar.h

27 #i‚de‡
LCh¨_h


28 
	#LCh¨_h


	)

33 
	tLCh¨
;

	@text/StringBuffer.h

29 #i‚de‡
SåögBuf„r_h


30 
	#SåögBuf„r_h


	)

32 
	~<wtf/As£πi⁄s.h
>

33 
	~<limôs
>

34 
	~<unicode/uty≥s.h
>

36 
«me•a˚
 
	gWTF
 {

38 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

39 ˛as†
	cSåögBuf„r
 {

40 
WTF_MAKE_NONCOPYABLE
(
SåögBuf„r
);

41 
	gpublic
:

42 
ex∂icô
 
SåögBuf„r
(
Àngth
)

43 : 
m_Àngth
(
Àngth
)

44 , 
m_d©a
(
m_Àngth
 ? 
°©ic_ˇ°
<
Ch¨Ty≥
*>(
Á°MÆloc
((
Checked
<
size_t
>(m_ÀngthË* (Ch¨Ty≥)).
unß„Gë
())Ë: 
nuŒ±r
)

48 ~
SåögBuf„r
()

50 
Á°Fªe
(
m_d©a
);

53 
shrök
(
√wLígth
)

55 
ASSERT
(
√wLígth
 <
m_Àngth
);

56 
	gm_Àngth
 = 
√wLígth
;

59 
ªsize
(
√wLígth
)

61 i‡(
	g√wLígth
 > 
	gm_Àngth
) {

62 i‡(
	g√wLígth
 > 
	g°d
::
numîic_limôs
<>::
max
(Ë/ (
UCh¨
))

63 
CRASH
();

64 
	gm_d©a
 = 
°©ic_ˇ°
<
UCh¨
*>(
Á°RóŒoc
(
m_d©a
, 
√wLígth
 * (UChar)));

66 
	gm_Àngth
 = 
√wLígth
;

69 
Àngth
(Ëc⁄° {  
	gm_Àngth
; }

70 
Ch¨Ty≥
* 
ch¨a˘îs
(Ë{  
	gm_d©a
; }

72 
	gCh¨Ty≥
& 
	g›î©‹
[](
	gi
Ë{ 
ASSERT_WITH_SECURITY_IMPLICATION
(
i
 < 
m_Àngth
);  
	gm_d©a
[i]; }

74 
	gMÆlocPå
<
	gCh¨Ty≥
> 
ªÀa£
()

76 
Ch¨Ty≥
* 
	gd©a
 = 
m_d©a
;

77 
	gm_d©a
 = 0;

78  
ad›tMÆlocPå
(
d©a
);

81 
	g¥iv©e
:

82 
m_Àngth
;

83 
Ch¨Ty≥
* 
	gm_d©a
;

88 
usög
 
	gWTF
::
SåögBuf„r
;

	@text/StringBuilder.cpp

27 
	~"c⁄fig.h
"

28 
	~"SåögBuûdî.h
"

30 
	~"I¡egîToSåögC⁄vîsi⁄.h
"

31 
	~"WTFSåög.h
"

32 
	~<wtf/dtﬂ.h
>

34 
«me•a˚
 
	gWTF
 {

36 
ex∑ndedC≠acôy
(
ˇ∑côy
, 
ªquúedLígth
)

38 c⁄° 
	gmöimumC≠acôy
 = 16;

39  
	g°d
::
max
(
ªquúedLígth
, 
°d
::max(
möimumC≠acôy
, 
ˇ∑côy
 * 2));

42 
	gSåögBuûdî
::
ªifySåög
() const

45 i‡(!
m_°rög
.
isNuŒ
()) {

46 
ASSERT
(
m_°rög
.
Àngth
(Ë=
m_Àngth
);

51 i‡(!
	gm_Àngth
) {

52 
	gm_°rög
 = 
SåögIm∂
::
em±y
();

57 
ASSERT
(
m_buf„r
 && 
m_Àngth
 <m_buf„r->
Àngth
());

58 i‡(
	gm_Àngth
 =
m_buf„r
->
Àngth
())

59 
m_°rög
 = 
m_buf„r
.
gë
();

61 
	gm_°rög
 = 
SåögIm∂
::
¸óãSub°rögSh¨ögIm∂
(
m_buf„r
, 0, 
m_Àngth
);

64 
	gSåögBuûdî
::
ªsize
(
√wSize
)

67 
ASSERT
(
√wSize
 <
m_Àngth
);

68 i‡(
	g√wSize
 =
m_Àngth
)

70 
ASSERT
(
m_Àngth
);

73 i‡(
	gm_buf„r
) {

74 
	gm_°rög
 = 
Såög
();

75 i‡(!
	gm_buf„r
->
hasO√Ref
()) {

76 i‡(
	gm_buf„r
->
is8Bô
())

77 
ÆloˇãBuf„r
(
m_buf„r
->
ch¨a˘îs8
(), m_buf„r->
Àngth
());

79 
ÆloˇãBuf„r
(
m_buf„r
->
ch¨a˘îs16
(), m_buf„r->
Àngth
());

81 
	gm_Àngth
 = 
√wSize
;

86 
ASSERT
(!
m_°rög
.
isEm±y
());

87 
ASSERT
(
m_Àngth
 =
m_°rög
.
Àngth
());

88 
ASSERT
(
√wSize
 < 
m_°rög
.
Àngth
());

89 
	gm_Àngth
 = 
√wSize
;

90 
	gm_°rög
 = 
SåögIm∂
::
¸óãSub°rögSh¨ögIm∂
(
m_°rög
.
im∂
(), 0, 
√wSize
);

95 
	gSåögBuûdî
::
ÆloˇãBuf„r
(c⁄° 
LCh¨
* 
cuºítCh¨a˘îs
, 
ªquúedLígth
)

97 
ASSERT
(
m_is8Bô
);

99 
	gRefPå
<
	gSåögIm∂
> 
	gbuf„r
 = 
SåögIm∂
::
¸óãUnöôülized
(
ªquúedLígth
, 
m_buf„rCh¨a˘îs8
);

100 
mem˝y
(
m_buf„rCh¨a˘îs8
, 
cuºítCh¨a˘îs
, 
°©ic_ˇ°
<
size_t
>(
m_Àngth
Ë* (
LCh¨
));

103 
	gm_buf„r
 = 
buf„r
.
ªÀa£
();

104 
	gm_°rög
 = 
Såög
();

109 
	gSåögBuûdî
::
ÆloˇãBuf„r
(c⁄° 
UCh¨
* 
cuºítCh¨a˘îs
, 
ªquúedLígth
)

111 
ASSERT
(!
m_is8Bô
);

113 
	gRefPå
<
	gSåögIm∂
> 
	gbuf„r
 = 
SåögIm∂
::
¸óãUnöôülized
(
ªquúedLígth
, 
m_buf„rCh¨a˘îs16
);

114 
mem˝y
(
m_buf„rCh¨a˘îs16
, 
cuºítCh¨a˘îs
, 
°©ic_ˇ°
<
size_t
>(
m_Àngth
Ë* (
UCh¨
));

117 
	gm_buf„r
 = 
buf„r
.
ªÀa£
();

118 
	gm_°rög
 = 
Såög
();

123 
	gSåögBuûdî
::
ÆloˇãBuf„rUpC⁄vît
(c⁄° 
LCh¨
* 
cuºítCh¨a˘îs
, 
ªquúedLígth
)

125 
ASSERT
(
m_is8Bô
);

127 
	gRefPå
<
	gSåögIm∂
> 
	gbuf„r
 = 
SåögIm∂
::
¸óãUnöôülized
(
ªquúedLígth
, 
m_buf„rCh¨a˘îs16
);

128 
	gi
 = 0; i < 
	gm_Àngth
; ++i)

129 
	gm_buf„rCh¨a˘îs16
[
i
] = 
cuºítCh¨a˘îs
[i];

131 
	gm_is8Bô
 = 
Ál£
;

134 
	gm_buf„r
 = 
buf„r
.
ªÀa£
();

135 
	gm_°rög
 = 
Såög
();

138 
	gãm∂©e
 <>

139 
	gSåögBuûdî
::
ªÆloˇãBuf„r
<
LCh¨
>(
ªquúedLígth
)

143 
m_°rög
 = 
Såög
();

145 
ASSERT
(
m_is8Bô
);

146 
ASSERT
(
m_buf„r
->
is8Bô
());

148 i‡(
	gm_buf„r
->
hasO√Ref
())

149 
	gm_buf„r
 = 
SåögIm∂
::
ªÆloˇã
(
m_buf„r
.
ªÀa£
(), 
ªquúedLígth
, 
m_buf„rCh¨a˘îs8
);

151 
ÆloˇãBuf„r
(
m_buf„r
->
ch¨a˘îs8
(), 
ªquúedLígth
);

154 
	gãm∂©e
 <>

155 
	gSåögBuûdî
::
ªÆloˇãBuf„r
<
UCh¨
>(
ªquúedLígth
)

159 
m_°rög
 = 
Såög
();

161 i‡(
	gm_buf„r
->
is8Bô
())

162 
ÆloˇãBuf„rUpC⁄vît
(
m_buf„r
->
ch¨a˘îs8
(), 
ªquúedLígth
);

163 i‡(
	gm_buf„r
->
hasO√Ref
())

164 
	gm_buf„r
 = 
SåögIm∂
::
ªÆloˇã
(
m_buf„r
.
ªÀa£
(), 
ªquúedLígth
, 
m_buf„rCh¨a˘îs16
);

166 
ÆloˇãBuf„r
(
m_buf„r
->
ch¨a˘îs16
(), 
ªquúedLígth
);

169 
	gSåögBuûdî
::
ª£rveC≠acôy
(
√wC≠acôy
)

171 i‡(
m_buf„r
) {

173 i‡(
√wC≠acôy
 > 
m_buf„r
->
Àngth
()) {

174 i‡(
m_buf„r
->
is8Bô
())

175 
ªÆloˇãBuf„r
<
LCh¨
>(
√wC≠acôy
);

177 
	gªÆloˇãBuf„r
<
	gUCh¨
>(
	g√wC≠acôy
);

181 i‡(
	g√wC≠acôy
 > 
	gm_Àngth
) {

182 i‡(!
	gm_Àngth
) {

183 
LCh¨
* 
	gnuŒPœ˚hﬁdî
 = 0;

184 
ÆloˇãBuf„r
(
nuŒPœ˚hﬁdî
, 
√wC≠acôy
);

185 } i‡(
	gm_°rög
.
is8Bô
())

186 
ÆloˇãBuf„r
(
m_°rög
.
ch¨a˘îs8
(), 
√wC≠acôy
);

188 
ÆloˇãBuf„r
(
m_°rög
.
ch¨a˘îs16
(), 
√wC≠acôy
);

195 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

196 
ALWAYS_INLINE
 
Ch¨Ty≥
* 
	gSåögBuûdî
::
≠≥ndUnöôülized
(
Àngth
)

198 
ASSERT
(
Àngth
);

201 
	gªquúedLígth
 = 
Àngth
 + 
m_Àngth
;

202 i‡(
	gªquúedLígth
 < 
	gÀngth
)

203 
CRASH
();

205 i‡((
	gm_buf„r
Ë&& (
	gªquúedLígth
 <
m_buf„r
->
Àngth
())) {

207 
ASSERT
(
m_buf„r
->
Àngth
(Ë>
m_Àngth
);

208 
	gcuºítLígth
 = 
m_Àngth
;

209 
	gm_°rög
 = 
Såög
();

210 
	gm_Àngth
 = 
ªquúedLígth
;

211  
	ggëBuf„rCh¨a˘îs
<
	gCh¨Ty≥
>(Ë+ 
	gcuºítLígth
;

214  
	g≠≥ndUnöôülizedSlow
<
	gCh¨Ty≥
>(
	gªquúedLígth
);

219 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

220 
Ch¨Ty≥
* 
	gSåögBuûdî
::
≠≥ndUnöôülizedSlow
(
ªquúedLígth
)

222 
ASSERT
(
ªquúedLígth
);

224 i‡(
	gm_buf„r
) {

226 
ASSERT
(
m_buf„r
->
Àngth
(Ë>
m_Àngth
);

228 
	gªÆloˇãBuf„r
<
	gCh¨Ty≥
>(
ex∑ndedC≠acôy
(
ˇ∑côy
(), 
ªquúedLígth
));

230 
ASSERT
(
m_°rög
.
Àngth
(Ë=
m_Àngth
);

231 
ÆloˇãBuf„r
(
m_Àngth
 ? 
m_°rög
.
ch¨a˘îs
<
Ch¨Ty≥
>(Ë: 0, 
ex∑ndedC≠acôy
(
ˇ∑côy
(), 
ªquúedLígth
));

234 
Ch¨Ty≥
* 
	gªsu…
 = 
gëBuf„rCh¨a˘îs
<Ch¨Ty≥>(Ë+ 
m_Àngth
;

235 
	gm_Àngth
 = 
ªquúedLígth
;

236  
	gªsu…
;

239 
	gSåögBuûdî
::
≠≥nd
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
)

241 i‡(!
	gÀngth
)

244 
ASSERT
(
ch¨a˘îs
);

246 i‡(
	gm_is8Bô
) {

247 i‡(
	gÀngth
 =1 && !(*
ch¨a˘îs
 & ~0xff)) {

249 
LCh¨
 
lCh¨
 = 
°©ic_ˇ°
<LCh¨>(*
ch¨a˘îs
);

250 
≠≥nd
(&
lCh¨
, 1);

255 
	gªquúedLígth
 = 
Àngth
 + 
m_Àngth
;

256 i‡(
	gªquúedLígth
 < 
	gÀngth
)

257 
CRASH
();

259 i‡(
	gm_buf„r
) {

261 
ASSERT
(
m_buf„r
->
Àngth
(Ë>
m_Àngth
);

263 
ÆloˇãBuf„rUpC⁄vît
(
m_buf„r
->
ch¨a˘îs8
(), 
ex∑ndedC≠acôy
(
ˇ∑côy
(), 
ªquúedLígth
));

265 
ASSERT
(
m_°rög
.
Àngth
(Ë=
m_Àngth
);

266 
ÆloˇãBuf„rUpC⁄vît
(
m_°rög
.
isNuŒ
(Ë? 0 : m_°rög.
ch¨a˘îs8
(), 
ex∑ndedC≠acôy
(
ˇ∑côy
(), 
ªquúedLígth
));

269 
mem˝y
(
m_buf„rCh¨a˘îs16
 + 
m_Àngth
, 
ch¨a˘îs
, 
°©ic_ˇ°
<
size_t
>(
Àngth
Ë* (
UCh¨
));

270 
	gm_Àngth
 = 
ªquúedLígth
;

272 
mem˝y
(
≠≥ndUnöôülized
<
UCh¨
>(
Àngth
), 
ch¨a˘îs
, 
°©ic_ˇ°
<
size_t
>(length) * (UChar));

275 
	gSåögBuûdî
::
≠≥nd
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
)

277 i‡(!
	gÀngth
)

279 
ASSERT
(
ch¨a˘îs
);

281 i‡(
	gm_is8Bô
) {

282 
LCh¨
* 
	gde°
 = 
≠≥ndUnöôülized
<LCh¨>(
Àngth
);

283 i‡(
	gÀngth
 > 8)

284 
mem˝y
(
de°
, 
ch¨a˘îs
, 
°©ic_ˇ°
<
size_t
>(
Àngth
Ë* (
LCh¨
));

286 c⁄° 
LCh¨
* 
	gíd
 = 
ch¨a˘îs
 + 
Àngth
;

287 
	gch¨a˘îs
 < 
	gíd
)

288 *(
	gde°
++Ë*(
ch¨a˘îs
++);

291 
UCh¨
* 
	gde°
 = 
≠≥ndUnöôülized
<UCh¨>(
Àngth
);

292 c⁄° 
LCh¨
* 
	gíd
 = 
ch¨a˘îs
 + 
Àngth
;

293 
	gch¨a˘îs
 < 
	gíd
)

294 *(
	gde°
++Ë*(
ch¨a˘îs
++);

298 
	gSåögBuûdî
::
≠≥ndNumbî
(
numbî
)

300 
numbîToSåögSig√d
<
SåögBuûdî
>(
numbî
, 
	gthis
);

303 
	gSåögBuûdî
::
≠≥ndNumbî
(
numbî
)

305 
numbîToSåögUnsig√d
<
SåögBuûdî
>(
numbî
, 
	gthis
);

308 
	gSåögBuûdî
::
≠≥ndNumbî
(
numbî
)

310 
numbîToSåögSig√d
<
SåögBuûdî
>(
numbî
, 
	gthis
);

313 
	gSåögBuûdî
::
≠≥ndNumbî
(
numbî
)

315 
numbîToSåögUnsig√d
<
SåögBuûdî
>(
numbî
, 
	gthis
);

318 
	gSåögBuûdî
::
≠≥ndNumbî
(
numbî
)

320 
numbîToSåögSig√d
<
SåögBuûdî
>(
numbî
, 
	gthis
);

323 
	gSåögBuûdî
::
≠≥ndNumbî
(
numbî
)

325 
numbîToSåögUnsig√d
<
SåögBuûdî
>(
numbî
, 
	gthis
);

328 
	gSåögBuûdî
::
≠≥ndNumbî
(
numbî
, 
¥ecisi⁄
, 
TøûögZîosTrunˇtögPﬁicy
 
åaûögZîosTrunˇtögPﬁicy
)

330 
NumbîToSåögBuf„r
 
	gbuf„r
;

331 
≠≥nd
(
numbîToFixedPªcisi⁄Såög
(
numbî
, 
¥ecisi⁄
, 
buf„r
, 
åaûögZîosTrunˇtögPﬁicy
 =
TrunˇãTøûögZîos
));

334 
	gSåögBuûdî
::
≠≥ndECMAS¸ùtNumbî
(
numbî
)

336 
NumbîToSåögBuf„r
 
buf„r
;

337 
≠≥nd
(
numbîToSåög
(
numbî
, 
buf„r
));

340 
	gSåögBuûdî
::
≠≥ndFixedWidthNumbî
(
numbî
, 
decimÆPœ˚s
)

342 
NumbîToSåögBuf„r
 
	gbuf„r
;

343 
≠≥nd
(
numbîToFixedWidthSåög
(
numbî
, 
decimÆPœ˚s
, 
buf„r
));

346 
boﬁ
 
	gSåögBuûdî
::
ˇnShrök
() const

349  
m_buf„r
 && m_buf„r->
Àngth
(Ë> (
m_Àngth
 + (m_length >> 2));

352 
	gSåögBuûdî
::
shrökToFô
()

354 i‡(
ˇnShrök
()) {

355 i‡(
m_is8Bô
)

356 
ªÆloˇãBuf„r
<
LCh¨
>(
m_Àngth
);

358 
	gªÆloˇãBuf„r
<
	gUCh¨
>(
	gm_Àngth
);

359 
	gm_°rög
 = 
m_buf„r
.
ªÀa£
();

	@text/StringBuilder.h

27 #i‚de‡
SåögBuûdî_h


28 
	#SåögBuûdî_h


	)

30 
	~<wtf/ãxt/AtomicSåög.h
>

31 
	~<wtf/ãxt/SåögVõw.h
>

32 
	~<wtf/ãxt/WTFSåög.h
>

34 
«me•a˚
 
	gWTF
 {

36 ˛as†
	cSåögBuûdî
 {

38 
WTF_MAKE_NONCOPYABLE
(
SåögBuûdî
);

40 
	gpublic
:

41 
SåögBuûdî
()

42 : 
m_Àngth
(0)

43 , 
m_is8Bô
(
åue
)

44 , 
m_buf„rCh¨a˘îs8
(0)

48 
WTF_EXPORT_PRIVATE
 
≠≥nd
(c⁄° 
UCh¨
*, );

49 
WTF_EXPORT_PRIVATE
 
≠≥nd
(c⁄° 
LCh¨
*, );

51 
ALWAYS_INLINE
 
≠≥nd
(c⁄° * 
ch¨a˘îs
, 
Àngth
Ë{áµíd(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(characters),Üength); }

53 
≠≥nd
(c⁄° 
Såög
& 
°rög
)

55 i‡(!
	g°rög
.
Àngth
())

60 i‡(!
	gm_Àngth
 && !
	gm_buf„r
) {

61 
	gm_°rög
 = 
°rög
;

62 
	gm_Àngth
 = 
°rög
.
Àngth
();

63 
	gm_is8Bô
 = 
m_°rög
.
is8Bô
();

67 i‡(
	g°rög
.
is8Bô
())

68 
≠≥nd
(
°rög
.
ch¨a˘îs8
(), såög.
Àngth
());

70 
≠≥nd
(
°rög
.
ch¨a˘îs16
(), såög.
Àngth
());

73 
≠≥nd
(c⁄° 
SåögBuûdî
& 
Ÿhî
)

75 i‡(!
	gŸhî
.
	gm_Àngth
)

80 i‡(!
	gm_Àngth
 && !
	gm_buf„r
 && !
	gŸhî
.
	gm_°rög
.
isNuŒ
()) {

81 
	gm_°rög
 = 
Ÿhî
.
m_°rög
;

82 
	gm_Àngth
 = 
Ÿhî
.
m_Àngth
;

86 i‡(
	gŸhî
.
is8Bô
())

87 
≠≥nd
(
Ÿhî
.
ch¨a˘îs8
(), othî.
m_Àngth
);

89 
≠≥nd
(
Ÿhî
.
ch¨a˘îs16
(), othî.
m_Àngth
);

92 
≠≥nd
(
SåögVõw
 
°rögVõw
)

94 i‡(
	g°rögVõw
.
is8Bô
())

95 
≠≥nd
(
°rögVõw
.
ch¨a˘îs8
(), såögVõw.
Àngth
());

97 
≠≥nd
(
°rögVõw
.
ch¨a˘îs16
(), såögVõw.
Àngth
());

100 
≠≥nd
(c⁄° 
Såög
& 
°rög
, 
off£t
, 
Àngth
)

102 i‡(!
	g°rög
.
Àngth
())

105 i‡((
	goff£t
 + 
	gÀngth
Ë> 
	g°rög
.
Àngth
())

108 i‡(
	g°rög
.
is8Bô
())

109 
≠≥nd
(
°rög
.
ch¨a˘îs8
(Ë+ 
off£t
, 
Àngth
);

111 
≠≥nd
(
°rög
.
ch¨a˘îs16
(Ë+ 
off£t
, 
Àngth
);

114 
≠≥nd
(c⁄° * 
ch¨a˘îs
)

116 i‡(
	gch¨a˘îs
)

117 
≠≥nd
(
ch¨a˘îs
, 
°æí
(characters));

120 
≠≥nd
(
UCh¨
 
c
)

122 i‡(
	gm_buf„r
 && 
	gm_Àngth
 < m_buf„r->
Àngth
(Ë&& 
	gm_°rög
.
isNuŒ
()) {

123 i‡(!
	gm_is8Bô
) {

124 
	gm_buf„rCh¨a˘îs16
[
m_Àngth
++] = 
c
;

128 i‡(!(
	gc
 & ~0xff)) {

129 
	gm_buf„rCh¨a˘îs8
[
m_Àngth
++] = 
°©ic_ˇ°
<
LCh¨
>(
c
);

133 
≠≥nd
(&
c
, 1);

136 
≠≥nd
(
LCh¨
 
c
)

138 i‡(
	gm_buf„r
 && 
	gm_Àngth
 < m_buf„r->
Àngth
(Ë&& 
	gm_°rög
.
isNuŒ
()) {

139 i‡(
	gm_is8Bô
)

140 
	gm_buf„rCh¨a˘îs8
[
m_Àngth
++] = 
c
;

142 
	gm_buf„rCh¨a˘îs16
[
m_Àngth
++] = 
c
;

144 
≠≥nd
(&
c
, 1);

147 
≠≥nd
(
c
)

149 
≠≥nd
(
°©ic_ˇ°
<
LCh¨
>(
c
));

152 
≠≥nd
(
UCh¨32
 
c
)

154 i‡(
U_IS_BMP
(
c
)) {

155 
≠≥nd
(
°©ic_ˇ°
<
UCh¨
>(
c
));

158 
≠≥nd
(
U16_LEAD
(
c
));

159 
≠≥nd
(
U16_TRAIL
(
c
));

162 
	gãm∂©e
<
	gch¨a˘îsCou¡
>

163 
ALWAYS_INLINE
 
≠≥ndLôîÆ
(c⁄° (&
ch¨a˘îs
)[
ch¨a˘îsCou¡
]Ë{ 
≠≥nd
(characters, charactersCount - 1); }

165 
WTF_EXPORT_PRIVATE
 
≠≥ndNumbî
();

166 
WTF_EXPORT_PRIVATE
 
≠≥ndNumbî
();

167 
WTF_EXPORT_PRIVATE
 
≠≥ndNumbî
();

168 
WTF_EXPORT_PRIVATE
 
≠≥ndNumbî
();

169 
WTF_EXPORT_PRIVATE
 
≠≥ndNumbî
();

170 
WTF_EXPORT_PRIVATE
 
≠≥ndNumbî
();

171 
WTF_EXPORT_PRIVATE
 
≠≥ndNumbî
(, 
¥ecisi⁄
 = 6, 
TøûögZîosTrunˇtögPﬁicy
 = 
TrunˇãTøûögZîos
);

172 
WTF_EXPORT_PRIVATE
 
≠≥ndECMAS¸ùtNumbî
();

173 
WTF_EXPORT_PRIVATE
 
≠≥ndFixedWidthNumbî
(, 
decimÆPœ˚s
);

175 
Såög
 
toSåög
()

177 
shrökToFô
();

178 i‡(
	gm_°rög
.
isNuŒ
())

179 
ªifySåög
();

180  
	gm_°rög
;

183 c⁄° 
	gSåög
& 
toSåögPª£rveC≠acôy
() const

185 i‡(
	gm_°rög
.
isNuŒ
())

186 
ªifySåög
();

187  
	gm_°rög
;

190 
AtomicSåög
 
toAtomicSåög
() const

192 i‡(!
	gm_Àngth
)

193  
	gem±yAtom
;

196 i‡(
ˇnShrök
()) {

197 i‡(
is8Bô
())

198  
AtomicSåög
(
ch¨a˘îs8
(), 
Àngth
());

199  
AtomicSåög
(
ch¨a˘îs16
(), 
Àngth
());

202 i‡(!
	gm_°rög
.
isNuŒ
())

203  
AtomicSåög
(
m_°rög
);

205 
ASSERT
(
m_buf„r
);

206  
AtomicSåög
(
m_buf„r
.
gë
(), 0, 
m_Àngth
);

209 
Àngth
() const

211  
	gm_Àngth
;

214 
boﬁ
 
isEm±y
(Ëc⁄° {  !
	gm_Àngth
; }

216 
WTF_EXPORT_PRIVATE
 
ª£rveC≠acôy
(
√wC≠acôy
);

218 
ˇ∑côy
() const

220  
	gm_buf„r
 ? m_buf„r->
Àngth
(Ë: 
m_Àngth
;

223 
WTF_EXPORT_PRIVATE
 
ªsize
(
√wSize
);

225 
WTF_EXPORT_PRIVATE
 
boﬁ
 
ˇnShrök
() const;

227 
WTF_EXPORT_PRIVATE
 
shrökToFô
();

229 
UCh¨
 
	g›î©‹
[](
	gi
) const

231 
ASSERT_WITH_SECURITY_IMPLICATION
(
i
 < 
m_Àngth
);

232 i‡(
	gm_is8Bô
)

233  
ch¨a˘îs8
()[
i
];

234  
ch¨a˘îs16
()[
i
];

237 c⁄° 
LCh¨
* 
ch¨a˘îs8
() const

239 
ASSERT
(
m_is8Bô
);

240 i‡(!
	gm_Àngth
)

242 i‡(!
	gm_°rög
.
isNuŒ
())

243  
	gm_°rög
.
ch¨a˘îs8
();

244 
ASSERT
(
m_buf„r
);

245  
	gm_buf„r
->
ch¨a˘îs8
();

248 c⁄° 
UCh¨
* 
ch¨a˘îs16
() const

250 
ASSERT
(!
m_is8Bô
);

251 i‡(!
	gm_Àngth
)

253 i‡(!
	gm_°rög
.
isNuŒ
())

254  
	gm_°rög
.
ch¨a˘îs16
();

255 
ASSERT
(
m_buf„r
);

256  
	gm_buf„r
->
ch¨a˘îs16
();

259 
boﬁ
 
is8Bô
(Ëc⁄° {  
	gm_is8Bô
; }

261 
˛ór
()

263 
	gm_Àngth
 = 0;

264 
	gm_°rög
 = 
Såög
();

265 
	gm_buf„r
 = 0;

266 
	gm_buf„rCh¨a˘îs8
 = 0;

267 
	gm_is8Bô
 = 
åue
;

270 
sw≠
(
SåögBuûdî
& 
°rögBuûdî
)

272 
	g°d
::
sw≠
(
m_Àngth
, 
°rögBuûdî
.m_length);

273 
	gm_°rög
.
sw≠
(
°rögBuûdî
.
m_°rög
);

274 
	gm_buf„r
.
sw≠
(
°rögBuûdî
.
m_buf„r
);

275 
	g°d
::
sw≠
(
m_is8Bô
, 
°rögBuûdî
.m_is8Bit);

276 
	g°d
::
sw≠
(
m_buf„rCh¨a˘îs8
, 
°rögBuûdî
.m_bufferCharacters8);

279 
	g¥iv©e
:

280 
ÆloˇãBuf„r
(c⁄° 
LCh¨
* 
cuºítCh¨a˘îs
, 
ªquúedLígth
);

281 
ÆloˇãBuf„r
(c⁄° 
UCh¨
* 
cuºítCh¨a˘îs
, 
ªquúedLígth
);

282 
ÆloˇãBuf„rUpC⁄vît
(c⁄° 
LCh¨
* 
cuºítCh¨a˘îs
, 
ªquúedLígth
);

283 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

284 
ªÆloˇãBuf„r
(
ªquúedLígth
);

285 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

286 
ALWAYS_INLINE
 
Ch¨Ty≥
* 
≠≥ndUnöôülized
(
Àngth
);

287 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

288 
Ch¨Ty≥
* 
≠≥ndUnöôülizedSlow
(
Àngth
);

289 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

290 
ALWAYS_INLINE
 
Ch¨Ty≥
 * 
gëBuf„rCh¨a˘îs
();

291 
WTF_EXPORT_PRIVATE
 
ªifySåög
() const;

293 
	gm_Àngth
;

294 
muèbÀ
 
Såög
 
	gm_°rög
;

295 
	gRefPå
<
	gSåögIm∂
> 
	gm_buf„r
;

296 
boﬁ
 
	gm_is8Bô
;

298 
LCh¨
* 
	gm_buf„rCh¨a˘îs8
;

299 
UCh¨
* 
	gm_buf„rCh¨a˘îs16
;

303 
	gãm∂©e
 <>

304 
ALWAYS_INLINE
 
LCh¨
* 
	gSåögBuûdî
::
gëBuf„rCh¨a˘îs
<LChar>()

306 
ASSERT
(
m_is8Bô
);

307  
	gm_buf„rCh¨a˘îs8
;

310 
	gãm∂©e
 <>

311 
ALWAYS_INLINE
 
UCh¨
* 
	gSåögBuûdî
::
gëBuf„rCh¨a˘îs
<UChar>()

313 
ASSERT
(!
m_is8Bô
);

314  
	gm_buf„rCh¨a˘îs16
;

317 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

318 
boﬁ
 
	$equÆ
(c⁄° 
SåögBuûdî
& 
s
, c⁄° 
Ch¨Ty≥
* 
buf„r
, 
Àngth
)

320 i‡(
s
.
	`Àngth
(Ë!
Àngth
)

321  
Ál£
;

323 i‡(
s
.
	`is8Bô
())

324  
	`equÆ
(
s
.
	`ch¨a˘îs8
(), 
buf„r
, 
Àngth
);

326  
	`equÆ
(
s
.
	`ch¨a˘îs16
(), 
buf„r
, 
Àngth
);

327 
	}
}

329 
	gãm∂©e
 <
ty≥«me
 
	gSåögTy≥
>

330 
boﬁ
 
	$equÆ
(c⁄° 
SåögBuûdî
& 
a
, c⁄° 
SåögTy≥
& 
b
)

332 i‡(
a
.
	`Àngth
(Ë!
b
.length())

333  
Ál£
;

335 i‡(!
a
.
	`Àngth
())

336  
åue
;

338 i‡(
a
.
	`is8Bô
()) {

339 i‡(
b
.
	`is8Bô
())

340  
	`equÆ
(
a
.
	`ch¨a˘îs8
(), 
b
.ch¨a˘îs8(),á.
	`Àngth
());

341  
	`equÆ
(
a
.
	`ch¨a˘îs8
(), 
b
.
	`ch¨a˘îs16
(),á.
	`Àngth
());

344 i‡(
b
.
	`is8Bô
())

345  
	`equÆ
(
a
.
	`ch¨a˘îs16
(), 
b
.
	`ch¨a˘îs8
(),á.
	`Àngth
());

346  
	`equÆ
(
a
.
	`ch¨a˘îs16
(), 
b
.ch¨a˘îs16(),á.
	`Àngth
());

347 
	}
}

349 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
SåögBuûdî
& 
a
, c⁄° 
	gSåögBuûdî
& 
	gb
Ë{  
equÆ
◊, 
b
); }

350 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
SåögBuûdî
& 
a
, c⁄° 
	gSåögBuûdî
& 
	gb
Ë{  !
equÆ
◊, 
b
); }

351 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
SåögBuûdî
& 
a
, c⁄° 
	gSåög
& 
	gb
Ë{  
equÆ
◊, 
b
); }

352 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
SåögBuûdî
& 
a
, c⁄° 
	gSåög
& 
	gb
Ë{  !
equÆ
◊, 
b
); }

353 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
Såög
& 
a
, c⁄° 
	gSåögBuûdî
& 
	gb
Ë{  
equÆ
(
b
,á); }

354 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Såög
& 
a
, c⁄° 
	gSåögBuûdî
& 
	gb
Ë{  !
equÆ
(
b
,á); }

358 
usög
 
	gWTF
::
SåögBuûdî
;

	@text/StringConcatenate.h

26 #i‚de‡
SåögC⁄ˇã«ã_h


27 
	#SåögC⁄ˇã«ã_h


	)

29 
	~<°rög.h
>

31 #i‚de‡
AtomicSåög_h


32 
	~<wtf/ãxt/AtomicSåög.h
>

37 #i‚de‡
WTF_STRINGTYPEADAPTER_COPIED_WTF_STRING


38 
	#WTF_STRINGTYPEADAPTER_COPIED_WTF_STRING
(Ë(()0)

	)

41 
«me•a˚
 
	gWTF
 {

43 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥
>

44 ˛as†
	cSåögTy≥Ad≠ãr
 {

47 
	gãm∂©e
<>

48 
˛ass
 
	gSåögTy≥Ad≠ãr
<> {

49 
	gpublic
:

50 
SåögTy≥Ad≠ãr
<>(
buf„r
)

51 : 
m_buf„r
(
buf„r
)

55 
Àngth
() {  1; }

57 
boﬁ
 
is8Bô
(Ë{  
	gåue
; }

59 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
)

61 *
	gde°ö©i⁄
 = 
m_buf„r
;

64 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
Ë{ *
	gde°ö©i⁄
 = 
m_buf„r
; }

66 
	g¥iv©e
:

67 
m_buf„r
;

70 
	gãm∂©e
<>

71 
˛ass
 
	gSåögTy≥Ad≠ãr
<
	gLCh¨
> {

72 
	gpublic
:

73 
SåögTy≥Ad≠ãr
<
LCh¨
>(LCh¨ 
buf„r
)

74 : 
m_buf„r
(
buf„r
)

78 
Àngth
() {  1; }

80 
boﬁ
 
is8Bô
(Ë{  
	gåue
; }

82 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
)

84 *
	gde°ö©i⁄
 = 
m_buf„r
;

87 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
Ë{ *
	gde°ö©i⁄
 = 
m_buf„r
; }

89 
	g¥iv©e
:

90 
LCh¨
 
m_buf„r
;

93 
	gãm∂©e
<>

94 
˛ass
 
	gSåögTy≥Ad≠ãr
<
	gUCh¨
> {

95 
	gpublic
:

96 
SåögTy≥Ad≠ãr
<
UCh¨
>(UCh¨ 
buf„r
)

97 : 
m_buf„r
(
buf„r
)

101 
Àngth
() {  1; }

103 
boﬁ
 
is8Bô
(Ë{  
	gm_buf„r
 <= 0xff; }

105 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
)

107 
ASSERT
(
is8Bô
());

108 *
	gde°ö©i⁄
 = 
°©ic_ˇ°
<
LCh¨
>(
m_buf„r
);

111 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
Ë{ *
	gde°ö©i⁄
 = 
m_buf„r
; }

113 
	g¥iv©e
:

114 
UCh¨
 
m_buf„r
;

117 
	gãm∂©e
<>

118 
˛ass
 
	gSåögTy≥Ad≠ãr
<*> {

119 
	gpublic
:

120 
SåögTy≥Ad≠ãr
<*>(* 
buf„r
)

121 : 
m_buf„r
(
buf„r
)

122 , 
m_Àngth
(
°æí
(
buf„r
))

126 
Àngth
(Ë{  
	gm_Àngth
; }

128 
boﬁ
 
is8Bô
(Ë{  
	gåue
; }

130 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
)

132 
	gi
 = 0; i < 
	gm_Àngth
; ++i)

133 
	gde°ö©i⁄
[
i
] = 
°©ic_ˇ°
<
LCh¨
>(
m_buf„r
[i]);

136 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
)

138 
	gi
 = 0; i < 
	gm_Àngth
; ++i) {

139 
	gc
 = 
m_buf„r
[
i
];

140 
	gde°ö©i⁄
[
i
] = 
c
;

144 
	g¥iv©e
:

145 c⁄° * 
m_buf„r
;

146 
	gm_Àngth
;

149 
	gãm∂©e
<>

150 
˛ass
 
	gSåögTy≥Ad≠ãr
<
	gLCh¨
*> {

151 
	gpublic
:

152 
SåögTy≥Ad≠ãr
<
LCh¨
*>(LCh¨* 
buf„r
)

153 : 
m_buf„r
(
buf„r
)

154 , 
m_Àngth
(
°æí
(
ªöãΩªt_ˇ°
<*>(
buf„r
)))

158 
Àngth
(Ë{  
	gm_Àngth
; }

160 
boﬁ
 
is8Bô
(Ë{  
	gåue
; }

162 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
)

164 
mem˝y
(
de°ö©i⁄
, 
m_buf„r
, 
m_Àngth
 * (
LCh¨
));

167 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
)

169 
	gSåögIm∂
::
c›yCh¨s
(
de°ö©i⁄
, 
m_buf„r
, 
m_Àngth
);

172 
	g¥iv©e
:

173 c⁄° 
LCh¨
* 
m_buf„r
;

174 
	gm_Àngth
;

177 
	gãm∂©e
<>

178 
˛ass
 
	gSåögTy≥Ad≠ãr
<c⁄° 
	gUCh¨
*> {

179 
	gpublic
:

180 
SåögTy≥Ad≠ãr
<c⁄° 
UCh¨
*>(c⁄° UCh¨* 
buf„r
)

181 : 
m_buf„r
(
buf„r
)

183 
size_t
 
Àn
 = 0;

184 
	gm_buf„r
[
Àn
] !
UCh¨
(0))

185 ++
Àn
;

187 i‡(
	gÀn
 > 
	g°d
::
numîic_limôs
<>::
max
())

188 
CRASH
();

190 
	gm_Àngth
 = 
Àn
;

193 
Àngth
(Ë{  
	gm_Àngth
; }

195 
boﬁ
 
is8Bô
(Ë{  
	gÁl£
; }

197 
NO_RETURN_DUE_TO_CRASH
 
wrôeTo
(
LCh¨
*)

199 
CRASH
();

202 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
)

204 
mem˝y
(
de°ö©i⁄
, 
m_buf„r
, 
m_Àngth
 * (
UCh¨
));

207 
	g¥iv©e
:

208 c⁄° 
UCh¨
* 
m_buf„r
;

209 
	gm_Àngth
;

212 
	gãm∂©e
<>

213 
˛ass
 
	gSåögTy≥Ad≠ãr
<const *> {

214 
	gpublic
:

215 
SåögTy≥Ad≠ãr
<c⁄° *>(c⁄° * 
buf„r
)

216 : 
m_buf„r
(
buf„r
)

217 , 
m_Àngth
(
°æí
(
buf„r
))

221 
Àngth
(Ë{  
	gm_Àngth
; }

223 
boﬁ
 
is8Bô
(Ë{  
	gåue
; }

225 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
)

227 
mem˝y
(
de°ö©i⁄
, 
m_buf„r
, 
°©ic_ˇ°
<
size_t
>(
m_Àngth
Ë* (
LCh¨
));

230 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
)

232 
	gi
 = 0; i < 
	gm_Àngth
; ++i) {

233 
	gc
 = 
m_buf„r
[
i
];

234 
	gde°ö©i⁄
[
i
] = 
c
;

238 
	g¥iv©e
:

239 c⁄° * 
m_buf„r
;

240 
	gm_Àngth
;

243 
	gãm∂©e
<>

244 
˛ass
 
	gSåögTy≥Ad≠ãr
<c⁄° 
	gLCh¨
*> {

245 
	gpublic
:

246 
SåögTy≥Ad≠ãr
<c⁄° 
LCh¨
*>(c⁄° LCh¨* 
buf„r
)

247 : 
m_buf„r
(
buf„r
)

248 , 
m_Àngth
(
°æí
(
ªöãΩªt_ˇ°
<c⁄° *>(
buf„r
)))

252 
Àngth
(Ë{  
	gm_Àngth
; }

254 
boﬁ
 
is8Bô
(Ë{  
	gåue
; }

256 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
)

258 
mem˝y
(
de°ö©i⁄
, 
m_buf„r
, 
°©ic_ˇ°
<
size_t
>(
m_Àngth
Ë* (
LCh¨
));

261 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
)

263 
	gSåögIm∂
::
c›yCh¨s
(
de°ö©i⁄
, 
m_buf„r
, 
m_Àngth
);

266 
	g¥iv©e
:

267 c⁄° 
LCh¨
* 
m_buf„r
;

268 
	gm_Àngth
;

271 
	gãm∂©e
<>

272 
˛ass
 
	gSåögTy≥Ad≠ãr
<
	gASCIILôîÆ
> {

273 
	gpublic
:

274 
SåögTy≥Ad≠ãr
<
ASCIILôîÆ
>(ASCIILôîÆ 
buf„r
)

275 : 
m_buf„r
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
°©ic_ˇ°
<c⁄° *>(
buf„r
)))

276 , 
m_Àngth
(
°æí
(
buf„r
))

280 
size_t
 
Àngth
(Ë{  
	gm_Àngth
; }

282 
boﬁ
 
is8Bô
(Ë{  
	gåue
; }

284 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
)

286 
mem˝y
(
de°ö©i⁄
, 
m_buf„r
, 
°©ic_ˇ°
<
size_t
>(
m_Àngth
));

289 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
)

291 
	gSåögIm∂
::
c›yCh¨s
(
de°ö©i⁄
, 
m_buf„r
, 
m_Àngth
);

294 
	g¥iv©e
:

295 c⁄° 
LCh¨
* 
m_buf„r
;

296 
	gm_Àngth
;

299 
	gãm∂©e
<>

300 
˛ass
 
	gSåögTy≥Ad≠ãr
<
	gVe˘‹
<>> {

301 
	gpublic
:

302 
SåögTy≥Ad≠ãr
<
Ve˘‹
<>>(c⁄° Ve˘‹<>& 
buf„r
)

303 : 
m_buf„r
(
buf„r
)

307 
size_t
 
Àngth
(Ë{  
m_buf„r
.
size
(); }

309 
boﬁ
 
is8Bô
(Ë{  
	gåue
; }

311 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
)

313 
size_t
 
	gi
 = 0; i < 
	gm_buf„r
.
size
(); ++i)

314 
	gde°ö©i⁄
[
i
] = 
°©ic_ˇ°
<>(
m_buf„r
[i]);

317 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
)

319 
size_t
 
	gi
 = 0; i < 
	gm_buf„r
.
size
(); ++i)

320 
	gde°ö©i⁄
[
i
] = 
°©ic_ˇ°
<>(
m_buf„r
[i]);

323 
	g¥iv©e
:

324 c⁄° 
Ve˘‹
<>& 
m_buf„r
;

327 
	gãm∂©e
<>

328 
˛ass
 
	gSåögTy≥Ad≠ãr
<
	gVe˘‹
<
	gLCh¨
>> {

329 
	gpublic
:

330 
SåögTy≥Ad≠ãr
<
Ve˘‹
<
LCh¨
>>(c⁄° Ve˘‹<LCh¨>& 
buf„r
)

331 : 
m_buf„r
(
buf„r
)

335 
size_t
 
Àngth
(Ë{  
m_buf„r
.
size
(); }

337 
boﬁ
 
is8Bô
(Ë{  
	gåue
; }

339 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
)

341 
size_t
 
	gi
 = 0; i < 
	gm_buf„r
.
size
(); ++i)

342 
	gde°ö©i⁄
[
i
] = 
m_buf„r
[i];

345 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
)

347 
size_t
 
	gi
 = 0; i < 
	gm_buf„r
.
size
(); ++i)

348 
	gde°ö©i⁄
[
i
] = 
m_buf„r
[i];

351 
	g¥iv©e
:

352 c⁄° 
Ve˘‹
<
LCh¨
>& 
m_buf„r
;

355 
	gãm∂©e
<>

356 
˛ass
 
	gSåögTy≥Ad≠ãr
<
	gSåög
> {

357 
	gpublic
:

358 
SåögTy≥Ad≠ãr
<
Såög
>(c⁄° Såög& 
°rög
)

359 : 
m_buf„r
(
°rög
)

363 
Àngth
(Ë{  
m_buf„r
.length(); }

365 
boﬁ
 
is8Bô
(Ë{  
	gm_buf„r
.
isNuŒ
() || m_buffer.is8Bit(); }

367 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
)

369 
	gÀngth
 = 
m_buf„r
.
Àngth
();

371 
ASSERT
(
is8Bô
());

372 c⁄° 
LCh¨
* 
	gd©a
 = 
m_buf„r
.
ch¨a˘îs8
();

373 
	gi
 = 0; i < 
	gÀngth
; ++i)

374 
	gde°ö©i⁄
[
i
] = 
d©a
[i];

376 
WTF_STRINGTYPEADAPTER_COPIED_WTF_STRING
();

379 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
)

381 
	gÀngth
 = 
m_buf„r
.
Àngth
();

383 i‡(
is8Bô
()) {

384 c⁄° 
LCh¨
* 
	gd©a
 = 
m_buf„r
.
ch¨a˘îs8
();

385 
	gi
 = 0; i < 
	gÀngth
; ++i)

386 
	gde°ö©i⁄
[
i
] = 
d©a
[i];

388 c⁄° 
UCh¨
* 
	gd©a
 = 
m_buf„r
.
ch¨a˘îs16
();

389 
	gi
 = 0; i < 
	gÀngth
; ++i)

390 
	gde°ö©i⁄
[
i
] = 
d©a
[i];

393 
WTF_STRINGTYPEADAPTER_COPIED_WTF_STRING
();

396 
	g¥iv©e
:

397 c⁄° 
Såög
& 
m_buf„r
;

400 
	gãm∂©e
<>

401 
˛ass
 
	gSåögTy≥Ad≠ãr
<
	gAtomicSåög
> {

402 
	gpublic
:

403 
SåögTy≥Ad≠ãr
<
AtomicSåög
>(c⁄° AtomicSåög& 
°rög
)

404 : 
m_ad≠ãr
(
°rög
.string())

408 
Àngth
(Ë{  
m_ad≠ãr
.length(); }

410 
boﬁ
 
is8Bô
(Ë{  
	gm_ad≠ãr
.is8Bit(); }

412 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
Ë{ 
	gm_ad≠ãr
.writeTo(destination); }

413 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
Ë{ 
	gm_ad≠ãr
.writeTo(destination); }

415 
	g¥iv©e
:

416 
SåögTy≥Ad≠ãr
<
Såög
> 
m_ad≠ãr
;

419 
ölöe
 
	$sumWôhOvîÊow
(& 
tŸÆ
, 
addíd
, 
boﬁ
& 
ovîÊow
)

421 
ﬁdTŸÆ
 = 
tŸÆ
;

422 
tŸÆ
 = 
ﬁdTŸÆ
 + 
addíd
;

423 i‡(
tŸÆ
 < 
ﬁdTŸÆ
)

424 
ovîÊow
 = 
åue
;

425 
	}
}

427 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
>

428 
	gPassRefPå
<
	gSåögIm∂
> 
	$åyMakeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
)

430 
SåögTy≥Ad≠ãr
<
SåögTy≥1
> 
	`ad≠ãr1
(
°rög1
);

431 
SåögTy≥Ad≠ãr
<
SåögTy≥2
> 
	`ad≠ãr2
(
°rög2
);

433 
boﬁ
 
ovîÊow
 = 
Ál£
;

434 
Àngth
 = 
ad≠ãr1
.
	`Àngth
();

435 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr2
.
	`Àngth
(), 
ovîÊow
);

436 i‡(
ovîÊow
)

439 i‡(
ad≠ãr1
.
	`is8Bô
(Ë&& 
ad≠ãr2
.is8Bit()) {

440 
LCh¨
* 
buf„r
;

441 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

442 i‡(!
ªsu…Im∂
)

445 
LCh¨
* 
ªsu…
 = 
buf„r
;

446 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

447 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

448 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

450  
ªsu…Im∂
.
	`ªÀa£
();

453 
UCh¨
* 
buf„r
;

454 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

455 i‡(!
ªsu…Im∂
)

458 
UCh¨
* 
ªsu…
 = 
buf„r
;

459 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

460 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

461 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

463  
ªsu…Im∂
.
	`ªÀa£
();

464 
	}
}

466 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
>

467 
	gPassRefPå
<
	gSåögIm∂
> 
	$åyMakeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
)

469 
SåögTy≥Ad≠ãr
<
SåögTy≥1
> 
	`ad≠ãr1
(
°rög1
);

470 
SåögTy≥Ad≠ãr
<
SåögTy≥2
> 
	`ad≠ãr2
(
°rög2
);

471 
SåögTy≥Ad≠ãr
<
SåögTy≥3
> 
	`ad≠ãr3
(
°rög3
);

473 
boﬁ
 
ovîÊow
 = 
Ál£
;

474 
Àngth
 = 
ad≠ãr1
.
	`Àngth
();

475 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr2
.
	`Àngth
(), 
ovîÊow
);

476 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr3
.
	`Àngth
(), 
ovîÊow
);

477 i‡(
ovîÊow
)

480 i‡(
ad≠ãr1
.
	`is8Bô
(Ë&& 
ad≠ãr2
.is8Bô(Ë&& 
ad≠ãr3
.is8Bit()) {

481 
LCh¨
* 
buf„r
;

482 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

483 i‡(!
ªsu…Im∂
)

486 
LCh¨
* 
ªsu…
 = 
buf„r
;

487 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

488 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

489 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

490 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

491 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

493  
ªsu…Im∂
.
	`ªÀa£
();

496 
UCh¨
* 
buf„r
 = 0;

497 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

498 i‡(!
ªsu…Im∂
)

501 
UCh¨
* 
ªsu…
 = 
buf„r
;

502 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

503 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

504 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

505 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

506 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

508  
ªsu…Im∂
.
	`ªÀa£
();

509 
	}
}

511 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
,Åy≥«mê
	gSåögTy≥4
>

512 
	gPassRefPå
<
	gSåögIm∂
> 
	$åyMakeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
, 
SåögTy≥4
 
°rög4
)

514 
SåögTy≥Ad≠ãr
<
SåögTy≥1
> 
	`ad≠ãr1
(
°rög1
);

515 
SåögTy≥Ad≠ãr
<
SåögTy≥2
> 
	`ad≠ãr2
(
°rög2
);

516 
SåögTy≥Ad≠ãr
<
SåögTy≥3
> 
	`ad≠ãr3
(
°rög3
);

517 
SåögTy≥Ad≠ãr
<
SåögTy≥4
> 
	`ad≠ãr4
(
°rög4
);

519 
boﬁ
 
ovîÊow
 = 
Ál£
;

520 
Àngth
 = 
ad≠ãr1
.
	`Àngth
();

521 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr2
.
	`Àngth
(), 
ovîÊow
);

522 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr3
.
	`Àngth
(), 
ovîÊow
);

523 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr4
.
	`Àngth
(), 
ovîÊow
);

524 i‡(
ovîÊow
)

527 i‡(
ad≠ãr1
.
	`is8Bô
(Ë&& 
ad≠ãr2
.is8Bô(Ë&& 
ad≠ãr3
.is8Bô(Ë&& 
ad≠ãr4
.is8Bit()) {

528 
LCh¨
* 
buf„r
;

529 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

530 i‡(!
ªsu…Im∂
)

533 
LCh¨
* 
ªsu…
 = 
buf„r
;

534 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

535 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

536 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

537 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

538 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

539 
ªsu…
 +
ad≠ãr3
.
	`Àngth
();

540 
ad≠ãr4
.
	`wrôeTo
(
ªsu…
);

542  
ªsu…Im∂
.
	`ªÀa£
();

545 
UCh¨
* 
buf„r
;

546 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

547 i‡(!
ªsu…Im∂
)

550 
UCh¨
* 
ªsu…
 = 
buf„r
;

551 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

552 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

553 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

554 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

555 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

556 
ªsu…
 +
ad≠ãr3
.
	`Àngth
();

557 
ad≠ãr4
.
	`wrôeTo
(
ªsu…
);

559  
ªsu…Im∂
.
	`ªÀa£
();

560 
	}
}

562 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
,Åy≥«mê
	gSåögTy≥4
,Åy≥«mê
	gSåögTy≥5
>

563 
	gPassRefPå
<
	gSåögIm∂
> 
	$åyMakeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
, 
SåögTy≥4
 
°rög4
, 
SåögTy≥5
 
°rög5
)

565 
SåögTy≥Ad≠ãr
<
SåögTy≥1
> 
	`ad≠ãr1
(
°rög1
);

566 
SåögTy≥Ad≠ãr
<
SåögTy≥2
> 
	`ad≠ãr2
(
°rög2
);

567 
SåögTy≥Ad≠ãr
<
SåögTy≥3
> 
	`ad≠ãr3
(
°rög3
);

568 
SåögTy≥Ad≠ãr
<
SåögTy≥4
> 
	`ad≠ãr4
(
°rög4
);

569 
SåögTy≥Ad≠ãr
<
SåögTy≥5
> 
	`ad≠ãr5
(
°rög5
);

571 
boﬁ
 
ovîÊow
 = 
Ál£
;

572 
Àngth
 = 
ad≠ãr1
.
	`Àngth
();

573 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr2
.
	`Àngth
(), 
ovîÊow
);

574 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr3
.
	`Àngth
(), 
ovîÊow
);

575 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr4
.
	`Àngth
(), 
ovîÊow
);

576 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr5
.
	`Àngth
(), 
ovîÊow
);

577 i‡(
ovîÊow
)

580 i‡(
ad≠ãr1
.
	`is8Bô
(Ë&& 
ad≠ãr2
.is8Bô(Ë&& 
ad≠ãr3
.is8Bô(Ë&& 
ad≠ãr4
.is8Bô(Ë&& 
ad≠ãr5
.is8Bit()) {

581 
LCh¨
* 
buf„r
;

582 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

583 i‡(!
ªsu…Im∂
)

586 
LCh¨
* 
ªsu…
 = 
buf„r
;

587 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

588 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

589 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

590 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

591 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

592 
ªsu…
 +
ad≠ãr3
.
	`Àngth
();

593 
ad≠ãr4
.
	`wrôeTo
(
ªsu…
);

594 
ªsu…
 +
ad≠ãr4
.
	`Àngth
();

595 
ad≠ãr5
.
	`wrôeTo
(
ªsu…
);

597  
ªsu…Im∂
.
	`ªÀa£
();

600 
UCh¨
* 
buf„r
;

601 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

602 i‡(!
ªsu…Im∂
)

605 
UCh¨
* 
ªsu…
 = 
buf„r
;

606 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

607 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

608 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

609 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

610 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

611 
ªsu…
 +
ad≠ãr3
.
	`Àngth
();

612 
ad≠ãr4
.
	`wrôeTo
(
ªsu…
);

613 
ªsu…
 +
ad≠ãr4
.
	`Àngth
();

614 
ad≠ãr5
.
	`wrôeTo
(
ªsu…
);

616  
ªsu…Im∂
.
	`ªÀa£
();

617 
	}
}

619 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
,Åy≥«mê
	gSåögTy≥4
,Åy≥«mê
	gSåögTy≥5
,Åy≥«mê
	gSåögTy≥6
>

620 
	gPassRefPå
<
	gSåögIm∂
> 
	$åyMakeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
, 
SåögTy≥4
 
°rög4
, 
SåögTy≥5
 
°rög5
, 
SåögTy≥6
 
°rög6
)

622 
SåögTy≥Ad≠ãr
<
SåögTy≥1
> 
	`ad≠ãr1
(
°rög1
);

623 
SåögTy≥Ad≠ãr
<
SåögTy≥2
> 
	`ad≠ãr2
(
°rög2
);

624 
SåögTy≥Ad≠ãr
<
SåögTy≥3
> 
	`ad≠ãr3
(
°rög3
);

625 
SåögTy≥Ad≠ãr
<
SåögTy≥4
> 
	`ad≠ãr4
(
°rög4
);

626 
SåögTy≥Ad≠ãr
<
SåögTy≥5
> 
	`ad≠ãr5
(
°rög5
);

627 
SåögTy≥Ad≠ãr
<
SåögTy≥6
> 
	`ad≠ãr6
(
°rög6
);

629 
boﬁ
 
ovîÊow
 = 
Ál£
;

630 
Àngth
 = 
ad≠ãr1
.
	`Àngth
();

631 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr2
.
	`Àngth
(), 
ovîÊow
);

632 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr3
.
	`Àngth
(), 
ovîÊow
);

633 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr4
.
	`Àngth
(), 
ovîÊow
);

634 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr5
.
	`Àngth
(), 
ovîÊow
);

635 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr6
.
	`Àngth
(), 
ovîÊow
);

636 i‡(
ovîÊow
)

639 i‡(
ad≠ãr1
.
	`is8Bô
(Ë&& 
ad≠ãr2
.is8Bô(Ë&& 
ad≠ãr3
.is8Bô(Ë&& 
ad≠ãr4
.is8Bô(Ë&& 
ad≠ãr5
.is8Bô(Ë&& 
ad≠ãr6
.is8Bit()) {

640 
LCh¨
* 
buf„r
;

641 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

642 i‡(!
ªsu…Im∂
)

645 
LCh¨
* 
ªsu…
 = 
buf„r
;

646 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

647 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

648 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

649 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

650 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

651 
ªsu…
 +
ad≠ãr3
.
	`Àngth
();

652 
ad≠ãr4
.
	`wrôeTo
(
ªsu…
);

653 
ªsu…
 +
ad≠ãr4
.
	`Àngth
();

654 
ad≠ãr5
.
	`wrôeTo
(
ªsu…
);

655 
ªsu…
 +
ad≠ãr5
.
	`Àngth
();

656 
ad≠ãr6
.
	`wrôeTo
(
ªsu…
);

658  
ªsu…Im∂
.
	`ªÀa£
();

661 
UCh¨
* 
buf„r
;

662 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

663 i‡(!
ªsu…Im∂
)

666 
UCh¨
* 
ªsu…
 = 
buf„r
;

667 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

668 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

669 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

670 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

671 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

672 
ªsu…
 +
ad≠ãr3
.
	`Àngth
();

673 
ad≠ãr4
.
	`wrôeTo
(
ªsu…
);

674 
ªsu…
 +
ad≠ãr4
.
	`Àngth
();

675 
ad≠ãr5
.
	`wrôeTo
(
ªsu…
);

676 
ªsu…
 +
ad≠ãr5
.
	`Àngth
();

677 
ad≠ãr6
.
	`wrôeTo
(
ªsu…
);

679  
ªsu…Im∂
.
	`ªÀa£
();

680 
	}
}

682 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
,Åy≥«mê
	gSåögTy≥4
,Åy≥«mê
	gSåögTy≥5
,Åy≥«mê
	gSåögTy≥6
,Åy≥«mê
	gSåögTy≥7
>

683 
	gPassRefPå
<
	gSåögIm∂
> 
	$åyMakeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
, 
SåögTy≥4
 
°rög4
, 
SåögTy≥5
 
°rög5
, 
SåögTy≥6
 
°rög6
, 
SåögTy≥7
 
°rög7
)

685 
SåögTy≥Ad≠ãr
<
SåögTy≥1
> 
	`ad≠ãr1
(
°rög1
);

686 
SåögTy≥Ad≠ãr
<
SåögTy≥2
> 
	`ad≠ãr2
(
°rög2
);

687 
SåögTy≥Ad≠ãr
<
SåögTy≥3
> 
	`ad≠ãr3
(
°rög3
);

688 
SåögTy≥Ad≠ãr
<
SåögTy≥4
> 
	`ad≠ãr4
(
°rög4
);

689 
SåögTy≥Ad≠ãr
<
SåögTy≥5
> 
	`ad≠ãr5
(
°rög5
);

690 
SåögTy≥Ad≠ãr
<
SåögTy≥6
> 
	`ad≠ãr6
(
°rög6
);

691 
SåögTy≥Ad≠ãr
<
SåögTy≥7
> 
	`ad≠ãr7
(
°rög7
);

693 
boﬁ
 
ovîÊow
 = 
Ál£
;

694 
Àngth
 = 
ad≠ãr1
.
	`Àngth
();

695 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr2
.
	`Àngth
(), 
ovîÊow
);

696 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr3
.
	`Àngth
(), 
ovîÊow
);

697 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr4
.
	`Àngth
(), 
ovîÊow
);

698 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr5
.
	`Àngth
(), 
ovîÊow
);

699 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr6
.
	`Àngth
(), 
ovîÊow
);

700 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr7
.
	`Àngth
(), 
ovîÊow
);

701 i‡(
ovîÊow
)

704 i‡(
ad≠ãr1
.
	`is8Bô
(Ë&& 
ad≠ãr2
.is8Bô(Ë&& 
ad≠ãr3
.is8Bô(Ë&& 
ad≠ãr4
.is8Bô(Ë&& 
ad≠ãr5
.is8Bô(Ë&& 
ad≠ãr6
.is8Bô(Ë&& 
ad≠ãr7
.is8Bit()) {

705 
LCh¨
* 
buf„r
;

706 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

707 i‡(!
ªsu…Im∂
)

710 
LCh¨
* 
ªsu…
 = 
buf„r
;

711 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

712 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

713 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

714 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

715 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

716 
ªsu…
 +
ad≠ãr3
.
	`Àngth
();

717 
ad≠ãr4
.
	`wrôeTo
(
ªsu…
);

718 
ªsu…
 +
ad≠ãr4
.
	`Àngth
();

719 
ad≠ãr5
.
	`wrôeTo
(
ªsu…
);

720 
ªsu…
 +
ad≠ãr5
.
	`Àngth
();

721 
ad≠ãr6
.
	`wrôeTo
(
ªsu…
);

722 
ªsu…
 +
ad≠ãr6
.
	`Àngth
();

723 
ad≠ãr7
.
	`wrôeTo
(
ªsu…
);

725  
ªsu…Im∂
.
	`ªÀa£
();

728 
UCh¨
* 
buf„r
;

729 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

730 i‡(!
ªsu…Im∂
)

733 
UCh¨
* 
ªsu…
 = 
buf„r
;

734 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

735 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

736 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

737 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

738 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

739 
ªsu…
 +
ad≠ãr3
.
	`Àngth
();

740 
ad≠ãr4
.
	`wrôeTo
(
ªsu…
);

741 
ªsu…
 +
ad≠ãr4
.
	`Àngth
();

742 
ad≠ãr5
.
	`wrôeTo
(
ªsu…
);

743 
ªsu…
 +
ad≠ãr5
.
	`Àngth
();

744 
ad≠ãr6
.
	`wrôeTo
(
ªsu…
);

745 
ªsu…
 +
ad≠ãr6
.
	`Àngth
();

746 
ad≠ãr7
.
	`wrôeTo
(
ªsu…
);

748  
ªsu…Im∂
.
	`ªÀa£
();

749 
	}
}

751 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
,Åy≥«mê
	gSåögTy≥4
,Åy≥«mê
	gSåögTy≥5
,Åy≥«mê
	gSåögTy≥6
,Åy≥«mê
	gSåögTy≥7
,Åy≥«mê
	gSåögTy≥8
>

752 
	gPassRefPå
<
	gSåögIm∂
> 
	$åyMakeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
, 
SåögTy≥4
 
°rög4
, 
SåögTy≥5
 
°rög5
, 
SåögTy≥6
 
°rög6
, 
SåögTy≥7
 
°rög7
, 
SåögTy≥8
 
°rög8
)

754 
SåögTy≥Ad≠ãr
<
SåögTy≥1
> 
	`ad≠ãr1
(
°rög1
);

755 
SåögTy≥Ad≠ãr
<
SåögTy≥2
> 
	`ad≠ãr2
(
°rög2
);

756 
SåögTy≥Ad≠ãr
<
SåögTy≥3
> 
	`ad≠ãr3
(
°rög3
);

757 
SåögTy≥Ad≠ãr
<
SåögTy≥4
> 
	`ad≠ãr4
(
°rög4
);

758 
SåögTy≥Ad≠ãr
<
SåögTy≥5
> 
	`ad≠ãr5
(
°rög5
);

759 
SåögTy≥Ad≠ãr
<
SåögTy≥6
> 
	`ad≠ãr6
(
°rög6
);

760 
SåögTy≥Ad≠ãr
<
SåögTy≥7
> 
	`ad≠ãr7
(
°rög7
);

761 
SåögTy≥Ad≠ãr
<
SåögTy≥8
> 
	`ad≠ãr8
(
°rög8
);

763 
boﬁ
 
ovîÊow
 = 
Ál£
;

764 
Àngth
 = 
ad≠ãr1
.
	`Àngth
();

765 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr2
.
	`Àngth
(), 
ovîÊow
);

766 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr3
.
	`Àngth
(), 
ovîÊow
);

767 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr4
.
	`Àngth
(), 
ovîÊow
);

768 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr5
.
	`Àngth
(), 
ovîÊow
);

769 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr6
.
	`Àngth
(), 
ovîÊow
);

770 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr7
.
	`Àngth
(), 
ovîÊow
);

771 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr8
.
	`Àngth
(), 
ovîÊow
);

772 i‡(
ovîÊow
)

775 i‡(
ad≠ãr1
.
	`is8Bô
(Ë&& 
ad≠ãr2
.is8Bô(Ë&& 
ad≠ãr3
.is8Bô(Ë&& 
ad≠ãr4
.is8Bô(Ë&& 
ad≠ãr5
.is8Bô(Ë&& 
ad≠ãr6
.is8Bô(Ë&& 
ad≠ãr7
.is8Bô(Ë&& 
ad≠ãr8
.is8Bit()) {

776 
LCh¨
* 
buf„r
;

777 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

778 i‡(!
ªsu…Im∂
)

781 
LCh¨
* 
ªsu…
 = 
buf„r
;

782 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

783 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

784 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

785 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

786 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

787 
ªsu…
 +
ad≠ãr3
.
	`Àngth
();

788 
ad≠ãr4
.
	`wrôeTo
(
ªsu…
);

789 
ªsu…
 +
ad≠ãr4
.
	`Àngth
();

790 
ad≠ãr5
.
	`wrôeTo
(
ªsu…
);

791 
ªsu…
 +
ad≠ãr5
.
	`Àngth
();

792 
ad≠ãr6
.
	`wrôeTo
(
ªsu…
);

793 
ªsu…
 +
ad≠ãr6
.
	`Àngth
();

794 
ad≠ãr7
.
	`wrôeTo
(
ªsu…
);

795 
ªsu…
 +
ad≠ãr7
.
	`Àngth
();

796 
ad≠ãr8
.
	`wrôeTo
(
ªsu…
);

798  
ªsu…Im∂
.
	`ªÀa£
();

801 
UCh¨
* 
buf„r
;

802 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

803 i‡(!
ªsu…Im∂
)

806 
UCh¨
* 
ªsu…
 = 
buf„r
;

807 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

808 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

809 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

810 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

811 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

812 
ªsu…
 +
ad≠ãr3
.
	`Àngth
();

813 
ad≠ãr4
.
	`wrôeTo
(
ªsu…
);

814 
ªsu…
 +
ad≠ãr4
.
	`Àngth
();

815 
ad≠ãr5
.
	`wrôeTo
(
ªsu…
);

816 
ªsu…
 +
ad≠ãr5
.
	`Àngth
();

817 
ad≠ãr6
.
	`wrôeTo
(
ªsu…
);

818 
ªsu…
 +
ad≠ãr6
.
	`Àngth
();

819 
ad≠ãr7
.
	`wrôeTo
(
ªsu…
);

820 
ªsu…
 +
ad≠ãr7
.
	`Àngth
();

821 
ad≠ãr8
.
	`wrôeTo
(
ªsu…
);

823  
ªsu…Im∂
.
	`ªÀa£
();

824 
	}
}

826 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
,Åy≥«mê
	gSåögTy≥4
,Åy≥«mê
	gSåögTy≥5
,Åy≥«mê
	gSåögTy≥6
,Åy≥«mê
	gSåögTy≥7
,Åy≥«mê
	gSåögTy≥8
,Åy≥«mê
	gSåögTy≥9
>

827 
	gPassRefPå
<
	gSåögIm∂
> 
	$åyMakeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
, 
SåögTy≥4
 
°rög4
, 
SåögTy≥5
 
°rög5
, 
SåögTy≥6
 
°rög6
, 
SåögTy≥7
 
°rög7
, 
SåögTy≥8
 
°rög8
, 
SåögTy≥9
 
°rög9
)

829 
SåögTy≥Ad≠ãr
<
SåögTy≥1
> 
	`ad≠ãr1
(
°rög1
);

830 
SåögTy≥Ad≠ãr
<
SåögTy≥2
> 
	`ad≠ãr2
(
°rög2
);

831 
SåögTy≥Ad≠ãr
<
SåögTy≥3
> 
	`ad≠ãr3
(
°rög3
);

832 
SåögTy≥Ad≠ãr
<
SåögTy≥4
> 
	`ad≠ãr4
(
°rög4
);

833 
SåögTy≥Ad≠ãr
<
SåögTy≥5
> 
	`ad≠ãr5
(
°rög5
);

834 
SåögTy≥Ad≠ãr
<
SåögTy≥6
> 
	`ad≠ãr6
(
°rög6
);

835 
SåögTy≥Ad≠ãr
<
SåögTy≥7
> 
	`ad≠ãr7
(
°rög7
);

836 
SåögTy≥Ad≠ãr
<
SåögTy≥8
> 
	`ad≠ãr8
(
°rög8
);

837 
SåögTy≥Ad≠ãr
<
SåögTy≥9
> 
	`ad≠ãr9
(
°rög9
);

839 
boﬁ
 
ovîÊow
 = 
Ál£
;

840 
Àngth
 = 
ad≠ãr1
.
	`Àngth
();

841 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr2
.
	`Àngth
(), 
ovîÊow
);

842 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr3
.
	`Àngth
(), 
ovîÊow
);

843 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr4
.
	`Àngth
(), 
ovîÊow
);

844 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr5
.
	`Àngth
(), 
ovîÊow
);

845 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr6
.
	`Àngth
(), 
ovîÊow
);

846 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr7
.
	`Àngth
(), 
ovîÊow
);

847 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr8
.
	`Àngth
(), 
ovîÊow
);

848 
	`sumWôhOvîÊow
(
Àngth
, 
ad≠ãr9
.
	`Àngth
(), 
ovîÊow
);

849 i‡(
ovîÊow
)

852 i‡(
ad≠ãr1
.
	`is8Bô
(Ë&& 
ad≠ãr2
.is8Bô(Ë&& 
ad≠ãr3
.is8Bô(Ë&& 
ad≠ãr4
.is8Bô(Ë&& 
ad≠ãr5
.is8Bô(Ë&& 
ad≠ãr6
.is8Bô(Ë&& 
ad≠ãr7
.is8Bô(Ë&& 
ad≠ãr8
.is8Bô(Ë&& 
ad≠ãr9
.is8Bit()) {

853 
LCh¨
* 
buf„r
;

854 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

855 i‡(!
ªsu…Im∂
)

858 
LCh¨
* 
ªsu…
 = 
buf„r
;

859 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

860 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

861 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

862 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

863 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

864 
ªsu…
 +
ad≠ãr3
.
	`Àngth
();

865 
ad≠ãr4
.
	`wrôeTo
(
ªsu…
);

866 
ªsu…
 +
ad≠ãr4
.
	`Àngth
();

867 
ad≠ãr5
.
	`wrôeTo
(
ªsu…
);

868 
ªsu…
 +
ad≠ãr5
.
	`Àngth
();

869 
ad≠ãr6
.
	`wrôeTo
(
ªsu…
);

870 
ªsu…
 +
ad≠ãr6
.
	`Àngth
();

871 
ad≠ãr7
.
	`wrôeTo
(
ªsu…
);

872 
ªsu…
 +
ad≠ãr7
.
	`Àngth
();

873 
ad≠ãr8
.
	`wrôeTo
(
ªsu…
);

874 
ªsu…
 +
ad≠ãr8
.
	`Àngth
();

875 
ad≠ãr9
.
	`wrôeTo
(
ªsu…
);

877  
ªsu…Im∂
.
	`ªÀa£
();

880 
UCh¨
* 
buf„r
;

881 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = SåögIm∂::
	`åyCª©eUnöôülized
(
Àngth
, 
buf„r
);

882 i‡(!
ªsu…Im∂
)

885 
UCh¨
* 
ªsu…
 = 
buf„r
;

886 
ad≠ãr1
.
	`wrôeTo
(
ªsu…
);

887 
ªsu…
 +
ad≠ãr1
.
	`Àngth
();

888 
ad≠ãr2
.
	`wrôeTo
(
ªsu…
);

889 
ªsu…
 +
ad≠ãr2
.
	`Àngth
();

890 
ad≠ãr3
.
	`wrôeTo
(
ªsu…
);

891 
ªsu…
 +
ad≠ãr3
.
	`Àngth
();

892 
ad≠ãr4
.
	`wrôeTo
(
ªsu…
);

893 
ªsu…
 +
ad≠ãr4
.
	`Àngth
();

894 
ad≠ãr5
.
	`wrôeTo
(
ªsu…
);

895 
ªsu…
 +
ad≠ãr5
.
	`Àngth
();

896 
ad≠ãr6
.
	`wrôeTo
(
ªsu…
);

897 
ªsu…
 +
ad≠ãr6
.
	`Àngth
();

898 
ad≠ãr7
.
	`wrôeTo
(
ªsu…
);

899 
ªsu…
 +
ad≠ãr7
.
	`Àngth
();

900 
ad≠ãr8
.
	`wrôeTo
(
ªsu…
);

901 
ªsu…
 +
ad≠ãr8
.
	`Àngth
();

902 
ad≠ãr9
.
	`wrôeTo
(
ªsu…
);

904  
ªsu…Im∂
.
	`ªÀa£
();

905 
	}
}

909 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
>

910 
Såög
 
	$makeSåög
(
SåögTy≥1
 
°rög1
)

912  
	`Såög
(
°rög1
);

913 
	}
}

915 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
>

916 
Såög
 
	$makeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
)

918 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = 
	`åyMakeSåög
(
°rög1
, 
°rög2
);

919 i‡(!
ªsu…Im∂
)

920 
	`CRASH
();

921  
ªsu…Im∂
.
	`ªÀa£
();

922 
	}
}

924 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
>

925 
Såög
 
	$makeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
)

927 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = 
	`åyMakeSåög
(
°rög1
, 
°rög2
, 
°rög3
);

928 i‡(!
ªsu…Im∂
)

929 
	`CRASH
();

930  
ªsu…Im∂
.
	`ªÀa£
();

931 
	}
}

933 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
,Åy≥«mê
	gSåögTy≥4
>

934 
Såög
 
	$makeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
, 
SåögTy≥4
 
°rög4
)

936 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = 
	`åyMakeSåög
(
°rög1
, 
°rög2
, 
°rög3
, 
°rög4
);

937 i‡(!
ªsu…Im∂
)

938 
	`CRASH
();

939  
ªsu…Im∂
.
	`ªÀa£
();

940 
	}
}

942 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
,Åy≥«mê
	gSåögTy≥4
,Åy≥«mê
	gSåögTy≥5
>

943 
Såög
 
	$makeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
, 
SåögTy≥4
 
°rög4
, 
SåögTy≥5
 
°rög5
)

945 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = 
	`åyMakeSåög
(
°rög1
, 
°rög2
, 
°rög3
, 
°rög4
, 
°rög5
);

946 i‡(!
ªsu…Im∂
)

947 
	`CRASH
();

948  
ªsu…Im∂
.
	`ªÀa£
();

949 
	}
}

951 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
,Åy≥«mê
	gSåögTy≥4
,Åy≥«mê
	gSåögTy≥5
,Åy≥«mê
	gSåögTy≥6
>

952 
Såög
 
	$makeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
, 
SåögTy≥4
 
°rög4
, 
SåögTy≥5
 
°rög5
, 
SåögTy≥6
 
°rög6
)

954 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = 
	`åyMakeSåög
(
°rög1
, 
°rög2
, 
°rög3
, 
°rög4
, 
°rög5
, 
°rög6
);

955 i‡(!
ªsu…Im∂
)

956 
	`CRASH
();

957  
ªsu…Im∂
.
	`ªÀa£
();

958 
	}
}

960 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
,Åy≥«mê
	gSåögTy≥4
,Åy≥«mê
	gSåögTy≥5
,Åy≥«mê
	gSåögTy≥6
,Åy≥«mê
	gSåögTy≥7
>

961 
Såög
 
	$makeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
, 
SåögTy≥4
 
°rög4
, 
SåögTy≥5
 
°rög5
, 
SåögTy≥6
 
°rög6
, 
SåögTy≥7
 
°rög7
)

963 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = 
	`åyMakeSåög
(
°rög1
, 
°rög2
, 
°rög3
, 
°rög4
, 
°rög5
, 
°rög6
, 
°rög7
);

964 i‡(!
ªsu…Im∂
)

965 
	`CRASH
();

966  
ªsu…Im∂
.
	`ªÀa£
();

967 
	}
}

969 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
,Åy≥«mê
	gSåögTy≥4
,Åy≥«mê
	gSåögTy≥5
,Åy≥«mê
	gSåögTy≥6
,Åy≥«mê
	gSåögTy≥7
,Åy≥«mê
	gSåögTy≥8
>

970 
Såög
 
	$makeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
, 
SåögTy≥4
 
°rög4
, 
SåögTy≥5
 
°rög5
, 
SåögTy≥6
 
°rög6
, 
SåögTy≥7
 
°rög7
, 
SåögTy≥8
 
°rög8
)

972 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = 
	`åyMakeSåög
(
°rög1
, 
°rög2
, 
°rög3
, 
°rög4
, 
°rög5
, 
°rög6
, 
°rög7
, 
°rög8
);

973 i‡(!
ªsu…Im∂
)

974 
	`CRASH
();

975  
ªsu…Im∂
.
	`ªÀa£
();

976 
	}
}

978 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
,Åy≥«mê
	gSåögTy≥3
,Åy≥«mê
	gSåögTy≥4
,Åy≥«mê
	gSåögTy≥5
,Åy≥«mê
	gSåögTy≥6
,Åy≥«mê
	gSåögTy≥7
,Åy≥«mê
	gSåögTy≥8
,Åy≥«mê
	gSåögTy≥9
>

979 
Såög
 
	$makeSåög
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
, 
SåögTy≥3
 
°rög3
, 
SåögTy≥4
 
°rög4
, 
SåögTy≥5
 
°rög5
, 
SåögTy≥6
 
°rög6
, 
SåögTy≥7
 
°rög7
, 
SåögTy≥8
 
°rög8
, 
SåögTy≥9
 
°rög9
)

981 
RefPå
<
SåögIm∂
> 
ªsu…Im∂
 = 
	`åyMakeSåög
(
°rög1
, 
°rög2
, 
°rög3
, 
°rög4
, 
°rög5
, 
°rög6
, 
°rög7
, 
°rög8
, 
°rög9
);

982 i‡(!
ªsu…Im∂
)

983 
	`CRASH
();

984  
ªsu…Im∂
.
	`ªÀa£
();

985 
	}
}

989 
usög
 
	gWTF
::
makeSåög
;

991 
	~<wtf/ãxt/SåögO≥øt‹s.h
>

	@text/StringHash.h

22 #i‚de‡
SåögHash_h


23 
	#SåögHash_h


	)

25 
	~<wtf/ãxt/AtomicSåög.h
>

26 
	~<wtf/HashTøôs.h
>

27 
	~<wtf/SåögHashî.h
>

29 
«me•a˚
 
	gWTF
 {

31 
ölöe
 
boﬁ
 
	gHashTøôs
<
	gSåög
>::
isEm±yVÆue
(c⁄° 
Såög
& 
vÆue
)

33  
vÆue
.
isNuŒ
();

44 
	sSåögHash
 {

45 
hash
(
SåögIm∂
* 
key
Ë{  
	gkey
->hash(); }

46 
ölöe
 
boﬁ
 
equÆ
(c⁄° 
SåögIm∂
* 
a
, c⁄° SåögIm∂* 
b
)

48  
	gWTF
::
equÆ
(*
a
, *
b
);

51 
hash
(c⁄° 
RefPå
<
SåögIm∂
>& 
key
Ë{  
	gkey
->hash(); }

52 
boﬁ
 
equÆ
(c⁄° 
RefPå
<
SåögIm∂
>& 
a
, c⁄° RefPå<SåögIm∂>& 
b
)

54  
equÆ
(
a
.
gë
(), 
b
.get());

56 
boﬁ
 
equÆ
(c⁄° 
RefPå
<
SåögIm∂
>& 
a
, c⁄° SåögIm∂* 
b
)

58  
equÆ
(
a
.
gë
(), 
b
);

60 
boﬁ
 
equÆ
(c⁄° 
SåögIm∂
* 
a
, c⁄° 
RefPå
<SåögIm∂>& 
b
)

62  
equÆ
(
a
, 
b
.
gë
());

65 
hash
(c⁄° 
Såög
& 
key
Ë{  
	gkey
.
im∂
()->hash(); }

66 
boﬁ
 
equÆ
(c⁄° 
Såög
& 
a
, c⁄° Såög& 
b
)

68  
equÆ
(
a
.
im∂
(), 
b
.impl());

71 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
Ál£
;

74 ˛as†
	cCa£FﬁdögHash
 {

75 
	gpublic
:

76 
ãm∂©e
<
ty≥«me
 
T
> 
ölöe
 
UCh¨
 
fﬁdCa£
(T 
ch¨a˘î
)

78 i‡(
°d
::
is_ßme
<
T
, 
	gLCh¨
>::
vÆue
)

79  
SåögIm∂
::
œtö1Ca£FﬁdTabÀ
[
ch¨a˘î
];

81  
u_fﬁdCa£
(
ch¨a˘î
, 
U_FOLD_CASE_DEFAULT
);

84 
hash
(c⁄° 
UCh¨
* 
d©a
, 
Àngth
)

86  
	gSåögHashî
::
compuãHashAndMaskT›8Bôs
<
UCh¨
, 
	gfﬁdCa£
<
	gUCh¨
>>(
	gd©a
, 
	gÀngth
);

89 
hash
(
SåögIm∂
& 
°rög
)

91 i‡(
	g°rög
.
is8Bô
())

92  
hash
(
°rög
.
ch¨a˘îs8
(), såög.
Àngth
());

93  
hash
(
°rög
.
ch¨a˘îs16
(), såög.
Àngth
());

95 
hash
(
SåögIm∂
* 
°rög
)

97 
ASSERT
(
°rög
);

98  
hash
(*
°rög
);

101 
hash
(c⁄° 
LCh¨
* 
d©a
, 
Àngth
)

103  
	gSåögHashî
::
compuãHashAndMaskT›8Bôs
<
LCh¨
, 
	gfﬁdCa£
<
	gLCh¨
>>(
	gd©a
, 
	gÀngth
);

106 
ölöe
 
hash
(c⁄° * 
d©a
, 
Àngth
)

108  
	gCa£FﬁdögHash
::
hash
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
d©a
), 
Àngth
);

111 
ölöe
 
boﬁ
 
equÆ
(c⁄° 
SåögIm∂
* 
a
, c⁄° SåögIm∂* 
b
)

113  
equÆIgn‹ögCa£N⁄NuŒ
(
a
, 
b
);

116 
hash
(c⁄° 
RefPå
<
SåögIm∂
>& 
key
)

118  
hash
(*
key
);

121 
boﬁ
 
equÆ
(c⁄° 
RefPå
<
SåögIm∂
>& 
a
, c⁄° RefPå<SåögIm∂>& 
b
)

123  
equÆ
(
a
.
gë
(), 
b
.get());

126 
hash
(c⁄° 
Såög
& 
key
)

128  
hash
(
key
.
im∂
());

130 
hash
(c⁄° 
AtomicSåög
& 
key
)

132  
hash
(
key
.
im∂
());

134 
boﬁ
 
equÆ
(c⁄° 
Såög
& 
a
, c⁄° Såög& 
b
)

136  
equÆ
(
a
.
im∂
(), 
b
.impl());

138 
boﬁ
 
equÆ
(c⁄° 
AtomicSåög
& 
a
, c⁄° AtomicSåög& 
b
)

142  
	ga
 =
b
 || 
equÆ
(
a
.
im∂
(), b.impl());

145 c⁄° 
boﬁ
 
	gß„ToCom∑ªToEm±yOrDñëed
 = 
Ál£
;

151 
	gAÃódyHashed
 : 
I¡Hash
<> {

152 
hash
(
key
) {  key; }

158 
avoidDñëedVÆue
(
hash
)

160 
ASSERT
(
hash
);

161 
	g√wHash
 = 
hash
 | (!(hash + 1) << 31);

162 
ASSERT
(
√wHash
);

163 
ASSERT
(
√wHash
 != 0xFFFFFFFF);

164  
	g√wHash
;

170 
usög
 
	gWTF
::
AÃódyHashed
;

171 
usög
 
	gWTF
::
Ca£FﬁdögHash
;

172 
usög
 
	gWTF
::
SåögHash
;

	@text/StringImpl.cpp

25 
	~"c⁄fig.h
"

26 
	~"SåögIm∂.h
"

28 
	~"AtomicSåög.h
"

29 
	~"SåögBuf„r.h
"

30 
	~"SåögHash.h
"

31 
	~<wtf/Pro˚ssID.h
>

32 
	~<wtf/StdLibExåas.h
>

33 
	~<wtf/WTFThªadD©a.h
>

34 
	~<wtf/ãxt/CSåög.h
>

35 
	~<wtf/ãxt/SåögVõw.h
>

36 
	~<wtf/unicode/Ch¨a˘îNames.h
>

37 
	~<wtf/unicode/UTF8.h
>

39 #ifde‡
STRING_STATS


40 
	~<uni°d.h
>

41 
	~<wtf/D©aLog.h
>

44 
«me•a˚
 
	gWTF
 {

46 
usög
 
«me•a˚
 
	gUnicode
;

48 
COMPILE_ASSERT
((
SåögIm∂
Ë=2 * (Ë+ 2 * (*), 
SåögIm∂_should_°ay_smÆl
);

50 #ifde‡
STRING_STATS


51 
SåögSèts
 
	gSåögIm∂
::
m_°rögSèts
;

53 
	gSåögSèts
::
s_°rögRemovesTûlPrötSèts
 = 
SåögSèts
::
s_¥ötSåögSètsFªquícy
;

55 
	gSåögSèts
::
ªmoveSåög
(
SåögIm∂
* 
°rög
)

57 
Àngth
 = 
°rög
->length();

58 
boﬁ
 
	gisSubSåög
 = 
°rög
->
isSubSåög
();

60 --
	gm_tŸÆNumbîSåögs
;

62 i‡(
	g°rög
->
has16BôShadow
()) {

63 --
	gm_numbîUpc⁄vîãdSåögs
;

64 i‡(!
	gisSubSåög
)

65 
	gm_tŸÆUpc⁄vîãdD©a
 -
Àngth
;

68 i‡(
	g°rög
->
is8Bô
()) {

69 --
	gm_numbî8BôSåögs
;

70 i‡(!
	gisSubSåög
)

71 
	gm_tŸÆ8BôD©a
 -
Àngth
;

73 --
	gm_numbî16BôSåögs
;

74 i‡(!
	gisSubSåög
)

75 
	gm_tŸÆ16BôD©a
 -
Àngth
;

78 i‡(!--
	gs_°rögRemovesTûlPrötSèts
) {

79 
	gs_°rögRemovesTûlPrötSèts
 = 
s_¥ötSåögSètsFªquícy
;

80 
¥ötSèts
();

84 
	gSåögSèts
::
¥ötSèts
()

86 
d©aLogF
("Såög sèt†f‹Öro˚s†id %d:\n", 
gëCuºítPro˚ssID
());

88 
	gtŸÆNumbîCh¨a˘îs
 = 
m_tŸÆ8BôD©a
 + 
m_tŸÆ16BôD©a
;

89 
	g≥r˚¡8Bô
 = 
m_tŸÆNumbîSåögs
 ? (()
m_numbî8BôSåögs
 * 100) / ()m_totalNumberStrings : 0.0;

90 
	gavîage8bôLígth
 = 
m_numbî8BôSåögs
 ? ()
m_tŸÆ8BôD©a
 / ()m_number8BitStrings : 0.0;

91 
d©aLogF
("%8u (%5.2f%%Ë8 bô %12Œu ch¨† %12Œu byã†ávgÜígth %6.1f\n", 
m_numbî8BôSåögs
, 
≥r˚¡8Bô
, 
m_tŸÆ8BôD©a
, m_tŸÆ8BôD©a, 
avîage8bôLígth
);

93 
	g≥r˚¡16Bô
 = 
m_tŸÆNumbîSåögs
 ? (()
m_numbî16BôSåögs
 * 100) / ()m_totalNumberStrings : 0.0;

94 
	gavîage16bôLígth
 = 
m_numbî16BôSåögs
 ? ()
m_tŸÆ16BôD©a
 / ()m_number16BitStrings : 0.0;

95 
d©aLogF
("%8u (%5.2f%%Ë16 bô %12Œu ch¨† %12Œu byã†ávgÜígth %6.1f\n", 
m_numbî16BôSåögs
, 
≥r˚¡16Bô
, 
m_tŸÆ16BôD©a
, m_tŸÆ16BôD©®* 2, 
avîage16bôLígth
);

97 
	g≥r˚¡Upc⁄vîãd
 = 
m_tŸÆNumbîSåögs
 ? (()
m_numbîUpc⁄vîãdSåögs
 * 100Ë/ ()
m_numbî8BôSåögs
 : 0.0;

98 
	gavîageUpc⁄vîãdLígth
 = 
m_numbîUpc⁄vîãdSåögs
 ? ()
m_tŸÆUpc⁄vîãdD©a
 / ()m_numberUpconvertedStrings : 0.0;

99 
d©aLogF
("%8u (%5.2f%%Ëupc⁄vîãd %12Œu ch¨† %12Œu byã†ávgÜígth %6.1f\n", 
m_numbîUpc⁄vîãdSåögs
, 
≥r˚¡Upc⁄vîãd
, 
m_tŸÆUpc⁄vîãdD©a
, m_tŸÆUpc⁄vîãdD©®* 2, 
avîageUpc⁄vîãdLígth
);

101 
	gavîageLígth
 = 
m_tŸÆNumbîSåögs
 ? ()
tŸÆNumbîCh¨a˘îs
 / ()m_totalNumberStrings : 0.0;

102 
	gtŸÆD©aByãs
 = 
m_tŸÆ8BôD©a
 + (
m_tŸÆ16BôD©a
 + 
m_tŸÆUpc⁄vîãdD©a
) * 2;

103 
d©aLogF
("%8u TŸÆ %12Œu ch¨† %12Œu byã†ávgÜígth %6.1f\n", 
m_tŸÆNumbîSåögs
, 
tŸÆNumbîCh¨a˘îs
, 
tŸÆD©aByãs
, 
avîageLígth
);

104 
	gtŸÆSavedByãs
 = 
m_tŸÆ8BôD©a
 - 
m_tŸÆUpc⁄vîãdD©a
;

105 
	g≥r˚¡Savögs
 = 
tŸÆSavedByãs
 ? ((ÈŸÆSavedByã†* 100Ë/ ()(
tŸÆD©aByãs
 +ÅotalSavedBytes) : 0.0;

106 
d©aLogF
(" TŸÆ savög†%12Œu byã†(%5.2f%%)\n", 
tŸÆSavedByãs
, 
≥r˚¡Savögs
);

111 
	gSåögIm∂
::~
SåögIm∂
()

113 
ASSERT
(!
isSètic
());

115 
STRING_STATS_REMOVE_STRING
(
this
);

117 i‡(
isAtomic
(Ë&& 
	gm_Àngth
)

118 
	gAtomicSåög
::
ªmove
(
this
);

120 
Buf„rOw√rshù
 
	gow√rshù
 = 
buf„rOw√rshù
();

122 i‡(
	gow√rshù
 =
Buf„rI¡î«l
)

124 i‡(
	gow√rshù
 =
Buf„rOw√d
) {

126 
ASSERT
(
m_d©a8
);

127 
Á°Fªe
(
c⁄°_ˇ°
<
LCh¨
*>(
m_d©a8
));

131 
ASSERT
(
ow√rshù
 =
Buf„rSub°rög
);

132 
ASSERT
(
sub°rögBuf„r
());

133 
sub°rögBuf„r
()->
dîef
();

136 
	gSåögIm∂
::
de°roy
(
SåögIm∂
* 
°rögIm∂
)

138 
°rögIm∂
->~
SåögIm∂
();

139 
Á°Fªe
(
°rögIm∂
);

142 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óãFromLôîÆ
(c⁄° * 
ch¨a˘îs
, 
Àngth
)

144 
ASSERT_WITH_MESSAGE
(
Àngth
, "Use StringImpl::empty()Åo createánÉmpty string");

145 
ASSERT
(
ch¨a˘îsAªAŒASCII
<
LCh¨
>(
ªöãΩªt_ˇ°
<c⁄° LCh¨*>(
ch¨a˘îs
), 
Àngth
));

146  
ad›tRef
(*
√w
 
SåögIm∂
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
ch¨a˘îs
), 
Àngth
, 
C⁄°ru˘WôhoutC›yög
));

149 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óãFromLôîÆ
(c⁄° * 
ch¨a˘îs
)

151  
¸óãFromLôîÆ
(
ch¨a˘îs
, 
°æí
(characters));

154 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óãWôhoutC›yög
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
)

156 i‡(!
	gÀngth
)

157  *
em±y
();

159  
ad›tRef
(*
√w
 
SåögIm∂
(
ch¨a˘îs
, 
Àngth
, 
C⁄°ru˘WôhoutC›yög
));

162 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óãWôhoutC›yög
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
)

164 i‡(!
	gÀngth
)

165  *
em±y
();

167  
ad›tRef
(*
√w
 
SåögIm∂
(
ch¨a˘îs
, 
Àngth
, 
C⁄°ru˘WôhoutC›yög
));

170 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

171 
ölöe
 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óãUnöôülizedI¡î«l
(
Àngth
, 
Ch¨Ty≥
*& 
d©a
)

173 i‡(!
	gÀngth
) {

174 
	gd©a
 = 0;

175  *
em±y
();

177  
¸óãUnöôülizedI¡î«lN⁄Em±y
(
Àngth
, 
d©a
);

180 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

181 
ölöe
 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óãUnöôülizedI¡î«lN⁄Em±y
(
Àngth
, 
Ch¨Ty≥
*& 
d©a
)

183 
ASSERT
(
Àngth
);

188 i‡(
	gÀngth
 > ((
	g°d
::
numîic_limôs
<>::
max
(Ë- (
SåögIm∂
)Ë/ (
Ch¨Ty≥
)))

189 
CRASH
();

190 
SåögIm∂
* 
	g°rög
 = 
°©ic_ˇ°
<SåögIm∂*>(
Á°MÆloc
(
Æloˇti⁄Size
<
Ch¨Ty≥
>(
Àngth
)));

192 
	gd©a
 = 
°rög
->
èûPoöãr
<
Ch¨Ty≥
>();

193  
	gc⁄°ru˘I¡î«l
<
	gCh¨Ty≥
>(
	g°rög
, 
	gÀngth
);

196 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óãUnöôülized
(
Àngth
, 
LCh¨
*& 
d©a
)

198  
¸óãUnöôülizedI¡î«l
(
Àngth
, 
d©a
);

201 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óãUnöôülized
(
Àngth
, 
UCh¨
*& 
d©a
)

203  
¸óãUnöôülizedI¡î«l
(
Àngth
, 
d©a
);

206 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

207 
ölöe
 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
ªÆloˇãI¡î«l
(
PassRefPå
<
SåögIm∂
> 
‹igöÆSåög
, 
Àngth
, 
Ch¨Ty≥
*& 
d©a
)

209 
ASSERT
(
‹igöÆSåög
->
hasO√Ref
());

210 
ASSERT
(
‹igöÆSåög
->
buf„rOw√rshù
(Ë=
Buf„rI¡î«l
);

212 i‡(!
	gÀngth
) {

213 
	gd©a
 = 0;

214  *
em±y
();

218 i‡(
	gÀngth
 > ((
	g°d
::
numîic_limôs
<>::
max
(Ë- (
SåögIm∂
)Ë/ (
Ch¨Ty≥
)))

219 
CRASH
();

221 
	g‹igöÆSåög
->~
SåögIm∂
();

222 
SåögIm∂
* 
	g°rög
 = 
°©ic_ˇ°
<SåögIm∂*>(
Á°RóŒoc
(
‹igöÆSåög
.
ÀakRef
(), 
Æloˇti⁄Size
<
Ch¨Ty≥
>(
Àngth
)));

224 
	gd©a
 = 
°rög
->
èûPoöãr
<
Ch¨Ty≥
>();

225  
	gc⁄°ru˘I¡î«l
<
	gCh¨Ty≥
>(
	g°rög
, 
	gÀngth
);

228 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
ªÆloˇã
(
PassRefPå
<
SåögIm∂
> 
‹igöÆSåög
, 
Àngth
, 
LCh¨
*& 
d©a
)

230 
ASSERT
(
‹igöÆSåög
->
is8Bô
());

231  
ªÆloˇãI¡î«l
(
‹igöÆSåög
, 
Àngth
, 
d©a
);

234 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
ªÆloˇã
(
PassRefPå
<
SåögIm∂
> 
‹igöÆSåög
, 
Àngth
, 
UCh¨
*& 
d©a
)

236 
ASSERT
(!
‹igöÆSåög
->
is8Bô
());

237  
ªÆloˇãI¡î«l
(
‹igöÆSåög
, 
Àngth
, 
d©a
);

240 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

241 
ölöe
 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óãI¡î«l
(c⁄° 
Ch¨Ty≥
* 
ch¨a˘îs
, 
Àngth
)

243 i‡(!
	gch¨a˘îs
 || !
	gÀngth
)

244  *
em±y
();

246 
Ch¨Ty≥
* 
	gd©a
;

247 autÿ
	g°rög
 = 
¸óãUnöôülizedI¡î«lN⁄Em±y
(
Àngth
, 
d©a
);

248 
mem˝y
(
d©a
, 
ch¨a˘îs
, 
Àngth
 * (
Ch¨Ty≥
));

249  
	g°rög
;

252 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óã
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
)

254  
¸óãI¡î«l
(
ch¨a˘îs
, 
Àngth
);

257 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óã
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
)

259  
¸óãI¡î«l
(
ch¨a˘îs
, 
Àngth
);

262 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óã8BôIfPossibÀ
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
)

264 i‡(!
	gch¨a˘îs
 || !
	gÀngth
)

265  *
em±y
();

267 
LCh¨
* 
	gd©a
;

268 
	gRefPå
<
	gSåögIm∂
> 
	g°rög
 = 
¸óãUnöôülizedI¡î«lN⁄Em±y
(
Àngth
, 
d©a
);

270 
size_t
 
	gi
 = 0; i < 
	gÀngth
; ++i) {

271 i‡(
	gch¨a˘îs
[
i
] & 0xff00)

272  
¸óã
(
ch¨a˘îs
, 
Àngth
);

273 
	gd©a
[
i
] = 
°©ic_ˇ°
<
LCh¨
>(
ch¨a˘îs
[i]);

276  
	g°rög
.
ªÀa£N⁄NuŒ
();

279 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óã8BôIfPossibÀ
(c⁄° 
UCh¨
* 
°rög
)

281  
SåögIm∂
::
¸óã8BôIfPossibÀ
(
°rög
, 
ÀngthOfNuŒTîmö©edSåög
(string));

284 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
¸óã
(c⁄° 
LCh¨
* 
°rög
)

286 i‡(!
°rög
)

287  *
em±y
();

288 
size_t
 
	gÀngth
 = 
°æí
(
ªöãΩªt_ˇ°
<c⁄° *>(
°rög
));

289 i‡(
	gÀngth
 > 
	g°d
::
numîic_limôs
<>::
max
())

290 
CRASH
();

291  
¸óã
(
°rög
, 
Àngth
);

294 
boﬁ
 
	gSåögIm∂
::
c⁄èösO∆yWhôe•a˚
()

299 i‡(
is8Bô
()) {

300 
i
 = 0; 
	gi
 < 
	gm_Àngth
; ++i) {

301 
UCh¨
 
	gc
 = 
m_d©a8
[
i
];

302 i‡(!
isASCIIS∑˚
(
c
))

303  
	gÁl£
;

306  
	gåue
;

309 
	gi
 = 0; i < 
	gm_Àngth
; ++i) {

310 
UCh¨
 
	gc
 = 
m_d©a16
[
i
];

311 i‡(!
isASCIIS∑˚
(
c
))

312  
	gÁl£
;

314  
	gåue
;

317 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
sub°rög
(
°¨t
, 
Àngth
)

319 i‡(
	g°¨t
 >
m_Àngth
)

320  *
em±y
();

321 
	gmaxLígth
 = 
m_Àngth
 - 
°¨t
;

322 i‡(
	gÀngth
 >
maxLígth
) {

323 i‡(!
°¨t
)

324  *
this
;

325 
	gÀngth
 = 
maxLígth
;

327 i‡(
is8Bô
())

328  
¸óã
(
m_d©a8
 + 
°¨t
, 
Àngth
);

330  
¸óã
(
m_d©a16
 + 
°¨t
, 
Àngth
);

333 
UCh¨32
 
	gSåögIm∂
::
ch¨a˘îSèπögAt
(
i
)

335 i‡(
is8Bô
())

336  
m_d©a8
[
i
];

337 i‡(
U16_IS_SINGLE
(
m_d©a16
[
i
]))

338  
	gm_d©a16
[
i
];

339 i‡(
	gi
 + 1 < 
	gm_Àngth
 && 
U16_IS_LEAD
(
m_d©a16
[
i
]Ë&& 
U16_IS_TRAIL
(m_data16[i + 1]))

340  
U16_GET_SUPPLEMENTARY
(
m_d©a16
[
i
], m_data16[i + 1]);

344 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
lowî
()

350 i‡(
is8Bô
()) {

351 
ÁûögIndex
;

352 
	gi
 = 0; i < 
	gm_Àngth
; ++i) {

353 
LCh¨
 
	gch¨a˘î
 = 
m_d©a8
[
i
];

354 i‡(
UNLIKELY
((
ch¨a˘î
 & ~0x7FË|| 
isASCIIUµî
(character))) {

355 
	gÁûögIndex
 = 
i
;

356 
	gSlowP©h
;

359  *
	gthis
;

361 
	gSlowP©h
:

362 
LCh¨
* 
d©a8
;

363 autÿ
	g√wIm∂
 = 
¸óãUnöôülizedI¡î«lN⁄Em±y
(
m_Àngth
, 
d©a8
);

365 
	gi
 = 0; i < 
	gÁûögIndex
; ++i)

366 
	gd©a8
[
i
] = 
m_d©a8
[i];

368 
	gi
 = 
ÁûögIndex
; i < 
	gm_Àngth
; ++i) {

369 
LCh¨
 
	gch¨a˘î
 = 
m_d©a8
[
i
];

370 i‡(!(
	gch¨a˘î
 & ~0x7F))

371 
	gd©a8
[
i
] = 
toASCIILowî
(
ch¨a˘î
);

373 
ASSERT
(
u_tﬁowî
(
ch¨a˘î
) <= 0xFF);

374 
	gd©a8
[
i
] = 
°©ic_ˇ°
<
LCh¨
>(
u_tﬁowî
(
ch¨a˘î
));

378  
	g√wIm∂
;

380 
boﬁ
 
	gnoUµî
 = 
åue
;

381 
	g‹ed
 = 0;

383 
	gi
 = 0; i < 
	gm_Àngth
; ++i) {

384 
UCh¨
 
	gch¨a˘î
 = 
m_d©a16
[
i
];

385 i‡(
UNLIKELY
(
isASCIIUµî
(
ch¨a˘î
)))

386 
	gnoUµî
 = 
Ál£
;

387 
	g‹ed
 |
ch¨a˘î
;

390 i‡(
	gnoUµî
 && !(
	g‹ed
 & ~0x7F))

391  *
	gthis
;

393 i‡(!(
	g‹ed
 & ~0x7F)) {

394 
UCh¨
* 
	gd©a16
;

395 autÿ
	g√wIm∂
 = 
¸óãUnöôülizedI¡î«lN⁄Em±y
(
m_Àngth
, 
d©a16
);

397 
	gi
 = 0; i < 
	gm_Àngth
; ++i) {

398 
UCh¨
 
	gc
 = 
m_d©a16
[
i
];

399 
	gd©a16
[
i
] = 
toASCIILowî
(
c
);

401  
	g√wIm∂
;

404 i‡(
	gm_Àngth
 > 
	g°©ic_ˇ°
<>(
	g°d
::
numîic_limôs
<
öt32_t
>::
max
()))

405 
CRASH
();

406 
öt32_t
 
	gÀngth
 = 
m_Àngth
;

409 
UCh¨
* 
	gd©a16
;

410 
	gRefPå
<
	gSåögIm∂
> 
	g√wIm∂
 = 
¸óãUnöôülizedI¡î«lN⁄Em±y
(
m_Àngth
, 
d©a16
);

412 
UEº‹Code
 
	g°©us
 = 
U_ZERO_ERROR
;

413 
öt32_t
 
	gªÆLígth
 = 
u_°rToLowî
(
d©a16
, 
Àngth
, 
m_d©a16
, 
m_Àngth
, "", &
°©us
);

414 i‡(
U_SUCCESS
(
°©us
Ë&& 
	gªÆLígth
 =
Àngth
)

415  
√wIm∂
.
ªÀa£N⁄NuŒ
();

417 
	g√wIm∂
 = 
¸óãUnöôülized
(
ªÆLígth
, 
d©a16
);

418 
	g°©us
 = 
U_ZERO_ERROR
;

419 
u_°rToLowî
(
d©a16
, 
ªÆLígth
, 
m_d©a16
, 
m_Àngth
, "", &
°©us
);

420 i‡(
U_FAILURE
(
°©us
))

421  *
	gthis
;

422  
	g√wIm∂
.
ªÀa£N⁄NuŒ
();

425 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
uµî
()

431 i‡(
m_Àngth
 > 
°©ic_ˇ°
<>(
°d
::
numîic_limôs
<
öt32_t
>::
max
()))

432 
CRASH
();

433 
öt32_t
 
	gÀngth
 = 
m_Àngth
;

435 i‡(
is8Bô
()) {

436 
LCh¨
* 
	gd©a8
;

437 
	gRefPå
<
	gSåögIm∂
> 
	g√wIm∂
 = 
¸óãUnöôülized
(
m_Àngth
, 
d©a8
);

440 
	g‹ed
 = 0;

441 
	gi
 = 0; i < 
	gÀngth
; ++i) {

442 
LCh¨
 
	gc
 = 
m_d©a8
[
i
];

443 
	g‹ed
 |
c
;

444 #i‡
CPU
(
X86
Ë&& 
deföed
(
_MSC_VER
) && _MSC_VER >=1700

448 
	gd©a8
[
i
] = 
c
 >= 'a' && c <= 'z' ? c & ~0x20 : c;

450 
	gd©a8
[
i
] = 
toASCIIUµî
(
c
);

453 i‡(!(
	g‹ed
 & ~0x7F))

454  
	g√wIm∂
.
ªÀa£N⁄NuŒ
();

457 
	gnumbîSh¨pSCh¨a˘îs
 = 0;

462 
öt32_t
 
	gi
 = 0; i < 
	gÀngth
; ++i) {

463 
LCh¨
 
	gc
 = 
m_d©a8
[
i
];

464 i‡(
UNLIKELY
(
c
 =
smÆlLëãrSh¨pS
))

465 ++
numbîSh¨pSCh¨a˘îs
;

466 
ASSERT
(
u_touµî
(
c
) <= 0xFFFF);

467 
UCh¨
 
	guµî
 = 
u_touµî
(
c
);

468 i‡(
UNLIKELY
(
uµî
 > 0xff)) {

470 
	gupc⁄vît
;

472 
	gd©a8
[
i
] = 
°©ic_ˇ°
<
LCh¨
>(
uµî
);

475 i‡(!
	gnumbîSh¨pSCh¨a˘îs
)

476  
	g√wIm∂
.
ªÀa£N⁄NuŒ
();

479 
	g√wIm∂
 = 
¸óãUnöôülized
(
m_Àngth
 + 
numbîSh¨pSCh¨a˘îs
, 
d©a8
);

481 
LCh¨
* 
	gde°
 = 
d©a8
;

483 
öt32_t
 
	gi
 = 0; i < 
	gÀngth
; ++i) {

484 
LCh¨
 
	gc
 = 
m_d©a8
[
i
];

485 i‡(
	gc
 =
smÆlLëãrSh¨pS
) {

486 *
de°
++ = 'S';

487 *
	gde°
++ = 'S';

489 
ASSERT
(
u_touµî
(
c
) <= 0xFF);

490 *
	gde°
++ = 
°©ic_ˇ°
<
LCh¨
>(
u_touµî
(
c
));

494  
	g√wIm∂
.
ªÀa£N⁄NuŒ
();

497 
	gupc⁄vît
:

498 autÿ
upc⁄vîãdCh¨a˘îs
 = 
SåögVõw
(*
this
).upconvertedCharacters();

499 c⁄° 
UCh¨
* 
	gsour˚16
 = 
upc⁄vîãdCh¨a˘îs
;

501 
UCh¨
* 
	gd©a16
;

502 
	gRefPå
<
	gSåögIm∂
> 
	g√wIm∂
 = 
¸óãUnöôülized
(
m_Àngth
, 
d©a16
);

505 
	g‹ed
 = 0;

506 
	gi
 = 0; i < 
	gÀngth
; ++i) {

507 
UCh¨
 
	gc
 = 
sour˚16
[
i
];

508 
	g‹ed
 |
c
;

509 
	gd©a16
[
i
] = 
toASCIIUµî
(
c
);

511 i‡(!(
	g‹ed
 & ~0x7F))

512  
	g√wIm∂
.
ªÀa£N⁄NuŒ
();

515 
UEº‹Code
 
	g°©us
 = 
U_ZERO_ERROR
;

516 
öt32_t
 
	gªÆLígth
 = 
u_°rToUµî
(
d©a16
, 
Àngth
, 
sour˚16
, 
m_Àngth
, "", &
°©us
);

517 i‡(
U_SUCCESS
(
°©us
Ë&& 
	gªÆLígth
 =
Àngth
)

518  
√wIm∂
.
ªÀa£N⁄NuŒ
();

519 
	g√wIm∂
 = 
¸óãUnöôülized
(
ªÆLígth
, 
d©a16
);

520 
	g°©us
 = 
U_ZERO_ERROR
;

521 
u_°rToUµî
(
d©a16
, 
ªÆLígth
, 
sour˚16
, 
m_Àngth
, "", &
°©us
);

522 i‡(
U_FAILURE
(
°©us
))

523  *
	gthis
;

524  
	g√wIm∂
.
ªÀa£N⁄NuŒ
();

527 
ölöe
 
boﬁ
 
√edsTurkishCasögRuÀs
(c⁄° 
AtomicSåög
& 
loˇÀIdítifõr
)

530 
UCh¨
 
	gfú°
 = 
loˇÀIdítifõr
[0];

531 
UCh¨
 
	g£c⁄d
 = 
loˇÀIdítifõr
[1];

532  ((
isASCIIAÕhaCa£ÀssEquÆ
(
fú°
, 't'Ë&& isASCIIAÕhaCa£ÀssEquÆ(
£c⁄d
, 'r'))

533 || (
isASCIIAÕhaCa£ÀssEquÆ
(
fú°
, 'a'Ë&& isASCIIAÕhaCa£ÀssEquÆ(
£c⁄d
, 'z')))

534 && (
	gloˇÀIdítifõr
.
Àngth
(Ë=2 || 
loˇÀIdítifõr
[2] == '-');

537 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
lowî
(c⁄° 
AtomicSåög
& 
loˇÀIdítifõr
)

543 i‡(!
√edsTurkishCasögRuÀs
(
loˇÀIdítifõr
))

544  
lowî
();

550 i‡(
	gm_Àngth
 > 
	g°©ic_ˇ°
<>(
	g°d
::
numîic_limôs
<
öt32_t
>::
max
()))

551 
CRASH
();

552 
	gÀngth
 = 
m_Àngth
;

557 autÿ
	gupc⁄vîãdCh¨a˘îs
 = 
SåögVõw
(*
this
).
upc⁄vîãdCh¨a˘îs
();

558 c⁄° 
UCh¨
* 
	gsour˚16
 = 
upc⁄vîãdCh¨a˘îs
;

559 
UCh¨
* 
	gd©a16
;

560 
	gRefPå
<
	gSåögIm∂
> 
	g√wSåög
 = 
¸óãUnöôülized
(
Àngth
, 
d©a16
);

561 
UEº‹Code
 
	g°©us
 = 
U_ZERO_ERROR
;

562 
	gªÆLígth
 = 
u_°rToLowî
(
d©a16
, 
Àngth
, 
sour˚16
,Üígth, "å", &
°©us
);

563 i‡(
U_SUCCESS
(
°©us
Ë&& 
	gªÆLígth
 =
Àngth
)

564  
√wSåög
.
ªÀa£N⁄NuŒ
();

565 
	g√wSåög
 = 
¸óãUnöôülized
(
ªÆLígth
, 
d©a16
);

566 
	g°©us
 = 
U_ZERO_ERROR
;

567 
u_°rToLowî
(
d©a16
, 
ªÆLígth
, 
sour˚16
, 
Àngth
, "å", &
°©us
);

568 i‡(
U_FAILURE
(
°©us
))

569  *
	gthis
;

570  
	g√wSåög
.
ªÀa£N⁄NuŒ
();

573 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
uµî
(c⁄° 
AtomicSåög
& 
loˇÀIdítifõr
)

578 i‡(!
√edsTurkishCasögRuÀs
(
loˇÀIdítifõr
Ë|| 
föd
('i'Ë=
nŸFound
)

579  
uµî
();

581 i‡(
	gm_Àngth
 > 
	g°©ic_ˇ°
<>(
	g°d
::
numîic_limôs
<
öt32_t
>::
max
()))

582 
CRASH
();

583 
	gÀngth
 = 
m_Àngth
;

588 autÿ
	gupc⁄vîãdCh¨a˘îs
 = 
SåögVõw
(*
this
).
upc⁄vîãdCh¨a˘îs
();

589 c⁄° 
UCh¨
* 
	gsour˚16
 = 
upc⁄vîãdCh¨a˘îs
;

590 
UCh¨
* 
	gd©a16
;

591 
	gRefPå
<
	gSåögIm∂
> 
	g√wSåög
 = 
¸óãUnöôülized
(
Àngth
, 
d©a16
);

592 
UEº‹Code
 
	g°©us
 = 
U_ZERO_ERROR
;

593 
	gªÆLígth
 = 
u_°rToUµî
(
d©a16
, 
Àngth
, 
sour˚16
,Üígth, "å", &
°©us
);

594 i‡(
U_SUCCESS
(
°©us
Ë&& 
	gªÆLígth
 =
Àngth
)

595  
√wSåög
.
ªÀa£N⁄NuŒ
();

596 
	g√wSåög
 = 
¸óãUnöôülized
(
ªÆLígth
, 
d©a16
);

597 
	g°©us
 = 
U_ZERO_ERROR
;

598 
u_°rToUµî
(
d©a16
, 
ªÆLígth
, 
sour˚16
, 
Àngth
, "å", &
°©us
);

599 i‡(
U_FAILURE
(
°©us
))

600  *
	gthis
;

601  
	g√wSåög
.
ªÀa£N⁄NuŒ
();

604 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
fûl
(
UCh¨
 
ch¨a˘î
)

606 i‡(!(
ch¨a˘î
 & ~0x7F)) {

607 
LCh¨
* 
d©a
;

608 autÿ
	g√wIm∂
 = 
¸óãUnöôülized
(
m_Àngth
, 
d©a
);

609 
	gi
 = 0; i < 
	gm_Àngth
; ++i)

610 
	gd©a
[
i
] = 
ch¨a˘î
;

611  
	g√wIm∂
;

613 
UCh¨
* 
	gd©a
;

614 autÿ
	g√wIm∂
 = 
¸óãUnöôülized
(
m_Àngth
, 
d©a
);

615 
	gi
 = 0; i < 
	gm_Àngth
; ++i)

616 
	gd©a
[
i
] = 
ch¨a˘î
;

617  
	g√wIm∂
;

620 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
fﬁdCa£
()

624 i‡(
m_Àngth
 > 
°©ic_ˇ°
<>(
°d
::
numîic_limôs
<
öt32_t
>::
max
()))

625 
CRASH
();

626 
öt32_t
 
	gÀngth
 = 
m_Àngth
;

628 i‡(
is8Bô
()) {

630 
LCh¨
* 
	gd©a
;

631 autÿ
	g√wIm∂
 = 
¸óãUnöôülized
(
m_Àngth
, 
d©a
);

632 
LCh¨
 
	g‹ed
 = 0;

634 
öt32_t
 
	gi
 = 0; i < 
	gÀngth
; ++i) {

635 
LCh¨
 
	gc
 = 
m_d©a8
[
i
];

636 
	gd©a
[
i
] = 
toASCIILowî
(
c
);

637 
	g‹ed
 |
c
;

640 i‡(!(
	g‹ed
 & ~0x7F))

641  
	g√wIm∂
;

645 
öt32_t
 
	gi
 = 0; i < 
	gÀngth
; ++i) {

646 
ASSERT
(
u_tﬁowî
(
m_d©a8
[
i
]) <= 0xFF);

647 
	gd©a
[
i
] = 
°©ic_ˇ°
<
LCh¨
>(
u_tﬁowî
(
m_d©a8
[i]));

650  
	g√wIm∂
;

654 
UCh¨
* 
	gd©a
;

655 
	gRefPå
<
	gSåögIm∂
> 
	g√wIm∂
 = 
¸óãUnöôülized
(
m_Àngth
, 
d©a
);

656 
UCh¨
 
	g‹ed
 = 0;

657 
öt32_t
 
	gi
 = 0; i < 
	gÀngth
; ++i) {

658 
UCh¨
 
	gc
 = 
m_d©a16
[
i
];

659 
	g‹ed
 |
c
;

660 
	gd©a
[
i
] = 
toASCIILowî
(
c
);

662 i‡(!(
	g‹ed
 & ~0x7F))

663  
	g√wIm∂
.
ªÀa£N⁄NuŒ
();

666 
UEº‹Code
 
	g°©us
 = 
U_ZERO_ERROR
;

667 
öt32_t
 
	gªÆLígth
 = 
u_°rFﬁdCa£
(
d©a
, 
Àngth
, 
m_d©a16
, 
m_Àngth
, 
U_FOLD_CASE_DEFAULT
, &
°©us
);

668 i‡(
U_SUCCESS
(
°©us
Ë&& 
	gªÆLígth
 =
Àngth
)

669  
√wIm∂
.
ªÀa£N⁄NuŒ
();

670 
	g√wIm∂
 = 
¸óãUnöôülized
(
ªÆLígth
, 
d©a
);

671 
	g°©us
 = 
U_ZERO_ERROR
;

672 
u_°rFﬁdCa£
(
d©a
, 
ªÆLígth
, 
m_d©a16
, 
m_Àngth
, 
U_FOLD_CASE_DEFAULT
, &
°©us
);

673 i‡(
U_FAILURE
(
°©us
))

674  *
	gthis
;

675  
	g√wIm∂
.
ªÀa£N⁄NuŒ
();

678 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
c⁄vîtToASCIILowîˇ£
()

680 i‡(
is8Bô
()) {

681 
ÁûögIndex
;

682 
	gi
 = 0; i < 
	gm_Àngth
; ++i) {

683 
LCh¨
 
	gch¨a˘î
 = 
m_d©a8
[
i
];

684 i‡(
UNLIKELY
(
isASCIIUµî
(
ch¨a˘î
))) {

685 
	gÁûögIndex
 = 
i
;

686 
	gSlowP©h
;

689  *
	gthis
;

691 
	gSlowP©h
:

692 
LCh¨
* 
d©a8
;

693 
	gPassRef
<
	gSåögIm∂
> 
	g√wIm∂
 = 
¸óãUnöôülizedI¡î«lN⁄Em±y
(
m_Àngth
, 
d©a8
);

694 
	gi
 = 0; i < 
	gÁûögIndex
; ++i)

695 
	gd©a8
[
i
] = 
m_d©a8
[i];

696 
	gi
 = 
ÁûögIndex
; i < 
	gm_Àngth
; ++i)

697 
	gd©a8
[
i
] = 
toASCIILowî
(
m_d©a8
[i]);

698  
	g√wIm∂
;

701 
boﬁ
 
	gnoUµî
 = 
åue
;

702 
	gi
 = 0; i < 
	gm_Àngth
; ++i) {

703 i‡(
UNLIKELY
(
isASCIIUµî
(
m_d©a16
[
i
])))

704 
	gnoUµî
 = 
Ál£
;

706 i‡(
	gnoUµî
)

707  *
	gthis
;

709 
UCh¨
* 
	gd©a16
;

710 
	gPassRef
<
	gSåögIm∂
> 
	g√wIm∂
 = 
¸óãUnöôülizedI¡î«lN⁄Em±y
(
m_Àngth
, 
d©a16
);

711 
	gi
 = 0; i < 
	gm_Àngth
; ++i)

712 
	gd©a16
[
i
] = 
toASCIILowî
(
m_d©a16
[i]);

713  
	g√wIm∂
;

716 
	gãm∂©e
 <
˛ass
 
	gUCh¨Pªdiˇã
>

717 
ölöe
 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
°rùM©chedCh¨a˘îs
(
UCh¨Pªdiˇã
 
¥ediˇã
)

719 i‡(!
m_Àngth
)

720  *
this
;

722 
	g°¨t
 = 0;

723 
	gíd
 = 
m_Àngth
 - 1;

726 
	g°¨t
 <
íd
 && 
¥ediˇã
(
is8Bô
(Ë? 
m_d©a8
[
°¨t
] : 
m_d©a16
[start]))

727 ++
°¨t
;

730 i‡(
	g°¨t
 > 
	gíd
)

731  *
em±y
();

734 
	gíd
 && 
¥ediˇã
(
is8Bô
(Ë? 
m_d©a8
[
íd
] : 
m_d©a16
[end]))

735 --
íd
;

737 i‡(!
	g°¨t
 && 
	gíd
 =
m_Àngth
 - 1)

738  *
this
;

739 i‡(
is8Bô
())

740  
¸óã
(
m_d©a8
 + 
°¨t
, 
íd
 + 1 - start);

741  
¸óã
(
m_d©a16
 + 
°¨t
, 
íd
 + 1 - start);

744 ˛as†
	cUCh¨Pªdiˇã
 {

745 
	gpublic
:

746 
ölöe
 
UCh¨Pªdiˇã
(
Ch¨a˘îM©chFun˘i⁄På
 
fun˘i⁄
): 
m_fun˘i⁄
(function) { }

748 
ölöe
 
boﬁ
 
›î©‹
()(
UCh¨
 
ch
) const

750  
m_fun˘i⁄
(
ch
);

753 
	g¥iv©e
:

754 c⁄° 
Ch¨a˘îM©chFun˘i⁄På
 
m_fun˘i⁄
;

757 ˛as†
	cS∑˚OrNewlöePªdiˇã
 {

758 
	gpublic
:

759 
ölöe
 
boﬁ
 
›î©‹
()(
UCh¨
 
ch
) const

761  
isS∑˚OrNewlöe
(
ch
);

765 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$°rùWhôeS∑˚
()

767  
	`°rùM©chedCh¨a˘îs
(
	`S∑˚OrNewlöePªdiˇã
());

768 
	}
}

770 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$°rùWhôeS∑˚
(
IsWhôeS∑˚Fun˘i⁄På
 
isWhôeS∑˚
)

772  
	`°rùM©chedCh¨a˘îs
(
	`UCh¨Pªdiˇã
(
isWhôeS∑˚
));

773 
	}
}

775 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

776 
ALWAYS_INLINE
 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$ªmoveCh¨a˘îs
(c⁄° 
Ch¨Ty≥
* 
ch¨a˘îs
, 
Ch¨a˘îM©chFun˘i⁄På
 
födM©ch
)

778 c⁄° 
Ch¨Ty≥
* 
‰om
 = 
ch¨a˘îs
;

779 c⁄° 
Ch¨Ty≥
* 
‰omíd
 = 
‰om
 + 
m_Àngth
;

782 
‰om
 !
‰omíd
 && !
	`födM©ch
(*from))

783 ++
‰om
;

784 i‡(
‰om
 =
‰omíd
)

785  *
this
;

787 
SåögBuf„r
<
Ch¨Ty≥
> 
	`d©a
(
m_Àngth
);

788 
Ch¨Ty≥
* 
to
 = 
d©a
.
	`ch¨a˘îs
();

789 
outc
 = 
‰om
 - 
ch¨a˘îs
;

791 i‡(
outc
)

792 
	`mem˝y
(
to
, 
ch¨a˘îs
, 
outc
 * (
Ch¨Ty≥
));

794 
åue
) {

795 
‰om
 !
‰omíd
 && 
	`födM©ch
(*from))

796 ++
‰om
;

797 
‰om
 !
‰omíd
 && !
	`födM©ch
(*from))

798 
to
[
outc
++] = *
‰om
++;

799 i‡(
‰om
 =
‰omíd
)

803 
d©a
.
	`shrök
(
outc
);

805  
	`ad›t
(
d©a
);

806 
	}
}

808 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$ªmoveCh¨a˘îs
(
Ch¨a˘îM©chFun˘i⁄På
 
födM©ch
)

810 i‡(
	`is8Bô
())

811  
	`ªmoveCh¨a˘îs
(
	`ch¨a˘îs8
(), 
födM©ch
);

812  
	`ªmoveCh¨a˘îs
(
	`ch¨a˘îs16
(), 
födM©ch
);

813 
	}
}

815 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
, 
˛ass
 
	gUCh¨Pªdiˇã
>

816 
ölöe
 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$sim∂ifyM©chedCh¨a˘îsToS∑˚
(
UCh¨Pªdiˇã
 
¥ediˇã
)

818 
SåögBuf„r
<
Ch¨Ty≥
> 
	`d©a
(
m_Àngth
);

820 c⁄° 
Ch¨Ty≥
* 
‰om
 = 
ch¨a˘îs
<CharType>();

821 c⁄° 
Ch¨Ty≥
* 
‰omíd
 = 
‰om
 + 
m_Àngth
;

822 
outc
 = 0;

823 
boﬁ
 
ch™gedToS∑˚
 = 
Ál£
;

825 
Ch¨Ty≥
* 
to
 = 
d©a
.
	`ch¨a˘îs
();

827 
åue
) {

828 
‰om
 !
‰omíd
 && 
	`¥ediˇã
(*from)) {

829 i‡(*
‰om
 != ' ')

830 
ch™gedToS∑˚
 = 
åue
;

831 ++
‰om
;

833 
‰om
 !
‰omíd
 && !
	`¥ediˇã
(*from))

834 
to
[
outc
++] = *
‰om
++;

835 i‡(
‰om
 !
‰omíd
)

836 
to
[
outc
++] = ' ';

841 i‡(
outc
 > 0 && 
to
[outc - 1] == ' ')

842 --
outc
;

844 i‡(
°©ic_ˇ°
<>(
outc
Ë=
m_Àngth
 && !
ch™gedToS∑˚
)

845  *
this
;

847 
d©a
.
	`shrök
(
outc
);

849  
	`ad›t
(
d©a
);

850 
	}
}

852 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$sim∂ifyWhôeS∑˚
()

854 i‡(
	`is8Bô
())

855  
SåögIm∂
::
sim∂ifyM©chedCh¨a˘îsToS∑˚
<
LCh¨
>(
	`S∑˚OrNewlöePªdiˇã
());

856  
SåögIm∂
::
sim∂ifyM©chedCh¨a˘îsToS∑˚
<
UCh¨
>(
	`S∑˚OrNewlöePªdiˇã
());

857 
	}
}

859 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$sim∂ifyWhôeS∑˚
(
IsWhôeS∑˚Fun˘i⁄På
 
isWhôeS∑˚
)

861 i‡(
	`is8Bô
())

862  
SåögIm∂
::
sim∂ifyM©chedCh¨a˘îsToS∑˚
<
LCh¨
>(
	`UCh¨Pªdiˇã
(
isWhôeS∑˚
));

863  
SåögIm∂
::
sim∂ifyM©chedCh¨a˘îsToS∑˚
<
UCh¨
>(
	`UCh¨Pªdiˇã
(
isWhôeS∑˚
));

864 
	}
}

866 
	gSåögIm∂
::
	$toI¡Såi˘
(
boﬁ
* 
ok
, 
ba£
)

868 i‡(
	`is8Bô
())

869  
	`ch¨a˘îsToI¡Såi˘
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ok
, 
ba£
);

870  
	`ch¨a˘îsToI¡Såi˘
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ok
, 
ba£
);

871 
	}
}

873 
	gSåögIm∂
::
	$toUI¡Såi˘
(
boﬁ
* 
ok
, 
ba£
)

875 i‡(
	`is8Bô
())

876  
	`ch¨a˘îsToUI¡Såi˘
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ok
, 
ba£
);

877  
	`ch¨a˘îsToUI¡Såi˘
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ok
, 
ba£
);

878 
	}
}

880 
öt64_t
 
	gSåögIm∂
::
	$toI¡64Såi˘
(
boﬁ
* 
ok
, 
ba£
)

882 i‡(
	`is8Bô
())

883  
	`ch¨a˘îsToI¡64Såi˘
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ok
, 
ba£
);

884  
	`ch¨a˘îsToI¡64Såi˘
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ok
, 
ba£
);

885 
	}
}

887 
uöt64_t
 
	gSåögIm∂
::
	$toUI¡64Såi˘
(
boﬁ
* 
ok
, 
ba£
)

889 i‡(
	`is8Bô
())

890  
	`ch¨a˘îsToUI¡64Såi˘
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ok
, 
ba£
);

891  
	`ch¨a˘îsToUI¡64Såi˘
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ok
, 
ba£
);

892 
	}
}

894 
öçå_t
 
	gSåögIm∂
::
	$toI¡PåSåi˘
(
boﬁ
* 
ok
, 
ba£
)

896 i‡(
	`is8Bô
())

897  
	`ch¨a˘îsToI¡PåSåi˘
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ok
, 
ba£
);

898  
	`ch¨a˘îsToI¡PåSåi˘
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ok
, 
ba£
);

899 
	}
}

901 
	gSåögIm∂
::
	$toI¡
(
boﬁ
* 
ok
)

903 i‡(
	`is8Bô
())

904  
	`ch¨a˘îsToI¡
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ok
);

905  
	`ch¨a˘îsToI¡
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ok
);

906 
	}
}

908 
	gSåögIm∂
::
	$toUI¡
(
boﬁ
* 
ok
)

910 i‡(
	`is8Bô
())

911  
	`ch¨a˘îsToUI¡
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ok
);

912  
	`ch¨a˘îsToUI¡
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ok
);

913 
	}
}

915 
öt64_t
 
	gSåögIm∂
::
	$toI¡64
(
boﬁ
* 
ok
)

917 i‡(
	`is8Bô
())

918  
	`ch¨a˘îsToI¡64
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ok
);

919  
	`ch¨a˘îsToI¡64
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ok
);

920 
	}
}

922 
uöt64_t
 
	gSåögIm∂
::
	$toUI¡64
(
boﬁ
* 
ok
)

924 i‡(
	`is8Bô
())

925  
	`ch¨a˘îsToUI¡64
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ok
);

926  
	`ch¨a˘îsToUI¡64
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ok
);

927 
	}
}

929 
öçå_t
 
	gSåögIm∂
::
	$toI¡På
(
boﬁ
* 
ok
)

931 i‡(
	`is8Bô
())

932  
	`ch¨a˘îsToI¡På
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ok
);

933  
	`ch¨a˘îsToI¡På
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ok
);

934 
	}
}

936 
	gSåögIm∂
::
	$toDoubÀ
(
boﬁ
* 
ok
)

938 i‡(
	`is8Bô
())

939  
	`ch¨a˘îsToDoubÀ
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ok
);

940  
	`ch¨a˘îsToDoubÀ
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ok
);

941 
	}
}

943 
	gSåögIm∂
::
	$toFlﬂt
(
boﬁ
* 
ok
)

945 i‡(
	`is8Bô
())

946  
	`ch¨a˘îsToFlﬂt
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ok
);

947  
	`ch¨a˘îsToFlﬂt
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ok
);

948 
	}
}

950 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
LCh¨
* 
a
, c⁄° LCh¨* 
b
, 
Àngth
)

952 
Àngth
--) {

953 i‡(
SåögIm∂
::
œtö1Ca£FﬁdTabÀ
[*
a
++] !SåögIm∂::œtö1Ca£FﬁdTabÀ[*
b
++])

954  
Ál£
;

956  
åue
;

957 
	}
}

959 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
UCh¨
* 
a
, c⁄° 
LCh¨
* 
b
, 
Àngth
)

961 
Àngth
--) {

962 i‡(
	`u_fﬁdCa£
(*
a
++, 
U_FOLD_CASE_DEFAULT
Ë!
SåögIm∂
::
œtö1Ca£FﬁdTabÀ
[*
b
++])

963  
Ál£
;

965  
åue
;

966 
	}
}

968 
size_t
 
	gSåögIm∂
::
	$föd
(
Ch¨a˘îM©chFun˘i⁄På
 
m©chFun˘i⁄
, 
°¨t
)

970 i‡(
	`is8Bô
())

971  
WTF
::
	`föd
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
m©chFun˘i⁄
, 
°¨t
);

972  
WTF
::
	`föd
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
m©chFun˘i⁄
, 
°¨t
);

973 
	}
}

975 
size_t
 
	gSåögIm∂
::
	$föd
(c⁄° 
LCh¨
* 
m©chSåög
, 
ödex
)

978 i‡(!
m©chSåög
)

979  
nŸFound
;

980 
size_t
 
m©chSåögLígth
 = 
	`°æí
(
ªöãΩªt_ˇ°
<c⁄° *>(
m©chSåög
));

981 i‡(
m©chSåögLígth
 > 
°d
::
numîic_limôs
<>::
	`max
())

982 
	`CRASH
();

983 
m©chLígth
 = 
m©chSåögLígth
;

984 i‡(!
m©chLígth
)

985  
°d
::
	`mö
(
ödex
, 
	`Àngth
());

988 i‡(
m©chLígth
 == 1) {

989 i‡(
	`is8Bô
())

990  
WTF
::
	`föd
(
	`ch¨a˘îs8
(), 
	`Àngth
(), 
m©chSåög
[0], 
ödex
);

991  
WTF
::
	`föd
(
	`ch¨a˘îs16
(), 
	`Àngth
(), *
m©chSåög
, 
ödex
);

995 i‡(
ödex
 > 
	`Àngth
())

996  
nŸFound
;

997 
£¨chLígth
 = 
	`Àngth
(Ë- 
ödex
;

998 i‡(
m©chLígth
 > 
£¨chLígth
)

999  
nŸFound
;

1001 
dñè
 = 
£¨chLígth
 - 
m©chLígth
;

1006 i‡(
	`is8Bô
()) {

1007 c⁄° 
LCh¨
* 
£¨chCh¨a˘îs
 = 
	`ch¨a˘îs8
(Ë+ 
ödex
;

1009 
£¨chHash
 = 0;

1010 
m©chHash
 = 0;

1011 
i
 = 0; i < 
m©chLígth
; ++i) {

1012 
£¨chHash
 +
£¨chCh¨a˘îs
[
i
];

1013 
m©chHash
 +
m©chSåög
[
i
];

1016 
i
 = 0;

1017 
£¨chHash
 !
m©chHash
 || !
	`equÆ
(
£¨chCh¨a˘îs
 + 
i
, 
m©chSåög
, 
m©chLígth
)) {

1018 i‡(
i
 =
dñè
)

1019  
nŸFound
;

1020 
£¨chHash
 +
£¨chCh¨a˘îs
[
i
 + 
m©chLígth
];

1021 
£¨chHash
 -
£¨chCh¨a˘îs
[
i
];

1022 ++
i
;

1024  
ödex
 + 
i
;

1027 c⁄° 
UCh¨
* 
£¨chCh¨a˘îs
 = 
	`ch¨a˘îs16
(Ë+ 
ödex
;

1029 
£¨chHash
 = 0;

1030 
m©chHash
 = 0;

1031 
i
 = 0; i < 
m©chLígth
; ++i) {

1032 
£¨chHash
 +
£¨chCh¨a˘îs
[
i
];

1033 
m©chHash
 +
m©chSåög
[
i
];

1036 
i
 = 0;

1037 
£¨chHash
 !
m©chHash
 || !
	`equÆ
(
£¨chCh¨a˘îs
 + 
i
, 
m©chSåög
, 
m©chLígth
)) {

1038 i‡(
i
 =
dñè
)

1039  
nŸFound
;

1040 
£¨chHash
 +
£¨chCh¨a˘îs
[
i
 + 
m©chLígth
];

1041 
£¨chHash
 -
£¨chCh¨a˘îs
[
i
];

1042 ++
i
;

1044  
ödex
 + 
i
;

1045 
	}
}

1047 
size_t
 
	gSåögIm∂
::
	$födIgn‹ögCa£
(c⁄° 
LCh¨
* 
m©chSåög
, 
ödex
)

1050 i‡(!
m©chSåög
)

1051  
nŸFound
;

1052 
size_t
 
m©chSåögLígth
 = 
	`°æí
(
ªöãΩªt_ˇ°
<c⁄° *>(
m©chSåög
));

1053 i‡(
m©chSåögLígth
 > 
°d
::
numîic_limôs
<>::
	`max
())

1054 
	`CRASH
();

1055 
m©chLígth
 = 
m©chSåögLígth
;

1056 i‡(!
m©chLígth
)

1057  
°d
::
	`mö
(
ödex
, 
	`Àngth
());

1060 i‡(
ödex
 > 
	`Àngth
())

1061  
nŸFound
;

1062 
£¨chLígth
 = 
	`Àngth
(Ë- 
ödex
;

1063 i‡(
m©chLígth
 > 
£¨chLígth
)

1064  
nŸFound
;

1066 
dñè
 = 
£¨chLígth
 - 
m©chLígth
;

1068 i‡(
	`is8Bô
()) {

1069 c⁄° 
LCh¨
* 
£¨chCh¨a˘îs
 = 
	`ch¨a˘îs8
(Ë+ 
ödex
;

1071 
i
 = 0;

1072 !
	`equÆIgn‹ögCa£
(
£¨chCh¨a˘îs
 + 
i
, 
m©chSåög
, 
m©chLígth
)) {

1073 i‡(
i
 =
dñè
)

1074  
nŸFound
;

1075 ++
i
;

1077  
ödex
 + 
i
;

1080 c⁄° 
UCh¨
* 
£¨chCh¨a˘îs
 = 
	`ch¨a˘îs16
(Ë+ 
ödex
;

1082 
i
 = 0;

1083 !
	`equÆIgn‹ögCa£
(
£¨chCh¨a˘îs
 + 
i
, 
m©chSåög
, 
m©chLígth
)) {

1084 i‡(
i
 =
dñè
)

1085  
nŸFound
;

1086 ++
i
;

1088  
ödex
 + 
i
;

1089 
	}
}

1091 
	gãm∂©e
 <
ty≥«me
 
	gSórchCh¨a˘îTy≥
,Åy≥«mê
	gM©chCh¨a˘îTy≥
>

1092 
ALWAYS_INLINE
 
size_t
 
	$födI¬î
(c⁄° 
SórchCh¨a˘îTy≥
* 
£¨chCh¨a˘îs
, c⁄° 
M©chCh¨a˘îTy≥
* 
m©chCh¨a˘îs
, 
ödex
, 
£¨chLígth
, 
m©chLígth
)

1098 
dñè
 = 
£¨chLígth
 - 
m©chLígth
;

1100 
£¨chHash
 = 0;

1101 
m©chHash
 = 0;

1103 
i
 = 0; i < 
m©chLígth
; ++i) {

1104 
£¨chHash
 +
£¨chCh¨a˘îs
[
i
];

1105 
m©chHash
 +
m©chCh¨a˘îs
[
i
];

1108 
i
 = 0;

1110 
£¨chHash
 !
m©chHash
 || !
	`equÆ
(
£¨chCh¨a˘îs
 + 
i
, 
m©chCh¨a˘îs
, 
m©chLígth
)) {

1111 i‡(
i
 =
dñè
)

1112  
nŸFound
;

1113 
£¨chHash
 +
£¨chCh¨a˘îs
[
i
 + 
m©chLígth
];

1114 
£¨chHash
 -
£¨chCh¨a˘îs
[
i
];

1115 ++
i
;

1117  
ödex
 + 
i
;

1118 
	}
}

1120 
size_t
 
	gSåögIm∂
::
	$föd
(
SåögIm∂
* 
m©chSåög
)

1123 i‡(
	`UNLIKELY
(!
m©chSåög
))

1124  
nŸFound
;

1125 
m©chLígth
 = 
m©chSåög
->
	`Àngth
();

1128 i‡(
m©chLígth
 == 1) {

1129 i‡(
	`is8Bô
()) {

1130 i‡(
m©chSåög
->
	`is8Bô
())

1131  
WTF
::
	`föd
(
	`ch¨a˘îs8
(), 
	`Àngth
(), 
m©chSåög
->characters8()[0]);

1132  
WTF
::
	`föd
(
	`ch¨a˘îs8
(), 
	`Àngth
(), 
m©chSåög
->
	`ch¨a˘îs16
()[0]);

1134 i‡(
m©chSåög
->
	`is8Bô
())

1135  
WTF
::
	`föd
(
	`ch¨a˘îs16
(), 
	`Àngth
(), 
m©chSåög
->
	`ch¨a˘îs8
()[0]);

1136  
WTF
::
	`föd
(
	`ch¨a˘îs16
(), 
	`Àngth
(), 
m©chSåög
->characters16()[0]);

1140 i‡(
m©chLígth
 > 
	`Àngth
())

1141  
nŸFound
;

1144 i‡(
	`UNLIKELY
(!
m©chLígth
))

1147 i‡(
	`is8Bô
()) {

1148 i‡(
m©chSåög
->
	`is8Bô
())

1149  
	`födI¬î
(
	`ch¨a˘îs8
(), 
m©chSåög
->ch¨a˘îs8(), 0, 
	`Àngth
(), 
m©chLígth
);

1150  
	`födI¬î
(
	`ch¨a˘îs8
(), 
m©chSåög
->
	`ch¨a˘îs16
(), 0, 
	`Àngth
(), 
m©chLígth
);

1153 i‡(
m©chSåög
->
	`is8Bô
())

1154  
	`födI¬î
(
	`ch¨a˘îs16
(), 
m©chSåög
->
	`ch¨a˘îs8
(), 0, 
	`Àngth
(), 
m©chLígth
);

1156  
	`födI¬î
(
	`ch¨a˘îs16
(), 
m©chSåög
->ch¨a˘îs16(), 0, 
	`Àngth
(), 
m©chLígth
);

1157 
	}
}

1159 
size_t
 
	gSåögIm∂
::
	$föd
(
SåögIm∂
* 
m©chSåög
, 
ödex
)

1162 i‡(
	`UNLIKELY
(!
m©chSåög
))

1163  
nŸFound
;

1165 
m©chLígth
 = 
m©chSåög
->
	`Àngth
();

1168 i‡(
m©chLígth
 == 1) {

1169 i‡(
	`is8Bô
())

1170  
WTF
::
	`föd
(
	`ch¨a˘îs8
(), 
	`Àngth
(), (*
m©chSåög
)[0], 
ödex
);

1171  
WTF
::
	`föd
(
	`ch¨a˘îs16
(), 
	`Àngth
(), (*
m©chSåög
)[0], 
ödex
);

1174 i‡(
	`UNLIKELY
(!
m©chLígth
))

1175  
°d
::
	`mö
(
ödex
, 
	`Àngth
());

1178 i‡(
ödex
 > 
	`Àngth
())

1179  
nŸFound
;

1180 
£¨chLígth
 = 
	`Àngth
(Ë- 
ödex
;

1181 i‡(
m©chLígth
 > 
£¨chLígth
)

1182  
nŸFound
;

1184 i‡(
	`is8Bô
()) {

1185 i‡(
m©chSåög
->
	`is8Bô
())

1186  
	`födI¬î
(
	`ch¨a˘îs8
(Ë+ 
ödex
, 
m©chSåög
->ch¨a˘îs8(), index, 
£¨chLígth
, 
m©chLígth
);

1187  
	`födI¬î
(
	`ch¨a˘îs8
(Ë+ 
ödex
, 
m©chSåög
->
	`ch¨a˘îs16
(), index, 
£¨chLígth
, 
m©chLígth
);

1190 i‡(
m©chSåög
->
	`is8Bô
())

1191  
	`födI¬î
(
	`ch¨a˘îs16
(Ë+ 
ödex
, 
m©chSåög
->
	`ch¨a˘îs8
(), index, 
£¨chLígth
, 
m©chLígth
);

1193  
	`födI¬î
(
	`ch¨a˘îs16
(Ë+ 
ödex
, 
m©chSåög
->ch¨a˘îs16(), index, 
£¨chLígth
, 
m©chLígth
);

1194 
	}
}

1196 
	gãm∂©e
 <
ty≥«me
 
	gSórchCh¨a˘îTy≥
,Åy≥«mê
	gM©chCh¨a˘îTy≥
>

1197 
ALWAYS_INLINE
 
size_t
 
	$födIgn‹ögCa£I¬î
(c⁄° 
SórchCh¨a˘îTy≥
* 
£¨chCh¨a˘îs
, c⁄° 
M©chCh¨a˘îTy≥
* 
m©chCh¨a˘îs
, 
ödex
, 
£¨chLígth
, 
m©chLígth
)

1200 
dñè
 = 
£¨chLígth
 - 
m©chLígth
;

1202 
i
 = 0;

1204 !
	`equÆIgn‹ögCa£
(
£¨chCh¨a˘îs
 + 
i
, 
m©chCh¨a˘îs
, 
m©chLígth
)) {

1205 i‡(
i
 =
dñè
)

1206  
nŸFound
;

1207 ++
i
;

1209  
ödex
 + 
i
;

1210 
	}
}

1212 
size_t
 
	gSåögIm∂
::
	$födIgn‹ögCa£
(
SåögIm∂
* 
m©chSåög
, 
ödex
)

1215 i‡(!
m©chSåög
)

1216  
nŸFound
;

1217 
m©chLígth
 = 
m©chSåög
->
	`Àngth
();

1218 i‡(!
m©chLígth
)

1219  
°d
::
	`mö
(
ödex
, 
	`Àngth
());

1222 i‡(
ödex
 > 
	`Àngth
())

1223  
nŸFound
;

1224 
£¨chLígth
 = 
	`Àngth
(Ë- 
ödex
;

1225 i‡(
m©chLígth
 > 
£¨chLígth
)

1226  
nŸFound
;

1228 i‡(
	`is8Bô
()) {

1229 i‡(
m©chSåög
->
	`is8Bô
())

1230  
	`födIgn‹ögCa£I¬î
(
	`ch¨a˘îs8
(Ë+ 
ödex
, 
m©chSåög
->ch¨a˘îs8(), index, 
£¨chLígth
, 
m©chLígth
);

1231  
	`födIgn‹ögCa£I¬î
(
	`ch¨a˘îs8
(Ë+ 
ödex
, 
m©chSåög
->
	`ch¨a˘îs16
(), index, 
£¨chLígth
, 
m©chLígth
);

1234 i‡(
m©chSåög
->
	`is8Bô
())

1235  
	`födIgn‹ögCa£I¬î
(
	`ch¨a˘îs16
(Ë+ 
ödex
, 
m©chSåög
->
	`ch¨a˘îs8
(), index, 
£¨chLígth
, 
m©chLígth
);

1237  
	`födIgn‹ögCa£I¬î
(
	`ch¨a˘îs16
(Ë+ 
ödex
, 
m©chSåög
->ch¨a˘îs16(), index, 
£¨chLígth
, 
m©chLígth
);

1238 
	}
}

1240 
size_t
 
	gSåögIm∂
::
	$födNextLöeSèπ
(
ödex
)

1242 i‡(
	`is8Bô
())

1243  
WTF
::
	`födNextLöeSèπ
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ödex
);

1244  
WTF
::
	`födNextLöeSèπ
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ödex
);

1245 
	}
}

1247 
size_t
 
	gSåögIm∂
::
	$ªvî£Föd
(
UCh¨
 
c
, 
ödex
)

1249 i‡(
	`is8Bô
())

1250  
WTF
::
	`ªvî£Föd
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
c
, 
ödex
);

1251  
WTF
::
	`ªvî£Föd
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
c
, 
ödex
);

1252 
	}
}

1254 
	gãm∂©e
 <
ty≥«me
 
	gSórchCh¨a˘îTy≥
,Åy≥«mê
	gM©chCh¨a˘îTy≥
>

1255 
ALWAYS_INLINE
 
size_t
 
	$ªvî£FödI¬î
(c⁄° 
SórchCh¨a˘îTy≥
* 
£¨chCh¨a˘îs
, c⁄° 
M©chCh¨a˘îTy≥
* 
m©chCh¨a˘îs
, 
ödex
, 
Àngth
, 
m©chLígth
)

1261 
dñè
 = 
°d
::
	`mö
(
ödex
, 
Àngth
 - 
m©chLígth
);

1263 
£¨chHash
 = 0;

1264 
m©chHash
 = 0;

1265 
i
 = 0; i < 
m©chLígth
; ++i) {

1266 
£¨chHash
 +
£¨chCh¨a˘îs
[
dñè
 + 
i
];

1267 
m©chHash
 +
m©chCh¨a˘îs
[
i
];

1271 
£¨chHash
 !
m©chHash
 || !
	`equÆ
(
£¨chCh¨a˘îs
 + 
dñè
, 
m©chCh¨a˘îs
, 
m©chLígth
)) {

1272 i‡(!
dñè
)

1273  
nŸFound
;

1274 --
dñè
;

1275 
£¨chHash
 -
£¨chCh¨a˘îs
[
dñè
 + 
m©chLígth
];

1276 
£¨chHash
 +
£¨chCh¨a˘îs
[
dñè
];

1278  
dñè
;

1279 
	}
}

1281 
size_t
 
	gSåögIm∂
::
	$ªvî£Föd
(
SåögIm∂
* 
m©chSåög
, 
ödex
)

1284 i‡(!
m©chSåög
)

1285  
nŸFound
;

1286 
m©chLígth
 = 
m©chSåög
->
	`Àngth
();

1287 
ourLígth
 = 
	`Àngth
();

1288 i‡(!
m©chLígth
)

1289  
°d
::
	`mö
(
ödex
, 
ourLígth
);

1292 i‡(
m©chLígth
 == 1) {

1293 i‡(
	`is8Bô
())

1294  
WTF
::
	`ªvî£Föd
(
	`ch¨a˘îs8
(), 
ourLígth
, (*
m©chSåög
)[0], 
ödex
);

1295  
WTF
::
	`ªvî£Föd
(
	`ch¨a˘îs16
(), 
ourLígth
, (*
m©chSåög
)[0], 
ödex
);

1299 i‡(
m©chLígth
 > 
ourLígth
)

1300  
nŸFound
;

1302 i‡(
	`is8Bô
()) {

1303 i‡(
m©chSåög
->
	`is8Bô
())

1304  
	`ªvî£FödI¬î
(
	`ch¨a˘îs8
(), 
m©chSåög
->ch¨a˘îs8(), 
ödex
, 
ourLígth
, 
m©chLígth
);

1305  
	`ªvî£FödI¬î
(
	`ch¨a˘îs8
(), 
m©chSåög
->
	`ch¨a˘îs16
(), 
ödex
, 
ourLígth
, 
m©chLígth
);

1308 i‡(
m©chSåög
->
	`is8Bô
())

1309  
	`ªvî£FödI¬î
(
	`ch¨a˘îs16
(), 
m©chSåög
->
	`ch¨a˘îs8
(), 
ödex
, 
ourLígth
, 
m©chLígth
);

1311  
	`ªvî£FödI¬î
(
	`ch¨a˘îs16
(), 
m©chSåög
->ch¨a˘îs16(), 
ödex
, 
ourLígth
, 
m©chLígth
);

1312 
	}
}

1314 
	gãm∂©e
 <
ty≥«me
 
	gSórchCh¨a˘îTy≥
,Åy≥«mê
	gM©chCh¨a˘îTy≥
>

1315 
ALWAYS_INLINE
 
size_t
 
	$ªvî£FödIgn‹ögCa£I¬î
(c⁄° 
SórchCh¨a˘îTy≥
* 
£¨chCh¨a˘îs
, c⁄° 
M©chCh¨a˘îTy≥
* 
m©chCh¨a˘îs
, 
ödex
, 
Àngth
, 
m©chLígth
)

1318 
dñè
 = 
°d
::
	`mö
(
ödex
, 
Àngth
 - 
m©chLígth
);

1321 !
	`equÆIgn‹ögCa£
(
£¨chCh¨a˘îs
 + 
dñè
, 
m©chCh¨a˘îs
, 
m©chLígth
)) {

1322 i‡(!
dñè
)

1323  
nŸFound
;

1324 --
dñè
;

1326  
dñè
;

1327 
	}
}

1329 
size_t
 
	gSåögIm∂
::
	$ªvî£FödIgn‹ögCa£
(
SåögIm∂
* 
m©chSåög
, 
ödex
)

1332 i‡(!
m©chSåög
)

1333  
nŸFound
;

1334 
m©chLígth
 = 
m©chSåög
->
	`Àngth
();

1335 
ourLígth
 = 
	`Àngth
();

1336 i‡(!
m©chLígth
)

1337  
°d
::
	`mö
(
ödex
, 
ourLígth
);

1340 i‡(
m©chLígth
 > 
ourLígth
)

1341  
nŸFound
;

1343 i‡(
	`is8Bô
()) {

1344 i‡(
m©chSåög
->
	`is8Bô
())

1345  
	`ªvî£FödIgn‹ögCa£I¬î
(
	`ch¨a˘îs8
(), 
m©chSåög
->ch¨a˘îs8(), 
ödex
, 
ourLígth
, 
m©chLígth
);

1346  
	`ªvî£FödIgn‹ögCa£I¬î
(
	`ch¨a˘îs8
(), 
m©chSåög
->
	`ch¨a˘îs16
(), 
ödex
, 
ourLígth
, 
m©chLígth
);

1349 i‡(
m©chSåög
->
	`is8Bô
())

1350  
	`ªvî£FödIgn‹ögCa£I¬î
(
	`ch¨a˘îs16
(), 
m©chSåög
->
	`ch¨a˘îs8
(), 
ödex
, 
ourLígth
, 
m©chLígth
);

1352  
	`ªvî£FödIgn‹ögCa£I¬î
(
	`ch¨a˘îs16
(), 
m©chSåög
->ch¨a˘îs16(), 
ödex
, 
ourLígth
, 
m©chLígth
);

1353 
	}
}

1355 
ALWAYS_INLINE
 
boﬁ
 
	$equÆI¬î
(c⁄° 
SåögIm∂
* 
°rögIm∂
, 
°¨tOff£t
, c⁄° * 
m©chSåög
, 
m©chLígth
, 
boﬁ
 
ˇ£Sísôive
)

1357 
	`ASSERT
(
°rögIm∂
);

1358 
	`ASSERT
(
m©chLígth
 <
°rögIm∂
->
	`Àngth
());

1359 
	`ASSERT
(
°¨tOff£t
 + 
m©chLígth
 <
°rögIm∂
->
	`Àngth
());

1361 i‡(
ˇ£Sísôive
) {

1362 i‡(
°rögIm∂
->
	`is8Bô
())

1363  
	`equÆ
(
°rögIm∂
->
	`ch¨a˘îs8
(Ë+ 
°¨tOff£t
, 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
m©chSåög
), 
m©chLígth
);

1364  
	`equÆ
(
°rögIm∂
->
	`ch¨a˘îs16
(Ë+ 
°¨tOff£t
, 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
m©chSåög
), 
m©chLígth
);

1366 i‡(
°rögIm∂
->
	`is8Bô
())

1367  
	`equÆIgn‹ögCa£
(
°rögIm∂
->
	`ch¨a˘îs8
(Ë+ 
°¨tOff£t
, 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
m©chSåög
), 
m©chLígth
);

1368  
	`equÆIgn‹ögCa£
(
°rögIm∂
->
	`ch¨a˘îs16
(Ë+ 
°¨tOff£t
, 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
m©chSåög
), 
m©chLígth
);

1369 
	}
}

1371 
ALWAYS_INLINE
 
boﬁ
 
	$equÆI¬î
(
SåögIm∂
& 
°rögIm∂
, 
°¨tOff£t
, SåögIm∂& 
m©chSåög
, 
boﬁ
 
ˇ£Sísôive
)

1373 i‡(
°¨tOff£t
 > 
°rögIm∂
.
	`Àngth
())

1374  
Ál£
;

1375 i‡(
m©chSåög
.
	`Àngth
(Ë> 
°rögIm∂
.length())

1376  
Ál£
;

1377 i‡(
m©chSåög
.
	`Àngth
(Ë+ 
°¨tOff£t
 > 
°rögIm∂
.length())

1378  
Ál£
;

1380 i‡(
ˇ£Sísôive
) {

1381 i‡(
°rögIm∂
.
	`is8Bô
())

1382  
	`equÆ
(
°rögIm∂
.
	`ch¨a˘îs8
(Ë+ 
°¨tOff£t
, 
m©chSåög
.ch¨a˘îs8(), m©chSåög.
	`Àngth
());

1383  
	`equÆ
(
°rögIm∂
.
	`ch¨a˘îs16
(Ë+ 
°¨tOff£t
, 
m©chSåög
.ch¨a˘îs16(), m©chSåög.
	`Àngth
());

1385 i‡(
°rögIm∂
.
	`is8Bô
())

1386  
	`equÆIgn‹ögCa£
(
°rögIm∂
.
	`ch¨a˘îs8
(Ë+ 
°¨tOff£t
, 
m©chSåög
.ch¨a˘îs8(), m©chSåög.
	`Àngth
());

1387  
	`equÆIgn‹ögCa£
(
°rögIm∂
.
	`ch¨a˘îs16
(Ë+ 
°¨tOff£t
, 
m©chSåög
.ch¨a˘îs16(), m©chSåög.
	`Àngth
());

1388 
	}
}

1390 
boﬁ
 
	gSåögIm∂
::
	$°¨tsWôh
(c⁄° 
SåögIm∂
* 
°r
) const

1392 i‡(!
°r
)

1393  
Ál£
;

1395 i‡(
°r
->
	`Àngth
() >Üength())

1396  
Ál£
;

1398 i‡(
	`is8Bô
()) {

1399 i‡(
°r
->
	`is8Bô
())

1400  
	`equÆ
(
	`ch¨a˘îs8
(), 
°r
->ch¨a˘îs8(), så->
	`Àngth
());

1401  
	`equÆ
(
	`ch¨a˘îs8
(), 
°r
->
	`ch¨a˘îs16
(), så->
	`Àngth
());

1403 i‡(
°r
->
	`is8Bô
())

1404  
	`equÆ
(
	`ch¨a˘îs16
(), 
°r
->
	`ch¨a˘îs8
(), så->
	`Àngth
());

1405  
	`equÆ
(
	`ch¨a˘îs16
(), 
°r
->ch¨a˘îs16(), så->
	`Àngth
());

1406 
	}
}

1408 
boﬁ
 
	gSåögIm∂
::
	$°¨tsWôh
(
UCh¨
 
ch¨a˘î
) const

1410  
m_Àngth
 && (*
this
)[0] =
ch¨a˘î
;

1411 
	}
}

1413 
boﬁ
 
	gSåögIm∂
::
	$°¨tsWôh
(c⁄° * 
m©chSåög
, 
m©chLígth
, 
boﬁ
 
ˇ£Sísôive
) const

1415 
	`ASSERT
(
m©chLígth
);

1416 i‡(
m©chLígth
 > 
	`Àngth
())

1417  
Ál£
;

1418  
	`equÆI¬î
(
this
, 0, 
m©chSåög
, 
m©chLígth
, 
ˇ£Sísôive
);

1419 
	}
}

1421 
boﬁ
 
	gSåögIm∂
::
	$°¨tsWôh
(
SåögIm∂
& 
m©chSåög
, 
°¨tOff£t
, 
boﬁ
 
ˇ£Sísôive
) const

1423  
	`equÆI¬î
(
c⁄°_ˇ°
<
SåögIm∂
&>(*
this
), 
°¨tOff£t
, 
m©chSåög
, 
ˇ£Sísôive
);

1424 
	}
}

1426 
boﬁ
 
	gSåögIm∂
::
	$ídsWôh
(
SåögIm∂
* 
m©chSåög
, 
boﬁ
 
ˇ£Sísôive
)

1428 
	`ASSERT
(
m©chSåög
);

1429 i‡(
m_Àngth
 >
m©chSåög
->m_length) {

1430 
°¨t
 = 
m_Àngth
 - 
m©chSåög
->m_length;

1431  (
ˇ£Sísôive
 ? 
	`föd
(
m©chSåög
, 
°¨t
Ë: 
	`födIgn‹ögCa£
(matchString, start)) == start;

1433  
Ál£
;

1434 
	}
}

1436 
boﬁ
 
	gSåögIm∂
::
	$ídsWôh
(
UCh¨
 
ch¨a˘î
) const

1438  
m_Àngth
 && (*
this
)[m_Àngth - 1] =
ch¨a˘î
;

1439 
	}
}

1441 
boﬁ
 
	gSåögIm∂
::
	$ídsWôh
(c⁄° * 
m©chSåög
, 
m©chLígth
, 
boﬁ
 
ˇ£Sísôive
) const

1443 
	`ASSERT
(
m©chLígth
);

1444 i‡(
m©chLígth
 > 
	`Àngth
())

1445  
Ál£
;

1446 
°¨tOff£t
 = 
	`Àngth
(Ë- 
m©chLígth
;

1447  
	`equÆI¬î
(
this
, 
°¨tOff£t
, 
m©chSåög
, 
m©chLígth
, 
ˇ£Sísôive
);

1448 
	}
}

1450 
boﬁ
 
	gSåögIm∂
::
	$ídsWôh
(
SåögIm∂
& 
m©chSåög
, 
ídOff£t
, 
boﬁ
 
ˇ£Sísôive
) const

1452 i‡(
ídOff£t
 < 
m©chSåög
.
	`Àngth
())

1453  
Ál£
;

1454  
	`equÆI¬î
(
c⁄°_ˇ°
<
SåögIm∂
&>(*
this
), 
ídOff£t
 - 
m©chSåög
.
	`Àngth
(), m©chSåög, 
ˇ£Sísôive
);

1455 
	}
}

1457 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$ª∂a˚
(
UCh¨
 
ﬁdC
, UCh¨ 
√wC
)

1459 i‡(
ﬁdC
 =
√wC
)

1460  *
this
;

1461 
i
;

1462 
i
 = 0; i !
m_Àngth
; ++i) {

1463 
UCh¨
 
c
 = 
	`is8Bô
(Ë? 
m_d©a8
[
i
] : 
m_d©a16
[i];

1464 i‡(
c
 =
ﬁdC
)

1467 i‡(
i
 =
m_Àngth
)

1468  *
this
;

1470 i‡(
	`is8Bô
()) {

1471 i‡(
ﬁdC
 > 0xff)

1473  *
this
;

1475 i‡(
√wC
 <= 0xff) {

1476 
LCh¨
* 
d©a
;

1477 
LCh¨
 
ﬁdCh¨
 = 
°©ic_ˇ°
<LCh¨>(
ﬁdC
);

1478 
LCh¨
 
√wCh¨
 = 
°©ic_ˇ°
<LCh¨>(
√wC
);

1480 autÿ
√wIm∂
 = 
	`¸óãUnöôülizedI¡î«lN⁄Em±y
(
m_Àngth
, 
d©a
);

1482 
i
 = 0; i !
m_Àngth
; ++i) {

1483 
LCh¨
 
ch
 = 
m_d©a8
[
i
];

1484 i‡(
ch
 =
ﬁdCh¨
)

1485 
ch
 = 
√wCh¨
;

1486 
d©a
[
i
] = 
ch
;

1488  
√wIm∂
;

1493 
UCh¨
* 
d©a
;

1494 autÿ
√wIm∂
 = 
	`¸óãUnöôülizedI¡î«lN⁄Em±y
(
m_Àngth
, 
d©a
);

1496 
i
 = 0; i !
m_Àngth
; ++i) {

1497 
UCh¨
 
ch
 = 
m_d©a8
[
i
];

1498 i‡(
ch
 =
ﬁdC
)

1499 
ch
 = 
√wC
;

1500 
d©a
[
i
] = 
ch
;

1503  
√wIm∂
;

1506 
UCh¨
* 
d©a
;

1507 autÿ
√wIm∂
 = 
	`¸óãUnöôülizedI¡î«lN⁄Em±y
(
m_Àngth
, 
d©a
);

1509 
i
 = 0; i !
m_Àngth
; ++i) {

1510 
UCh¨
 
ch
 = 
m_d©a16
[
i
];

1511 i‡(
ch
 =
ﬁdC
)

1512 
ch
 = 
√wC
;

1513 
d©a
[
i
] = 
ch
;

1515  
√wIm∂
;

1516 
	}
}

1518 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$ª∂a˚
(
posôi⁄
, 
ÀngthToRïœ˚
, 
SåögIm∂
* 
°r
)

1520 
posôi⁄
 = 
°d
::
	`mö
’osôi⁄, 
	`Àngth
());

1521 
ÀngthToRïœ˚
 = 
°d
::
	`mö
÷ígthToRïœ˚, 
	`Àngth
(Ë- 
posôi⁄
);

1522 
ÀngthToIn£π
 = 
°r
 ? så->
	`Àngth
() : 0;

1523 i‡(!
ÀngthToRïœ˚
 && !
ÀngthToIn£π
)

1524  *
this
;

1526 i‡((
	`Àngth
(Ë- 
ÀngthToRïœ˚
Ë>(
°d
::
numîic_limôs
<>::
	`max
(Ë- 
ÀngthToIn£π
))

1527 
	`CRASH
();

1529 i‡(
	`is8Bô
(Ë&& (!
°r
 || str->is8Bit())) {

1530 
LCh¨
* 
d©a
;

1531 autÿ
√wIm∂
 = 
	`¸óãUnöôülized
(
	`Àngth
(Ë- 
ÀngthToRïœ˚
 + 
ÀngthToIn£π
, 
d©a
);

1532 
	`mem˝y
(
d©a
, 
m_d©a8
, 
posôi⁄
 * (
LCh¨
));

1533 i‡(
°r
)

1534 
	`mem˝y
(
d©a
 + 
posôi⁄
, 
°r
->
m_d©a8
, 
ÀngthToIn£π
 * (
LCh¨
));

1535 
	`mem˝y
(
d©a
 + 
posôi⁄
 + 
ÀngthToIn£π
, 
m_d©a8
 +Öosôi⁄ + 
ÀngthToRïœ˚
,

1536 (
	`Àngth
(Ë- 
posôi⁄
 - 
ÀngthToRïœ˚
Ë* (
LCh¨
));

1537  
√wIm∂
;

1539 
UCh¨
* 
d©a
;

1540 autÿ
√wIm∂
 = 
	`¸óãUnöôülized
(
	`Àngth
(Ë- 
ÀngthToRïœ˚
 + 
ÀngthToIn£π
, 
d©a
);

1541 i‡(
	`is8Bô
())

1542 
i
 = 0; i < 
posôi⁄
; ++i)

1543 
d©a
[
i
] = 
m_d©a8
[i];

1545 
	`mem˝y
(
d©a
, 
m_d©a16
, 
posôi⁄
 * (
UCh¨
));

1546 i‡(
°r
) {

1547 i‡(
°r
->
	`is8Bô
())

1548 
i
 = 0; i < 
ÀngthToIn£π
; ++i)

1549 
d©a
[
i
 + 
posôi⁄
] = 
°r
->
m_d©a8
[i];

1551 
	`mem˝y
(
d©a
 + 
posôi⁄
, 
°r
->
m_d©a16
, 
ÀngthToIn£π
 * (
UCh¨
));

1553 i‡(
	`is8Bô
()) {

1554 
i
 = 0; i < 
	`Àngth
(Ë- 
posôi⁄
 - 
ÀngthToRïœ˚
; ++i)

1555 
d©a
[
i
 + 
posôi⁄
 + 
ÀngthToIn£π
] = 
m_d©a8
[ò+Öosôi⁄ + 
ÀngthToRïœ˚
];

1557 
	`mem˝y
(
d©a
 + 
posôi⁄
 + 
ÀngthToIn£π
, 
	`ch¨a˘îs16
(Ë+Öosôi⁄ + 
ÀngthToRïœ˚
,

1558 (
	`Àngth
(Ë- 
posôi⁄
 - 
ÀngthToRïœ˚
Ë* (
UCh¨
));

1560  
√wIm∂
;

1561 
	}
}

1563 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$ª∂a˚
(
UCh¨
 
∑âîn
, 
SåögIm∂
* 
ª∂a˚mít
)

1565 i‡(!
ª∂a˚mít
)

1566  *
this
;

1568 i‡(
ª∂a˚mít
->
	`is8Bô
())

1569  
	`ª∂a˚
(
∑âîn
, 
ª∂a˚mít
->
m_d©a8
,Ñïœ˚mít->
	`Àngth
());

1571  
	`ª∂a˚
(
∑âîn
, 
ª∂a˚mít
->
m_d©a16
,Ñïœ˚mít->
	`Àngth
());

1572 
	}
}

1574 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$ª∂a˚
(
UCh¨
 
∑âîn
, c⁄° 
LCh¨
* 
ª∂a˚mít
, 
ªpSåLígth
)

1576 
	`ASSERT
(
ª∂a˚mít
);

1578 
size_t
 
§cSegmítSèπ
 = 0;

1579 
m©chCou¡
 = 0;

1582 (
§cSegmítSèπ
 = 
	`föd
(
∑âîn
, srcSegmítSèπ)Ë!
nŸFound
) {

1583 ++
m©chCou¡
;

1584 ++
§cSegmítSèπ
;

1588 i‡(!
m©chCou¡
)

1589  *
this
;

1591 i‡(
ªpSåLígth
 && 
m©chCou¡
 > 
°d
::
numîic_limôs
<>::
	`max
() /ÑepStrLength)

1592 
	`CRASH
();

1594 
ª∂a˚Size
 = 
m©chCou¡
 * 
ªpSåLígth
;

1595 
√wSize
 = 
m_Àngth
 - 
m©chCou¡
;

1596 i‡(
√wSize
 >(
°d
::
numîic_limôs
<>::
	`max
(Ë- 
ª∂a˚Size
))

1597 
	`CRASH
();

1599 
√wSize
 +
ª∂a˚Size
;

1602 
size_t
 
§cSegmítEnd
;

1603 
§cSegmítLígth
;

1604 
§cSegmítSèπ
 = 0;

1605 
d°Off£t
 = 0;

1607 i‡(
	`is8Bô
()) {

1608 
LCh¨
* 
d©a
;

1609 autÿ
√wIm∂
 = 
	`¸óãUnöôülized
(
√wSize
, 
d©a
);

1611 (
§cSegmítEnd
 = 
	`föd
(
∑âîn
, 
§cSegmítSèπ
)Ë!
nŸFound
) {

1612 
§cSegmítLígth
 = 
§cSegmítEnd
 - 
§cSegmítSèπ
;

1613 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
m_d©a8
 + 
§cSegmítSèπ
, 
§cSegmítLígth
 * (
LCh¨
));

1614 
d°Off£t
 +
§cSegmítLígth
;

1615 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
ª∂a˚mít
, 
ªpSåLígth
 * (
LCh¨
));

1616 
d°Off£t
 +
ªpSåLígth
;

1617 
§cSegmítSèπ
 = 
§cSegmítEnd
 + 1;

1620 
§cSegmítLígth
 = 
m_Àngth
 - 
§cSegmítSèπ
;

1621 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
m_d©a8
 + 
§cSegmítSèπ
, 
§cSegmítLígth
 * (
LCh¨
));

1623 
	`ASSERT
(
d°Off£t
 + 
§cSegmítLígth
 =
√wIm∂
.
	`gë
().
	`Àngth
());

1625  
√wIm∂
;

1628 
UCh¨
* 
d©a
;

1629 autÿ
√wIm∂
 = 
	`¸óãUnöôülized
(
√wSize
, 
d©a
);

1631 (
§cSegmítEnd
 = 
	`föd
(
∑âîn
, 
§cSegmítSèπ
)Ë!
nŸFound
) {

1632 
§cSegmítLígth
 = 
§cSegmítEnd
 - 
§cSegmítSèπ
;

1633 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
m_d©a16
 + 
§cSegmítSèπ
, 
§cSegmítLígth
 * (
UCh¨
));

1635 
d°Off£t
 +
§cSegmítLígth
;

1636 
i
 = 0; i < 
ªpSåLígth
; ++i)

1637 
d©a
[
i
 + 
d°Off£t
] = 
ª∂a˚mít
[i];

1639 
d°Off£t
 +
ªpSåLígth
;

1640 
§cSegmítSèπ
 = 
§cSegmítEnd
 + 1;

1643 
§cSegmítLígth
 = 
m_Àngth
 - 
§cSegmítSèπ
;

1644 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
m_d©a16
 + 
§cSegmítSèπ
, 
§cSegmítLígth
 * (
UCh¨
));

1646 
	`ASSERT
(
d°Off£t
 + 
§cSegmítLígth
 =
√wIm∂
.
	`gë
().
	`Àngth
());

1648  
√wIm∂
;

1649 
	}
}

1651 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$ª∂a˚
(
UCh¨
 
∑âîn
, c⁄° UCh¨* 
ª∂a˚mít
, 
ªpSåLígth
)

1653 
	`ASSERT
(
ª∂a˚mít
);

1655 
size_t
 
§cSegmítSèπ
 = 0;

1656 
m©chCou¡
 = 0;

1659 (
§cSegmítSèπ
 = 
	`föd
(
∑âîn
, srcSegmítSèπ)Ë!
nŸFound
) {

1660 ++
m©chCou¡
;

1661 ++
§cSegmítSèπ
;

1665 i‡(!
m©chCou¡
)

1666  *
this
;

1668 i‡(
ªpSåLígth
 && 
m©chCou¡
 > 
°d
::
numîic_limôs
<>::
	`max
() /ÑepStrLength)

1669 
	`CRASH
();

1671 
ª∂a˚Size
 = 
m©chCou¡
 * 
ªpSåLígth
;

1672 
√wSize
 = 
m_Àngth
 - 
m©chCou¡
;

1673 i‡(
√wSize
 >(
°d
::
numîic_limôs
<>::
	`max
(Ë- 
ª∂a˚Size
))

1674 
	`CRASH
();

1676 
√wSize
 +
ª∂a˚Size
;

1679 
size_t
 
§cSegmítEnd
;

1680 
§cSegmítLígth
;

1681 
§cSegmítSèπ
 = 0;

1682 
d°Off£t
 = 0;

1684 i‡(
	`is8Bô
()) {

1685 
UCh¨
* 
d©a
;

1686 autÿ
√wIm∂
 = 
	`¸óãUnöôülized
(
√wSize
, 
d©a
);

1688 (
§cSegmítEnd
 = 
	`föd
(
∑âîn
, 
§cSegmítSèπ
)Ë!
nŸFound
) {

1689 
§cSegmítLígth
 = 
§cSegmítEnd
 - 
§cSegmítSèπ
;

1690 
i
 = 0; i < 
§cSegmítLígth
; ++i)

1691 
d©a
[
i
 + 
d°Off£t
] = 
m_d©a8
[ò+ 
§cSegmítSèπ
];

1693 
d°Off£t
 +
§cSegmítLígth
;

1694 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
ª∂a˚mít
, 
ªpSåLígth
 * (
UCh¨
));

1696 
d°Off£t
 +
ªpSåLígth
;

1697 
§cSegmítSèπ
 = 
§cSegmítEnd
 + 1;

1700 
§cSegmítLígth
 = 
m_Àngth
 - 
§cSegmítSèπ
;

1701 
i
 = 0; i < 
§cSegmítLígth
; ++i)

1702 
d©a
[
i
 + 
d°Off£t
] = 
m_d©a8
[ò+ 
§cSegmítSèπ
];

1704 
	`ASSERT
(
d°Off£t
 + 
§cSegmítLígth
 =
√wIm∂
.
	`gë
().
	`Àngth
());

1706  
√wIm∂
;

1709 
UCh¨
* 
d©a
;

1710 autÿ
√wIm∂
 = 
	`¸óãUnöôülized
(
√wSize
, 
d©a
);

1712 (
§cSegmítEnd
 = 
	`föd
(
∑âîn
, 
§cSegmítSèπ
)Ë!
nŸFound
) {

1713 
§cSegmítLígth
 = 
§cSegmítEnd
 - 
§cSegmítSèπ
;

1714 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
m_d©a16
 + 
§cSegmítSèπ
, 
§cSegmítLígth
 * (
UCh¨
));

1716 
d°Off£t
 +
§cSegmítLígth
;

1717 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
ª∂a˚mít
, 
ªpSåLígth
 * (
UCh¨
));

1719 
d°Off£t
 +
ªpSåLígth
;

1720 
§cSegmítSèπ
 = 
§cSegmítEnd
 + 1;

1723 
§cSegmítLígth
 = 
m_Àngth
 - 
§cSegmítSèπ
;

1724 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
m_d©a16
 + 
§cSegmítSèπ
, 
§cSegmítLígth
 * (
UCh¨
));

1726 
	`ASSERT
(
d°Off£t
 + 
§cSegmítLígth
 =
√wIm∂
.
	`gë
().
	`Àngth
());

1728  
√wIm∂
;

1729 
	}
}

1731 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$ª∂a˚
(
SåögIm∂
* 
∑âîn
, SåögIm∂* 
ª∂a˚mít
)

1733 i‡(!
∑âîn
 || !
ª∂a˚mít
)

1734  *
this
;

1736 
∑âînLígth
 = 
∑âîn
->
	`Àngth
();

1737 i‡(!
∑âînLígth
)

1738  *
this
;

1740 
ªpSåLígth
 = 
ª∂a˚mít
->
	`Àngth
();

1741 
size_t
 
§cSegmítSèπ
 = 0;

1742 
m©chCou¡
 = 0;

1745 (
§cSegmítSèπ
 = 
	`föd
(
∑âîn
, srcSegmítSèπ)Ë!
nŸFound
) {

1746 ++
m©chCou¡
;

1747 
§cSegmítSèπ
 +
∑âînLígth
;

1751 i‡(!
m©chCou¡
)

1752  *
this
;

1754 
√wSize
 = 
m_Àngth
 - 
m©chCou¡
 * 
∑âînLígth
;

1755 i‡(
ªpSåLígth
 && 
m©chCou¡
 > 
°d
::
numîic_limôs
<>::
	`max
() /ÑepStrLength)

1756 
	`CRASH
();

1758 i‡(
√wSize
 > (
°d
::
numîic_limôs
<>::
	`max
(Ë- 
m©chCou¡
 * 
ªpSåLígth
))

1759 
	`CRASH
();

1761 
√wSize
 +
m©chCou¡
 * 
ªpSåLígth
;

1765 
size_t
 
§cSegmítEnd
;

1766 
§cSegmítLígth
;

1767 
§cSegmítSèπ
 = 0;

1768 
d°Off£t
 = 0;

1769 
boﬁ
 
§cIs8Bô
 = 
	`is8Bô
();

1770 
boﬁ
 
ª∂a˚mítIs8Bô
 = 
ª∂a˚mít
->
	`is8Bô
();

1777 i‡(
§cIs8Bô
 && 
ª∂a˚mítIs8Bô
) {

1779 
LCh¨
* 
d©a
;

1780 autÿ
√wIm∂
 = 
	`¸óãUnöôülized
(
√wSize
, 
d©a
);

1781 (
§cSegmítEnd
 = 
	`föd
(
∑âîn
, 
§cSegmítSèπ
)Ë!
nŸFound
) {

1782 
§cSegmítLígth
 = 
§cSegmítEnd
 - 
§cSegmítSèπ
;

1783 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
m_d©a8
 + 
§cSegmítSèπ
, 
§cSegmítLígth
 * (
LCh¨
));

1784 
d°Off£t
 +
§cSegmítLígth
;

1785 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
ª∂a˚mít
->
m_d©a8
, 
ªpSåLígth
 * (
LCh¨
));

1786 
d°Off£t
 +
ªpSåLígth
;

1787 
§cSegmítSèπ
 = 
§cSegmítEnd
 + 
∑âînLígth
;

1790 
§cSegmítLígth
 = 
m_Àngth
 - 
§cSegmítSèπ
;

1791 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
m_d©a8
 + 
§cSegmítSèπ
, 
§cSegmítLígth
 * (
LCh¨
));

1793 
	`ASSERT
(
d°Off£t
 + 
§cSegmítLígth
 =
√wIm∂
.
	`gë
().
	`Àngth
());

1795  
√wIm∂
;

1798 
UCh¨
* 
d©a
;

1799 autÿ
√wIm∂
 = 
	`¸óãUnöôülized
(
√wSize
, 
d©a
);

1800 (
§cSegmítEnd
 = 
	`föd
(
∑âîn
, 
§cSegmítSèπ
)Ë!
nŸFound
) {

1801 
§cSegmítLígth
 = 
§cSegmítEnd
 - 
§cSegmítSèπ
;

1802 i‡(
§cIs8Bô
) {

1804 
i
 = 0; i < 
§cSegmítLígth
; ++i)

1805 
d©a
[
i
 + 
d°Off£t
] = 
m_d©a8
[ò+ 
§cSegmítSèπ
];

1808 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
m_d©a16
 + 
§cSegmítSèπ
, 
§cSegmítLígth
 * (
UCh¨
));

1810 
d°Off£t
 +
§cSegmítLígth
;

1811 i‡(
ª∂a˚mítIs8Bô
) {

1813 
i
 = 0; i < 
ªpSåLígth
; ++i)

1814 
d©a
[
i
 + 
d°Off£t
] = 
ª∂a˚mít
->
m_d©a8
[i];

1817 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
ª∂a˚mít
->
m_d©a16
, 
ªpSåLígth
 * (
UCh¨
));

1819 
d°Off£t
 +
ªpSåLígth
;

1820 
§cSegmítSèπ
 = 
§cSegmítEnd
 + 
∑âînLígth
;

1823 
§cSegmítLígth
 = 
m_Àngth
 - 
§cSegmítSèπ
;

1824 i‡(
§cIs8Bô
) {

1826 
i
 = 0; i < 
§cSegmítLígth
; ++i)

1827 
d©a
[
i
 + 
d°Off£t
] = 
m_d©a8
[ò+ 
§cSegmítSèπ
];

1830 
	`mem˝y
(
d©a
 + 
d°Off£t
, 
m_d©a16
 + 
§cSegmítSèπ
, 
§cSegmítLígth
 * (
UCh¨
));

1833 
	`ASSERT
(
d°Off£t
 + 
§cSegmítLígth
 =
√wIm∂
.
	`gë
().
	`Àngth
());

1835  
√wIm∂
;

1836 
	}
}

1838 
ALWAYS_INLINE
 
boﬁ
 
	$°rögIm∂C⁄ã¡EquÆ
(c⁄° 
SåögIm∂
& 
a
, c⁄° SåögIm∂& 
b
)

1840 
aLígth
 = 
a
.
	`Àngth
();

1841 
bLígth
 = 
b
.
	`Àngth
();

1842 i‡(
aLígth
 !
bLígth
)

1843  
Ál£
;

1845 i‡(
a
.
	`is8Bô
()) {

1846 i‡(
b
.
	`is8Bô
())

1847  
	`equÆ
(
a
.
	`ch¨a˘îs8
(), 
b
.ch¨a˘îs8(), 
aLígth
);

1849  
	`equÆ
(
a
.
	`ch¨a˘îs8
(), 
b
.
	`ch¨a˘îs16
(), 
aLígth
);

1852 i‡(
b
.
	`is8Bô
())

1853  
	`equÆ
(
a
.
	`ch¨a˘îs16
(), 
b
.
	`ch¨a˘îs8
(), 
aLígth
);

1855  
	`equÆ
(
a
.
	`ch¨a˘îs16
(), 
b
.ch¨a˘îs16(), 
aLígth
);

1856 
	}
}

1858 
boﬁ
 
	$equÆ
(c⁄° 
SåögIm∂
* 
a
, c⁄° SåögIm∂* 
b
)

1860 i‡(
a
 =
b
)

1861  
åue
;

1862 i‡(!
a
 || !
b
)

1863  
Ál£
;

1865  
	`°rögIm∂C⁄ã¡EquÆ
(*
a
, *
b
);

1866 
	}
}

1868 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

1869 
ölöe
 
boﬁ
 
	$equÆI¡î«l
(c⁄° 
SåögIm∂
* 
a
, c⁄° 
Ch¨Ty≥
* 
b
, 
Àngth
)

1871 i‡(!
a
)

1872  !
b
;

1873 i‡(!
b
)

1874  
Ál£
;

1876 i‡(
a
->
	`Àngth
(Ë!
Àngth
)

1877  
Ál£
;

1878 i‡(
a
->
	`is8Bô
())

1879  
	`equÆ
(
a
->
	`ch¨a˘îs8
(), 
b
, 
Àngth
);

1880  
	`equÆ
(
a
->
	`ch¨a˘îs16
(), 
b
, 
Àngth
);

1881 
	}
}

1883 
boﬁ
 
	$equÆ
(c⁄° 
SåögIm∂
* 
a
, c⁄° 
LCh¨
* 
b
, 
Àngth
)

1885  
	`equÆI¡î«l
(
a
, 
b
, 
Àngth
);

1886 
	}
}

1888 
boﬁ
 
	$equÆ
(c⁄° 
SåögIm∂
* 
a
, c⁄° 
UCh¨
* 
b
, 
Àngth
)

1890  
	`equÆI¡î«l
(
a
, 
b
, 
Àngth
);

1891 
	}
}

1893 
boﬁ
 
	$equÆ
(c⁄° 
SåögIm∂
* 
a
, c⁄° 
LCh¨
* 
b
)

1895 i‡(!
a
)

1896  !
b
;

1897 i‡(!
b
)

1898  !
a
;

1900 
Àngth
 = 
a
->
	`Àngth
();

1902 i‡(
a
->
	`is8Bô
()) {

1903 c⁄° 
LCh¨
* 
aPå
 = 
a
->
	`ch¨a˘îs8
();

1904 
i
 = 0; i !
Àngth
; ++i) {

1905 
LCh¨
 
bc
 = 
b
[
i
];

1906 
LCh¨
 
ac
 = 
aPå
[
i
];

1907 i‡(!
bc
)

1908  
Ál£
;

1909 i‡(
ac
 !
bc
)

1910  
Ál£
;

1913  !
b
[
Àngth
];

1916 c⁄° 
UCh¨
* 
aPå
 = 
a
->
	`ch¨a˘îs16
();

1917 
i
 = 0; i !
Àngth
; ++i) {

1918 
LCh¨
 
bc
 = 
b
[
i
];

1919 i‡(!
bc
)

1920  
Ál£
;

1921 i‡(
aPå
[
i
] !
bc
)

1922  
Ál£
;

1925  !
b
[
Àngth
];

1926 
	}
}

1928 
boﬁ
 
	$equÆ
(c⁄° 
SåögIm∂
& 
a
, c⁄° SåögIm∂& 
b
)

1930 i‡(&
a
 =&
b
)

1931  
åue
;

1933  
	`°rögIm∂C⁄ã¡EquÆ
(
a
, 
b
);

1934 
	}
}

1936 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
SåögIm∂
* 
a
, c⁄° SåögIm∂* 
b
)

1938 i‡(
a
 =
b
)

1939  
åue
;

1940 i‡(!
a
 || !
b
)

1941  
Ál£
;

1943  
Ca£FﬁdögHash
::
	`equÆ
(
a
, 
b
);

1944 
	}
}

1946 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
SåögIm∂
* 
a
, c⁄° 
LCh¨
* 
b
)

1948 i‡(!
a
)

1949  !
b
;

1950 i‡(!
b
)

1951  !
a
;

1953 
Àngth
 = 
a
->
	`Àngth
();

1956 
UCh¨
 
‹ed
 = 0;

1957 
boﬁ
 
equÆ
 = 
åue
;

1958 i‡(
a
->
	`is8Bô
()) {

1959 c⁄° 
LCh¨
* 
as
 = 
a
->
	`ch¨a˘îs8
();

1960 
i
 = 0; i !
Àngth
; ++i) {

1961 
LCh¨
 
bc
 = 
b
[
i
];

1962 i‡(!
bc
)

1963  
Ál£
;

1964 
UCh¨
 
ac
 = 
as
[
i
];

1965 
‹ed
 |
ac
;

1966 
equÆ
 =ÉquÆ && (
	`toASCIILowî
(
ac
Ë=toASCIILowî(
bc
));

1970 i‡(
‹ed
 & ~0x7F) {

1971 
equÆ
 = 
åue
;

1972 
i
 = 0; i !
Àngth
; ++i)

1973 
equÆ
 =ÉquÆ && 
	`u_fﬁdCa£
(
as
[
i
], 
U_FOLD_CASE_DEFAULT
Ë=u_fﬁdCa£(
b
[i], U_FOLD_CASE_DEFAULT);

1976  
equÆ
 && !
b
[
Àngth
];

1979 c⁄° 
UCh¨
* 
as
 = 
a
->
	`ch¨a˘îs16
();

1980 
i
 = 0; i !
Àngth
; ++i) {

1981 
LCh¨
 
bc
 = 
b
[
i
];

1982 i‡(!
bc
)

1983  
Ál£
;

1984 
UCh¨
 
ac
 = 
as
[
i
];

1985 
‹ed
 |
ac
;

1986 
equÆ
 =ÉquÆ && (
	`toASCIILowî
(
ac
Ë=toASCIILowî(
bc
));

1990 i‡(
‹ed
 & ~0x7F) {

1991 
equÆ
 = 
åue
;

1992 
i
 = 0; i !
Àngth
; ++i) {

1993 
equÆ
 =ÉquÆ && 
	`u_fﬁdCa£
(
as
[
i
], 
U_FOLD_CASE_DEFAULT
Ë=u_fﬁdCa£(
b
[i], U_FOLD_CASE_DEFAULT);

1997  
equÆ
 && !
b
[
Àngth
];

1998 
	}
}

2000 
boﬁ
 
	$equÆIgn‹ögCa£N⁄NuŒ
(c⁄° 
SåögIm∂
* 
a
, c⁄° SåögIm∂* 
b
)

2002 
	`ASSERT
(
a
 && 
b
);

2003 i‡(
a
 =
b
)

2004  
åue
;

2006 
Àngth
 = 
a
->
	`Àngth
();

2007 i‡(
Àngth
 !
b
->
	`Àngth
())

2008  
Ál£
;

2010 i‡(
a
->
	`is8Bô
()) {

2011 i‡(
b
->
	`is8Bô
())

2012  
	`equÆIgn‹ögCa£
(
a
->
	`ch¨a˘îs8
(), 
b
->ch¨a˘îs8(), 
Àngth
);

2014  
	`equÆIgn‹ögCa£
(
b
->
	`ch¨a˘îs16
(), 
a
->
	`ch¨a˘îs8
(), 
Àngth
);

2017 i‡(
b
->
	`is8Bô
())

2018  
	`equÆIgn‹ögCa£
(
a
->
	`ch¨a˘îs16
(), 
b
->
	`ch¨a˘îs8
(), 
Àngth
);

2020  
	`equÆIgn‹ögCa£
(
a
->
	`ch¨a˘îs16
(), 
b
->ch¨a˘îs16(), 
Àngth
);

2021 
	}
}

2023 
boﬁ
 
	$equÆIgn‹ögNuŒôy
(
SåögIm∂
* 
a
, SåögIm∂* 
b
)

2025 i‡(!
a
 && 
b
 && !b->
	`Àngth
())

2026  
åue
;

2027 i‡(!
b
 && 
a
 && !a->
	`Àngth
())

2028  
åue
;

2029  
	`equÆ
(
a
, 
b
);

2030 
	}
}

2032 
UCh¨Dúe˘i⁄
 
	gSåögIm∂
::
	$deÁu…WrôögDúe˘i⁄
(
boﬁ
* 
hasSå⁄gDúe˘i⁄Æôy
)

2034 
i
 = 0; i < 
m_Àngth
; ++i) {

2035 
UCh¨Dúe˘i⁄
 
ch¨Dúe˘i⁄
 = 
	`u_ch¨Dúe˘i⁄
(
	`is8Bô
(Ë? 
m_d©a8
[
i
] : 
m_d©a16
[i]);

2036 i‡(
ch¨Dúe˘i⁄
 =
U_LEFT_TO_RIGHT
) {

2037 i‡(
hasSå⁄gDúe˘i⁄Æôy
)

2038 *
hasSå⁄gDúe˘i⁄Æôy
 = 
åue
;

2039  
U_LEFT_TO_RIGHT
;

2041 i‡(
ch¨Dúe˘i⁄
 =
U_RIGHT_TO_LEFT
 || ch¨Dúe˘i⁄ =
U_RIGHT_TO_LEFT_ARABIC
) {

2042 i‡(
hasSå⁄gDúe˘i⁄Æôy
)

2043 *
hasSå⁄gDúe˘i⁄Æôy
 = 
åue
;

2044  
U_RIGHT_TO_LEFT
;

2047 i‡(
hasSå⁄gDúe˘i⁄Æôy
)

2048 *
hasSå⁄gDúe˘i⁄Æôy
 = 
Ál£
;

2049  
U_LEFT_TO_RIGHT
;

2050 
	}
}

2052 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
ad›t
(
SåögBuf„r
<
LCh¨
>& 
buf„r
)

2054 
Àngth
 = 
buf„r
.length();

2055 i‡(!
	gÀngth
)

2056  *
em±y
();

2057  
ad›tRef
(*
√w
 
SåögIm∂
(
buf„r
.
ªÀa£
(), 
Àngth
));

2060 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
ad›t
(
SåögBuf„r
<
UCh¨
>& 
buf„r
)

2062 
Àngth
 = 
buf„r
.length();

2063 i‡(!
	gÀngth
)

2064  *
em±y
();

2065  
ad›tRef
(*
√w
 
SåögIm∂
(
buf„r
.
ªÀa£
(), 
Àngth
));

2068 
size_t
 
	gSåögIm∂
::
	$sizeInByãs
() const

2071 
size_t
 
size
 = 
	`Àngth
();

2072 i‡(!
	`is8Bô
())

2073 
size
 *= 2;

2074  
size
 + (*
this
);

2075 
	}
}

2078 
ölöe
 
	$putUTF8TrùÀ
(*& 
buf„r
, 
UCh¨
 
ch
)

2080 
	`ASSERT
(
ch
 >= 0x0800);

2081 *
buf„r
++ = 
°©ic_ˇ°
<>(((
ch
 >> 12) & 0x0F) | 0xE0);

2082 *
buf„r
++ = 
°©ic_ˇ°
<>(((
ch
 >> 6) & 0x3F) | 0x80);

2083 *
buf„r
++ = 
°©ic_ˇ°
<>((
ch
 & 0x3F) | 0x80);

2084 
	}
}

2086 
boﬁ
 
	gSåögIm∂
::
	$utf8Im∂
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
, *& 
buf„r
, 
size_t
 
buf„rSize
, 
C⁄vîsi⁄Mode
 
mode
)

2088 i‡(
mode
 =
Såi˘C⁄vîsi⁄RïœcögU≈aúedSuºog©esWôhFFFD
) {

2089 c⁄° 
UCh¨
* 
ch¨a˘îsEnd
 = 
ch¨a˘îs
 + 
Àngth
;

2090 * 
buf„rEnd
 = 
buf„r
 + 
buf„rSize
;

2091 
ch¨a˘îs
 < 
ch¨a˘îsEnd
) {

2093 
C⁄vîsi⁄Resu…
 
ªsu…
 = 
	`c⁄vîtUTF16ToUTF8
(&
ch¨a˘îs
, 
ch¨a˘îsEnd
, &
buf„r
, 
buf„rEnd
, 
åue
);

2094 
	`ASSERT
(
ªsu…
 !
èrgëExhau°ed
);

2097 i‡(
ªsu…
 !
c⁄vîsi⁄OK
) {

2098 
	`ASSERT
((0xD800 <*
ch¨a˘îs
 && *characters <= 0xDFFF));

2100 
	`ASSERT
((
buf„r
 + 3Ë<
buf„rEnd
);

2101 
	`putUTF8TrùÀ
(
buf„r
, 
ª∂a˚mítCh¨a˘î
);

2102 ++
ch¨a˘îs
;

2106 
boﬁ
 
°ri˘
 = 
mode
 =
Såi˘C⁄vîsi⁄
;

2107 c⁄° 
UCh¨
* 
‹igöÆCh¨a˘îs
 = 
ch¨a˘îs
;

2108 
C⁄vîsi⁄Resu…
 
ªsu…
 = 
	`c⁄vîtUTF16ToUTF8
(&
ch¨a˘îs
, ch¨a˘î†+ 
Àngth
, &
buf„r
, buf„∏+ 
buf„rSize
, 
°ri˘
);

2109 
	`ASSERT
(
ªsu…
 !
èrgëExhau°ed
);

2112 i‡(
ªsu…
 =
sour˚IŒegÆ
) {

2113 
	`ASSERT
(
°ri˘
);

2114  
Ál£
;

2118 i‡(
ªsu…
 =
sour˚Exhau°ed
) {

2119 i‡(
°ri˘
)

2120  
Ál£
;

2125 
	`ASSERT_UNUSED
(

2126 
‹igöÆCh¨a˘îs
, (
ch¨a˘îs
 + 1Ë=(‹igöÆCh¨a˘î†+ 
Àngth
));

2127 
	`ASSERT
((*
ch¨a˘îs
 >= 0xD800) && (*characters <= 0xDBFF));

2129 
	`ASSERT
((
buf„r
 + 3Ë<(buf„∏+ 
buf„rSize
));

2130 
	`putUTF8TrùÀ
(
buf„r
, *
ch¨a˘îs
);

2134  
åue
;

2135 
	}
}

2137 
CSåög
 
	gSåögIm∂
::
	$utf8F‹Ch¨a˘îs
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
, 
C⁄vîsi⁄Mode
 
mode
)

2139 i‡(!
Àngth
)

2140  
	`CSåög
("", 0);

2141 i‡(
Àngth
 > 
°d
::
numîic_limôs
<>::
	`max
() / 3)

2142  
	`CSåög
();

2143 
Ve˘‹
<, 1024> 
	`buf„rVe˘‹
(
Àngth
 * 3);

2144 * 
buf„r
 = 
buf„rVe˘‹
.
	`d©a
();

2145 i‡(!
	`utf8Im∂
(
ch¨a˘îs
, 
Àngth
, 
buf„r
, 
buf„rVe˘‹
.
	`size
(), 
mode
))

2146  
	`CSåög
();

2147  
	`CSåög
(
buf„rVe˘‹
.
	`d©a
(), 
buf„r
 - bufferVector.data());

2148 
	}
}

2150 
CSåög
 
	gSåögIm∂
::
	$utf8F‹R™ge
(
off£t
, 
Àngth
, 
C⁄vîsi⁄Mode
 
mode
) const

2152 
	`ASSERT
(
off£t
 <
this
->
	`Àngth
());

2153 
	`ASSERT
(
off£t
 + 
Àngth
 <
this
->
	`Àngth
());

2155 i‡(!
Àngth
)

2156  
	`CSåög
("", 0);

2168 i‡(
Àngth
 > 
°d
::
numîic_limôs
<>::
	`max
() / 3)

2169  
	`CSåög
();

2170 
Ve˘‹
<, 1024> 
	`buf„rVe˘‹
(
Àngth
 * 3);

2172 * 
buf„r
 = 
buf„rVe˘‹
.
	`d©a
();

2174 i‡(
	`is8Bô
()) {

2175 c⁄° 
LCh¨
* 
ch¨a˘îs
 = 
this
->
	`ch¨a˘îs8
(Ë+ 
off£t
;

2177 
C⁄vîsi⁄Resu…
 
ªsu…
 = 
	`c⁄vîtL©ö1ToUTF8
(&
ch¨a˘îs
, ch¨a˘î†+ 
Àngth
, &
buf„r
, buf„∏+ 
buf„rVe˘‹
.
	`size
());

2178 
	`ASSERT_UNUSED
(
ªsu…
,Ñesu… !
èrgëExhau°ed
);

2180 i‡(!
	`utf8Im∂
(
this
->
	`ch¨a˘îs16
(Ë+ 
off£t
, 
Àngth
, 
buf„r
, 
buf„rVe˘‹
.
	`size
(), 
mode
))

2181  
	`CSåög
();

2184  
	`CSåög
(
buf„rVe˘‹
.
	`d©a
(), 
buf„r
 - bufferVector.data());

2185 
	}
}

2187 
CSåög
 
	gSåögIm∂
::
	$utf8
(
C⁄vîsi⁄Mode
 
mode
) const

2189  
	`utf8F‹R™ge
(0, 
	`Àngth
(), 
mode
);

2190 
	}
}

2193 c⁄° 
UCh¨
 
	gSåögIm∂
::
œtö1Ca£FﬁdTabÀ
[256] = {

2212 
boﬁ
 
	$equÆIgn‹ögNuŒôy
(c⁄° 
UCh¨
* 
a
, 
size_t
 
aLígth
, 
SåögIm∂
* 
b
)

2214 i‡(!
b
)

2215  !
aLígth
;

2216 i‡(
aLígth
 !
b
->
	`Àngth
())

2217  
Ál£
;

2218 i‡(
b
->
	`is8Bô
()) {

2219 c⁄° 
LCh¨
* 
bCh¨a˘îs
 = 
b
->
	`ch¨a˘îs8
();

2220 
i
 = 0; i < 
aLígth
; ++i) {

2221 i‡(
a
[
i
] !
bCh¨a˘îs
[i])

2222  
Ál£
;

2224  
åue
;

2226  !
	`memcmp
(
a
, 
b
->
	`ch¨a˘îs16
(), b->
	`Àngth
(Ë* (
UCh¨
));

2227 
	}
}

	@text/StringImpl.h

23 #i‚de‡
SåögIm∂_h


24 
	#SåögIm∂_h


	)

26 
	~<limôs.h
>

27 
	~<unicode/uch¨.h
>

28 
	~<unicode/u°rög.h
>

29 
	~<wtf/ASCIICTy≥.h
>

30 
	~<wtf/F‹w¨d.h
>

31 
	~<wtf/M©hExåas.h
>

32 
	~<wtf/StdLibExåas.h
>

33 
	~<wtf/SåögHashî.h
>

34 
	~<wtf/Ve˘‹.h
>

35 
	~<wtf/ãxt/C⁄vîsi⁄Mode.h
>

43 #i‡
USE
(
CF
)

44 c⁄° 
	t__CFSåög
 * 
	tCFSåögRef
;

47 #ifde‡
__OBJC__


48 @
˛ass
 
	gNSSåög
;

51 
«me•a˚
 
	gJSC
 {

52 
«me•a˚
 
	gLLI¡
 { 
˛ass
 
	gD©a
; }

53 
˛ass
 
	gLLI¡Off£tsExåa˘‹
;

56 
«me•a˚
 
	gWTF
 {

58 
	gCSåögTøn¶©‹
;

59 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
> 
	gHashAndCh¨a˘îsTøn¶©‹
;

60 
	gHashAndUTF8Ch¨a˘îsTøn¶©‹
;

61 
	gLCh¨Buf„rTøn¶©‹
;

62 
	gCh¨Buf„rFromLôîÆD©aTøn¶©‹
;

63 
	gSub°rögTøn¶©‹
;

64 
	gUCh¨Buf„rTøn¶©‹
;

65 
	gãm∂©e
<
	gty≥«me
> 
˛ass
 
	gRëaöPå
;

67 
	eTextCa£Sísôivôy
 {

68 
	gTextCa£Sísôive
,

69 
	gTextCa£In£nsôive


72 
boﬁ
 (*
	tCh¨a˘îM©chFun˘i⁄På
)(
	tUCh¨
);

73 
boﬁ
 (*
	tIsWhôeS∑˚Fun˘i⁄På
)(
	tUCh¨
);

76 #unde‡
STRING_STATS


78 #ifde‡
STRING_STATS


79 
	sSåögSèts
 {

80 
ölöe
 
add8BôSåög
(
Àngth
, 
boﬁ
 
isSubSåög
 = 
Ál£
)

82 ++
m_tŸÆNumbîSåögs
;

83 ++
	gm_numbî8BôSåögs
;

84 i‡(!
	gisSubSåög
)

85 
	gm_tŸÆ8BôD©a
 +
Àngth
;

88 
ölöe
 
add16BôSåög
(
Àngth
, 
boﬁ
 
isSubSåög
 = 
Ál£
)

90 ++
m_tŸÆNumbîSåögs
;

91 ++
	gm_numbî16BôSåögs
;

92 i‡(!
	gisSubSåög
)

93 
	gm_tŸÆ16BôD©a
 +
Àngth
;

96 
ölöe
 
addUpc⁄vîãdSåög
(
Àngth
)

98 ++
	gm_numbîUpc⁄vîãdSåögs
;

99 
	gm_tŸÆUpc⁄vîãdD©a
 +
Àngth
;

102 
ªmoveSåög
(
SåögIm∂
*);

103 
¥ötSèts
();

105 c⁄° 
	gs_¥ötSåögSètsFªquícy
 = 5000;

106 
	gs_°rögRemovesTûlPrötSèts
;

108 
	gm_tŸÆNumbîSåögs
;

109 
	gm_numbî8BôSåögs
;

110 
	gm_numbî16BôSåögs
;

111 
	gm_numbîUpc⁄vîãdSåögs
;

112 
	gm_tŸÆ8BôD©a
;

113 
	gm_tŸÆ16BôD©a
;

114 
	gm_tŸÆUpc⁄vîãdD©a
;

117 
	#STRING_STATS_ADD_8BIT_STRING
(
Àngth
Ë
SåögIm∂
::
	`°rögSèts
().
	`add8BôSåög
÷ígth)

	)

118 
	#STRING_STATS_ADD_8BIT_STRING2
(
Àngth
, 
isSubSåög
Ë
SåögIm∂
::
	`°rögSèts
().
	`add8BôSåög
÷ígth, isSubSåög)

	)

119 
	#STRING_STATS_ADD_16BIT_STRING
(
Àngth
Ë
SåögIm∂
::
	`°rögSèts
().
	`add16BôSåög
÷ígth)

	)

120 
	#STRING_STATS_ADD_16BIT_STRING2
(
Àngth
, 
isSubSåög
Ë
SåögIm∂
::
	`°rögSèts
().
	`add16BôSåög
÷ígth, isSubSåög)

	)

121 
	#STRING_STATS_ADD_UPCONVERTED_STRING
(
Àngth
Ë
SåögIm∂
::
	`°rögSèts
().
	`addUpc⁄vîãdSåög
÷ígth)

	)

122 
	#STRING_STATS_REMOVE_STRING
(
°rög
Ë
SåögIm∂
::
	`°rögSèts
().
	`ªmoveSåög
(°rög)

	)

124 
	#STRING_STATS_ADD_8BIT_STRING
(
Àngth
Ë(()0)

	)

125 
	#STRING_STATS_ADD_8BIT_STRING2
(
Àngth
, 
isSubSåög
Ë(()0)

	)

126 
	#STRING_STATS_ADD_16BIT_STRING
(
Àngth
Ë(()0)

	)

127 
	#STRING_STATS_ADD_16BIT_STRING2
(
Àngth
, 
isSubSåög
Ë(()0)

	)

128 
	#STRING_STATS_ADD_UPCONVERTED_STRING
(
Àngth
Ë(()0)

	)

129 
	#STRING_STATS_REMOVE_STRING
(
°rög
Ë(()0)

	)

132 ˛as†
	cSåögIm∂
 {

133 
WTF_MAKE_NONCOPYABLE
(
SåögIm∂
); 
	gWTF_MAKE_FAST_ALLOCATED
;

134 
‰õnd
 
	gWTF
::
CSåögTøn¶©‹
;

135 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
> 
‰õnd
 
	gWTF
::
HashAndCh¨a˘îsTøn¶©‹
;

136 
‰õnd
 
	gWTF
::
HashAndUTF8Ch¨a˘îsTøn¶©‹
;

137 
‰õnd
 
	gWTF
::
Ch¨Buf„rFromLôîÆD©aTøn¶©‹
;

138 
‰õnd
 
	gWTF
::
LCh¨Buf„rTøn¶©‹
;

139 
‰õnd
 
	gWTF
::
Sub°rögTøn¶©‹
;

140 
‰õnd
 
	gWTF
::
UCh¨Buf„rTøn¶©‹
;

141 
‰õnd
 
˛ass
 
	gAtomicSåögIm∂
;

142 
‰õnd
 
˛ass
 
	gJSC
::
LLI¡
::
D©a
;

143 
‰õnd
 
˛ass
 
	gJSC
::
LLI¡Off£tsExåa˘‹
;

145 
	g¥iv©e
:

146 
	eBuf„rOw√rshù
 {

147 
Buf„rI¡î«l
,

148 
	gBuf„rOw√d
,

149 
	gBuf„rSub°rög
,

155 
‰õnd
 
˛ass
 
	gNevîDe°royed
<
	gSåögIm∂
>;

156 
	eC⁄°ru˘Em±ySåögTag
 { 
	gC⁄°ru˘Em±ySåög
 };

157 
SåögIm∂
(
C⁄°ru˘Em±ySåögTag
)

158 : 
m_ªfCou¡
(
s_ªfCou¡FœgIsSèticSåög
)

159 , 
m_Àngth
(0)

160 , 
m_d©a8
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(&
m_Àngth
))

161 , 
m_hashAndFœgs
(
s_hashFœg8BôBuf„r
 | 
s_hashFœgIsAtomic
 | 
Buf„rOw√d
)

166 
STRING_STATS_ADD_8BIT_STRING
(
m_Àngth
);

168 
hash
();

172 
	eF‹˚8Bô
 { 
	gF‹˚8BôC⁄°ru˘‹
 };

174 
SåögIm∂
(
Àngth
, 
F‹˚8Bô
)

175 : 
m_ªfCou¡
(
s_ªfCou¡In¸emít
)

176 , 
m_Àngth
(
Àngth
)

177 , 
m_d©a8
(
èûPoöãr
<
LCh¨
>())

178 , 
m_hashAndFœgs
(
s_hashFœg8BôBuf„r
 | 
Buf„rI¡î«l
)

180 
ASSERT
(
m_d©a8
);

181 
ASSERT
(
m_Àngth
);

183 
STRING_STATS_ADD_8BIT_STRING
(
m_Àngth
);

187 
SåögIm∂
(
Àngth
)

188 : 
m_ªfCou¡
(
s_ªfCou¡In¸emít
)

189 , 
m_Àngth
(
Àngth
)

190 , 
m_d©a16
(
èûPoöãr
<
UCh¨
>())

191 , 
m_hashAndFœgs
(
Buf„rI¡î«l
)

193 
ASSERT
(
m_d©a16
);

194 
ASSERT
(
m_Àngth
);

196 
STRING_STATS_ADD_16BIT_STRING
(
m_Àngth
);

200 
SåögIm∂
(
MÆlocPå
<
LCh¨
> 
ch¨a˘îs
, 
Àngth
)

201 : 
m_ªfCou¡
(
s_ªfCou¡In¸emít
)

202 , 
m_Àngth
(
Àngth
)

203 , 
m_d©a8
(
ch¨a˘îs
.
ÀakPå
())

204 , 
m_hashAndFœgs
(
s_hashFœg8BôBuf„r
 | 
Buf„rOw√d
)

206 
ASSERT
(
m_d©a8
);

207 
ASSERT
(
m_Àngth
);

209 
STRING_STATS_ADD_8BIT_STRING
(
m_Àngth
);

212 
	eC⁄°ru˘WôhoutC›yögTag
 { 
	gC⁄°ru˘WôhoutC›yög
 };

213 
SåögIm∂
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
, 
C⁄°ru˘WôhoutC›yögTag
)

214 : 
m_ªfCou¡
(
s_ªfCou¡In¸emít
)

215 , 
m_Àngth
(
Àngth
)

216 , 
m_d©a16
(
ch¨a˘îs
)

217 , 
m_hashAndFœgs
(
Buf„rI¡î«l
)

219 
ASSERT
(
m_d©a16
);

220 
ASSERT
(
m_Àngth
);

222 
STRING_STATS_ADD_16BIT_STRING
(0);

225 
SåögIm∂
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
, 
C⁄°ru˘WôhoutC›yögTag
)

226 : 
m_ªfCou¡
(
s_ªfCou¡In¸emít
)

227 , 
m_Àngth
(
Àngth
)

228 , 
m_d©a8
(
ch¨a˘îs
)

229 , 
m_hashAndFœgs
(
s_hashFœg8BôBuf„r
 | 
Buf„rI¡î«l
)

231 
ASSERT
(
m_d©a8
);

232 
ASSERT
(
m_Àngth
);

234 
STRING_STATS_ADD_8BIT_STRING
(0);

238 
SåögIm∂
(
MÆlocPå
<
UCh¨
> 
ch¨a˘îs
, 
Àngth
)

239 : 
m_ªfCou¡
(
s_ªfCou¡In¸emít
)

240 , 
m_Àngth
(
Àngth
)

241 , 
m_d©a16
(
ch¨a˘îs
.
ÀakPå
())

242 , 
m_hashAndFœgs
(
Buf„rOw√d
)

244 
ASSERT
(
m_d©a16
);

245 
ASSERT
(
m_Àngth
);

247 
STRING_STATS_ADD_16BIT_STRING
(
m_Àngth
);

251 
SåögIm∂
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
, 
PassRefPå
<SåögIm∂> 
ba£
)

252 : 
m_ªfCou¡
(
s_ªfCou¡In¸emít
)

253 , 
m_Àngth
(
Àngth
)

254 , 
m_d©a8
(
ch¨a˘îs
)

255 , 
m_hashAndFœgs
(
s_hashFœg8BôBuf„r
 | 
Buf„rSub°rög
)

257 
ASSERT
(
is8Bô
());

258 
ASSERT
(
m_d©a8
);

259 
ASSERT
(
m_Àngth
);

260 
ASSERT
(
ba£
->
buf„rOw√rshù
(Ë!
Buf„rSub°rög
);

262 
sub°rögBuf„r
(Ë
ba£
.
ÀakRef
();

264 
STRING_STATS_ADD_8BIT_STRING2
(
m_Àngth
, 
åue
);

268 
SåögIm∂
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
, 
PassRefPå
<SåögIm∂> 
ba£
)

269 : 
m_ªfCou¡
(
s_ªfCou¡In¸emít
)

270 , 
m_Àngth
(
Àngth
)

271 , 
m_d©a16
(
ch¨a˘îs
)

272 , 
m_hashAndFœgs
(
Buf„rSub°rög
)

274 
ASSERT
(!
is8Bô
());

275 
ASSERT
(
m_d©a16
);

276 
ASSERT
(
m_Àngth
);

277 
ASSERT
(
ba£
->
buf„rOw√rshù
(Ë!
Buf„rSub°rög
);

279 
sub°rögBuf„r
(Ë
ba£
.
ÀakRef
();

281 
STRING_STATS_ADD_16BIT_STRING2
(
m_Àngth
, 
åue
);

284 
	eCª©eEm±yUniqueTag
 { 
	gCª©eEm±yUnique
 };

285 
SåögIm∂
(
Cª©eEm±yUniqueTag
)

286 : 
m_ªfCou¡
(
s_ªfCou¡In¸emít
)

287 , 
m_Àngth
(0)

290 , 
m_d©a8
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(&
m_Àngth
))

291 , 
m_hashAndFœgs
(
hashAndFœgsF‹Em±yUnique
())

293 
ASSERT
(
m_d©a8
);

295 
STRING_STATS_ADD_8BIT_STRING
(
m_Àngth
);

298 ~
SåögIm∂
();

300 
	gpublic
:

301 
WTF_EXPORT_STRING_API
 
de°roy
(
SåögIm∂
*);

303 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
¸óã
(c⁄° 
UCh¨
*, 
Àngth
);

304 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
¸óã
(c⁄° 
LCh¨
*, 
Àngth
);

305 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
¸óã8BôIfPossibÀ
(c⁄° 
UCh¨
*, 
Àngth
);

306 
	gãm∂©e
<
size_t
 
	gölöeC≠acôy
>

307 
	gPassRef
<
	gSåögIm∂
> 
¸óã8BôIfPossibÀ
(c⁄° 
Ve˘‹
<
UCh¨
, 
ölöeC≠acôy
>& 
ve˘‹
)

309  
¸óã8BôIfPossibÀ
(
ve˘‹
.
d©a
(), ve˘‹.
size
());

311 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
¸óã8BôIfPossibÀ
(c⁄° 
UCh¨
*);

313 
ALWAYS_INLINE
 
	gPassRef
<
	gSåögIm∂
> 
¸óã
(c⁄° * 
s
, 
Àngth
Ë{  cª©e(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(s),Üength); }

314 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
¸óã
(c⁄° 
LCh¨
*);

315 
ALWAYS_INLINE
 
	gPassRef
<
	gSåögIm∂
> 
¸óã
(c⁄° * 
s
Ë{  cª©e(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(s)); }

317 
ALWAYS_INLINE
 
	gPassRef
<
	gSåögIm∂
> 
¸óãSub°rögSh¨ögIm∂8
(
PassRefPå
<
SåögIm∂
> 
ªp
, 
off£t
, 
Àngth
)

319 
ASSERT
(
ªp
);

320 
ASSERT
(
Àngth
 <
ªp
->length());

322 i‡(!
	gÀngth
)

323  *
em±y
();

325 
ASSERT
(
ªp
->
is8Bô
());

326 
SåögIm∂
* 
	gow√rRï
 = (
ªp
->
buf„rOw√rshù
(Ë=
Buf„rSub°rög
Ë?Ñï->
sub°rögBuf„r
(Ë:Ñï.
gë
();

329 
SåögIm∂
* 
	g°rögIm∂
 = 
°©ic_ˇ°
<SåögIm∂*>(
Á°MÆloc
(
Æloˇti⁄Size
<StringImpl*>(1)));

330  
ad›tRef
(*
√w
 (
NŸNuŒ
, 
°rögIm∂
Ë
SåögIm∂
(
ªp
->
m_d©a8
 + 
off£t
, 
Àngth
, 
ow√rRï
));

333 
ALWAYS_INLINE
 
	gPassRef
<
	gSåögIm∂
> 
¸óãSub°rögSh¨ögIm∂
(
PassRefPå
<
SåögIm∂
> 
ªp
, 
off£t
, 
Àngth
)

335 
ASSERT
(
ªp
);

336 
ASSERT
(
Àngth
 <
ªp
->length());

338 i‡(!
	gÀngth
)

339  *
em±y
();

341 
SåögIm∂
* 
	gow√rRï
 = (
ªp
->
buf„rOw√rshù
(Ë=
Buf„rSub°rög
Ë?Ñï->
sub°rögBuf„r
(Ë:Ñï.
gë
();

344 
SåögIm∂
* 
	g°rögIm∂
 = 
°©ic_ˇ°
<SåögIm∂*>(
Á°MÆloc
(
Æloˇti⁄Size
<StringImpl*>(1)));

345 i‡(
	gªp
->
is8Bô
())

346  
ad›tRef
(*
√w
 (
NŸNuŒ
, 
°rögIm∂
Ë
SåögIm∂
(
ªp
->
m_d©a8
 + 
off£t
, 
Àngth
, 
ow√rRï
));

347  
ad›tRef
(*
√w
 (
NŸNuŒ
, 
°rögIm∂
Ë
SåögIm∂
(
ªp
->
m_d©a16
 + 
off£t
, 
Àngth
, 
ow√rRï
));

350 
	gãm∂©e
<
	gch¨a˘îsCou¡
>

351 
ALWAYS_INLINE
 
	gPassRef
<
	gSåögIm∂
> 
¸óãFromLôîÆ
(c⁄° (&
ch¨a˘îs
)[
ch¨a˘îsCou¡
])

353 
COMPILE_ASSERT
(
ch¨a˘îsCou¡
 > 1, 
SåögIm∂FromLôîÆNŸEm±y
);

354 
COMPILE_ASSERT
((
ch¨a˘îsCou¡
 - 1 <(((~0Ë- (
SåögIm∂
)Ë/ (
LCh¨
))), 
SåögIm∂FromLôîÆC™nŸOvîÊow
);

356  
¸óãWôhoutC›yög
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
ch¨a˘îs
), 
ch¨a˘îsCou¡
 - 1);

360 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
¸óãFromLôîÆ
(c⁄° * 
ch¨a˘îs
, 
Àngth
);

361 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
¸óãFromLôîÆ
(c⁄° * 
ch¨a˘îs
);

363 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
¸óãWôhoutC›yög
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
);

364 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
¸óãWôhoutC›yög
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
);

366 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
¸óãUnöôülized
(
Àngth
, 
LCh¨
*& 
d©a
);

367 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
¸óãUnöôülized
(
Àngth
, 
UCh¨
*& 
d©a
);

368 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
ALWAYS_INLINE
 
	gPassRefPå
<
	gSåögIm∂
> 
åyCª©eUnöôülized
(
Àngth
, 
T
*& 
ouçut
)

370 i‡(!
	gÀngth
) {

371 
	gouçut
 = 0;

372  
em±y
();

375 i‡(
	gÀngth
 > ((
	g°d
::
numîic_limôs
<>::
max
(Ë- (
SåögIm∂
)Ë/ (
T
))) {

376 
ouçut
 = 0;

379 
SåögIm∂
* 
	gªsu…Im∂
;

380 i‡(!
åyFa°MÆloc
(
Æloˇti⁄Size
<
T
>(
Àngth
)).
gëVÆue
(
ªsu…Im∂
)) {

381 
	gouçut
 = 0;

384 
	gouçut
 = 
ªsu…Im∂
->
èûPoöãr
<
T
>();

386  
	gc⁄°ru˘I¡î«l
<
	gT
>(
	gªsu…Im∂
, 
	gÀngth
);

389 
	gPassRef
<
	gSåögIm∂
> 
¸óãEm±yUnique
()

391  
ad›tRef
(*
√w
 
SåögIm∂
(
Cª©eEm±yUnique
));

397 
	gPassRef
<
	gSåögIm∂
> 
ªÆloˇã
(
PassRefPå
<
SåögIm∂
> 
‹igöÆSåög
, 
Àngth
, 
LCh¨
*& 
d©a
);

398 
	gPassRef
<
	gSåögIm∂
> 
ªÆloˇã
(
PassRefPå
<
SåögIm∂
> 
‹igöÆSåög
, 
Àngth
, 
UCh¨
*& 
d©a
);

400 
ÊagsOff£t
(Ë{  
OBJECT_OFFSETOF
(
SåögIm∂
, 
m_hashAndFœgs
); }

401 
ÊagIs8Bô
(Ë{  
	gs_hashFœg8BôBuf„r
; }

402 
ÊagIsAtomic
(Ë{  
	gs_hashFœgIsAtomic
; }

403 
d©aOff£t
(Ë{  
OBJECT_OFFSETOF
(
SåögIm∂
, 
m_d©a8
); }

405 
	gãm∂©e
<
ty≥«me
 
	gCh¨Ty≥
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

406 
	gPassRef
<
	gSåögIm∂
> 
ad›t
(
Ve˘‹
<
Ch¨Ty≥
, 
ölöeC≠acôy
, 
OvîÊowH™dÀr
>& 
ve˘‹
)

408 i‡(
size_t
 
	gsize
 = 
ve˘‹
.
size
()) {

409 
ASSERT
(
ve˘‹
.
d©a
());

410 i‡(
	gsize
 > 
	g°d
::
numîic_limôs
<>::
max
())

411 
CRASH
();

412  
ad›tRef
(*
√w
 
SåögIm∂
(
ve˘‹
.
ªÀa£Buf„r
(), 
size
));

414  *
em±y
();

417 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
ad›t
(
SåögBuf„r
<
UCh¨
>&);

418 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
ad›t
(
SåögBuf„r
<
LCh¨
>&);

420 
Àngth
(Ëc⁄° {  
	gm_Àngth
; }

421 
±rdiff_t
 
ÀngthMem‹yOff£t
(Ë{  
OBJECT_OFFSETOF
(
SåögIm∂
, 
m_Àngth
); }

422 
boﬁ
 
is8Bô
(Ëc⁄° {  
	gm_hashAndFœgs
 & 
	gs_hashFœg8BôBuf„r
; }

424 
ALWAYS_INLINE
 c⁄° 
LCh¨
* 
ch¨a˘îs8
(Ëc⁄° { 
ASSERT
(
is8Bô
());  
	gm_d©a8
; }

425 
ALWAYS_INLINE
 c⁄° 
UCh¨
* 
ch¨a˘îs16
(Ëc⁄° { 
ASSERT
(!
is8Bô
());  
	gm_d©a16
; }

427 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

428 
ALWAYS_INLINE
 c⁄° 
Ch¨Ty≥
 *
ch¨a˘îs
() const;

430 
size_t
 
co°
() const

433 i‡(
buf„rOw√rshù
(Ë=
Buf„rSub°rög
)

434  
sub°rögBuf„r
()->
co°
();

436 i‡(
	gm_hashAndFœgs
 & 
	gs_hashFœgDidRï‹tCo°
)

439 
	gm_hashAndFœgs
 |
s_hashFœgDidRï‹tCo°
;

440 
size_t
 
	gªsu…
 = 
m_Àngth
;

441 i‡(!
is8Bô
())

442 
	gªsu…
 <<= 1;

443  
	gªsu…
;

446 
size_t
 
co°DurögGC
()

448 i‡(
isSètic
())

451 i‡(
buf„rOw√rshù
(Ë=
Buf„rSub°rög
)

452  
divideRoundedUp
(
sub°rögBuf„r
()->
co°DurögGC
(), 
ªfCou¡
());

454 
size_t
 
	gªsu…
 = 
m_Àngth
;

455 i‡(!
is8Bô
())

456 
	gªsu…
 <<= 1;

457  
divideRoundedUp
(
ªsu…
, 
ªfCou¡
());

460 
WTF_EXPORT_STRING_API
 
size_t
 
sizeInByãs
() const;

462 
boﬁ
 
isEm±yUnique
() const

464  !
Àngth
(Ë&& !
isSètic
();

467 
boﬁ
 
isAtomic
(Ëc⁄° {  
	gm_hashAndFœgs
 & 
	gs_hashFœgIsAtomic
; }

468 
£tIsAtomic
(
boﬁ
 
isAtomic
)

470 
ASSERT
(!
isSètic
());

471 
ASSERT
(!
isEm±yUnique
());

472 i‡(
	gisAtomic
)

473 
	gm_hashAndFœgs
 |
s_hashFœgIsAtomic
;

475 
	gm_hashAndFœgs
 &~
s_hashFœgIsAtomic
;

478 #ifde‡
STRING_STATS


479 
boﬁ
 
isSubSåög
(Ëc⁄° {  
buf„rOw√rshù
(Ë=
Buf„rSub°rög
; }

482 
WTF_EXPORT_STRING_API
 
CSåög
 
utf8F‹Ch¨a˘îs
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
, 
C⁄vîsi⁄Mode
 = 
Líõ¡C⁄vîsi⁄
);

483 
WTF_EXPORT_STRING_API
 
CSåög
 
utf8F‹R™ge
(
off£t
, 
Àngth
, 
C⁄vîsi⁄Mode
 = 
Líõ¡C⁄vîsi⁄
) const;

484 
WTF_EXPORT_STRING_API
 
CSåög
 
utf8
(
C⁄vîsi⁄Mode
 = 
Líõ¡C⁄vîsi⁄
) const;

486 
	g¥iv©e
:

487 
WTF_EXPORT_STRING_API
 
boﬁ
 
utf8Im∂
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
, *& 
buf„r
, 
size_t
 
buf„rSize
, 
C⁄vîsi⁄Mode
);

492 
£tHash
(
hash
) const

494 
ASSERT
(!
hasHash
());

496 
ASSERT
(
hash
 =(
is8Bô
(Ë? 
SåögHashî
::
compuãHashAndMaskT›8Bôs
(
m_d©a8
, 
m_Àngth
Ë: SåögHashî::compuãHashAndMaskT›8Bôs(
m_d©a16
, m_length)));

497 
ASSERT
(!(
hash
 & (
s_ÊagMask
 << (8 * (hashË- 
s_ÊagCou¡
))));

499 
	ghash
 <<
s_ÊagCou¡
;

500 
ASSERT
(!(
hash
 & 
m_hashAndFœgs
));

501 
ASSERT
(
hash
);

503 
	gm_hashAndFœgs
 |
hash
;

506 
øwHash
() const

508  
	gm_hashAndFœgs
 >> 
	gs_ÊagCou¡
;

511 
	gpublic
:

512 
boﬁ
 
hasHash
() const

514  
øwHash
() != 0;

517 
exi°ögHash
() const

519 
ASSERT
(
hasHash
());

520  
øwHash
();

523 
hash
() const

525 i‡(
hasHash
())

526  
exi°ögHash
();

527  
hashSlowCa£
();

530 
boﬁ
 
isSètic
(Ëc⁄° {  
	gm_ªfCou¡
 & 
	gs_ªfCou¡FœgIsSèticSåög
; }

532 
ölöe
 
size_t
 
ªfCou¡
() const

534  
	gm_ªfCou¡
 / 
	gs_ªfCou¡In¸emít
;

537 
ölöe
 
boﬁ
 
hasO√Ref
() const

539  
	gm_ªfCou¡
 =
s_ªfCou¡In¸emít
;

543 
ölöe
 
boﬁ
 
hasAtLó°O√Ref
() const

545  !!
	gm_ªfCou¡
;

548 
ölöe
 
ªf
()

550 #i‡!
ENABLE
(
VMOLAB
)

551 
ASSERT
(!
isCompû©i⁄Thªad
());

553 
	gm_ªfCou¡
 +
s_ªfCou¡In¸emít
;

556 
ölöe
 
dîef
()

558 #i‡!
ENABLE
(
VMOLAB
)

559 
ASSERT
(!
isCompû©i⁄Thªad
());

561 
	gãmpRefCou¡
 = 
m_ªfCou¡
 - 
s_ªfCou¡In¸emít
;

562 i‡(!
	gãmpRefCou¡
) {

563 
	gSåögIm∂
::
de°roy
(
this
);

566 
	gm_ªfCou¡
 = 
ãmpRefCou¡
;

569 
WTF_EXPORT_PRIVATE
 
SåögIm∂
* 
em±y
();

572 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
c›yCh¨s
(
T
* 
de°ö©i⁄
, c⁄° T* 
sour˚
, 
numCh¨a˘îs
)

574 i‡(
	gnumCh¨a˘îs
 == 1) {

575 *
de°ö©i⁄
 = *
sour˚
;

579 i‡(
	gnumCh¨a˘îs
 <
s_c›yCh¨sI∆öeCutOff
) {

580 
i
 = 0;

581 #i‡(
CPU
(
X86
Ë|| CPU(
X86_64
))

582 c⁄° 
	gch¨sPîI¡
 = (
uöt32_t
Ë/ (
T
);

584 i‡(
	gnumCh¨a˘îs
 > 
	gch¨sPîI¡
) {

585 
	g°›Cou¡
 = 
numCh¨a˘îs
 & ~(
ch¨sPîI¡
 - 1);

587 c⁄° 
uöt32_t
* 
	g§cCh¨a˘îs
 = 
ªöãΩªt_ˇ°
<c⁄° uöt32_t*>(
sour˚
);

588 
uöt32_t
* 
	gde°Ch¨a˘îs
 = 
ªöãΩªt_ˇ°
<uöt32_t*>(
de°ö©i⁄
);

589 
	gj
 = 0; 
	gi
 < 
	g°›Cou¡
; i +
ch¨sPîI¡
, ++j)

590 
	gde°Ch¨a˘îs
[
j
] = 
§cCh¨a˘îs
[j];

593 ; 
	gi
 < 
	gnumCh¨a˘îs
; ++i)

594 
	gde°ö©i⁄
[
i
] = 
sour˚
[i];

596 
mem˝y
(
de°ö©i⁄
, 
sour˚
, 
numCh¨a˘îs
 * (
T
));

599 
ALWAYS_INLINE
 
c›yCh¨s
(
UCh¨
* 
de°ö©i⁄
, c⁄° 
LCh¨
* 
sour˚
, 
numCh¨a˘îs
)

601 
	gi
 = 0; i < 
	gnumCh¨a˘îs
; ++i)

602 
	gde°ö©i⁄
[
i
] = 
sour˚
[i];

608 
	gPassRef
<
	gSåögIm∂
> 
isﬁ©edC›y
() const;

610 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
sub°rög
(
pos
, 
Àn
 = 
UINT_MAX
);

612 
UCh¨
 
©
(
i
) const

614 
ASSERT_WITH_SECURITY_IMPLICATION
(
i
 < 
m_Àngth
);

615 i‡(
is8Bô
())

616  
	gm_d©a8
[
i
];

617  
	gm_d©a16
[
i
];

619 
UCh¨
 
	g›î©‹
[](
	gi
Ëc⁄° {  
©
(
i
); }

620 
WTF_EXPORT_STRING_API
 
UCh¨32
 
ch¨a˘îSèπögAt
();

622 
WTF_EXPORT_STRING_API
 
boﬁ
 
c⁄èösO∆yWhôe•a˚
();

624 
toI¡Såi˘
(
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

625 
toUI¡Såi˘
(
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

626 
öt64_t
 
toI¡64Såi˘
(
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

627 
uöt64_t
 
toUI¡64Såi˘
(
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

628 
öçå_t
 
toI¡PåSåi˘
(
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

630 
WTF_EXPORT_STRING_API
 
toI¡
(
boﬁ
* 
ok
 = 0);

631 
toUI¡
(
boﬁ
* 
ok
 = 0);

632 
öt64_t
 
toI¡64
(
boﬁ
* 
ok
 = 0);

633 
uöt64_t
 
toUI¡64
(
boﬁ
* 
ok
 = 0);

634 
öçå_t
 
toI¡På
(
boﬁ
* 
ok
 = 0);

639 
toDoubÀ
(
boﬁ
* 
ok
 = 0);

640 
toFlﬂt
(
boﬁ
* 
ok
 = 0);

642 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
c⁄vîtToASCIILowîˇ£
();

643 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
lowî
();

644 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
uµî
();

645 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
lowî
(c⁄° 
AtomicSåög
& 
loˇÀIdítifõr
);

646 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
uµî
(c⁄° 
AtomicSåög
& 
loˇÀIdítifõr
);

648 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
fûl
(
UCh¨
);

651 
	gPassRef
<
	gSåögIm∂
> 
fﬁdCa£
();

653 
	gPassRef
<
	gSåögIm∂
> 
°rùWhôeS∑˚
();

654 
	gPassRef
<
	gSåögIm∂
> 
°rùWhôeS∑˚
(
IsWhôeS∑˚Fun˘i⁄På
);

655 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
sim∂ifyWhôeS∑˚
();

656 
	gPassRef
<
	gSåögIm∂
> 
sim∂ifyWhôeS∑˚
(
IsWhôeS∑˚Fun˘i⁄På
);

658 
	gPassRef
<
	gSåögIm∂
> 
ªmoveCh¨a˘îs
(
Ch¨a˘îM©chFun˘i⁄På
);

659 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

660 
ALWAYS_INLINE
 
	gPassRef
<
	gSåögIm∂
> 
ªmoveCh¨a˘îs
(c⁄° 
Ch¨Ty≥
* 
ch¨a˘îs
, 
Ch¨a˘îM©chFun˘i⁄På
);

662 
size_t
 
föd
(
LCh¨
 
ch¨a˘î
, 
°¨t
 = 0);

663 
size_t
 
föd
(
ch¨a˘î
, 
°¨t
 = 0);

664 
size_t
 
föd
(
UCh¨
 
ch¨a˘î
, 
°¨t
 = 0);

665 
WTF_EXPORT_STRING_API
 
size_t
 
föd
(
Ch¨a˘îM©chFun˘i⁄På
, 
ödex
 = 0);

666 
size_t
 
föd
(c⁄° 
LCh¨
*, 
ödex
 = 0);

667 
ALWAYS_INLINE
 
size_t
 
föd
(c⁄° * 
s
, 
ödex
 = 0Ë{  föd(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(s), index); }

668 
WTF_EXPORT_STRING_API
 
size_t
 
föd
(
SåögIm∂
*);

669 
WTF_EXPORT_STRING_API
 
size_t
 
föd
(
SåögIm∂
*, 
ödex
);

670 
size_t
 
födIgn‹ögCa£
(c⁄° 
LCh¨
*, 
ödex
 = 0);

671 
ALWAYS_INLINE
 
size_t
 
födIgn‹ögCa£
(c⁄° * 
s
, 
ödex
 = 0Ë{  födIgn‹ögCa£(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(s), index); }

672 
WTF_EXPORT_STRING_API
 
size_t
 
födIgn‹ögCa£
(
SåögIm∂
*, 
ödex
 = 0);

674 
WTF_EXPORT_STRING_API
 
size_t
 
födNextLöeSèπ
(
ödex
 = 
UINT_MAX
);

676 
WTF_EXPORT_STRING_API
 
size_t
 
ªvî£Föd
(
UCh¨
, 
ödex
 = 
UINT_MAX
);

677 
WTF_EXPORT_STRING_API
 
size_t
 
ªvî£Föd
(
SåögIm∂
*, 
ödex
 = 
UINT_MAX
);

678 
WTF_EXPORT_STRING_API
 
size_t
 
ªvî£FödIgn‹ögCa£
(
SåögIm∂
*, 
ödex
 = 
UINT_MAX
);

680 
WTF_EXPORT_STRING_API
 
boﬁ
 
°¨tsWôh
(c⁄° 
SåögIm∂
*) const;

681 
boﬁ
 
°¨tsWôh
(
SåögIm∂
* 
°r
, boﬁ 
ˇ£Sísôive
Ë{  
	gˇ£Sísôive
 ? sèπsWôh(°rË: (
ªvî£FödIgn‹ögCa£
(str, 0) == 0); }

682 
WTF_EXPORT_STRING_API
 
boﬁ
 
°¨tsWôh
(
UCh¨
) const;

683 
WTF_EXPORT_STRING_API
 
boﬁ
 
°¨tsWôh
(c⁄° *, 
m©chLígth
, boﬁ 
ˇ£Sísôive
) const;

684 
	gãm∂©e
<
	gm©chLígth
>

685 
boﬁ
 
°¨tsWôh
(c⁄° (&
¥efix
)[
m©chLígth
], boﬁ 
ˇ£Sísôive
 = 
åue
) const {  startsWith(prefix, matchLength - 1, caseSensitive); }

686 
WTF_EXPORT_STRING_API
 
boﬁ
 
°¨tsWôh
(
SåögIm∂
&, 
°¨tOff£t
, boﬁ 
ˇ£Sísôive
) const;

688 
WTF_EXPORT_STRING_API
 
boﬁ
 
ídsWôh
(
SåögIm∂
*, boﬁ 
ˇ£Sísôive
 = 
åue
);

689 
WTF_EXPORT_STRING_API
 
boﬁ
 
ídsWôh
(
UCh¨
) const;

690 
WTF_EXPORT_STRING_API
 
boﬁ
 
ídsWôh
(c⁄° *, 
m©chLígth
, boﬁ 
ˇ£Sísôive
) const;

691 
	gãm∂©e
<
	gm©chLígth
>

692 
boﬁ
 
ídsWôh
(c⁄° (&
¥efix
)[
m©chLígth
], boﬁ 
ˇ£Sísôive
 = 
åue
) const { ÉndsWith(prefix, matchLength - 1, caseSensitive); }

693 
WTF_EXPORT_STRING_API
 
boﬁ
 
ídsWôh
(
SåögIm∂
&, 
ídOff£t
, boﬁ 
ˇ£Sísôive
) const;

695 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
ª∂a˚
(
UCh¨
, UChar);

696 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
ª∂a˚
(
UCh¨
, 
SåögIm∂
*);

697 
ALWAYS_INLINE
 
	gPassRef
<
	gSåögIm∂
> 
ª∂a˚
(
UCh¨
 
∑âîn
, c⁄° * 
ª∂a˚mít
, 
ª∂a˚mítLígth
Ë{ Ñïœ˚’©ã∫, 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(replacement),ÑeplacementLength); }

698 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
ª∂a˚
(
UCh¨
, c⁄° 
LCh¨
*, 
ª∂a˚mítLígth
);

699 
	gPassRef
<
	gSåögIm∂
> 
ª∂a˚
(
UCh¨
, c⁄° UCh¨*, 
ª∂a˚mítLígth
);

700 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
ª∂a˚
(
SåögIm∂
*, StringImpl*);

701 
WTF_EXPORT_STRING_API
 
	gPassRef
<
	gSåögIm∂
> 
ª∂a˚
(
ödex
, 
Àn
, 
SåögIm∂
*);

703 
WTF_EXPORT_STRING_API
 
UCh¨Dúe˘i⁄
 
deÁu…WrôögDúe˘i⁄
(
boﬁ
* 
hasSå⁄gDúe˘i⁄Æôy
 = 
nuŒ±r
);

705 #i‡
USE
(
CF
)

706 
	gRëaöPå
<
	gCFSåögRef
> 
¸óãCFSåög
();

708 #ifde‡
__OBJC__


709 
WTF_EXPORT_STRING_API
 
›î©‹
 
	gNSSåög
*();

712 #ifde‡
STRING_STATS


713 
ALWAYS_INLINE
 
	gSåögSèts
& 
°rögSèts
(Ë{  
	gm_°rögSèts
; }

716 
WTF_EXPORT_STRING_API
 c⁄° 
UCh¨
 
	gœtö1Ca£FﬁdTabÀ
[256];

718 
	g¥iv©e
:

719 
boﬁ
 
ªquúesC›y
() const

721 i‡(
buf„rOw√rshù
(Ë!
Buf„rI¡î«l
)

722  
åue
;

724 i‡(
is8Bô
())

725  
	gm_d©a8
 =
èûPoöãr
<
LCh¨
>();

726  
	gm_d©a16
 =
èûPoöãr
<
UCh¨
>();

729 
	gãm∂©e
<
ty≥«me
 
	gT
>

730 
size_t
 
Æloˇti⁄Size
(
èûEÀmítCou¡
)

732  
	gèûOff£t
<
	gT
>(Ë+ 
èûEÀmítCou¡
 * (T);

735 
	gãm∂©e
<
ty≥«me
 
	gT
>

736 
±rdiff_t
 
èûOff£t
()

738 #i‡
COMPILER
(
MSVC
)

740  
	groundUpToMu…ùÀOf
<(
	gT
)>((
	gSåögIm∂
));

742  
	groundUpToMu…ùÀOf
<
Æignof
(
T
)>(
off£tof
(
SåögIm∂
, 
m_hashAndFœgs
Ë+ (
	gSåögIm∂
::m_hashAndFlags));

746 
	gãm∂©e
<
ty≥«me
 
	gT
>

747 c⁄° 
T
* 
èûPoöãr
() const

749  
	gªöãΩªt_ˇ°
<c⁄° 
	gT
*>‘eöãΩªt_ˇ°<c⁄° 
	guöt8_t
*>(
	gthis
Ë+ 
	gèûOff£t
<T>());

752 
	gãm∂©e
<
ty≥«me
 
	gT
>

753 
T
* 
èûPoöãr
()

755  
	gªöãΩªt_ˇ°
<
	gT
*>‘eöãΩªt_ˇ°<
	guöt8_t
*>(
	gthis
Ë+ 
	gèûOff£t
<T>());

758 
SåögIm∂
* c⁄°& 
sub°rögBuf„r
() const

760 
ASSERT
(
buf„rOw√rshù
(Ë=
Buf„rSub°rög
);

762  *
	gèûPoöãr
<
	gSåögIm∂
*>();

765 
	gSåögIm∂
*& 
sub°rögBuf„r
()

767 
ASSERT
(
buf„rOw√rshù
(Ë=
Buf„rSub°rög
);

769  *
	gèûPoöãr
<
	gSåögIm∂
*>();

773 c⁄° 
	gs_c›yCh¨sI∆öeCutOff
 = 20;

775 
Buf„rOw√rshù
 
buf„rOw√rshù
(Ëc⁄° {  
	g°©ic_ˇ°
<
	gBuf„rOw√rshù
>(
	gm_hashAndFœgs
 & 
	gs_hashMaskBuf„rOw√rshù
); }

776 
	gãm∂©e
 <
˛ass
 
	gUCh¨Pªdiˇã
> 
	gPassRef
<
	gSåögIm∂
> 
°rùM©chedCh¨a˘îs
(
UCh¨Pªdiˇã
);

777 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
, 
˛ass
 
	gUCh¨Pªdiˇã
> 
	gPassRef
<
	gSåögIm∂
> 
sim∂ifyM©chedCh¨a˘îsToS∑˚
(
UCh¨Pªdiˇã
);

778 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
> 
	gPassRef
<
	gSåögIm∂
> 
c⁄°ru˘I¡î«l
(
SåögIm∂
*, );

779 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
> 
	gPassRef
<
	gSåögIm∂
> 
¸óãUnöôülizedI¡î«l
(, 
Ch¨Ty≥
*&);

780 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
> 
	gPassRef
<
	gSåögIm∂
> 
¸óãUnöôülizedI¡î«lN⁄Em±y
(, 
Ch¨Ty≥
*&);

781 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
> 
	gPassRef
<
	gSåögIm∂
> 
ªÆloˇãI¡î«l
(
PassRefPå
<
SåögIm∂
>, , 
Ch¨Ty≥
*&);

782 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
> 
	gPassRef
<
	gSåögIm∂
> 
¸óãI¡î«l
(c⁄° 
Ch¨Ty≥
*, );

783 
WTF_EXPORT_PRIVATE
 
NEVER_INLINE
 
hashSlowCa£
() const;

784 
WTF_EXPORT_PRIVATE
 
hashAndFœgsF‹Em±yUnique
();

787 c⁄° 
	gs_ªfCou¡FœgIsSèticSåög
 = 0x1;

788 c⁄° 
	gs_ªfCou¡In¸emít
 = 0x2;

791 c⁄° 
	gs_ÊagCou¡
 = 6;

792 c⁄° 
	gs_ÊagMask
 = (1u << 
s_ÊagCou¡
) - 1;

793 
COMPILE_ASSERT
(
s_ÊagCou¡
 <
SåögHashî
::
ÊagCou¡
, 
SåögHashî_ª£rves_íough_bôs_f‹_SåögIm∂_Êags
);

795 c⁄° 
	gs_hashFœg8BôBuf„r
 = 1u << 5;

796 c⁄° 
	gs_hashFœgIsAtomic
 = 1u << 4;

797 c⁄° 
	gs_hashFœgDidRï‹tCo°
 = 1u << 3;

798 c⁄° 
	gs_hashMaskBuf„rOw√rshù
 = 1u | (1u << 1);

800 #ifde‡
STRING_STATS


801 
WTF_EXPORTDATA
 
SåögSèts
 
	gm_°rögSèts
;

804 
	gpublic
:

805 
	sSèticASCIILôîÆ
 {

807 
m_ªfCou¡
;

808 
	gm_Àngth
;

809 c⁄° 
LCh¨
* 
	gm_d©a8
;

810 
	gm_hashAndFœgs
;

813 c⁄° 
	gs_öôülRefCou¡
 = 
s_ªfCou¡In¸emít
;

814 c⁄° 
	gs_öôülFœgs
 = 
s_hashFœg8BôBuf„r
 | 
Buf„rI¡î«l
;

815 c⁄° 
	gs_hashShi·
 = 
s_ÊagCou¡
;

818 #i‚de‡
NDEBUG


819 
as£πHashIsC‹ª˘
()

821 
ASSERT
(
hasHash
());

822 
ASSERT
(
exi°ögHash
(Ë=
SåögHashî
::
compuãHashAndMaskT›8Bôs
(
ch¨a˘îs8
(), 
Àngth
()));

826 
	g¥iv©e
:

828 #i‡
ENABLE
(
VMOLAB
)

831 
m_ªfCou¡
;

832 
	gm_Àngth
;

834 c⁄° 
LCh¨
* 
	gm_d©a8
;

835 c⁄° 
UCh¨
* 
	gm_d©a16
;

837 
muèbÀ
 
	gm_hashAndFœgs
;

840 
°©ic_as£π
((
SåögIm∂
Ë=(SåögIm∂::
SèticASCIILôîÆ
), "");

842 #i‡!
ASSERT_DISABLED


848 
	gãm∂©e
<> 

849 
	gVÆueCheck
<
	gSåögIm∂
*> {

850 
checkC⁄si°ícy
(c⁄° 
SåögIm∂
*) { }

854 
	gãm∂©e
 <>

855 
ALWAYS_INLINE
 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
c⁄°ru˘I¡î«l
<
LCh¨
>(
SåögIm∂
* 
im∂
, 
	gÀngth
Ë{  
ad›tRef
(*
√w
 (
NŸNuŒ
, im∂ËSåögIm∂(
Àngth
, 
F‹˚8BôC⁄°ru˘‹
)); }

856 
	gãm∂©e
 <>

857 
ALWAYS_INLINE
 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
c⁄°ru˘I¡î«l
<
UCh¨
>(
SåögIm∂
* 
im∂
, 
	gÀngth
Ë{  
ad›tRef
(*
√w
 (
NŸNuŒ
, im∂ËSåögIm∂(
Àngth
)); }

859 
	gãm∂©e
 <>

860 
ALWAYS_INLINE
 c⁄° 
LCh¨
* 
	gSåögIm∂
::
ch¨a˘îs
<LCh¨>(Ëc⁄° {  
ch¨a˘îs8
(); }

862 
	gãm∂©e
 <>

863 
ALWAYS_INLINE
 c⁄° 
UCh¨
* 
	gSåögIm∂
::
ch¨a˘îs
<UCh¨>(Ëc⁄° {  
ch¨a˘îs16
(); }

865 
WTF_EXPORT_STRING_API
 
boﬁ
 
equÆ
(c⁄° 
SåögIm∂
*, const StringImpl*);

866 
WTF_EXPORT_STRING_API
 
boﬁ
 
equÆ
(c⁄° 
SåögIm∂
*, c⁄° 
LCh¨
*);

867 
ölöe
 
boﬁ
 
	$equÆ
(c⁄° 
SåögIm∂
* 
a
, c⁄° * 
b
Ë{  
	`equÆ
◊, 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(b)); 
	}
}

868 
WTF_EXPORT_STRING_API
 
boﬁ
 
equÆ
(c⁄° 
SåögIm∂
*, c⁄° 
LCh¨
*, );

869 
WTF_EXPORT_STRING_API
 
boﬁ
 
equÆ
(c⁄° 
SåögIm∂
*, c⁄° 
UCh¨
*, );

870 
ölöe
 
boﬁ
 
	$equÆ
(c⁄° 
SåögIm∂
* 
a
, c⁄° * 
b
, 
Àngth
Ë{  
	`equÆ
◊, 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(b),Üígth); 
	}
}

871 
ölöe
 
boﬁ
 
	$equÆ
(c⁄° 
LCh¨
* 
a
, 
SåögIm∂
* 
b
Ë{  
	`equÆ
(b,á); 
	}
}

872 
ölöe
 
boﬁ
 
	$equÆ
(c⁄° * 
a
, 
SåögIm∂
* 
b
Ë{  
	`equÆ
(b, 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>◊)); 
	}
}

873 
WTF_EXPORT_STRING_API
 
boﬁ
 
equÆ
(c⁄° 
SåögIm∂
& 
a
, c⁄° SåögIm∂& 
b
);

875 
	gãm∂©e
<
ty≥«me
 
	gT
>

876 
ölöe
 
T
 
	$lﬂdU«lig√d
(c⁄° * 
s
)

878 #i‡
	`COMPILER
(
CLANG
)

879 
T
 
tmp
;

880 
	`mem˝y
(&
tmp
, 
s
, (
T
));

881  
tmp
;

884  *
ªöãΩªt_ˇ°
<c⁄° 
T
*>(
s
);

886 
	}
}

889 #i‡
CPU
(
X86_64
Ë|| 
	$CPU
(
ARM64
)

890 
ALWAYS_INLINE
 
boﬁ
 
	$equÆ
(c⁄° 
LCh¨
* 
aLCh¨
, c⁄° LCh¨* 
bLCh¨
, 
Àngth
)

892 
dw‹dLígth
 = 
Àngth
 >> 3;

894 c⁄° * 
a
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
aLCh¨
);

895 c⁄° * 
b
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
bLCh¨
);

897 i‡(
dw‹dLígth
) {

898 
i
 = 0; i !
dw‹dLígth
; ++i) {

899 i‡(
lﬂdU«lig√d
<
uöt64_t
>(
a
Ë!lﬂdU«lig√d<uöt64_t>(
b
))

900  
Ál£
;

902 
a
 +(
uöt64_t
);

903 
b
 +(
uöt64_t
);

907 i‡(
Àngth
 & 4) {

908 i‡(
lﬂdU«lig√d
<
uöt32_t
>(
a
Ë!lﬂdU«lig√d<uöt32_t>(
b
))

909  
Ál£
;

911 
a
 +(
uöt32_t
);

912 
b
 +(
uöt32_t
);

915 i‡(
Àngth
 & 2) {

916 i‡(
lﬂdU«lig√d
<
uöt16_t
>(
a
Ë!lﬂdU«lig√d<uöt16_t>(
b
))

917  
Ál£
;

919 
a
 +(
uöt16_t
);

920 
b
 +(
uöt16_t
);

923 i‡(
Àngth
 & 1 && (*
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
a
Ë!*ªöãΩªt_ˇ°<c⁄° LCh¨*>(
b
)))

924  
Ál£
;

926  
åue
;

927 
	}
}

929 
ALWAYS_INLINE
 
boﬁ
 
	$equÆ
(c⁄° 
UCh¨
* 
aUCh¨
, c⁄° UCh¨* 
bUCh¨
, 
Àngth
)

931 
dw‹dLígth
 = 
Àngth
 >> 2;

933 c⁄° * 
a
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
aUCh¨
);

934 c⁄° * 
b
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
bUCh¨
);

936 i‡(
dw‹dLígth
) {

937 
i
 = 0; i !
dw‹dLígth
; ++i) {

938 i‡(
lﬂdU«lig√d
<
uöt64_t
>(
a
Ë!lﬂdU«lig√d<uöt64_t>(
b
))

939  
Ál£
;

941 
a
 +(
uöt64_t
);

942 
b
 +(
uöt64_t
);

946 i‡(
Àngth
 & 2) {

947 i‡(
lﬂdU«lig√d
<
uöt32_t
>(
a
Ë!lﬂdU«lig√d<uöt32_t>(
b
))

948  
Ál£
;

950 
a
 +(
uöt32_t
);

951 
b
 +(
uöt32_t
);

954 i‡(
Àngth
 & 1 && (*
ªöãΩªt_ˇ°
<c⁄° 
UCh¨
*>(
a
Ë!*ªöãΩªt_ˇ°<c⁄° UCh¨*>(
b
)))

955  
Ál£
;

957  
åue
;

958 
	}
}

959 #ñi‡
	$CPU
(
X86
)

960 
ALWAYS_INLINE
 
boﬁ
 
	$equÆ
(c⁄° 
LCh¨
* 
aLCh¨
, c⁄° LCh¨* 
bLCh¨
, 
Àngth
)

962 c⁄° * 
a
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
aLCh¨
);

963 c⁄° * 
b
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
bLCh¨
);

965 
w‹dLígth
 = 
Àngth
 >> 2;

966 
i
 = 0; i !
w‹dLígth
; ++i) {

967 i‡(
lﬂdU«lig√d
<
uöt32_t
>(
a
Ë!lﬂdU«lig√d<uöt32_t>(
b
))

968  
Ál£
;

969 
a
 +(
uöt32_t
);

970 
b
 +(
uöt32_t
);

973 
Àngth
 &= 3;

975 i‡(
Àngth
) {

976 c⁄° 
LCh¨
* 
aRemaödî
 = 
ªöãΩªt_ˇ°
<c⁄° LCh¨*>(
a
);

977 c⁄° 
LCh¨
* 
bRemaödî
 = 
ªöãΩªt_ˇ°
<c⁄° LCh¨*>(
b
);

979 
i
 = 0; i < 
Àngth
; ++i) {

980 i‡(
aRemaödî
[
i
] !
bRemaödî
[i])

981  
Ál£
;

985  
åue
;

986 
	}
}

988 
ALWAYS_INLINE
 
boﬁ
 
	$equÆ
(c⁄° 
UCh¨
* 
aUCh¨
, c⁄° UCh¨* 
bUCh¨
, 
Àngth
)

990 c⁄° * 
a
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
aUCh¨
);

991 c⁄° * 
b
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
bUCh¨
);

993 
w‹dLígth
 = 
Àngth
 >> 1;

994 
i
 = 0; i !
w‹dLígth
; ++i) {

995 i‡(
lﬂdU«lig√d
<
uöt32_t
>(
a
Ë!lﬂdU«lig√d<uöt32_t>(
b
))

996  
Ál£
;

997 
a
 +(
uöt32_t
);

998 
b
 +(
uöt32_t
);

1001 i‡(
Àngth
 & 1 && *
ªöãΩªt_ˇ°
<c⁄° 
UCh¨
*>(
a
Ë!*ªöãΩªt_ˇ°<c⁄° UCh¨*>(
b
))

1002  
Ál£
;

1004  
åue
;

1005 
	}
}

1006 #ñi‡
PLATFORM
(
IOS
Ë&& 
	$WTF_ARM_ARCH_AT_LEAST
(7)

1007 
ALWAYS_INLINE
 
boﬁ
 
	$equÆ
(c⁄° 
LCh¨
* 
a
, c⁄° LCh¨* 
b
, 
Àngth
)

1009 
boﬁ
 
isEquÆ
 = 
Ál£
;

1010 
uöt32_t
 
aVÆue
;

1011 
uöt32_t
 
bVÆue
;

1012 
	`asm
("subs %[length], #4\n"

1049 : [
Àngth
]"+r"÷ígth), [
isEquÆ
]"+r"(isEquÆ), [
a
]"+r"◊), [
b
]"+r"(b), [
aVÆue
]"+r"◊VÆue), [
bVÆue
]"+r"(bValue)

1053  
isEquÆ
;

1054 
	}
}

1056 
ALWAYS_INLINE
 
boﬁ
 
	$equÆ
(c⁄° 
UCh¨
* 
a
, c⁄° UCh¨* 
b
, 
Àngth
)

1058 
boﬁ
 
isEquÆ
 = 
Ál£
;

1059 
uöt32_t
 
aVÆue
;

1060 
uöt32_t
 
bVÆue
;

1061 
	`asm
("subs %[length], #2\n"

1088 : [
Àngth
]"+r"÷ígth), [
isEquÆ
]"+r"(isEquÆ), [
a
]"+r"◊), [
b
]"+r"(b), [
aVÆue
]"+r"◊VÆue), [
bVÆue
]"+r"(bValue)

1092  
isEquÆ
;

1093 
	}
}

1095 
ALWAYS_INLINE
 
boﬁ
 
	$equÆ
(c⁄° 
LCh¨
* 
a
, c⁄° LCh¨* 
b
, 
Àngth
Ë{  !
	`memcmp
◊, b,Üígth); 
	}
}

1096 
ALWAYS_INLINE
 
boﬁ
 
	$equÆ
(c⁄° 
UCh¨
* 
a
, c⁄° UCh¨* 
b
, 
Àngth
Ë{  !
	`memcmp
◊, b,Üígth * (UCh¨)); 
	}
}

1099 
ALWAYS_INLINE
 
boﬁ
 
	$equÆ
(c⁄° 
LCh¨
* 
a
, c⁄° 
UCh¨
* 
b
, 
Àngth
)

1101 
i
 = 0; i < 
Àngth
; ++i) {

1102 i‡(
a
[
i
] !
b
[i])

1103  
Ál£
;

1105  
åue
;

1106 
	}
}

1108 
ALWAYS_INLINE
 
boﬁ
 
	$equÆ
(c⁄° 
UCh¨
* 
a
, c⁄° 
LCh¨
* 
b
, 
Àngth
Ë{  
	`equÆ
(b,á,Üígth); 
	}
}

1110 
WTF_EXPORT_STRING_API
 
boﬁ
 
equÆIgn‹ögCa£
(c⁄° 
SåögIm∂
*, const StringImpl*);

1111 
WTF_EXPORT_STRING_API
 
boﬁ
 
equÆIgn‹ögCa£
(c⁄° 
SåögIm∂
*, c⁄° 
LCh¨
*);

1112 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
LCh¨
* 
a
, c⁄° 
SåögIm∂
* 
b
Ë{  
	`equÆIgn‹ögCa£
(b,á); 
	}
}

1113 
WTF_EXPORT_STRING_API
 
boﬁ
 
equÆIgn‹ögCa£
(c⁄° 
LCh¨
*, const LChar*, );

1114 
WTF_EXPORT_STRING_API
 
boﬁ
 
equÆIgn‹ögCa£
(c⁄° 
UCh¨
*, c⁄° 
LCh¨
*, );

1115 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
UCh¨
* 
a
, c⁄° * 
b
, 
Àngth
Ë{  
	`equÆIgn‹ögCa£
◊, 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(b),Üígth); 
	}
}

1116 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
LCh¨
* 
a
, c⁄° 
UCh¨
* 
b
, 
Àngth
Ë{  
	`equÆIgn‹ögCa£
(b,á,Üígth); 
	}
}

1117 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° * 
a
, c⁄° 
UCh¨
* 
b
, 
Àngth
Ë{  
	`equÆIgn‹ögCa£
(b, 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>◊),Üígth); 
	}
}

1118 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° * 
a
, c⁄° 
LCh¨
* 
b
, 
Àngth
Ë{  
	`equÆIgn‹ögCa£
(b, 
ªöãΩªt_ˇ°
<c⁄° LCh¨*>◊),Üígth); 
	}
}

1119 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
UCh¨
* 
a
, c⁄° UCh¨* 
b
, 
Àngth
)

1121 
	`ASSERT
(
Àngth
 >= 0);

1122  !
	`u_memˇ£cmp
(
a
, 
b
, 
Àngth
, 
U_FOLD_CASE_DEFAULT
);

1123 
	}
}

1124 
WTF_EXPORT_STRING_API
 
boﬁ
 
equÆIgn‹ögCa£N⁄NuŒ
(c⁄° 
SåögIm∂
*, const StringImpl*);

1126 
WTF_EXPORT_STRING_API
 
boﬁ
 
equÆIgn‹ögNuŒôy
(
SåögIm∂
*, StringImpl*);

1127 
WTF_EXPORT_STRING_API
 
boﬁ
 
equÆIgn‹ögNuŒôy
(c⁄° 
UCh¨
*, 
size_t
 
Àngth
, 
SåögIm∂
*);

1129 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
>

1130 
ölöe
 
size_t
 
	$föd
(c⁄° 
Ch¨a˘îTy≥
* 
ch¨a˘îs
, 
Àngth
, Ch¨a˘îTy≥ 
m©chCh¨a˘î
, 
ödex
 = 0)

1132 
ödex
 < 
Àngth
) {

1133 i‡(
ch¨a˘îs
[
ödex
] =
m©chCh¨a˘î
)

1134  
ödex
;

1135 ++
ödex
;

1137  
nŸFound
;

1138 
	}
}

1140 
ALWAYS_INLINE
 
size_t
 
	$föd
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
, 
LCh¨
 
m©chCh¨a˘î
, 
ödex
 = 0)

1142  
	`föd
(
ch¨a˘îs
, 
Àngth
, 
°©ic_ˇ°
<
UCh¨
>(
m©chCh¨a˘î
), 
ödex
);

1143 
	}
}

1145 
ölöe
 
size_t
 
	$föd
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
, 
UCh¨
 
m©chCh¨a˘î
, 
ödex
 = 0)

1147 i‡(
m©chCh¨a˘î
 & ~0xFF)

1148  
nŸFound
;

1149  
	`föd
(
ch¨a˘îs
, 
Àngth
, 
°©ic_ˇ°
<
LCh¨
>(
m©chCh¨a˘î
), 
ödex
);

1150 
	}
}

1152 
ölöe
 
size_t
 
	$föd
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
, 
Ch¨a˘îM©chFun˘i⁄På
 
m©chFun˘i⁄
, 
ödex
 = 0)

1154 
ödex
 < 
Àngth
) {

1155 i‡(
	`m©chFun˘i⁄
(
ch¨a˘îs
[
ödex
]))

1156  
ödex
;

1157 ++
ödex
;

1159  
nŸFound
;

1160 
	}
}

1162 
ölöe
 
size_t
 
	$föd
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
, 
Ch¨a˘îM©chFun˘i⁄På
 
m©chFun˘i⁄
, 
ödex
 = 0)

1164 
ödex
 < 
Àngth
) {

1165 i‡(
	`m©chFun˘i⁄
(
ch¨a˘îs
[
ödex
]))

1166  
ödex
;

1167 ++
ödex
;

1169  
nŸFound
;

1170 
	}
}

1172 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
>

1173 
ölöe
 
size_t
 
	$födNextLöeSèπ
(c⁄° 
Ch¨a˘îTy≥
* 
ch¨a˘îs
, 
Àngth
, 
ödex
 = 0)

1175 
ödex
 < 
Àngth
) {

1176 
Ch¨a˘îTy≥
 
c
 = 
ch¨a˘îs
[
ödex
++];

1177 i‡((
c
 != '\n') && (c != '\r'))

1182 i‡(
ödex
 < 
Àngth
) {

1186 i‡(
c
 == '\n')

1187  
ödex
;

1189 
Ch¨a˘îTy≥
 
c2
 = 
ch¨a˘îs
[
ödex
];

1190 i‡(
c2
 != '\n')

1191  
ödex
;

1196 i‡(++
ödex
 < 
Àngth
)

1197  
ödex
;

1200  
nŸFound
;

1201 
	}
}

1203 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
>

1204 
ölöe
 
size_t
 
	$ªvî£FödLöeTîmö©‹
(c⁄° 
Ch¨a˘îTy≥
* 
ch¨a˘îs
, 
Àngth
, 
ödex
 = 
UINT_MAX
)

1206 i‡(!
Àngth
)

1207  
nŸFound
;

1208 i‡(
ödex
 >
Àngth
)

1209 
ödex
 = 
Àngth
 - 1;

1210 
Ch¨a˘îTy≥
 
c
 = 
ch¨a˘îs
[
ödex
];

1211 (
c
 != '\n') && (c != '\r')) {

1212 i‡(!
ödex
--)

1213  
nŸFound
;

1214 
c
 = 
ch¨a˘îs
[
ödex
];

1216  
ödex
;

1217 
	}
}

1219 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
>

1220 
ölöe
 
size_t
 
	$ªvî£Föd
(c⁄° 
Ch¨a˘îTy≥
* 
ch¨a˘îs
, 
Àngth
, Ch¨a˘îTy≥ 
m©chCh¨a˘î
, 
ödex
 = 
UINT_MAX
)

1222 i‡(!
Àngth
)

1223  
nŸFound
;

1224 i‡(
ödex
 >
Àngth
)

1225 
ödex
 = 
Àngth
 - 1;

1226 
ch¨a˘îs
[
ödex
] !
m©chCh¨a˘î
) {

1227 i‡(!
ödex
--)

1228  
nŸFound
;

1230  
ödex
;

1231 
	}
}

1233 
ALWAYS_INLINE
 
size_t
 
	$ªvî£Föd
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
, 
LCh¨
 
m©chCh¨a˘î
, 
ödex
 = 
UINT_MAX
)

1235  
	`ªvî£Föd
(
ch¨a˘îs
, 
Àngth
, 
°©ic_ˇ°
<
UCh¨
>(
m©chCh¨a˘î
), 
ödex
);

1236 
	}
}

1238 
ölöe
 
size_t
 
	$ªvî£Föd
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
, 
UCh¨
 
m©chCh¨a˘î
, 
ödex
 = 
UINT_MAX
)

1240 i‡(
m©chCh¨a˘î
 & ~0xFF)

1241  
nŸFound
;

1242  
	`ªvî£Föd
(
ch¨a˘îs
, 
Àngth
, 
°©ic_ˇ°
<
LCh¨
>(
m©chCh¨a˘î
), 
ödex
);

1243 
	}
}

1245 
ölöe
 
size_t
 
	gSåögIm∂
::
	$föd
(
LCh¨
 
ch¨a˘î
, 
°¨t
)

1247 i‡(
	`is8Bô
())

1248  
WTF
::
	`föd
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ch¨a˘î
, 
°¨t
);

1249  
WTF
::
	`föd
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ch¨a˘î
, 
°¨t
);

1250 
	}
}

1252 
ALWAYS_INLINE
 
size_t
 
	gSåögIm∂
::
	$föd
(
ch¨a˘î
, 
°¨t
)

1254  
	`föd
(
°©ic_ˇ°
<
LCh¨
>(
ch¨a˘î
), 
°¨t
);

1255 
	}
}

1257 
ölöe
 
size_t
 
	gSåögIm∂
::
	$föd
(
UCh¨
 
ch¨a˘î
, 
°¨t
)

1259 i‡(
	`is8Bô
())

1260  
WTF
::
	`föd
(
	`ch¨a˘îs8
(), 
m_Àngth
, 
ch¨a˘î
, 
°¨t
);

1261  
WTF
::
	`föd
(
	`ch¨a˘îs16
(), 
m_Àngth
, 
ch¨a˘î
, 
°¨t
);

1262 
	}
}

1264 
	gãm∂©e
<
size_t
 
	gölöeC≠acôy
> 
ölöe
 
boﬁ
 
equÆIgn‹ögNuŒôy
(c⁄° 
Ve˘‹
<
UCh¨
, 
ölöeC≠acôy
>& 
a
, 
SåögIm∂
* 
b
)

1266  
equÆIgn‹ögNuŒôy
(
a
.
d©a
(),á.
size
(), 
b
);

1269 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥1
,Åy≥«mê
	gCh¨a˘îTy≥2
>

1270 
ölöe
 
	$codePoötCom∑ª
(
l1
, 
l2
, c⁄° 
Ch¨a˘îTy≥1
* 
c1
, c⁄° 
Ch¨a˘îTy≥2
* 
c2
)

1272 c⁄° 
lmö
 = 
l1
 < 
l2
 ?Ü1 :Ü2;

1273 
pos
 = 0;

1274 
pos
 < 
lmö
 && *
c1
 =*
c2
) {

1275 ++
c1
;

1276 ++
c2
;

1277 ++
pos
;

1280 i‡(
pos
 < 
lmö
)

1281  (
c1
[0] > 
c2
[0]) ? 1 : -1;

1283 i‡(
l1
 =
l2
)

1286  (
l1
 > 
l2
) ? 1 : -1;

1287 
	}
}

1289 
ölöe
 
	$codePoötCom∑ª8
(c⁄° 
SåögIm∂
* 
°rög1
, c⁄° SåögIm∂* 
°rög2
)

1291  
	`codePoötCom∑ª
(
°rög1
->
	`Àngth
(), 
°rög2
->Àngth(), såög1->
	`ch¨a˘îs8
(), string2->characters8());

1292 
	}
}

1294 
ölöe
 
	$codePoötCom∑ª16
(c⁄° 
SåögIm∂
* 
°rög1
, c⁄° SåögIm∂* 
°rög2
)

1296  
	`codePoötCom∑ª
(
°rög1
->
	`Àngth
(), 
°rög2
->Àngth(), såög1->
	`ch¨a˘îs16
(), string2->characters16());

1297 
	}
}

1299 
ölöe
 
	$codePoötCom∑ª8To16
(c⁄° 
SåögIm∂
* 
°rög1
, c⁄° SåögIm∂* 
°rög2
)

1301  
	`codePoötCom∑ª
(
°rög1
->
	`Àngth
(), 
°rög2
->Àngth(), såög1->
	`ch¨a˘îs8
(), såög2->
	`ch¨a˘îs16
());

1302 
	}
}

1304 
ölöe
 
	$codePoötCom∑ª
(c⁄° 
SåögIm∂
* 
°rög1
, c⁄° SåögIm∂* 
°rög2
)

1306 i‡(!
°rög1
)

1307  (
°rög2
 && såög2->
	`Àngth
()) ? -1 : 0;

1309 i‡(!
°rög2
)

1310  
°rög1
->
	`Àngth
() ? 1 : 0;

1312 
boﬁ
 
°rög1Is8Bô
 = 
°rög1
->
	`is8Bô
();

1313 
boﬁ
 
°rög2Is8Bô
 = 
°rög2
->
	`is8Bô
();

1314 i‡(
°rög1Is8Bô
) {

1315 i‡(
°rög2Is8Bô
)

1316  
	`codePoötCom∑ª8
(
°rög1
, 
°rög2
);

1317  
	`codePoötCom∑ª8To16
(
°rög1
, 
°rög2
);

1319 i‡(
°rög2Is8Bô
)

1320  -
	`codePoötCom∑ª8To16
(
°rög2
, 
°rög1
);

1321  
	`codePoötCom∑ª16
(
°rög1
, 
°rög2
);

1322 
	}
}

1324 
ölöe
 
boﬁ
 
	$isS∑˚OrNewlöe
(
UCh¨
 
c
)

1328  
c
 <0x7F ? 
	`isASCIIS∑˚
(cË: 
	`u_ch¨Dúe˘i⁄
(cË=
U_WHITE_SPACE_NEUTRAL
;

1329 
	}
}

1331 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
>

1332 
ölöe
 
	$ÀngthOfNuŒTîmö©edSåög
(c⁄° 
Ch¨a˘îTy≥
* 
°rög
)

1334 
	`ASSERT
(
°rög
);

1335 
size_t
 
Àngth
 = 0;

1336 
°rög
[
Àngth
])

1337 ++
Àngth
;

1339 
	`RELEASE_ASSERT
(
Àngth
 < 
°d
::
numîic_limôs
<>::
	`max
());

1340  
°©ic_ˇ°
<>(
Àngth
);

1341 
	}
}

1343 
ölöe
 
	gPassRef
<
	gSåögIm∂
> SåögIm∂::
	$isﬁ©edC›y
() const

1345 i‡(!
	`ªquúesC›y
()) {

1346 i‡(
	`is8Bô
())

1347  
SåögIm∂
::
	`¸óãWôhoutC›yög
(
m_d©a8
, 
m_Àngth
);

1348  
SåögIm∂
::
	`¸óãWôhoutC›yög
(
m_d©a16
, 
m_Àngth
);

1351 i‡(
	`is8Bô
())

1352  
	`¸óã
(
m_d©a8
, 
m_Àngth
);

1353  
	`¸óã
(
m_d©a16
, 
m_Àngth
);

1354 
	}
}

1356 
	gSåögHash
;

1359 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gDeÁu…Hash
;

1360 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	gSåögIm∂
*> {

1361 
SåögHash
 
	tHash
;

1363 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	gRefPå
<
	gSåögIm∂
>> {

1364 
SåögHash
 
	tHash
;

1369 
usög
 
	gWTF
::
SåögIm∂
;

1370 
usög
 
	gWTF
::
equÆ
;

1371 
usög
 
	gWTF
::
TextCa£Sísôivôy
;

1372 
usög
 
	gWTF
::
TextCa£Sísôive
;

1373 
usög
 
	gWTF
::
TextCa£In£nsôive
;

	@text/StringOperators.h

22 #i‚de‡
SåögO≥øt‹s_h


23 
	#SåögO≥øt‹s_h


	)

25 
«me•a˚
 
	gWTF
 {

27 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
>

28 ˛as†
	cSåögAµíd
 {

29 
	gpublic
:

30 
SåögAµíd
(
SåögTy≥1
 
°rög1
, 
SåögTy≥2
 
°rög2
)

31 : 
m_°rög1
(
°rög1
)

32 , 
m_°rög2
(
°rög2
)

36 
›î©‹
 
Såög
() const

38 
	gRefPå
<
	gSåögIm∂
> 
	gªsu…Im∂
 = 
åyMakeSåög
(
m_°rög1
, 
m_°rög2
);

39 i‡(!
	gªsu…Im∂
)

40 
CRASH
();

41  
	gªsu…Im∂
.
ªÀa£
();

44 
›î©‹
 
AtomicSåög
() const

46  
›î©‹
 
Såög
();

49 
boﬁ
 
is8Bô
()

51 
	gSåögTy≥Ad≠ãr
<
	gSåögTy≥1
> 
ad≠ãr1
(
m_°rög1
);

52 
	gSåögTy≥Ad≠ãr
<
	gSåögTy≥2
> 
ad≠ãr2
(
m_°rög2
);

53  
	gad≠ãr1
.
is8Bô
(Ë&& 
	gad≠ãr2
.is8Bit();

56 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
)

58 
ASSERT
(
is8Bô
());

59 
	gSåögTy≥Ad≠ãr
<
	gSåögTy≥1
> 
ad≠ãr1
(
m_°rög1
);

60 
	gSåögTy≥Ad≠ãr
<
	gSåögTy≥2
> 
ad≠ãr2
(
m_°rög2
);

61 
	gad≠ãr1
.
wrôeTo
(
de°ö©i⁄
);

62 
	gad≠ãr2
.
wrôeTo
(
de°ö©i⁄
 + 
ad≠ãr1
.
Àngth
());

65 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
)

67 
	gSåögTy≥Ad≠ãr
<
	gSåögTy≥1
> 
ad≠ãr1
(
m_°rög1
);

68 
	gSåögTy≥Ad≠ãr
<
	gSåögTy≥2
> 
ad≠ãr2
(
m_°rög2
);

69 
	gad≠ãr1
.
wrôeTo
(
de°ö©i⁄
);

70 
	gad≠ãr2
.
wrôeTo
(
de°ö©i⁄
 + 
ad≠ãr1
.
Àngth
());

73 
Àngth
()

75 
	gSåögTy≥Ad≠ãr
<
	gSåögTy≥1
> 
ad≠ãr1
(
m_°rög1
);

76 
	gSåögTy≥Ad≠ãr
<
	gSåögTy≥2
> 
ad≠ãr2
(
m_°rög2
);

77  
	gad≠ãr1
.
Àngth
(Ë+ 
	gad≠ãr2
.length();

80 
	g¥iv©e
:

81 
SåögTy≥1
 
m_°rög1
;

82 
SåögTy≥2
 
	gm_°rög2
;

85 
	gãm∂©e
<
ty≥«me
 
	gSåögTy≥1
,Åy≥«mê
	gSåögTy≥2
>

86 
˛ass
 
	gSåögTy≥Ad≠ãr
<
	gSåögAµíd
<
	gSåögTy≥1
, 
	gSåögTy≥2
>> {

87 
	gpublic
:

88 
SåögTy≥Ad≠ãr
<
SåögAµíd
<
SåögTy≥1
, 
	gSåögTy≥2
>>(
	gSåögAµíd
<
	gSåögTy≥1
, SåögTy≥2>& 
	gbuf„r
)

89 : 
m_buf„r
(
buf„r
)

93 
Àngth
(Ë{  
m_buf„r
.length(); }

95 
boﬁ
 
is8Bô
(Ë{  
	gm_buf„r
.is8Bit(); }

97 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
Ë{ 
	gm_buf„r
.writeTo(destination); }

98 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
Ë{ 
	gm_buf„r
.writeTo(destination); }

100 
	g¥iv©e
:

101 
SåögAµíd
<
SåögTy≥1
, 
	gSåögTy≥2
>& 
	gm_buf„r
;

104 
ölöe
 
	gSåögAµíd
<c⁄° *, 
	gSåög
> 
	g›î©‹
+(c⁄° * 
	g°rög1
, c⁄° Såög& 
	g°rög2
)

106  
	gSåögAµíd
<c⁄° *, 
	gSåög
>(
	g°rög1
, 
	g°rög2
);

109 
ölöe
 
	gSåögAµíd
<c⁄° *, 
	gAtomicSåög
> 
	g›î©‹
+(c⁄° * 
	g°rög1
, c⁄° AtomicSåög& 
	g°rög2
)

111  
	gSåögAµíd
<c⁄° *, 
	gAtomicSåög
>(
	g°rög1
, 
	g°rög2
);

114 
	gãm∂©e
<
ty≥«me
 
	gU
,Åy≥«mê
	gV
>

115 
ölöe
 
	gSåögAµíd
<c⁄° *, SåögAµíd<
	gU
, 
	gV
>> 
	g›î©‹
+(c⁄° * 
	g°rög1
, c⁄° SåögAµíd<U, V>& 
	g°rög2
)

117  
	gSåögAµíd
<c⁄° *, SåögAµíd<
	gU
, 
	gV
>>(
	g°rög1
, 
	g°rög2
);

120 
ölöe
 
	gSåögAµíd
<c⁄° 
	gUCh¨
*, 
	gSåög
> 
	g›î©‹
+(c⁄° 
UCh¨
* 
	g°rög1
, c⁄° Såög& 
	g°rög2
)

122  
	gSåögAµíd
<c⁄° 
	gUCh¨
*, 
	gSåög
>(
	g°rög1
, 
	g°rög2
);

125 
ölöe
 
	gSåögAµíd
<c⁄° 
	gUCh¨
*, 
	gAtomicSåög
> 
	g›î©‹
+(c⁄° 
UCh¨
* 
	g°rög1
, c⁄° AtomicSåög& 
	g°rög2
)

127  
	gSåögAµíd
<c⁄° 
	gUCh¨
*, 
	gAtomicSåög
>(
	g°rög1
, 
	g°rög2
);

130 
	gãm∂©e
<
ty≥«me
 
	gU
,Åy≥«mê
	gV
>

131 
ölöe
 
	gSåögAµíd
<c⁄° 
	gUCh¨
*, SåögAµíd<
	gU
, 
	gV
>> 
	g›î©‹
+(c⁄° 
UCh¨
* 
	g°rög1
, c⁄° SåögAµíd<U, V>& 
	g°rög2
)

133  
	gSåögAµíd
<c⁄° 
	gUCh¨
*, SåögAµíd<
	gU
, 
	gV
>>(
	g°rög1
, 
	g°rög2
);

136 
ölöe
 
	gSåögAµíd
<
	gASCIILôîÆ
, 
	gSåög
> 
	g›î©‹
+(c⁄° ASCIILôîÆ& 
	g°rög1
, c⁄° Såög& 
	g°rög2
)

138  
	gSåögAµíd
<
	gASCIILôîÆ
, 
	gSåög
>(
	g°rög1
, 
	g°rög2
);

141 
ölöe
 
	gSåögAµíd
<
	gASCIILôîÆ
, 
	gAtomicSåög
> 
	g›î©‹
+(c⁄° ASCIILôîÆ& 
	g°rög1
, c⁄° AtomicSåög& 
	g°rög2
)

143  
	gSåögAµíd
<
	gASCIILôîÆ
, 
	gAtomicSåög
>(
	g°rög1
, 
	g°rög2
);

146 
	gãm∂©e
<
ty≥«me
 
	gU
,Åy≥«mê
	gV
>

147 
ölöe
 
	gSåögAµíd
<
	gASCIILôîÆ
, SåögAµíd<
	gU
, 
	gV
>> 
	g›î©‹
+(c⁄° ASCIILôîÆ& 
	g°rög1
, c⁄° SåögAµíd<U, V>& 
	g°rög2
)

149  
	gSåögAµíd
<
	gASCIILôîÆ
, SåögAµíd<
	gU
, 
	gV
>>(
	g°rög1
, 
	g°rög2
);

152 
	gãm∂©e
<
ty≥«me
 
	gT
>

153 
	gSåögAµíd
<
	gSåög
, 
	gT
> 
	g›î©‹
+(c⁄° Såög& 
	g°rög1
, 
T
 
	g°rög2
)

155  
	gSåögAµíd
<
	gSåög
, 
	gT
>(
	g°rög1
, 
	g°rög2
);

158 
	gãm∂©e
<
ty≥«me
 
	gU
,Åy≥«mê
	gV
,Åy≥«mê
	gW
>

159 
	gSåögAµíd
<SåögAµíd<
	gU
, 
	gV
>, 
	gW
> 
	g›î©‹
+(c⁄° SåögAµíd<U, V>& 
	g°rög1
, 
W
 
	g°rög2
)

161  
	gSåögAµíd
<SåögAµíd<
	gU
, 
	gV
>, 
	gW
>(
	g°rög1
, 
	g°rög2
);

	@text/StringStatics.cpp

26 
	~"c⁄fig.h
"

28 #ifde‡
SKIP_STATIC_CONSTRUCTORS_ON_GCC


29 
	#ATOMICSTRING_HIDE_GLOBALS
 1

	)

32 
	~"AtomicSåög.h
"

33 
	~"MaöThªad.h
"

34 
	~"NevîDe°royed.h
"

35 
	~"SèticC⁄°ru˘‹s.h
"

36 
	~"SåögIm∂.h
"

38 #i‡
USE
(
WEB_THREAD
)

39 
	~<±hªad.h
>

42 
«me•a˚
 
	gWTF
 {

44 
SåögIm∂
* 
	gSåögIm∂
::
em±y
()

46 
NevîDe°royed
<
SåögIm∂
> 
em±ySåög
(
C⁄°ru˘Em±ySåög
);

47  &
	gem±ySåög
.
gë
();

55 
	gSåögIm∂
::
hashAndFœgsF‹Em±yUnique
()

57 
s_√xtHashAndFœgsF‹Em±yUnique
 = 
Buf„rI¡î«l
 | 
s_hashFœg8BôBuf„r
 | 
s_hashFœgIsAtomic
;

58 
	gs_√xtHashAndFœgsF‹Em±yUnique
 +1 << 
s_ÊagCou¡
;

59 
	gs_√xtHashAndFœgsF‹Em±yUnique
 |= 1 << 31;

60  
	gs_√xtHashAndFœgsF‹Em±yUnique
;

63 
WTF_EXPORTDATA
 
DEFINE_GLOBAL
(
AtomicSåög
, 
nuŒAtom
)

64 
WTF_EXPORTDATA
 
DEFINE_GLOBAL
(
AtomicSåög
, 
em±yAtom
)

65 
WTF_EXPORTDATA
 
DEFINE_GLOBAL
(
AtomicSåög
, 
ãxtAtom
)

66 
WTF_EXPORTDATA
 
DEFINE_GLOBAL
(
AtomicSåög
, 
commítAtom
)

67 
WTF_EXPORTDATA
 
DEFINE_GLOBAL
(
AtomicSåög
, 
°¨Atom
)

68 
WTF_EXPORTDATA
 
DEFINE_GLOBAL
(
AtomicSåög
, 
xmlAtom
)

69 
WTF_EXPORTDATA
 
DEFINE_GLOBAL
(
AtomicSåög
, 
xm sAtom
)

70 
WTF_EXPORTDATA
 
DEFINE_GLOBAL
(
AtomicSåög
, 
xlökAtom
)

72 
NEVER_INLINE
 
	gSåögIm∂
::
hashSlowCa£
() const

74 i‡(
is8Bô
())

75 
£tHash
(
SåögHashî
::
compuãHashAndMaskT›8Bôs
(
m_d©a8
, 
m_Àngth
));

77 
£tHash
(
SåögHashî
::
compuãHashAndMaskT›8Bôs
(
m_d©a16
, 
m_Àngth
));

78  
exi°ögHash
();

81 
	gAtomicSåög
::
öô
()

83 
boﬁ
 
öôülized
;

84 i‡(!
	göôülized
) {

86 
ASSERT
(
isUIThªad
());

89 
√w
 (
NŸNuŒ
, (*)&
nuŒAtom
Ë
	gAtomicSåög
;

90 
√w
 (
NŸNuŒ
, (*)&
em±yAtom
Ë
AtomicSåög
("");

91 
√w
 (
NŸNuŒ
, (*)&
ãxtAtom
Ë
AtomicSåög
("#ãxt", AtomicSåög::
C⁄°ru˘FromLôîÆ
);

92 
√w
 (
NŸNuŒ
, (*)&
commítAtom
Ë
AtomicSåög
("#commít", AtomicSåög::
C⁄°ru˘FromLôîÆ
);

93 
√w
 (
NŸNuŒ
, (*)&
°¨Atom
Ë
AtomicSåög
("*", AtomicSåög::
C⁄°ru˘FromLôîÆ
);

94 
√w
 (
NŸNuŒ
, (*)&
xmlAtom
Ë
AtomicSåög
("xml", AtomicSåög::
C⁄°ru˘FromLôîÆ
);

95 
√w
 (
NŸNuŒ
, (*)&
xm sAtom
Ë
AtomicSåög
("xm s", AtomicSåög::
C⁄°ru˘FromLôîÆ
);

96 
√w
 (
NŸNuŒ
, (*)&
xlökAtom
Ë
AtomicSåög
("xlök", AtomicSåög::
C⁄°ru˘FromLôîÆ
);

98 
	göôülized
 = 
åue
;

	@text/StringView.h

26 #i‚de‡
SåögVõw_h


27 
	#SåögVõw_h


	)

29 
	~<wtf/ãxt/SåögC⁄ˇã«ã.h
>

31 
«me•a˚
 
	gWTF
 {

38 ˛as†
	cSåögVõw
 {

39 
	gpublic
:

40 
SåögVõw
()

41 : 
m_ch¨a˘îs
(
nuŒ±r
)

42 , 
m_Àngth
(0)

46 
SåögVõw
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
)

48 
öôülize
(
ch¨a˘îs
, 
Àngth
);

51 
SåögVõw
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
)

53 
öôülize
(
ch¨a˘îs
, 
Àngth
);

56 
SåögVõw
(c⁄° 
SåögIm∂
& 
°rög
)

58 i‡(
	g°rög
.
is8Bô
())

59 
öôülize
(
°rög
.
ch¨a˘îs8
(), såög.
Àngth
());

61 
öôülize
(
°rög
.
ch¨a˘îs16
(), såög.
Àngth
());

64 
SåögVõw
(c⁄° 
Såög
& 
°rög
)

66 i‡(!
	g°rög
.
im∂
()) {

67 
	gm_ch¨a˘îs
 = 
nuŒ±r
;

68 
	gm_Àngth
 = 0;

71 i‡(
	g°rög
.
is8Bô
()) {

72 
öôülize
(
°rög
.
ch¨a˘îs8
(), såög.
Àngth
());

75 
öôülize
(
°rög
.
ch¨a˘îs16
(), såög.
Àngth
());

78 
SåögVõw
 
em±y
()

80  
SåögVõw
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(""), 0);

83 c⁄° 
LCh¨
* 
ch¨a˘îs8
() const

85 
ASSERT
(
is8Bô
());

87  
	g°©ic_ˇ°
<c⁄° 
	gLCh¨
*>(
	gm_ch¨a˘îs
);

90 c⁄° 
UCh¨
* 
ch¨a˘îs16
() const

92 
ASSERT
(!
is8Bô
());

94  
	g°©ic_ˇ°
<c⁄° 
	gUCh¨
*>(
	gm_ch¨a˘îs
);

97 
gëCh¨a˘îsWôhUpc⁄vît
(
LCh¨
*) const;

98 
gëCh¨a˘îsWôhUpc⁄vît
(
UCh¨
*) const;

100 ˛as†
	cUpc⁄vîãdCh¨a˘îs
 {

101 
	gpublic
:

102 
ex∂icô
 
Upc⁄vîãdCh¨a˘îs
(c⁄° 
SåögVõw
&);

103 
›î©‹
 c⁄° 
	gUCh¨
*(Ëc⁄° {  
	gm_ch¨a˘îs
; }

104 c⁄° 
UCh¨
* 
gë
(Ëc⁄° {  
	gm_ch¨a˘îs
; }

105 
	g¥iv©e
:

106 
Ve˘‹
<
UCh¨
, 32> 
	gm_upc⁄vîãdCh¨a˘îs
;

107 c⁄° 
UCh¨
* 
	gm_ch¨a˘îs
;

109 
Upc⁄vîãdCh¨a˘îs
 
upc⁄vîãdCh¨a˘îs
(Ëc⁄° {  Upc⁄vîãdCh¨a˘îs(*
this
); }

111 
boﬁ
 
isNuŒ
(Ëc⁄° {  !
	gm_ch¨a˘îs
; }

112 
boﬁ
 
isEm±y
(Ëc⁄° {  !
Àngth
(); }

113 
Àngth
(Ëc⁄° {  
	gm_Àngth
 & ~
	gis16BôSåögFœg
; }

115 
ex∂icô
 
›î©‹
 
boﬁ
(Ëc⁄° {  !
isNuŒ
(); }

117 
boﬁ
 
is8Bô
(Ëc⁄° {  !(
	gm_Àngth
 & 
	gis16BôSåögFœg
); }

119 
SåögVõw
 
sub°rög
(
°¨t
, 
Àngth
 = 
°d
::
numîic_limôs
<>::
max
()) const

121 i‡(
°¨t
 >
this
->
Àngth
())

122  
em±y
();

123 
	gmaxLígth
 = 
this
->
Àngth
(Ë- 
°¨t
;

125 i‡(
	gÀngth
 >
maxLígth
) {

126 i‡(!
°¨t
)

127  *
this
;

128 
	gÀngth
 = 
maxLígth
;

131 i‡(
is8Bô
())

132  
SåögVõw
(
ch¨a˘îs8
(Ë+ 
°¨t
, 
Àngth
);

134  
SåögVõw
(
ch¨a˘îs16
(Ë+ 
°¨t
, 
Àngth
);

137 
Såög
 
toSåög
() const

139 i‡(
is8Bô
())

140  
Såög
(
ch¨a˘îs8
(), 
Àngth
());

142  
Såög
(
ch¨a˘îs16
(), 
Àngth
());

145 
toFlﬂt
(
boﬁ
& 
isVÆid
)

147 i‡(
is8Bô
())

148  
ch¨a˘îsToFlﬂt
(
ch¨a˘îs8
(), 
Àngth
(), &
isVÆid
);

149  
ch¨a˘îsToFlﬂt
(
ch¨a˘îs16
(), 
Àngth
(), &
isVÆid
);

152 
toI¡
(
boﬁ
& 
isVÆid
)

154 i‡(
is8Bô
())

155  
ch¨a˘îsToI¡
(
ch¨a˘îs8
(), 
Àngth
(), &
isVÆid
);

156  
ch¨a˘îsToI¡
(
ch¨a˘îs16
(), 
Àngth
(), &
isVÆid
);

159 
Såög
 
toSåögWôhoutC›yög
() const

161 i‡(
is8Bô
())

162  
	gSåögIm∂
::
¸óãWôhoutC›yög
(
ch¨a˘îs8
(), 
Àngth
());

164  
	gSåögIm∂
::
¸óãWôhoutC›yög
(
ch¨a˘îs16
(), 
Àngth
());

167 
UCh¨
 
	g›î©‹
[](
	gödex
) const

169 
ASSERT
(
ödex
 < 
Àngth
());

170 i‡(
is8Bô
())

171  
ch¨a˘îs8
()[
ödex
];

172  
ch¨a˘îs16
()[
ödex
];

175 
size_t
 
föd
(
UCh¨
 
ch¨a˘î
, 
°¨t
 = 0) const

177 i‡(
is8Bô
())

178  
WTF
::
föd
(
ch¨a˘îs8
(), 
Àngth
(), 
ch¨a˘î
, 
°¨t
);

179  
	gWTF
::
föd
(
ch¨a˘îs16
(), 
Àngth
(), 
ch¨a˘î
, 
°¨t
);

182 
boﬁ
 
c⁄èös
(
UCh¨
 
c
Ëc⁄° {  
föd
(cË!
nŸFound
; }

184 #i‡
USE
(
CF
)

186 
WTF_EXPORT_STRING_API
 
	gRëaöPå
<
	gCFSåögRef
> 
¸óãCFSåögWôhoutC›yög
() const;

189 #ifde‡
__OBJC__


191 
WTF_EXPORT_STRING_API
 
	gRëaöPå
<
	gNSSåög
> 
¸óãNSSåög
() const;

192 
WTF_EXPORT_STRING_API
 
	gRëaöPå
<
	gNSSåög
> 
¸óãNSSåögWôhoutC›yög
() const;

195 
	g¥iv©e
:

196 
öôülize
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
)

198 
ASSERT
(!(
Àngth
 & 
is16BôSåögFœg
));

200 
	gm_ch¨a˘îs
 = 
ch¨a˘îs
;

201 
	gm_Àngth
 = 
Àngth
;

204 
öôülize
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
)

206 
ASSERT
(!(
Àngth
 & 
is16BôSåögFœg
));

208 
	gm_ch¨a˘îs
 = 
ch¨a˘îs
;

209 
	gm_Àngth
 = 
is16BôSåögFœg
 | 
Àngth
;

212 c⁄° 
	gis16BôSåögFœg
 = 1u << 31;

214 c⁄° * 
	gm_ch¨a˘îs
;

215 
	gm_Àngth
;

218 
ölöe
 
	gSåögVõw
::
	$gëCh¨a˘îsWôhUpc⁄vît
(
LCh¨
* 
de°ö©i⁄
) const

220 
	`ASSERT
(
	`is8Bô
());

221 
	`mem˝y
(
de°ö©i⁄
, 
	`ch¨a˘îs8
(), 
	`Àngth
());

222 
	}
}

224 
ölöe
 
	gSåögVõw
::
	$gëCh¨a˘îsWôhUpc⁄vît
(
UCh¨
* 
de°ö©i⁄
) const

226 i‡(
	`is8Bô
()) {

227 c⁄° 
LCh¨
* 
ch¨a˘îs8
 = 
this
->
	`ch¨a˘îs8
();

228 
Àngth
 = 
this
->
	`Àngth
();

229 
i
 = 0; i < 
Àngth
; ++i)

230 
de°ö©i⁄
[
i
] = 
ch¨a˘îs8
[i];

233 
	`mem˝y
(
de°ö©i⁄
, 
	`ch¨a˘îs16
(), 
	`Àngth
(Ë* (
UCh¨
));

234 
	}
}

236 
ölöe
 
	gSåögVõw
::
Upc⁄vîãdCh¨a˘îs
::
	$Upc⁄vîãdCh¨a˘îs
(c⁄° 
SåögVõw
& 
°rög
)

238 i‡(!
°rög
.
	`is8Bô
()) {

239 
m_ch¨a˘îs
 = 
°rög
.
	`ch¨a˘îs16
();

242 c⁄° 
LCh¨
* 
ch¨a˘îs8
 = 
°rög
.
	`ch¨a˘îs8
();

243 
Àngth
 = 
°rög
.
	`Àngth
();

244 
m_upc⁄vîãdCh¨a˘îs
.
	`ª£rveInôülC≠acôy
(
Àngth
);

245 
i
 = 0; i < 
Àngth
; ++i)

246 
m_upc⁄vîãdCh¨a˘îs
.
	`uncheckedAµíd
(
ch¨a˘îs8
[
i
]);

247 
m_ch¨a˘îs
 = 
m_upc⁄vîãdCh¨a˘îs
.
	`d©a
();

248 
	}
}

250 
	gãm∂©e
<> 
˛ass
 
	gSåögTy≥Ad≠ãr
<
	gSåögVõw
> {

251 
	gpublic
:

252 
SåögTy≥Ad≠ãr
<
SåögVõw
>(SåögVõw 
°rög
)

253 : 
m_°rög
(
°rög
)

257 
Àngth
(Ë{  
m_°rög
.length(); }

258 
boﬁ
 
is8Bô
(Ë{  
	gm_°rög
.is8Bit(); }

259 
wrôeTo
(
LCh¨
* 
de°ö©i⁄
Ë{ 
	gm_°rög
.
gëCh¨a˘îsWôhUpc⁄vît
(destination); }

260 
wrôeTo
(
UCh¨
* 
de°ö©i⁄
Ë{ 
	gm_°rög
.
gëCh¨a˘îsWôhUpc⁄vît
(destination); }

262 
	g¥iv©e
:

263 
SåögVõw
 
m_°rög
;

266 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
, 
size_t
 
	gölöeC≠acôy
> 
≠≥nd
(
Ve˘‹
<
Ch¨a˘îTy≥
, 
ölöeC≠acôy
>& 
buf„r
, 
SåögVõw
 
°rög
)

268 
	gﬁdSize
 = 
buf„r
.
size
();

269 
	gbuf„r
.
grow
(
ﬁdSize
 + 
°rög
.
Àngth
());

270 
	g°rög
.
gëCh¨a˘îsWôhUpc⁄vît
(
buf„r
.
d©a
(Ë+ 
ﬁdSize
);

275 
usög
 
	gWTF
::
≠≥nd
;

276 
usög
 
	gWTF
::
SåögVõw
;

	@text/TextPosition.h

25 #i‚de‡
TextPosôi⁄_h


26 
	#TextPosôi⁄_h


	)

28 
	~<wtf/As£πi⁄s.h
>

30 
«me•a˚
 
	gWTF
 {

35 ˛as†
	cOrdöÆNumbî
 {

36 
	gpublic
:

37 
OrdöÆNumbî
 
‰omZîoBa£dI¡
(
zîoBa£dI¡
) {  OrdinalNumber(zeroBasedInt); }

38 
OrdöÆNumbî
 
‰omO√Ba£dI¡
(
⁄eBa£dI¡
) {  OrdinalNumber(oneBasedInt - 1); }

39 
OrdöÆNumbî
(Ë: 
m_zîoBa£dVÆue
(0) { }

41 
zîoBa£dI¡
(Ëc⁄° {  
m_zîoBa£dVÆue
; }

42 
⁄eBa£dI¡
(Ëc⁄° {  
	gm_zîoBa£dVÆue
 + 1; }

44 
boﬁ
 
	g›î©‹
==(
OrdöÆNumbî
 
Ÿhî
Ë{  
m_zîoBa£dVÆue
 == other.m_zeroBasedValue; }

45 
boﬁ
 
	g›î©‹
!=(
OrdöÆNumbî
 
Ÿhî
Ë{  !((*
this
) == other); }

47 
OrdöÆNumbî
 
fú°
() {  OrdinalNumber(0); }

48 
OrdöÆNumbî
 
bef‹eFú°
() {  OrdinalNumber(-1); }

50 
	g¥iv©e
:

51 
OrdöÆNumbî
(
zîoBa£dI¡
Ë: 
m_zîoBa£dVÆue
(zeroBasedInt) { }

52 
m_zîoBa£dVÆue
;

58 ˛as†
	cTextPosôi⁄
 {

59 
	gpublic
:

60 
TextPosôi⁄
(
OrdöÆNumbî
 
löe
, OrdöÆNumbî 
cﬁumn
)

61 : 
m_löe
(
löe
)

62 , 
m_cﬁumn
(
cﬁumn
)

65 
TextPosôi⁄
() { }

66 
boﬁ
 
	g›î©‹
==(c⁄° 
TextPosôi⁄
& 
Ÿhî
Ë{  
m_löe
 =Ÿhî.m_löê&& 
m_cﬁumn
 == other.m_column; }

67 
boﬁ
 
	g›î©‹
!=(c⁄° 
TextPosôi⁄
& 
Ÿhî
Ë{  !((*
this
) == other); }

70 
TextPosôi⁄
 
möimumPosôi⁄
(Ë{  TextPosôi⁄(
OrdöÆNumbî
::
fú°
(), OrdinalNumber::first()); }

73 
TextPosôi⁄
 
bñowR™gePosôi⁄
(Ë{  TextPosôi⁄(
OrdöÆNumbî
::
bef‹eFú°
(), OrdinalNumber::beforeFirst()); }

75 
OrdöÆNumbî
 
	gm_löe
;

76 
OrdöÆNumbî
 
	gm_cﬁumn
;

81 
usög
 
	gWTF
::
OrdöÆNumbî
;

83 
usög
 
	gWTF
::
TextPosôi⁄
;

	@text/WTFString.cpp

22 
	~"c⁄fig.h
"

23 
	~"WTFSåög.h
"

25 
	~"I¡egîToSåögC⁄vîsi⁄.h
"

26 
	~<°d¨g.h
>

27 
	~<wtf/ASCIICTy≥.h
>

28 
	~<wtf/D©aLog.h
>

29 
	~<wtf/HexNumbî.h
>

30 
	~<wtf/M©hExåas.h
>

31 
	~<wtf/NevîDe°royed.h
>

32 
	~<wtf/ãxt/CSåög.h
>

33 
	~<wtf/SåögExåas.h
>

34 
	~<wtf/Ve˘‹.h
>

35 
	~<wtf/dtﬂ.h
>

36 
	~<wtf/unicode/Ch¨a˘îNames.h
>

37 
	~<wtf/unicode/UTF8.h
>

39 
«me•a˚
 
	gWTF
 {

41 
usög
 
«me•a˚
 
	gUnicode
;

44 
	gSåög
::
Såög
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
)

46 i‡(
	gch¨a˘îs
)

47 
	gm_im∂
 = 
SåögIm∂
::
¸óã
(
ch¨a˘îs
, 
Àngth
);

51 
	gSåög
::
Såög
(c⁄° 
UCh¨
* 
°r
)

53 i‡(!
°r
)

56 
	gm_im∂
 = 
SåögIm∂
::
¸óã
(
°r
, 
ÀngthOfNuŒTîmö©edSåög
(str));

60 
	gSåög
::
Såög
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
)

62 i‡(
	gch¨a˘îs
)

63 
	gm_im∂
 = 
SåögIm∂
::
¸óã
(
ch¨a˘îs
, 
Àngth
);

66 
	gSåög
::
Såög
(c⁄° * 
ch¨a˘îs
, 
Àngth
)

68 i‡(
	gch¨a˘îs
)

69 
	gm_im∂
 = 
SåögIm∂
::
¸óã
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
ch¨a˘îs
), 
Àngth
);

73 
	gSåög
::
Såög
(c⁄° 
LCh¨
* 
ch¨a˘îs
)

75 i‡(
ch¨a˘îs
)

76 
m_im∂
 = 
SåögIm∂
::
¸óã
(
ch¨a˘îs
);

79 
	gSåög
::
Såög
(c⁄° * 
ch¨a˘îs
)

81 i‡(
ch¨a˘îs
)

82 
m_im∂
 = 
SåögIm∂
::
¸óã
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
ch¨a˘îs
));

85 
	gSåög
::
Såög
(
ASCIILôîÆ
 
ch¨a˘îs
)

86 : 
m_im∂
(
SåögIm∂
::
¸óãFromLôîÆ
(
ch¨a˘îs
))

90 
Såög
::
≠≥nd
(c⁄° Såög& 
°r
)

94 i‡(
°r
.
isEm±y
())

97 i‡(
	g°r
.
	gm_im∂
) {

98 i‡(
	gm_im∂
) {

99 i‡(
	gm_im∂
->
is8Bô
(Ë&& 
	g°r
.m_impl->is8Bit()) {

100 
LCh¨
* 
	gd©a
;

101 i‡(
	g°r
.
Àngth
(Ë> 
	g°d
::
numîic_limôs
<>::
max
(Ë- 
m_im∂
->length())

102 
CRASH
();

103 
	gRefPå
<
	gSåögIm∂
> 
	g√wIm∂
 = 
SåögIm∂
::
¸óãUnöôülized
(
m_im∂
->
Àngth
(Ë+ 
°r
.Àngth(), 
d©a
);

104 
mem˝y
(
d©a
, 
m_im∂
->
ch¨a˘îs8
(), m_im∂->
Àngth
(Ë* (
LCh¨
));

105 
mem˝y
(
d©a
 + 
m_im∂
->
Àngth
(), 
°r
.
ch¨a˘îs8
(), så.Àngth(Ë* (
LCh¨
));

106 
	gm_im∂
 = 
√wIm∂
.
ªÀa£
();

109 
UCh¨
* 
	gd©a
;

110 i‡(
	g°r
.
Àngth
(Ë> 
	g°d
::
numîic_limôs
<>::
max
(Ë- 
m_im∂
->length())

111 
CRASH
();

112 
	gRefPå
<
	gSåögIm∂
> 
	g√wIm∂
 = 
SåögIm∂
::
¸óãUnöôülized
(
m_im∂
->
Àngth
(Ë+ 
°r
.Àngth(), 
d©a
);

113 
SåögVõw
(*
m_im∂
).
gëCh¨a˘îsWôhUpc⁄vît
(
d©a
);

114 
SåögVõw
(
°r
).
gëCh¨a˘îsWôhUpc⁄vît
(
d©a
 + 
m_im∂
->
Àngth
());

115 
	gm_im∂
 = 
√wIm∂
.
ªÀa£
();

117 
	gm_im∂
 = 
°r
.
m_im∂
;

121 
	gSåög
::
≠≥nd
(
LCh¨
 
ch¨a˘î
)

125 i‡(!
m_im∂
) {

126 
m_im∂
 = 
SåögIm∂
::
¸óã
(&
ch¨a˘î
, 1);

129 i‡(!
is8Bô
()) {

130 
≠≥nd
(
°©ic_ˇ°
<
UCh¨
>(
ch¨a˘î
));

133 i‡(
	gm_im∂
->
Àngth
(Ë>
°d
::
numîic_limôs
<>::
max
())

134 
CRASH
();

135 
LCh¨
* 
	gd©a
;

136 
	gRefPå
<
	gSåögIm∂
> 
	g√wIm∂
 = 
SåögIm∂
::
¸óãUnöôülized
(
m_im∂
->
Àngth
(Ë+ 1, 
d©a
);

137 
mem˝y
(
d©a
, 
m_im∂
->
ch¨a˘îs8
(), m_im∂->
Àngth
());

138 
	gd©a
[
m_im∂
->
Àngth
()] = 
ch¨a˘î
;

139 
	gm_im∂
 = 
√wIm∂
.
ªÀa£
();

142 
	gSåög
::
≠≥nd
(
UCh¨
 
ch¨a˘î
)

146 i‡(!
m_im∂
) {

147 
m_im∂
 = 
SåögIm∂
::
¸óã
(&
ch¨a˘î
, 1);

150 i‡(
	gch¨a˘î
 <0xFF && 
is8Bô
()) {

151 
≠≥nd
(
°©ic_ˇ°
<
LCh¨
>(
ch¨a˘î
));

154 i‡(
	gm_im∂
->
Àngth
(Ë>
°d
::
numîic_limôs
<>::
max
())

155 
CRASH
();

156 
UCh¨
* 
	gd©a
;

157 
	gRefPå
<
	gSåögIm∂
> 
	g√wIm∂
 = 
SåögIm∂
::
¸óãUnöôülized
(
m_im∂
->
Àngth
(Ë+ 1, 
d©a
);

158 
SåögVõw
(*
m_im∂
).
gëCh¨a˘îsWôhUpc⁄vît
(
d©a
);

159 
	gd©a
[
m_im∂
->
Àngth
()] = 
ch¨a˘î
;

160 
	gm_im∂
 = 
√wIm∂
.
ªÀa£
();

163 
codePoötCom∑ª
(c⁄° 
Såög
& 
a
, c⁄° Såög& 
b
)

165  
codePoötCom∑ª
(
a
.
im∂
(), 
b
.impl());

168 
	gSåög
::
ö£π
(c⁄° 
Såög
& 
°rög
, 
posôi⁄
)

172 
	gÀngthToIn£π
 = 
°rög
.
Àngth
();

174 i‡(!
	gÀngthToIn£π
) {

175 i‡(
	g°rög
.
isNuŒ
())

177 i‡(
isNuŒ
())

178 
	gm_im∂
 = 
°rög
.
im∂
();

182 i‡(
	gposôi⁄
 >
Àngth
()) {

183 
≠≥nd
(
°rög
);

187 i‡(
	gÀngthToIn£π
 > 
	g°d
::
numîic_limôs
<>::
max
(Ë- 
Àngth
())

188 
CRASH
();

190 
	gRefPå
<
	gSåögIm∂
> 
	g√wSåög
;

191 i‡(
is8Bô
(Ë&& 
	g°rög
.is8Bit()) {

192 
LCh¨
* 
	gd©a
;

193 
	g√wSåög
 = 
SåögIm∂
::
¸óãUnöôülized
(
Àngth
(Ë+ 
ÀngthToIn£π
, 
d©a
);

194 
SåögVõw
(*
m_im∂
).
sub°rög
(0, 
posôi⁄
).
gëCh¨a˘îsWôhUpc⁄vît
(
d©a
);

195 
SåögVõw
(
°rög
).
gëCh¨a˘îsWôhUpc⁄vît
(
d©a
 + 
posôi⁄
);

196 
SåögVõw
(*
m_im∂
).
sub°rög
(
posôi⁄
).
gëCh¨a˘îsWôhUpc⁄vît
(
d©a
 +Öosôi⁄ + 
ÀngthToIn£π
);

198 
UCh¨
* 
	gd©a
;

199 
	g√wSåög
 = 
SåögIm∂
::
¸óãUnöôülized
(
Àngth
(Ë+ 
ÀngthToIn£π
, 
d©a
);

200 
SåögVõw
(*
m_im∂
).
sub°rög
(0, 
posôi⁄
).
gëCh¨a˘îsWôhUpc⁄vît
(
d©a
);

201 
SåögVõw
(
°rög
).
gëCh¨a˘îsWôhUpc⁄vît
(
d©a
 + 
posôi⁄
);

202 
SåögVõw
(*
m_im∂
).
sub°rög
(
posôi⁄
).
gëCh¨a˘îsWôhUpc⁄vît
(
d©a
 +Öosôi⁄ + 
ÀngthToIn£π
);

204 
	gm_im∂
 = 
√wSåög
.
ªÀa£
();

207 
	gSåög
::
≠≥nd
(c⁄° 
LCh¨
* 
ch¨a˘îsToAµíd
, 
ÀngthToAµíd
)

211 i‡(!
	gm_im∂
) {

212 i‡(!
	gch¨a˘îsToAµíd
)

214 
	gm_im∂
 = 
SåögIm∂
::
¸óã
(
ch¨a˘îsToAµíd
, 
ÀngthToAµíd
);

218 i‡(!
	gÀngthToAµíd
)

221 
ASSERT
(
ch¨a˘îsToAµíd
);

223 
	g°rLígth
 = 
m_im∂
->
Àngth
();

225 i‡(
	gm_im∂
->
is8Bô
()) {

226 i‡(
	gÀngthToAµíd
 > 
	g°d
::
numîic_limôs
<>::
max
(Ë- 
°rLígth
)

227 
CRASH
();

228 
LCh¨
* 
	gd©a
;

229 
	gRefPå
<
	gSåögIm∂
> 
	g√wIm∂
 = 
SåögIm∂
::
¸óãUnöôülized
(
°rLígth
 + 
ÀngthToAµíd
, 
d©a
);

230 
	gSåögIm∂
::
c›yCh¨s
(
d©a
, 
m_im∂
->
ch¨a˘îs8
(), 
°rLígth
);

231 
	gSåögIm∂
::
c›yCh¨s
(
d©a
 + 
°rLígth
, 
ch¨a˘îsToAµíd
, 
ÀngthToAµíd
);

232 
	gm_im∂
 = 
√wIm∂
.
ªÀa£
();

236 i‡(
	gÀngthToAµíd
 > 
	g°d
::
numîic_limôs
<>::
max
(Ë- 
°rLígth
)

237 
CRASH
();

238 
UCh¨
* 
	gd©a
;

239 
	gRefPå
<
	gSåögIm∂
> 
	g√wIm∂
 = 
SåögIm∂
::
¸óãUnöôülized
(
Àngth
(Ë+ 
ÀngthToAµíd
, 
d©a
);

240 
	gSåögIm∂
::
c›yCh¨s
(
d©a
, 
m_im∂
->
ch¨a˘îs16
(), 
°rLígth
);

241 
	gSåögIm∂
::
c›yCh¨s
(
d©a
 + 
°rLígth
, 
ch¨a˘îsToAµíd
, 
ÀngthToAµíd
);

242 
	gm_im∂
 = 
√wIm∂
.
ªÀa£
();

245 
	gSåög
::
≠≥nd
(c⁄° 
UCh¨
* 
ch¨a˘îsToAµíd
, 
ÀngthToAµíd
)

249 i‡(!
	gm_im∂
) {

250 i‡(!
	gch¨a˘îsToAµíd
)

252 
	gm_im∂
 = 
SåögIm∂
::
¸óã
(
ch¨a˘îsToAµíd
, 
ÀngthToAµíd
);

256 i‡(!
	gÀngthToAµíd
)

259 
	g°rLígth
 = 
m_im∂
->
Àngth
();

261 
ASSERT
(
ch¨a˘îsToAµíd
);

262 i‡(
	gÀngthToAµíd
 > 
	g°d
::
numîic_limôs
<>::
max
(Ë- 
°rLígth
)

263 
CRASH
();

264 
UCh¨
* 
	gd©a
;

265 
	gRefPå
<
	gSåögIm∂
> 
	g√wIm∂
 = 
SåögIm∂
::
¸óãUnöôülized
(
°rLígth
 + 
ÀngthToAµíd
, 
d©a
);

266 i‡(
	gm_im∂
->
is8Bô
())

267 
	gSåögIm∂
::
c›yCh¨s
(
d©a
, 
ch¨a˘îs8
(), 
°rLígth
);

269 
	gSåögIm∂
::
c›yCh¨s
(
d©a
, 
ch¨a˘îs16
(), 
°rLígth
);

270 
	gSåögIm∂
::
c›yCh¨s
(
d©a
 + 
°rLígth
, 
ch¨a˘îsToAµíd
, 
ÀngthToAµíd
);

271 
	gm_im∂
 = 
√wIm∂
.
ªÀa£
();

275 
UCh¨32
 
	gSåög
::
ch¨a˘îSèπögAt
(
i
) const

277 i‡(!
m_im∂
 || 
i
 >m_im∂->
Àngth
())

279  
	gm_im∂
->
ch¨a˘îSèπögAt
(
i
);

282 
	gSåög
::
åunˇã
(
posôi⁄
)

284 i‡(
m_im∂
)

285 
m_im∂
 = m_im∂->
sub°rög
(0, 
posôi⁄
);

288 
	gãm∂©e
 <
ty≥«me
 
	gCh¨a˘îTy≥
>

289 
ölöe
 
	gSåög
::
ªmoveI¡î«l
(c⁄° 
Ch¨a˘îTy≥
* 
ch¨a˘îs
, 
posôi⁄
, 
ÀngthToRemove
)

291 
Ch¨a˘îTy≥
* 
	gd©a
;

292 
	gRefPå
<
	gSåögIm∂
> 
	g√wIm∂
 = 
SåögIm∂
::
¸óãUnöôülized
(
Àngth
(Ë- 
ÀngthToRemove
, 
d©a
);

293 
mem˝y
(
d©a
, 
ch¨a˘îs
, 
posôi⁄
 * (
Ch¨a˘îTy≥
));

294 
mem˝y
(
d©a
 + 
posôi⁄
, 
ch¨a˘îs
 +Öosôi⁄ + 
ÀngthToRemove
,

295 (
Àngth
(Ë- 
ÀngthToRemove
 - 
posôi⁄
Ë* (
Ch¨a˘îTy≥
));

297 
	gm_im∂
 = 
√wIm∂
.
ªÀa£
();

300 
	gSåög
::
ªmove
(
posôi⁄
, 
ÀngthToRemove
)

302 i‡(
	gÀngthToRemove
 <= 0)

304 i‡(
	gposôi⁄
 >
Àngth
())

306 i‡(
	g°©ic_ˇ°
<>(
	gÀngthToRemove
Ë> 
Àngth
(Ë- 
	gposôi⁄
)

307 
	gÀngthToRemove
 = 
Àngth
(Ë- 
posôi⁄
;

309 i‡(
is8Bô
()) {

310 
ªmoveI¡î«l
(
ch¨a˘îs8
(), 
posôi⁄
, 
ÀngthToRemove
);

315 
ªmoveI¡î«l
(
ch¨a˘îs16
(), 
posôi⁄
, 
ÀngthToRemove
);

318 
Såög
 
	gSåög
::
sub°rög
(
pos
, 
Àn
) const

320 i‡(!
	gm_im∂
)

321  
Såög
();

322  
	gm_im∂
->
sub°rög
(
pos
, 
Àn
);

325 
Såög
 
	gSåög
::
sub°rögSh¨ögIm∂
(
off£t
, 
Àngth
) const

329 
	g°rögLígth
 = 
this
->
Àngth
();

330 
	goff£t
 = 
°d
::
mö
(
off£t
, 
°rögLígth
);

331 
	gÀngth
 = 
°d
::
mö
(
Àngth
, 
°rögLígth
 - 
off£t
);

333 i‡(!
	goff£t
 && 
	gÀngth
 =
°rögLígth
)

334  *
this
;

335  
Såög
(
SåögIm∂
::
¸óãSub°rögSh¨ögIm∂
(
m_im∂
, 
off£t
, 
Àngth
));

338 
Såög
 
	gSåög
::
c⁄vîtToASCIILowîˇ£
() const

341 i‡(!
m_im∂
)

342  
Såög
();

343  
	gm_im∂
->
c⁄vîtToASCIILowîˇ£
();

346 
Såög
 
	gSåög
::
lowî
() const

348 i‡(!
m_im∂
)

349  
Såög
();

350  
	gm_im∂
->
lowî
();

353 
Såög
 
	gSåög
::
uµî
() const

355 i‡(!
m_im∂
)

356  
Såög
();

357  
	gm_im∂
->
uµî
();

360 
Såög
 
	gSåög
::
lowî
(c⁄° 
AtomicSåög
& 
loˇÀIdítifõr
) const

362 i‡(!
m_im∂
)

363  
Såög
();

364  
	gm_im∂
->
lowî
(
loˇÀIdítifõr
);

367 
Såög
 
	gSåög
::
uµî
(c⁄° 
AtomicSåög
& 
loˇÀIdítifõr
) const

369 i‡(!
m_im∂
)

370  
Såög
();

371  
	gm_im∂
->
uµî
(
loˇÀIdítifõr
);

374 
Såög
 
	gSåög
::
°rùWhôeS∑˚
() const

376 i‡(!
m_im∂
)

377  
Såög
();

378  
	gm_im∂
->
°rùWhôeS∑˚
();

381 
Såög
 
	gSåög
::
°rùWhôeS∑˚
(
IsWhôeS∑˚Fun˘i⁄På
 
isWhôeS∑˚
) const

383 i‡(!
m_im∂
)

384  
Såög
();

385  
	gm_im∂
->
°rùWhôeS∑˚
(
isWhôeS∑˚
);

388 
Såög
 
	gSåög
::
sim∂ifyWhôeS∑˚
() const

390 i‡(!
m_im∂
)

391  
Såög
();

392  
	gm_im∂
->
sim∂ifyWhôeS∑˚
();

395 
Såög
 
	gSåög
::
sim∂ifyWhôeS∑˚
(
IsWhôeS∑˚Fun˘i⁄På
 
isWhôeS∑˚
) const

397 i‡(!
m_im∂
)

398  
Såög
();

399  
	gm_im∂
->
sim∂ifyWhôeS∑˚
(
isWhôeS∑˚
);

402 
Såög
 
	gSåög
::
ªmoveCh¨a˘îs
(
Ch¨a˘îM©chFun˘i⁄På
 
födM©ch
) const

404 i‡(!
m_im∂
)

405  
Såög
();

406  
	gm_im∂
->
ªmoveCh¨a˘îs
(
födM©ch
);

409 
Såög
 
	gSåög
::
fﬁdCa£
() const

411 i‡(!
m_im∂
)

412  
Såög
();

413  
	gm_im∂
->
fﬁdCa£
();

416 
boﬁ
 
	gSåög
::
≥r˚¡age
(& 
ªsu…
) const

418 i‡(!
m_im∂
 || !m_im∂->
Àngth
())

419  
Ál£
;

421 i‡((*
	gm_im∂
)[
m_im∂
->
Àngth
() - 1] != '%')

422  
Ál£
;

424 i‡(
	gm_im∂
->
is8Bô
())

425 
	gªsu…
 = 
ch¨a˘îsToI¡Såi˘
(
m_im∂
->
ch¨a˘îs8
(), m_im∂->
Àngth
() - 1);

427 
	gªsu…
 = 
ch¨a˘îsToI¡Såi˘
(
m_im∂
->
ch¨a˘îs16
(), m_im∂->
Àngth
() - 1);

428  
	gåue
;

431 
	gVe˘‹
<
	gUCh¨
> 
	gSåög
::
ch¨a˘îsWôhNuŒTîmö©i⁄
() const

433 
Ve˘‹
<
UCh¨
> 
ªsu…
;

435 i‡(
	gm_im∂
) {

436 
	gªsu…
.
ª£rveInôülC≠acôy
(
Àngth
() + 1);

438 i‡(
is8Bô
()) {

439 c⁄° 
LCh¨
* 
	gch¨a˘îs8
 = 
m_im∂
->
ch¨a˘îs8
();

440 
size_t
 
	gi
 = 0; i < 
Àngth
(); ++i)

441 
	gªsu…
.
uncheckedAµíd
(
ch¨a˘îs8
[
i
]);

443 c⁄° 
UCh¨
* 
	gch¨a˘îs16
 = 
m_im∂
->
ch¨a˘îs16
();

444 
	gªsu…
.
≠≥nd
(
ch¨a˘îs16
, 
m_im∂
->
Àngth
());

447 
	gªsu…
.
≠≥nd
(0);

450  
	gªsu…
;

453 
Såög
 
	gSåög
::
f‹m©
(const *format, ...)

455 
va_li°
 
	g¨gs
;

456 
va_°¨t
(
¨gs
, 
f‹m©
);

458 
	gVe˘‹
<, 256> 
	gbuf„r
;

461 #i‡
COMPILER
(
MSVC
)

462 
	gªsu…
 = 
_vs˝rötf
(
f‹m©
, 
¨gs
);

464 
	gch
;

465 
	gªsu…
 = 
v¢¥ötf
(&
ch
, 1, 
f‹m©
, 
¨gs
);

472 
va_íd
(
¨gs
);

473 
va_°¨t
(
¨gs
, 
f‹m©
);

476 i‡(
	gªsu…
 == 0)

477  
Såög
("");

478 i‡(
	gªsu…
 < 0)

479  
Såög
();

480 
	gÀn
 = 
ªsu…
;

481 
	gbuf„r
.
grow
(
Àn
 + 1);

484 
v¢¥ötf
(
buf„r
.
d©a
(), buf„r.
size
(), 
f‹m©
, 
¨gs
);

486 
va_íd
(
¨gs
);

488  
	gSåögIm∂
::
¸óã
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
buf„r
.
d©a
()), 
Àn
);

491 
Såög
 
	gSåög
::
numbî
(number)

493  
numbîToSåögSig√d
<
Såög
>(
numbî
);

496 
Såög
 
	gSåög
::
numbî
(number)

498  
numbîToSåögUnsig√d
<
Såög
>(
numbî
);

501 
Såög
 
	gSåög
::
numbî
(number)

503  
numbîToSåögSig√d
<
Såög
>(
numbî
);

506 
Såög
 
	gSåög
::
numbî
(number)

508  
numbîToSåögUnsig√d
<
Såög
>(
numbî
);

511 
Såög
 
	gSåög
::
numbî
(number)

513  
numbîToSåögSig√d
<
Såög
>(
numbî
);

516 
Såög
 
	gSåög
::
numbî
(number)

518  
numbîToSåögUnsig√d
<
Såög
>(
numbî
);

521 
Såög
 
	gSåög
::
numbî
(numbî, 
¥ecisi⁄
, 
TøûögZîosTrunˇtögPﬁicy
 
åaûögZîosTrunˇtögPﬁicy
)

523 
NumbîToSåögBuf„r
 
	gbuf„r
;

524  
Såög
(
numbîToFixedPªcisi⁄Såög
(
numbî
, 
¥ecisi⁄
, 
buf„r
, 
åaûögZîosTrunˇtögPﬁicy
 =
TrunˇãTøûögZîos
));

527 
Såög
 
	gSåög
::
numbîToSåögECMAS¸ùt
(
numbî
)

529 
NumbîToSåögBuf„r
 
buf„r
;

530  
Såög
(
numbîToSåög
(
numbî
, 
buf„r
));

533 
Såög
 
	gSåög
::
numbîToSåögFixedWidth
(
numbî
, 
decimÆPœ˚s
)

535 
NumbîToSåögBuf„r
 
	gbuf„r
;

536  
Såög
(
numbîToFixedWidthSåög
(
numbî
, 
decimÆPœ˚s
, 
buf„r
));

539 
	gSåög
::
toI¡Såi˘
(
boﬁ
* 
ok
, 
ba£
) const

541 i‡(!
	gm_im∂
) {

542 i‡(
	gok
)

543 *
	gok
 = 
Ál£
;

546  
	gm_im∂
->
toI¡Såi˘
(
ok
, 
ba£
);

549 
	gSåög
::
toUI¡Såi˘
(
boﬁ
* 
ok
, 
ba£
) const

551 i‡(!
	gm_im∂
) {

552 i‡(
	gok
)

553 *
	gok
 = 
Ál£
;

556  
	gm_im∂
->
toUI¡Såi˘
(
ok
, 
ba£
);

559 
öt64_t
 
	gSåög
::
toI¡64Såi˘
(
boﬁ
* 
ok
, 
ba£
) const

561 i‡(!
	gm_im∂
) {

562 i‡(
	gok
)

563 *
	gok
 = 
Ál£
;

566  
	gm_im∂
->
toI¡64Såi˘
(
ok
, 
ba£
);

569 
uöt64_t
 
	gSåög
::
toUI¡64Såi˘
(
boﬁ
* 
ok
, 
ba£
) const

571 i‡(!
	gm_im∂
) {

572 i‡(
	gok
)

573 *
	gok
 = 
Ál£
;

576  
	gm_im∂
->
toUI¡64Såi˘
(
ok
, 
ba£
);

579 
öçå_t
 
	gSåög
::
toI¡PåSåi˘
(
boﬁ
* 
ok
, 
ba£
) const

581 i‡(!
	gm_im∂
) {

582 i‡(
	gok
)

583 *
	gok
 = 
Ál£
;

586  
	gm_im∂
->
toI¡PåSåi˘
(
ok
, 
ba£
);

589 
	gSåög
::
toI¡
(
boﬁ
* 
ok
) const

591 i‡(!
m_im∂
) {

592 i‡(
ok
)

593 *
ok
 = 
Ál£
;

596  
	gm_im∂
->
toI¡
(
ok
);

599 
	gSåög
::
toUI¡
(
boﬁ
* 
ok
) const

601 i‡(!
m_im∂
) {

602 i‡(
ok
)

603 *
ok
 = 
Ál£
;

606  
	gm_im∂
->
toUI¡
(
ok
);

609 
öt64_t
 
	gSåög
::
toI¡64
(
boﬁ
* 
ok
) const

611 i‡(!
m_im∂
) {

612 i‡(
ok
)

613 *
ok
 = 
Ál£
;

616  
	gm_im∂
->
toI¡64
(
ok
);

619 
uöt64_t
 
	gSåög
::
toUI¡64
(
boﬁ
* 
ok
) const

621 i‡(!
m_im∂
) {

622 i‡(
ok
)

623 *
ok
 = 
Ál£
;

626  
	gm_im∂
->
toUI¡64
(
ok
);

629 
öçå_t
 
	gSåög
::
toI¡På
(
boﬁ
* 
ok
) const

631 i‡(!
m_im∂
) {

632 i‡(
ok
)

633 *
ok
 = 
Ál£
;

636  
	gm_im∂
->
toI¡På
(
ok
);

639 
	gSåög
::
toDoubÀ
(
boﬁ
* 
ok
) const

641 i‡(!
m_im∂
) {

642 i‡(
ok
)

643 *
ok
 = 
Ál£
;

646  
	gm_im∂
->
toDoubÀ
(
ok
);

649 
	gSåög
::
toFlﬂt
(
boﬁ
* 
ok
) const

651 i‡(!
m_im∂
) {

652 i‡(
ok
)

653 *
ok
 = 
Ál£
;

656  
	gm_im∂
->
toFlﬂt
(
ok
);

659 #i‡
COMPILER_SUPPORTS
(
CXX_REFERENCE_QUALIFIED_FUNCTIONS
)

660 
Såög
 
	gSåög
::
isﬁ©edC›y
() const &

662 i‡(!
m_im∂
)

663  
Såög
();

664  
	gm_im∂
->
isﬁ©edC›y
();

667 
Såög
 
	gSåög
::
isﬁ©edC›y
() &&

669 i‡(
isSa„ToSídToAnŸhîThªad
()) {

672  
Såög
(
WTF
::
move
(*
this
));

675 i‡(!
	gm_im∂
)

676  
Såög
();

678  
	gm_im∂
->
isﬁ©edC›y
();

681 
Såög
 
	gSåög
::
isﬁ©edC›y
() const

683 i‡(!
m_im∂
)

684  
Såög
();

685  
	gm_im∂
->
isﬁ©edC›y
();

689 
boﬁ
 
	gSåög
::
isSa„ToSídToAnŸhîThªad
() const

691 i‡(!
im∂
())

692  
åue
;

695 i‡(
im∂
()->
isAtomic
())

696  
	gÁl£
;

697 i‡(
im∂
()->
hasO√Ref
())

698  
	gåue
;

699 i‡(
isEm±y
())

700  
	gåue
;

701  
	gÁl£
;

704 
	gSåög
::
•lô
(c⁄° 
Såög
& 
£∑øt‹
, 
boﬁ
 
ÆlowEm±yE¡rõs
, 
Ve˘‹
<Såög>& 
ªsu…
) const

706 
	gªsu…
.
˛ór
();

708 
	g°¨tPos
 = 0;

709 
size_t
 
	gídPos
;

710 (
	gídPos
 = 
föd
(
£∑øt‹
, 
°¨tPos
)Ë!
nŸFound
) {

711 i‡(
ÆlowEm±yE¡rõs
 || 
°¨tPos
 !
ídPos
)

712 
ªsu…
.
≠≥nd
(
sub°rög
(
°¨tPos
, 
ídPos
 - startPos));

713 
	g°¨tPos
 = 
ídPos
 + 
£∑øt‹
.
Àngth
();

715 i‡(
	gÆlowEm±yE¡rõs
 || 
	g°¨tPos
 !
Àngth
())

716 
ªsu…
.
≠≥nd
(
sub°rög
(
°¨tPos
));

719 
	gSåög
::
•lô
(
UCh¨
 
£∑øt‹
, 
boﬁ
 
ÆlowEm±yE¡rõs
, 
Ve˘‹
<
Såög
>& 
ªsu…
) const

721 
	gªsu…
.
˛ór
();

723 
	g°¨tPos
 = 0;

724 
size_t
 
	gídPos
;

725 (
	gídPos
 = 
föd
(
£∑øt‹
, 
°¨tPos
)Ë!
nŸFound
) {

726 i‡(
ÆlowEm±yE¡rõs
 || 
°¨tPos
 !
ídPos
)

727 
ªsu…
.
≠≥nd
(
sub°rög
(
°¨tPos
, 
ídPos
 - startPos));

728 
	g°¨tPos
 = 
ídPos
 + 1;

730 i‡(
	gÆlowEm±yE¡rõs
 || 
	g°¨tPos
 !
Àngth
())

731 
ªsu…
.
≠≥nd
(
sub°rög
(
°¨tPos
));

734 
CSåög
 
	gSåög
::
ascii
() const

739 
Àngth
 = 
this
->length();

740 i‡(!
	gÀngth
) {

741 * 
	gch¨a˘îBuf„r
;

742  
	gCSåög
::
√wUnöôülized
(
Àngth
, 
ch¨a˘îBuf„r
);

745 i‡(
	gthis
->
is8Bô
()) {

746 c⁄° 
LCh¨
* 
	gch¨a˘îs
 = 
this
->
ch¨a˘îs8
();

748 * 
	gch¨a˘îBuf„r
;

749 
CSåög
 
	gªsu…
 = CSåög::
√wUnöôülized
(
Àngth
, 
ch¨a˘îBuf„r
);

751 
	gi
 = 0; i < 
	gÀngth
; ++i) {

752 
LCh¨
 
	gch
 = 
ch¨a˘îs
[
i
];

753 
	gch¨a˘îBuf„r
[
i
] = 
ch
 && (ch < 0x20 || ch > 0x7f) ? '?' : ch;

756  
	gªsu…
;

759 c⁄° 
UCh¨
* 
	gch¨a˘îs
 = 
this
->
ch¨a˘îs16
();

761 * 
	gch¨a˘îBuf„r
;

762 
CSåög
 
	gªsu…
 = CSåög::
√wUnöôülized
(
Àngth
, 
ch¨a˘îBuf„r
);

764 
	gi
 = 0; i < 
	gÀngth
; ++i) {

765 
UCh¨
 
	gch
 = 
ch¨a˘îs
[
i
];

766 
	gch¨a˘îBuf„r
[
i
] = 
ch
 && (ch < 0x20 || ch > 0x7f) ? '?' : ch;

769  
	gªsu…
;

772 
CSåög
 
	gSåög
::
œtö1
() const

777 
Àngth
 = 
this
->length();

779 i‡(!
	gÀngth
)

780  
CSåög
("", 0);

782 i‡(
is8Bô
())

783  
CSåög
(
ªöãΩªt_ˇ°
<c⁄° *>(
this
->
ch¨a˘îs8
()), 
Àngth
);

785 c⁄° 
UCh¨
* 
	gch¨a˘îs
 = 
this
->
ch¨a˘îs16
();

787 * 
	gch¨a˘îBuf„r
;

788 
CSåög
 
	gªsu…
 = CSåög::
√wUnöôülized
(
Àngth
, 
ch¨a˘îBuf„r
);

790 
	gi
 = 0; i < 
	gÀngth
; ++i) {

791 
UCh¨
 
	gch
 = 
ch¨a˘îs
[
i
];

792 
	gch¨a˘îBuf„r
[
i
] = 
ch
 > 0xff ? '?' : ch;

795  
	gªsu…
;

798 
CSåög
 
	gSåög
::
utf8
(
C⁄vîsi⁄Mode
 
mode
) const

800 i‡(!
m_im∂
)

801  
CSåög
("", 0);

803  
	gm_im∂
->
utf8
(
mode
);

806 
Såög
 
	gSåög
::
make8BôFrom16BôSour˚
(c⁄° 
UCh¨
* 
sour˚
, 
size_t
 
Àngth
)

808 i‡(!
	gÀngth
)

809  
Såög
();

811 
LCh¨
* 
	gde°ö©i⁄
;

812 
Såög
 
	gªsu…
 = Såög::
¸óãUnöôülized
(
Àngth
, 
de°ö©i⁄
);

814 
c›yLCh¨sFromUCh¨Sour˚
(
de°ö©i⁄
, 
sour˚
, 
Àngth
);

816  
	gªsu…
;

819 
Såög
 
	gSåög
::
make16BôFrom8BôSour˚
(c⁄° 
LCh¨
* 
sour˚
, 
size_t
 
Àngth
)

821 i‡(!
	gÀngth
)

822  
Såög
();

824 
UCh¨
* 
	gde°ö©i⁄
;

825 
Såög
 
	gªsu…
 = Såög::
¸óãUnöôülized
(
Àngth
, 
de°ö©i⁄
);

827 
	gSåögIm∂
::
c›yCh¨s
(
de°ö©i⁄
, 
sour˚
, 
Àngth
);

829  
	gªsu…
;

832 
Såög
 
	gSåög
::
‰omUTF8
(c⁄° 
LCh¨
* 
°rögSèπ
, 
size_t
 
Àngth
)

834 i‡(
	gÀngth
 > 
	g°d
::
numîic_limôs
<>::
max
())

835 
CRASH
();

837 i‡(!
	g°rögSèπ
)

838  
Såög
();

840 i‡(!
	gÀngth
)

841  
em±ySåög
();

843 i‡(
ch¨a˘îsAªAŒASCII
(
°rögSèπ
, 
Àngth
))

844  
	gSåögIm∂
::
¸óã
(
°rögSèπ
, 
Àngth
);

846 
	gVe˘‹
<
	gUCh¨
, 1024> 
buf„r
(
Àngth
);

847 
UCh¨
* 
	gbuf„rSèπ
 = 
buf„r
.
d©a
();

849 
UCh¨
* 
	gbuf„rCuºít
 = 
buf„rSèπ
;

850 c⁄° * 
	g°rögCuºít
 = 
ªöãΩªt_ˇ°
<c⁄° *>(
°rögSèπ
);

851 i‡(
c⁄vîtUTF8ToUTF16
(&
°rögCuºít
, 
ªöãΩªt_ˇ°
<c⁄° *>(
°rögSèπ
 + 
Àngth
), &
buf„rCuºít
, buf„rCuºíà+ 
buf„r
.
size
()Ë!
c⁄vîsi⁄OK
)

852  
Såög
();

854 
	gutf16Lígth
 = 
buf„rCuºít
 - 
buf„rSèπ
;

855 
ASSERT_WITH_SECURITY_IMPLICATION
(
utf16Lígth
 < 
Àngth
);

856  
	gSåögIm∂
::
¸óã
(
buf„rSèπ
, 
utf16Lígth
);

859 
Såög
 
	gSåög
::
‰omUTF8
(c⁄° 
LCh¨
* 
°rög
)

861 i‡(!
°rög
)

862  
Såög
();

863  
‰omUTF8
(
°rög
, 
°æí
(
ªöãΩªt_ˇ°
<const *>(string)));

866 
Såög
 
	gSåög
::
‰omUTF8
(c⁄° 
CSåög
& 
s
)

868  
‰omUTF8
(
s
.
d©a
());

871 
Såög
 
	gSåög
::
‰omUTF8WôhL©ö1FÆlback
(c⁄° 
LCh¨
* 
°rög
, 
size_t
 
size
)

873 
Såög
 
	gutf8
 = 
‰omUTF8
(
°rög
, 
size
);

874 i‡(!
	gutf8
)

875  
Såög
(
°rög
, 
size
);

876  
	gutf8
;

881 
boﬁ
 
isCh¨a˘îAŒowedInBa£
(
UCh¨
 
c
, 
ba£
)

883 i‡(
	gc
 > 0x7F)

884  
	gÁl£
;

885 i‡(
isASCIIDigô
(
c
))

886  
	gc
 - '0' < 
	gba£
;

887 i‡(
isASCIIAÕha
(
c
)) {

888 i‡(
	gba£
 > 36)

889 
	gba£
 = 36;

890  (
	gc
 >'a' && 
c
 < 'a' + 
ba£
 - 10)

891 || (
c
 >'A' && c < 'A' + 
ba£
 - 10);

893  
	gÁl£
;

896 
	gãm∂©e
 <
ty≥«me
 
	gI¡egølTy≥
,Åy≥«mê
	gCh¨Ty≥
>

897 
ölöe
 
I¡egølTy≥
 
toI¡egølTy≥
(c⁄° 
Ch¨Ty≥
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
, 
ba£
)

899 c⁄° 
I¡egølTy≥
 
	göãgølMax
 = 
°d
::
numîic_limôs
<I¡egølTy≥>::
max
();

900 c⁄° 
boﬁ
 
	gisSig√d
 = 
°d
::
numîic_limôs
<
I¡egølTy≥
>::
is_sig√d
;

901 c⁄° 
I¡egølTy≥
 
	gmaxMu…ùlõr
 = 
öãgølMax
 / 
ba£
;

903 
I¡egølTy≥
 
	gvÆue
 = 0;

904 
boﬁ
 
	gisOk
 = 
Ál£
;

905 
boﬁ
 
	gisNeg©ive
 = 
Ál£
;

907 i‡(!
	gd©a
)

908 
	gbye
;

911 
	gÀngth
 && 
isS∑˚OrNewlöe
(*
d©a
)) {

912 --
	gÀngth
;

913 ++
	gd©a
;

916 i‡(
	gisSig√d
 && 
	gÀngth
 && *
	gd©a
 == '-') {

917 --
Àngth
;

918 ++
	gd©a
;

919 
	gisNeg©ive
 = 
åue
;

920 } i‡(
	gÀngth
 && *
	gd©a
 == '+') {

921 --
Àngth
;

922 ++
	gd©a
;

925 i‡(!
	gÀngth
 || !
isCh¨a˘îAŒowedInBa£
(*
d©a
, 
ba£
))

926 
	gbye
;

928 
	gÀngth
 && 
isCh¨a˘îAŒowedInBa£
(*
d©a
, 
ba£
)) {

929 --
	gÀngth
;

930 
I¡egølTy≥
 
	gdigôVÆue
;

931 
Ch¨Ty≥
 
	gc
 = *
d©a
;

932 i‡(
isASCIIDigô
(
c
))

933 
	gdigôVÆue
 = 
c
 - '0';

934 i‡(
	gc
 >= 'a')

935 
digôVÆue
 = 
c
 - 'a' + 10;

937 
	gdigôVÆue
 = 
c
 - 'A' + 10;

939 i‡(
	gvÆue
 > 
	gmaxMu…ùlõr
 || (vÆuê=
maxMu…ùlõr
 && 
digôVÆue
 > (
öãgølMax
 % 
ba£
Ë+ 
isNeg©ive
))

940 
bye
;

942 
	gvÆue
 = 
ba£
 * 
vÆue
 + 
digôVÆue
;

943 ++
	gd©a
;

946 #i‡
COMPILER
(
MSVC
)

947 #¥agm®
w¨nög
(
push
, 0)

948 #¥agm®
w¨nög
(
dißbÀ
:4146)

951 i‡(
	gisNeg©ive
)

952 
	gvÆue
 = -
vÆue
;

954 #i‡
COMPILER
(
MSVC
)

955 #¥agm®
w¨nög
(
p›
)

959 
	gÀngth
 && 
isS∑˚OrNewlöe
(*
d©a
)) {

960 --
	gÀngth
;

961 ++
	gd©a
;

964 i‡(!
	gÀngth
)

965 
	gisOk
 = 
åue
;

966 
	gbye
:

967 i‡(
ok
)

968 *
ok
 = 
isOk
;

969  
	gisOk
 ? 
	gvÆue
 : 0;

972 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
>

973 
ÀngthOfCh¨a˘îsAsI¡egî
(c⁄° 
Ch¨Ty≥
* 
d©a
, 
size_t
 
Àngth
)

975 
size_t
 
	gi
 = 0;

978 ; 
	gi
 !
Àngth
; ++i) {

979 i‡(!
isS∑˚OrNewlöe
(
d©a
[
i
]))

984 i‡(
	gi
 !
Àngth
 && (
d©a
[
i
] == '+' || data[i] == '-'))

985 ++
i
;

988 ; 
	gi
 !
Àngth
; ++i) {

989 i‡(!
isASCIIDigô
(
d©a
[
i
]))

993  
	gi
;

996 
ch¨a˘îsToI¡Såi˘
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
, 
ba£
)

998  
	gtoI¡egølTy≥
<, 
	gLCh¨
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	gba£
);

1001 
ch¨a˘îsToI¡Såi˘
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
, 
ba£
)

1003  
	gtoI¡egølTy≥
<, 
	gUCh¨
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	gba£
);

1006 
ch¨a˘îsToUI¡Såi˘
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
, 
ba£
)

1008  
	gtoI¡egølTy≥
<, 
	gLCh¨
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	gba£
);

1011 
ch¨a˘îsToUI¡Såi˘
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
, 
ba£
)

1013  
	gtoI¡egølTy≥
<, 
	gUCh¨
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	gba£
);

1016 
öt64_t
 
ch¨a˘îsToI¡64Såi˘
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
, 
ba£
)

1018  
	gtoI¡egølTy≥
<
	göt64_t
, 
	gLCh¨
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	gba£
);

1021 
öt64_t
 
ch¨a˘îsToI¡64Såi˘
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
, 
ba£
)

1023  
	gtoI¡egølTy≥
<
	göt64_t
, 
	gUCh¨
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	gba£
);

1026 
uöt64_t
 
ch¨a˘îsToUI¡64Såi˘
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
, 
ba£
)

1028  
	gtoI¡egølTy≥
<
	guöt64_t
, 
	gLCh¨
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	gba£
);

1031 
uöt64_t
 
ch¨a˘îsToUI¡64Såi˘
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
, 
ba£
)

1033  
	gtoI¡egølTy≥
<
	guöt64_t
, 
	gUCh¨
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	gba£
);

1036 
öçå_t
 
ch¨a˘îsToI¡PåSåi˘
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
, 
ba£
)

1038  
	gtoI¡egølTy≥
<
	göçå_t
, 
	gLCh¨
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	gba£
);

1041 
öçå_t
 
ch¨a˘îsToI¡PåSåi˘
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
, 
ba£
)

1043  
	gtoI¡egølTy≥
<
	göçå_t
, 
	gUCh¨
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	gba£
);

1046 
ch¨a˘îsToI¡
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1048  
	gtoI¡egølTy≥
<, 
	gLCh¨
>(
	gd©a
, 
	gÀngthOfCh¨a˘îsAsI¡egî
<LCh¨>(d©a, 
	gÀngth
), 
	gok
, 10);

1051 
ch¨a˘îsToI¡
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1053  
	gtoI¡egølTy≥
<, 
	gUCh¨
>(
	gd©a
, 
ÀngthOfCh¨a˘îsAsI¡egî
(
d©a
, 
Àngth
), 
	gok
, 10);

1056 
ch¨a˘îsToUI¡
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1058  
	gtoI¡egølTy≥
<, 
	gLCh¨
>(
	gd©a
, 
	gÀngthOfCh¨a˘îsAsI¡egî
<LCh¨>(d©a, 
	gÀngth
), 
	gok
, 10);

1061 
ch¨a˘îsToUI¡
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1063  
	gtoI¡egølTy≥
<, 
	gUCh¨
>(
	gd©a
, 
	gÀngthOfCh¨a˘îsAsI¡egî
<UCh¨>(d©a, 
	gÀngth
), 
	gok
, 10);

1066 
öt64_t
 
ch¨a˘îsToI¡64
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1068  
	gtoI¡egølTy≥
<
	göt64_t
, 
	gLCh¨
>(
	gd©a
, 
	gÀngthOfCh¨a˘îsAsI¡egî
<LCh¨>(d©a, 
	gÀngth
), 
	gok
, 10);

1071 
öt64_t
 
ch¨a˘îsToI¡64
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1073  
	gtoI¡egølTy≥
<
	göt64_t
, 
	gUCh¨
>(
	gd©a
, 
	gÀngthOfCh¨a˘îsAsI¡egî
<UCh¨>(d©a, 
	gÀngth
), 
	gok
, 10);

1076 
uöt64_t
 
ch¨a˘îsToUI¡64
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1078  
	gtoI¡egølTy≥
<
	guöt64_t
, 
	gLCh¨
>(
	gd©a
, 
	gÀngthOfCh¨a˘îsAsI¡egî
<LCh¨>(d©a, 
	gÀngth
), 
	gok
, 10);

1081 
uöt64_t
 
ch¨a˘îsToUI¡64
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1083  
	gtoI¡egølTy≥
<
	guöt64_t
, 
	gUCh¨
>(
	gd©a
, 
	gÀngthOfCh¨a˘îsAsI¡egî
<UCh¨>(d©a, 
	gÀngth
), 
	gok
, 10);

1086 
öçå_t
 
ch¨a˘îsToI¡På
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1088  
	gtoI¡egølTy≥
<
	göçå_t
, 
	gLCh¨
>(
	gd©a
, 
	gÀngthOfCh¨a˘îsAsI¡egî
<LCh¨>(d©a, 
	gÀngth
), 
	gok
, 10);

1091 
öçå_t
 
ch¨a˘îsToI¡På
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1093  
	gtoI¡egølTy≥
<
	göçå_t
, 
	gUCh¨
>(
	gd©a
, 
	gÀngthOfCh¨a˘îsAsI¡egî
<UCh¨>(d©a, 
	gÀngth
), 
	gok
, 10);

1096 
	eTøûögJunkPﬁicy
 { 
	gDißŒowTøûögJunk
, 
	gAŒowTøûögJunk
 };

1098 
	gãm∂©e
 <
ty≥«me
 
	gCh¨Ty≥
, 
TøûögJunkPﬁicy
 
	gpﬁicy
>

1099 
ölöe
 
toDoubÀTy≥
(c⁄° 
Ch¨Ty≥
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
, size_t& 
∑r£dLígth
)

1101 
size_t
 
	gÀadögS∑˚sLígth
 = 0;

1102 
	gÀadögS∑˚sLígth
 < 
	gÀngth
 && 
isASCIIS∑˚
(
d©a
[
ÀadögS∑˚sLígth
]))

1103 ++
	gÀadögS∑˚sLígth
;

1105 
	gnumbî
 = 
∑r£DoubÀ
(
d©a
 + 
ÀadögS∑˚sLígth
, 
Àngth
 -ÜódögS∑˚sLígth, 
∑r£dLígth
);

1106 i‡(!
	g∑r£dLígth
) {

1107 i‡(
	gok
)

1108 *
	gok
 = 
Ál£
;

1112 
	g∑r£dLígth
 +
ÀadögS∑˚sLígth
;

1113 i‡(
	gok
)

1114 *
	gok
 = 
pﬁicy
 =
AŒowTøûögJunk
 || 
∑r£dLígth
 =
Àngth
;

1115  
	gnumbî
;

1118 
ch¨a˘îsToDoubÀ
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1120 
size_t
 
	g∑r£dLígth
;

1121  
	gtoDoubÀTy≥
<
	gLCh¨
, 
	gDißŒowTøûögJunk
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	g∑r£dLígth
);

1124 
ch¨a˘îsToDoubÀ
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1126 
size_t
 
	g∑r£dLígth
;

1127  
	gtoDoubÀTy≥
<
	gUCh¨
, 
	gDißŒowTøûögJunk
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	g∑r£dLígth
);

1130 
ch¨a˘îsToFlﬂt
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1133 
size_t
 
	g∑r£dLígth
;

1134  
	g°©ic_ˇ°
<>(
	gtoDoubÀTy≥
<
	gLCh¨
, 
	gDißŒowTøûögJunk
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	g∑r£dLígth
));

1137 
ch¨a˘îsToFlﬂt
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, 
boﬁ
* 
ok
)

1140 
size_t
 
	g∑r£dLígth
;

1141  
	g°©ic_ˇ°
<>(
	gtoDoubÀTy≥
<
	gUCh¨
, 
	gDißŒowTøûögJunk
>(
	gd©a
, 
	gÀngth
, 
	gok
, 
	g∑r£dLígth
));

1144 
ch¨a˘îsToFlﬂt
(c⁄° 
LCh¨
* 
d©a
, 
size_t
 
Àngth
, size_t& 
∑r£dLígth
)

1147  
	g°©ic_ˇ°
<>(
	gtoDoubÀTy≥
<
	gLCh¨
, 
	gAŒowTøûögJunk
>(
	gd©a
, 
	gÀngth
, 0, 
	g∑r£dLígth
));

1150 
ch¨a˘îsToFlﬂt
(c⁄° 
UCh¨
* 
d©a
, 
size_t
 
Àngth
, size_t& 
∑r£dLígth
)

1153  
	g°©ic_ˇ°
<>(
	gtoDoubÀTy≥
<
	gUCh¨
, 
	gAŒowTøûögJunk
>(
	gd©a
, 
	gÀngth
, 0, 
	g∑r£dLígth
));

1156 c⁄° 
	gSåög
& 
em±ySåög
()

1158 
	gNevîDe°royed
<
	gSåög
> 
em±ySåög
(
SåögIm∂
::
em±y
());

1160  
	gem±ySåög
;

1165 #i‚de‡
NDEBUG


1167 
Såög
* 
°rög
(const *);

1168 
	gVe˘‹
<> 
asciiDebug
(
SåögIm∂
* 
im∂
);

1169 
	gVe˘‹
<> 
asciiDebug
(
Såög
& 
°rög
);

1171 
	gSåög
::
	$show
() const

1173 
	`d©aLogF
("%s\n", 
	`asciiDebug
(
	`im∂
()).
	`d©a
());

1174 
	}
}

1176 
Såög
* 
	$°rög
(c⁄° * 
s
)

1179  
√w
 
	`Såög
(
s
);

1180 
	}
}

1182 
	gVe˘‹
<> 
	$asciiDebug
(
SåögIm∂
* 
im∂
)

1184 i‡(!
im∂
)

1185  
	`asciiDebug
(
	`Såög
(
	`ASCIILôîÆ
("[nuŒ]")).
	`im∂
());

1187 
Ve˘‹
<> 
buf„r
;

1188 
i
 = 0; i < 
im∂
->
	`Àngth
(); ++i) {

1189 
UCh¨
 
ch
 = (*
im∂
)[
i
];

1190 i‡(
	`isASCIIPröèbÀ
(
ch
)) {

1191 i‡(
ch
 == '\\')

1192 
buf„r
.
	`≠≥nd
(
ch
);

1193 
buf„r
.
	`≠≥nd
(
ch
);

1195 
buf„r
.
	`≠≥nd
('\\');

1196 
buf„r
.
	`≠≥nd
('u');

1197 
	`≠≥ndUnsig√dAsHexFixedSize
(
ch
, 
buf„r
, 4);

1200 
buf„r
.
	`≠≥nd
('\0');

1201  
buf„r
;

1202 
	}
}

1204 
	gVe˘‹
<> 
	$asciiDebug
(
Såög
& 
°rög
)

1206  
	`asciiDebug
(
°rög
.
	`im∂
());

1207 
	}
}

	@text/WTFString.h

22 #i‚de‡
WTFSåög_h


23 
	#WTFSåög_h


	)

28 
	~<wtf/ãxt/ASCIIFa°P©h.h
>

29 
	~<wtf/ãxt/SåögIm∂.h
>

31 #ifde‡
__OBJC__


32 
	~<objc/objc.h
>

35 
«me•a˚
 
	gWTF
 {

37 
˛ass
 
	gCSåög
;

38 
	gSåögHash
;

42 
WTF_EXPORT_STRING_API
 
ch¨a˘îsToI¡Såi˘
(c⁄° 
LCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

43 
WTF_EXPORT_STRING_API
 
ch¨a˘îsToI¡Såi˘
(c⁄° 
UCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

44 
WTF_EXPORT_STRING_API
 
ch¨a˘îsToUI¡Såi˘
(c⁄° 
LCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

45 
WTF_EXPORT_STRING_API
 
ch¨a˘îsToUI¡Såi˘
(c⁄° 
UCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

46 
öt64_t
 
ch¨a˘îsToI¡64Såi˘
(c⁄° 
LCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

47 
öt64_t
 
ch¨a˘îsToI¡64Såi˘
(c⁄° 
UCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

48 
uöt64_t
 
ch¨a˘îsToUI¡64Såi˘
(c⁄° 
LCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

49 
uöt64_t
 
ch¨a˘îsToUI¡64Såi˘
(c⁄° 
UCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

50 
öçå_t
 
ch¨a˘îsToI¡PåSåi˘
(c⁄° 
LCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

51 
öçå_t
 
ch¨a˘îsToI¡PåSåi˘
(c⁄° 
UCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0, 
ba£
 = 10);

53 
WTF_EXPORT_STRING_API
 
ch¨a˘îsToI¡
(c⁄° 
LCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

54 
WTF_EXPORT_STRING_API
 
ch¨a˘îsToI¡
(c⁄° 
UCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

55 
ch¨a˘îsToUI¡
(c⁄° 
LCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

56 
ch¨a˘îsToUI¡
(c⁄° 
UCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

57 
öt64_t
 
ch¨a˘îsToI¡64
(c⁄° 
LCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

58 
öt64_t
 
ch¨a˘îsToI¡64
(c⁄° 
UCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

59 
uöt64_t
 
ch¨a˘îsToUI¡64
(c⁄° 
LCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

60 
uöt64_t
 
ch¨a˘îsToUI¡64
(c⁄° 
UCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

61 
öçå_t
 
ch¨a˘îsToI¡På
(c⁄° 
LCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

62 
öçå_t
 
ch¨a˘îsToI¡På
(c⁄° 
UCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

67 
WTF_EXPORT_STRING_API
 
ch¨a˘îsToDoubÀ
(c⁄° 
LCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

68 
WTF_EXPORT_STRING_API
 
ch¨a˘îsToDoubÀ
(c⁄° 
UCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

69 
WTF_EXPORT_STRING_API
 
ch¨a˘îsToFlﬂt
(c⁄° 
LCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

70 
WTF_EXPORT_STRING_API
 
ch¨a˘îsToFlﬂt
(c⁄° 
UCh¨
*, 
size_t
, 
boﬁ
* 
ok
 = 0);

71 
WTF_EXPORT_STRING_API
 
ch¨a˘îsToFlﬂt
(c⁄° 
LCh¨
*, 
size_t
, size_t& 
∑r£dLígth
);

72 
WTF_EXPORT_STRING_API
 
ch¨a˘îsToFlﬂt
(c⁄° 
UCh¨
*, 
size_t
, size_t& 
∑r£dLígth
);

74 
˛ass
 
	gASCIILôîÆ
;

76 
	eTøûögZîosTrunˇtögPﬁicy
 {

77 
	gKìpTøûögZîos
,

78 
	gTrunˇãTøûögZîos


81 
	gãm∂©e
<
boﬁ
 
isS≥cülCh¨a˘î
(
UCh¨
), 
ty≥«me
 
	gCh¨a˘îTy≥
>

82 
boﬁ
 
isAŒS≥cülCh¨a˘îs
(c⁄° 
Ch¨a˘îTy≥
*, 
size_t
);

84 ˛as†
	cSåög
 {

85 
	gpublic
:

87 
Såög
() { }

90 
WTF_EXPORT_STRING_API
 
Såög
(c⁄° 
UCh¨
* 
ch¨a˘îs
, 
Àngth
);

100 
	gãm∂©e
<
size_t
 
	gölöeC≠acôy
, 
ty≥«me
 
	gOvîÊowH™dÀr
>

101 
ex∂icô
 
Såög
(c⁄° 
Ve˘‹
<
UCh¨
, 
ölöeC≠acôy
, 
OvîÊowH™dÀr
>&);

104 
WTF_EXPORT_STRING_API
 
Såög
(c⁄° 
UCh¨
*);

107 
WTF_EXPORT_STRING_API
 
Såög
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
);

108 
WTF_EXPORT_STRING_API
 
Såög
(c⁄° * 
ch¨a˘îs
, 
Àngth
);

111 
WTF_EXPORT_STRING_API
 
Såög
(c⁄° 
LCh¨
* 
ch¨a˘îs
);

112 
WTF_EXPORT_STRING_API
 
Såög
(c⁄° * 
ch¨a˘îs
);

115 
Såög
(
SåögIm∂
& 
im∂
Ë: 
m_im∂
(&impl) { }

116 
Såög
(
SåögIm∂
* 
im∂
Ë: 
m_im∂
(impl) { }

117 
Såög
(
PassRefPå
<
SåögIm∂
> 
im∂
Ë: 
m_im∂
(impl) { }

118 
Såög
(
PassRef
<
SåögIm∂
>&& 
im∂
Ë: 
m_im∂
(
°d
::
f‹w¨d
<PassRef<StringImpl>>(impl)) { }

119 
Såög
(
RefPå
<
SåögIm∂
>&& 
im∂
Ë: 
m_im∂
(impl) { }

122 
WTF_EXPORT_STRING_API
 
Såög
(
ASCIILôîÆ
 
ch¨a˘îs
);

126 
	eC⁄°ru˘FromLôîÆTag
 { 
	gC⁄°ru˘FromLôîÆ
 };

127 
	gãm∂©e
<
	gch¨a˘îsCou¡
>

128 
Såög
(c⁄° (&
ch¨a˘îs
)[
ch¨a˘îsCou¡
], 
C⁄°ru˘FromLôîÆTag
Ë: 
m_im∂
(
SåögIm∂
::
¸óãFromLôîÆ
<charactersCount>(characters)) { }

132 
Såög
(c⁄° Såög& 
Ÿhî
Ë: 
m_im∂
(other.m_impl) { }

133 
Såög
(Såög&& 
Ÿhî
Ë: 
m_im∂
(Ÿhî.m_im∂.
ªÀa£
()) { }

134 
Såög
& 
›î©‹
=(c⁄° Såög& 
Ÿhî
Ë{ 
m_im∂
 = othî.m_im∂;  *
	gthis
; }

135 
	gSåög
& 
	g›î©‹
=(
Såög
&& 
Ÿhî
Ë{ 
m_im∂
 = othî.m_im∂.
ªÀa£
();  *
	gthis
; }

138 
	gALWAYS_INLINE
 ~
Såög
() { }

140 
sw≠
(
Såög
& 
o
Ë{ 
	gm_im∂
.sw≠(o.
m_im∂
); }

142 
Såög
 
ad›t
(
SåögBuf„r
<
LCh¨
>& 
buf„r
Ë{  
	gSåögIm∂
::adopt(buffer); }

143 
Såög
 
ad›t
(
SåögBuf„r
<
UCh¨
>& 
buf„r
Ë{  
	gSåögIm∂
::adopt(buffer); }

144 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
, 
size_t
 
	gölöeC≠acôy
,Åy≥«mê
	gOvîÊowH™dÀr
>

145 
Såög
 
ad›t
(
Ve˘‹
<
Ch¨a˘îTy≥
, 
ölöeC≠acôy
, 
OvîÊowH™dÀr
>& 
ve˘‹
Ë{  
	gSåögIm∂
::adopt(vector); }

147 
boﬁ
 
isNuŒ
(Ëc⁄° {  !
	gm_im∂
; }

148 
boﬁ
 
isEm±y
(Ëc⁄° {  !
	gm_im∂
 || !m_im∂->
Àngth
(); }

150 
SåögIm∂
* 
im∂
(Ëc⁄° {  
	gm_im∂
.
gë
(); }

151 
	gPassRefPå
<
	gSåögIm∂
> 
ªÀa£Im∂
(Ë{  
	gm_im∂
.
ªÀa£
(); }

153 
Àngth
() const

155 i‡(!
	gm_im∂
)

157  
	gm_im∂
->
Àngth
();

160 c⁄° 
LCh¨
* 
ch¨a˘îs8
() const

162 i‡(!
	gm_im∂
)

164 
ASSERT
(
m_im∂
->
is8Bô
());

165  
	gm_im∂
->
ch¨a˘îs8
();

168 c⁄° 
UCh¨
* 
ch¨a˘îs16
() const

170 i‡(!
	gm_im∂
)

172 
ASSERT
(!
m_im∂
->
is8Bô
());

173  
	gm_im∂
->
ch¨a˘îs16
();

177 
	gãm∂©e
 <
ty≥«me
 
	gCh¨a˘îTy≥
>

178 
ölöe
 c⁄° 
Ch¨a˘îTy≥
* 
ch¨a˘îs
() const;

180 
boﬁ
 
is8Bô
(Ëc⁄° {  
	gm_im∂
->is8Bit(); }

182 
sizeInByãs
() const

184 i‡(!
	gm_im∂
)

186  
	gm_im∂
->
Àngth
(Ë* (
is8Bô
(Ë? (
	gLCh¨
Ë: (
UCh¨
));

189 
WTF_EXPORT_STRING_API
 
CSåög
 
ascii
() const;

190 
WTF_EXPORT_STRING_API
 
CSåög
 
œtö1
() const;

192 
WTF_EXPORT_STRING_API
 
CSåög
 
utf8
(
C⁄vîsi⁄Mode
 = 
Líõ¡C⁄vîsi⁄
) const;

194 
UCh¨
 
©
(
ödex
) const

196 i‡(!
	gm_im∂
 || 
	gödex
 >
m_im∂
->
Àngth
())

198  (*
	gm_im∂
)[
ödex
];

200 
UCh¨
 
	g›î©‹
[](
	gödex
Ëc⁄° {  
©
(
ödex
); }

202 
WTF_EXPORT_STRING_API
 
Såög
 
numbî
();

203 
WTF_EXPORT_STRING_API
 
Såög
 
numbî
();

204 
WTF_EXPORT_STRING_API
 
Såög
 
numbî
();

205 
WTF_EXPORT_STRING_API
 
Såög
 
numbî
();

206 
WTF_EXPORT_STRING_API
 
Såög
 
numbî
();

207 
WTF_EXPORT_STRING_API
 
Såög
 
numbî
();

209 
WTF_EXPORT_STRING_API
 
Såög
 
numbî
(, 
¥ecisi⁄
 = 6, 
TøûögZîosTrunˇtögPﬁicy
 = 
TrunˇãTøûögZîos
);

212 
WTF_EXPORT_STRING_API
 
Såög
 
numbîToSåögECMAS¸ùt
();

213 
WTF_EXPORT_STRING_API
 
Såög
 
numbîToSåögFixedWidth
(, 
decimÆPœ˚s
);

216 
size_t
 
föd
(
UCh¨
 
c
, 
°¨t
 = 0) const

217 {  
m_im∂
 ? m_im∂->
föd
(
c
, 
°¨t
Ë: 
nŸFound
; }

219 
size_t
 
föd
(c⁄° 
Såög
& 
°r
) const

220 {  
	gm_im∂
 ? m_im∂->
föd
(
°r
.
im∂
()Ë: 
nŸFound
; }

221 
size_t
 
föd
(c⁄° 
Såög
& 
°r
, 
°¨t
) const

222 {  
	gm_im∂
 ? m_im∂->
föd
(
°r
.
im∂
(), 
°¨t
Ë: 
nŸFound
; }

224 
size_t
 
föd
(
Ch¨a˘îM©chFun˘i⁄På
 
m©chFun˘i⁄
, 
°¨t
 = 0) const

225 {  
m_im∂
 ? m_im∂->
föd
(
m©chFun˘i⁄
, 
°¨t
Ë: 
nŸFound
; }

226 
size_t
 
föd
(c⁄° 
LCh¨
* 
°r
, 
°¨t
 = 0) const

227 {  
m_im∂
 ? m_im∂->
föd
(
°r
, 
°¨t
Ë: 
nŸFound
; }

229 
size_t
 
födNextLöeSèπ
(
°¨t
 = 0) const

230 {  
m_im∂
 ? m_im∂->
födNextLöeSèπ
(
°¨t
Ë: 
nŸFound
; }

233 
size_t
 
ªvî£Föd
(
UCh¨
 
c
, 
°¨t
 = 
UINT_MAX
) const

234 {  
m_im∂
 ? m_im∂->
ªvî£Föd
(
c
, 
°¨t
Ë: 
nŸFound
; }

235 
size_t
 
ªvî£Föd
(c⁄° 
Såög
& 
°r
, 
°¨t
 = 
UINT_MAX
) const

236 {  
m_im∂
 ? m_im∂->
ªvî£Föd
(
°r
.
im∂
(), 
°¨t
Ë: 
nŸFound
; }

239 
size_t
 
födIgn‹ögCa£
(c⁄° 
LCh¨
* 
°r
, 
°¨t
 = 0) const

240 {  
m_im∂
 ? m_im∂->
födIgn‹ögCa£
(
°r
, 
°¨t
Ë: 
nŸFound
; }

241 
size_t
 
födIgn‹ögCa£
(c⁄° 
Såög
& 
°r
, 
°¨t
 = 0) const

242 {  
m_im∂
 ? m_im∂->
födIgn‹ögCa£
(
°r
.
im∂
(), 
°¨t
Ë: 
nŸFound
; }

243 
size_t
 
ªvî£FödIgn‹ögCa£
(c⁄° 
Såög
& 
°r
, 
°¨t
 = 
UINT_MAX
) const

244 {  
m_im∂
 ? m_im∂->
ªvî£FödIgn‹ögCa£
(
°r
.
im∂
(), 
°¨t
Ë: 
nŸFound
; }

247 
size_t
 
föd
(c⁄° 
LCh¨
* 
°r
, 
°¨t
, 
boﬁ
 
ˇ£Sísôive
) const

248 {  
	gˇ£Sísôive
 ? 
föd
(
°r
, 
°¨t
Ë: 
födIgn‹ögCa£
(str, start); }

249 
size_t
 
föd
(c⁄° 
Såög
& 
°r
, 
°¨t
, 
boﬁ
 
ˇ£Sísôive
) const

250 {  
	gˇ£Sísôive
 ? 
föd
(
°r
, 
°¨t
Ë: 
födIgn‹ögCa£
(str, start); }

251 
size_t
 
ªvî£Föd
(c⁄° 
Såög
& 
°r
, 
°¨t
, 
boﬁ
 
ˇ£Sísôive
) const

252 {  
	gˇ£Sísôive
 ? 
ªvî£Föd
(
°r
, 
°¨t
Ë: 
ªvî£FödIgn‹ögCa£
(str, start); }

254 
WTF_EXPORT_STRING_API
 
	gVe˘‹
<
	gUCh¨
> 
ch¨a˘îsWôhNuŒTîmö©i⁄
() const;

256 
WTF_EXPORT_STRING_API
 
UCh¨32
 
ch¨a˘îSèπögAt
() const;

258 
boﬁ
 
c⁄èös
(
UCh¨
 
c
Ëc⁄° {  
föd
(cË!
nŸFound
; }

259 
boﬁ
 
c⁄èös
(c⁄° 
LCh¨
* 
°r
, boﬁ 
ˇ£Sísôive
 = 
åue
, 
°¨tOff£t
 = 0) const

260 {  
föd
(
°r
, 
°¨tOff£t
, 
ˇ£Sísôive
Ë!
nŸFound
; }

261 
boﬁ
 
c⁄èös
(c⁄° 
Såög
& 
°r
, boﬁ 
ˇ£Sísôive
 = 
åue
, 
°¨tOff£t
 = 0) const

262 {  
föd
(
°r
, 
°¨tOff£t
, 
ˇ£Sísôive
Ë!
nŸFound
; }

264 
boﬁ
 
°¨tsWôh
(c⁄° 
Såög
& 
s
) const

265 {  
	gm_im∂
 ? m_im∂->
°¨tsWôh
(
s
.
im∂
()Ë: s.
isEm±y
(); }

266 
boﬁ
 
°¨tsWôh
(c⁄° 
Såög
& 
s
, boﬁ 
ˇ£Sísôive
) const

267 {  
	gm_im∂
 ? m_im∂->
°¨tsWôh
(
s
.
im∂
(), 
ˇ£Sísôive
Ë: s.
isEm±y
(); }

268 
boﬁ
 
°¨tsWôh
(
UCh¨
 
ch¨a˘î
) const

269 {  
	gm_im∂
 ? m_im∂->
°¨tsWôh
(
ch¨a˘î
Ë: 
Ál£
; }

270 
	gãm∂©e
<
	gm©chLígth
>

271 
boﬁ
 
°¨tsWôh
(c⁄° (&
¥efix
)[
m©chLígth
], boﬁ 
ˇ£Sísôive
 = 
åue
) const

272 {  
m_im∂
 ? m_im∂->
°¨tsWôh
<
m©chLígth
>(
¥efix
, 
ˇ£Sísôive
) : !matchLength; }

273 
boﬁ
 
°¨tsWôh
(
Såög
& 
¥efix
, 
°¨tOff£t
, boﬁ 
ˇ£Sísôive
) const

274 {  
	gm_im∂
 && 
	g¥efix
.
im∂
(Ë? m_im∂->
°¨tsWôh
(*
¥efix
.im∂(), 
°¨tOff£t
, 
ˇ£Sísôive
Ë: 
Ál£
; }

276 
boﬁ
 
ídsWôh
(c⁄° 
Såög
& 
s
, boﬁ 
ˇ£Sísôive
 = 
åue
) const

277 {  
m_im∂
 ? m_im∂->
ídsWôh
(
s
.
im∂
(), 
ˇ£Sísôive
Ë: s.
isEm±y
(); }

278 
boﬁ
 
ídsWôh
(
UCh¨
 
ch¨a˘î
) const

279 {  
	gm_im∂
 ? m_im∂->
ídsWôh
(
ch¨a˘î
Ë: 
Ál£
; }

280 
boﬁ
 
ídsWôh
(
ch¨a˘î
Ëc⁄° { ÉndsWôh(
°©ic_ˇ°
<
UCh¨
>(character)); }

281 
	gãm∂©e
<
	gm©chLígth
>

282 
boﬁ
 
ídsWôh
(c⁄° (&
¥efix
)[
m©chLígth
], boﬁ 
ˇ£Sísôive
 = 
åue
) const

283 {  
m_im∂
 ? m_im∂->
ídsWôh
<
m©chLígth
>(
¥efix
, 
ˇ£Sísôive
) : !matchLength; }

284 
boﬁ
 
ídsWôh
(
Såög
& 
suffix
, 
ídOff£t
, boﬁ 
ˇ£Sísôive
) const

285 {  
	gm_im∂
 && 
	gsuffix
.
im∂
(Ë? m_im∂->
ídsWôh
(*
suffix
.im∂(), 
ídOff£t
, 
ˇ£Sísôive
Ë: 
Ál£
; }

287 
WTF_EXPORT_STRING_API
 
≠≥nd
(c⁄° 
Såög
&);

288 
WTF_EXPORT_STRING_API
 
≠≥nd
(
LCh¨
);

289 
≠≥nd
(
c
Ë{áµíd(
°©ic_ˇ°
<
LCh¨
>(c)); };

290 
WTF_EXPORT_STRING_API
 
≠≥nd
(
UCh¨
);

291 
WTF_EXPORT_STRING_API
 
≠≥nd
(c⁄° 
LCh¨
*, 
Àngth
);

292 
WTF_EXPORT_STRING_API
 
≠≥nd
(c⁄° 
UCh¨
*, 
Àngth
);

293 
WTF_EXPORT_STRING_API
 
ö£π
(c⁄° 
Såög
&, 
pos
);

295 
	gSåög
& 
ª∂a˚
(
UCh¨
 
a
, UCh¨ 
b
Ë{ i‡(
	gm_im∂
Ëm_im∂ = 
m_im∂
->ª∂a˚◊, b);  *
	gthis
; }

296 
	gSåög
& 
ª∂a˚
(
UCh¨
 
a
, c⁄° 
Såög
& 
b
Ë{ i‡(
	gm_im∂
Ëm_im∂ = 
m_im∂
->ª∂a˚◊, b.
im∂
());  *
	gthis
; }

297 
	gSåög
& 
ª∂a˚
(c⁄° 
Såög
& 
a
, c⁄° Såög& 
b
Ë{ i‡(
	gm_im∂
Ëm_im∂ = 
m_im∂
->ª∂a˚◊.
im∂
(), b.im∂());  *
	gthis
; }

298 
	gSåög
& 
ª∂a˚
(
ödex
, 
Àn
, c⁄° 
Såög
& 
b
Ë{ i‡(
	gm_im∂
Ëm_im∂ = 
m_im∂
->ª∂a˚(ödex,Üí, b.
im∂
());  *
	gthis
; }

300 
	gãm∂©e
<
	gch¨a˘îsCou¡
>

301 
ALWAYS_INLINE
 
	gSåög
& 
ª∂a˚WôhLôîÆ
(
UCh¨
 
a
, c⁄° (&
ch¨a˘îs
)[
ch¨a˘îsCou¡
])

303 i‡(
	gm_im∂
)

304 
	gm_im∂
 = 
m_im∂
->
ª∂a˚
(
a
, 
ch¨a˘îs
, 
ch¨a˘îsCou¡
 - 1);

306  *
	gthis
;

309 
fûl
(
UCh¨
 
c
Ë{ i‡(
	gm_im∂
Ëm_im∂ = 
m_im∂
->fill(c); }

311 
WTF_EXPORT_STRING_API
 
åunˇã
(
Àn
);

312 
WTF_EXPORT_STRING_API
 
ªmove
(
pos
, 
Àn
 = 1);

314 
WTF_EXPORT_STRING_API
 
Såög
 
sub°rög
(
pos
, 
Àn
 = 
UINT_MAX
) const;

315 
WTF_EXPORT_STRING_API
 
Såög
 
sub°rögSh¨ögIm∂
(
pos
, 
Àn
 = 
UINT_MAX
) const;

316 
Såög
 
À·
(
Àn
Ëc⁄° {  
sub°rög
(0,Üen); }

317 
Såög
 
right
(
Àn
Ëc⁄° {  
sub°rög
(
Àngth
() -Üen,Üen); }

322 
WTF_EXPORT_STRING_API
 
Såög
 
c⁄vîtToASCIILowîˇ£
() const;

323 
WTF_EXPORT_STRING_API
 
Såög
 
lowî
() const;

324 
WTF_EXPORT_STRING_API
 
Såög
 
uµî
() const;

326 
WTF_EXPORT_STRING_API
 
Såög
 
lowî
(c⁄° 
AtomicSåög
& 
loˇÀIdítifõr
) const;

327 
WTF_EXPORT_STRING_API
 
Såög
 
uµî
(c⁄° 
AtomicSåög
& 
loˇÀIdítifõr
) const;

329 
WTF_EXPORT_STRING_API
 
Såög
 
°rùWhôeS∑˚
() const;

330 
WTF_EXPORT_STRING_API
 
Såög
 
°rùWhôeS∑˚
(
IsWhôeS∑˚Fun˘i⁄På
) const;

331 
WTF_EXPORT_STRING_API
 
Såög
 
sim∂ifyWhôeS∑˚
() const;

332 
WTF_EXPORT_STRING_API
 
Såög
 
sim∂ifyWhôeS∑˚
(
IsWhôeS∑˚Fun˘i⁄På
) const;

334 
WTF_EXPORT_STRING_API
 
Såög
 
ªmoveCh¨a˘îs
(
Ch¨a˘îM©chFun˘i⁄På
) const;

335 
	gãm∂©e
<
boﬁ
 
isS≥cülCh¨a˘î
(
UCh¨
)> boﬁ 
isAŒS≥cülCh¨a˘îs
() const;

339 
WTF_EXPORT_STRING_API
 
Såög
 
fﬁdCa£
() const;

341 
WTF_EXPORT_STRING_API
 
Såög
 
f‹m©
(c⁄° *, ...Ë
WTF_ATTRIBUTE_PRINTF
(1, 2);

346 
Såög
 
¸óãUnöôülized
(
Àngth
, 
UCh¨
*& 
d©a
Ë{  
	gSåögIm∂
::createUninitialized(length, data); }

347 
Såög
 
¸óãUnöôülized
(
Àngth
, 
LCh¨
*& 
d©a
Ë{  
	gSåögIm∂
::createUninitialized(length, data); }

349 
WTF_EXPORT_STRING_API
 
•lô
(c⁄° 
Såög
& 
£∑øt‹
, 
boﬁ
 
ÆlowEm±yE¡rõs
, 
Ve˘‹
<Såög>& 
ªsu…
) const;

350 
•lô
(c⁄° 
Såög
& 
£∑øt‹
, 
Ve˘‹
<Såög>& 
ªsu…
) const

352 
•lô
(
£∑øt‹
, 
Ál£
, 
ªsu…
);

354 
WTF_EXPORT_STRING_API
 
•lô
(
UCh¨
 
£∑øt‹
, 
boﬁ
 
ÆlowEm±yE¡rõs
, 
Ve˘‹
<
Såög
>& 
ªsu…
) const;

355 
•lô
(
UCh¨
 
£∑øt‹
, 
Ve˘‹
<
Såög
>& 
ªsu…
) const

357 
•lô
(
£∑øt‹
, 
Ál£
, 
ªsu…
);

360 
WTF_EXPORT_STRING_API
 
toI¡Såi˘
(
boﬁ
* 
ok
 = 0, 
ba£
 = 10) const;

361 
WTF_EXPORT_STRING_API
 
toUI¡Såi˘
(
boﬁ
* 
ok
 = 0, 
ba£
 = 10) const;

362 
WTF_EXPORT_STRING_API
 
öt64_t
 
toI¡64Såi˘
(
boﬁ
* 
ok
 = 0, 
ba£
 = 10) const;

363 
WTF_EXPORT_STRING_API
 
uöt64_t
 
toUI¡64Såi˘
(
boﬁ
* 
ok
 = 0, 
ba£
 = 10) const;

364 
WTF_EXPORT_STRING_API
 
öçå_t
 
toI¡PåSåi˘
(
boﬁ
* 
ok
 = 0, 
ba£
 = 10) const;

366 
WTF_EXPORT_STRING_API
 
toI¡
(
boﬁ
* 
ok
 = 0) const;

367 
WTF_EXPORT_STRING_API
 
toUI¡
(
boﬁ
* 
ok
 = 0) const;

368 
WTF_EXPORT_STRING_API
 
öt64_t
 
toI¡64
(
boﬁ
* 
ok
 = 0) const;

369 
WTF_EXPORT_STRING_API
 
uöt64_t
 
toUI¡64
(
boﬁ
* 
ok
 = 0) const;

370 
WTF_EXPORT_STRING_API
 
öçå_t
 
toI¡På
(
boﬁ
* 
ok
 = 0) const;

375 
WTF_EXPORT_STRING_API
 
toDoubÀ
(
boﬁ
* 
ok
 = 0) const;

376 
WTF_EXPORT_STRING_API
 
toFlﬂt
(
boﬁ
* 
ok
 = 0) const;

378 
boﬁ
 
≥r˚¡age
(&Öercentage) const;

380 #i‡
COMPILER_SUPPORTS
(
CXX_REFERENCE_QUALIFIED_FUNCTIONS
)

381 
WTF_EXPORT_STRING_API
 
Såög
 
isﬁ©edC›y
() const &;

382 
WTF_EXPORT_STRING_API
 
Såög
 
isﬁ©edC›y
() &&;

384 
WTF_EXPORT_STRING_API
 
Såög
 
isﬁ©edC›y
() const;

387 
WTF_EXPORT_STRING_API
 
boﬁ
 
isSa„ToSídToAnŸhîThªad
() const;

391 
	gIm∂icôC⁄vîsi⁄FromWTFSåögToBoﬁDißŒowedA
* (
	tSåög
::*
	tUn•ecifõdBoﬁTy≥A
);

392 
	gIm∂icôC⁄vîsi⁄FromWTFSåögToBoﬁDißŒowedB
* (
	tSåög
::*
	tUn•ecifõdBoﬁTy≥B
);

393 
›î©‹
 
Un•ecifõdBoﬁTy≥A
() const;

394 
›î©‹
 
Un•ecifõdBoﬁTy≥B
() const;

396 #i‡
USE
(
CF
)

397 
WTF_EXPORT_STRING_API
 
Såög
(
CFSåögRef
);

398 
WTF_EXPORT_STRING_API
 
	gRëaöPå
<
	gCFSåögRef
> 
¸óãCFSåög
() const;

401 #ifde‡
__OBJC__


402 
WTF_EXPORT_STRING_API
 
Såög
(
NSSåög
*);

406 
›î©‹
 
	gNSSåög
*(Ëc⁄° { i‡(!
	gm_im∂
)  @"";  *m_impl; }

409 
WTF_EXPORT_STRING_API
 
Såög
 
make8BôFrom16BôSour˚
(c⁄° 
UCh¨
*, 
size_t
);

410 
	gãm∂©e
<
size_t
 
	gölöeC≠acôy
>

411 
Såög
 
make8BôFrom16BôSour˚
(c⁄° 
Ve˘‹
<
UCh¨
, 
ölöeC≠acôy
>& 
buf„r
)

413  
make8BôFrom16BôSour˚
(
buf„r
.
d©a
(), buf„r.
size
());

416 
WTF_EXPORT_STRING_API
 
Såög
 
make16BôFrom8BôSour˚
(c⁄° 
LCh¨
*, 
size_t
);

420 
WTF_EXPORT_STRING_API
 
Såög
 
‰omUTF8
(c⁄° 
LCh¨
*, 
size_t
);

421 
WTF_EXPORT_STRING_API
 
Såög
 
‰omUTF8
(c⁄° 
LCh¨
*);

422 
Såög
 
‰omUTF8
(c⁄° * 
s
, 
size_t
 
Àngth
Ë{  fromUTF8(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(s),Üength); };

423 
Såög
 
‰omUTF8
(c⁄° * 
s
Ë{  fromUTF8(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(s)); };

424 
WTF_EXPORT_STRING_API
 
Såög
 
‰omUTF8
(c⁄° 
CSåög
&);

427 
WTF_EXPORT_STRING_API
 
Såög
 
‰omUTF8WôhL©ö1FÆlback
(c⁄° 
LCh¨
*, 
size_t
);

428 
Såög
 
‰omUTF8WôhL©ö1FÆlback
(c⁄° * 
s
, 
size_t
 
Àngth
Ë{  fromUTF8WôhL©ö1FÆlback(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(s),Üength); };

431 
UCh¨Dúe˘i⁄
 
deÁu…WrôögDúe˘i⁄
(
boﬁ
* 
hasSå⁄gDúe˘i⁄Æôy
 = 
nuŒ±r
) const

433 i‡(
m_im∂
)

434  
m_im∂
->
deÁu…WrôögDúe˘i⁄
(
hasSå⁄gDúe˘i⁄Æôy
);

435 i‡(
	ghasSå⁄gDúe˘i⁄Æôy
)

436 *
	ghasSå⁄gDúe˘i⁄Æôy
 = 
Ál£
;

437  
	gU_LEFT_TO_RIGHT
;

440 
boﬁ
 
c⁄èösO∆yASCII
() const;

441 
boﬁ
 
c⁄èösO∆yL©ö1
() const;

442 
boﬁ
 
c⁄èösO∆yWhôe•a˚
(Ëc⁄° {  !
	gm_im∂
 || m_impl->containsOnlyWhitespace(); }

445 
Såög
(
WTF
::
HashTabÀDñëedVÆueTy≥
Ë: 
m_im∂
(WTF::
HashTabÀDñëedVÆue
) { }

446 
boﬁ
 
isHashTabÀDñëedVÆue
(Ëc⁄° {  
m_im∂
.isHashTableDeletedValue(); }

448 #i‚de‡
NDEBUG


449 
WTF_EXPORT_STRING_API
 
show
() const;

453 
UCh¨
 
ch¨a˘îAt
(
ödex
) const

455 i‡(!
	gm_im∂
 || 
	gödex
 >
m_im∂
->
Àngth
())

457  (*
	gm_im∂
)[
ödex
];

460 
	g¥iv©e
:

461 
ãm∂©e
 <
ty≥«me
 
Ch¨a˘îTy≥
>

462 
ªmoveI¡î«l
(c⁄° 
Ch¨a˘îTy≥
*, , );

464 
	gãm∂©e
 <
ty≥«me
 
	gCh¨a˘îTy≥
>

465 
≠≥ndI¡î«l
(
Ch¨a˘îTy≥
);

467 
	gRefPå
<
	gSåögIm∂
> 
	gm_im∂
;

470 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
Såög
& 
a
, c⁄° 
	gSåög
& 
	gb
Ë{  
equÆ
◊.
im∂
(), 
b
.impl()); }

471 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
Såög
& 
a
, c⁄° 
LCh¨
* 
	gb
Ë{  
equÆ
◊.
im∂
(), 
b
); }

472 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
Såög
& 
a
, c⁄° * 
	gb
Ë{  
equÆ
◊.
im∂
(), 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
b
)); }

473 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
LCh¨
* 
a
, c⁄° 
	gSåög
& 
	gb
Ë{  
equÆ
◊, 
b
.
im∂
()); }

474 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° * 
a
, c⁄° 
	gSåög
& 
	gb
Ë{  
equÆ
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>◊), 
b
.
im∂
()); }

475 
	gãm∂©e
<
size_t
 
	gölöeC≠acôy
>

476 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
Ve˘‹
<, 
	gölöeC≠acôy
>& 
	ga
, c⁄° 
	gSåög
& 
	gb
Ë{  
equÆ
(
b
.
im∂
(), 
a
.
d©a
(),á.
size
()); }

477 
	gãm∂©e
<
size_t
 
	gölöeC≠acôy
>

478 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
Såög
& 
a
, c⁄° 
	gVe˘‹
<, 
	gölöeC≠acôy
>& 
	gb
) {  b ==á; }

481 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Såög
& 
a
, c⁄° 
	gSåög
& 
	gb
Ë{  !
equÆ
◊.
im∂
(), 
b
.impl()); }

482 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Såög
& 
a
, c⁄° 
LCh¨
* 
	gb
Ë{  !
equÆ
◊.
im∂
(), 
b
); }

483 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Såög
& 
a
, c⁄° * 
	gb
Ë{  !
equÆ
◊.
im∂
(), 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(
b
)); }

484 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
LCh¨
* 
a
, c⁄° 
	gSåög
& 
	gb
Ë{  !
equÆ
◊, 
b
.
im∂
()); }

485 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° * 
a
, c⁄° 
	gSåög
& 
	gb
Ë{  !
equÆ
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>◊), 
b
.
im∂
()); }

486 
	gãm∂©e
<
size_t
 
	gölöeC≠acôy
>

487 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Ve˘‹
<, 
	gölöeC≠acôy
>& 
	ga
, c⁄° 
	gSåög
& 
	gb
Ë{  !◊ =
b
); }

488 
	gãm∂©e
<
size_t
 
	gölöeC≠acôy
>

489 
ölöe
 
boﬁ
 
	g›î©‹
!=(c⁄° 
Såög
& 
a
, c⁄° 
	gVe˘‹
<, 
	gölöeC≠acôy
>& 
	gb
) {  b !=á; }

491 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
Såög
& 
a
, c⁄° Såög& 
b
Ë{  
	`equÆIgn‹ögCa£
◊.
	`im∂
(), b.im∂()); 
	}
}

492 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
Såög
& 
a
, c⁄° 
LCh¨
* 
b
Ë{  
	`equÆIgn‹ögCa£
◊.
	`im∂
(), b); 
	}
}

493 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
Såög
& 
a
, c⁄° * 
b
Ë{  
	`equÆIgn‹ögCa£
◊.
	`im∂
(), 
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>(b)); 
	}
}

494 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° 
LCh¨
* 
a
, c⁄° 
Såög
& 
b
Ë{  
	`equÆIgn‹ögCa£
◊, b.
	`im∂
()); 
	}
}

495 
ölöe
 
boﬁ
 
	$equÆIgn‹ögCa£
(c⁄° * 
a
, c⁄° 
Såög
& 
b
Ë{  
	`equÆIgn‹ögCa£
(
ªöãΩªt_ˇ°
<c⁄° 
LCh¨
*>◊), b.
	`im∂
()); 
	}
}

497 
ölöe
 
boﬁ
 
	$equÆPossiblyIgn‹ögCa£
(c⁄° 
Såög
& 
a
, c⁄° Såög& 
b
, 
boﬁ
 
ign‹eCa£
)

499  
ign‹eCa£
 ? 
	`equÆIgn‹ögCa£
(
a
, 
b
) : (a == b);

500 
	}
}

502 
ölöe
 
boﬁ
 
	$equÆIgn‹ögNuŒôy
(c⁄° 
Såög
& 
a
, c⁄° Såög& 
b
Ë{  
	`equÆIgn‹ögNuŒôy
◊.
	`im∂
(), b.im∂()); 
	}
}

504 
	gãm∂©e
<
size_t
 
	gölöeC≠acôy
>

505 
ölöe
 
boﬁ
 
equÆIgn‹ögNuŒôy
(c⁄° 
Ve˘‹
<
UCh¨
, 
ölöeC≠acôy
>& 
a
, c⁄° 
Såög
& 
b
Ë{ ÉquÆIgn‹ögNuŒôy◊, b.
im∂
()); }

507 
ölöe
 
boﬁ
 
	g›î©‹
!(c⁄° 
	gSåög
& 
	g°r
Ë{  så.
isNuŒ
(); }

509 
ölöe
 
	$sw≠
(
Såög
& 
a
, Såög& 
b
Ë{á.
	`sw≠
(b); 
	}
}

513 
	gãm∂©e
<
size_t
 
	gölöeC≠acôy
, 
ty≥«me
 
	gOvîÊowH™dÀr
>

514 
	gSåög
::
Såög
(c⁄° 
Ve˘‹
<
UCh¨
, 
ölöeC≠acôy
, 
OvîÊowH™dÀr
>& 
ve˘‹
)

515 : 
m_im∂
(
ve˘‹
.
size
(Ë? 
SåögIm∂
::
¸óã
(ve˘‹.
d©a
(), ve˘‹.
	$size
()Ë: *
SåögIm∂
::
	$em±y
())

517 
	}
}

519 
ãm∂©e
<>

520 
ölöe
 c⁄° 
LCh¨
* 
Såög
::
ch¨a˘îs
<LChar>() const

522 
ASSERT
(
is8Bô
());

523  
ch¨a˘îs8
();

526 
	gãm∂©e
<>

527 
ölöe
 c⁄° 
UCh¨
* 
	gSåög
::
ch¨a˘îs
<UChar>() const

529 
ASSERT
(!
is8Bô
());

530  
ch¨a˘îs16
();

533 
ölöe
 
boﬁ
 
	gSåög
::
	$c⁄èösO∆yL©ö1
() const

535 i‡(
	`isEm±y
())

536  
åue
;

538 i‡(
	`is8Bô
())

539  
åue
;

541 c⁄° 
UCh¨
* 
ch¨a˘îs
 = 
	`ch¨a˘îs16
();

542 
UCh¨
 
‹ed
 = 0;

543 
size_t
 
i
 = 0; i < 
m_im∂
->
	`Àngth
(); ++i)

544 
‹ed
 |
ch¨a˘îs
[
i
];

545  !(
‹ed
 & 0xFF00);

546 
	}
}

549 #ifde‡
__OBJC__


553 
ölöe
 
NSSåög
* 
	$nsSåögNûIfEm±y
(c⁄° 
Såög
& 
°r
Ë{  så.
	`isEm±y
(Ë? 
nû
 : (
NSSåög
*)°r; 
	}
}

556 
ölöe
 
boﬁ
 
	gSåög
::
	$c⁄èösO∆yASCII
() const

558 i‡(
	`isEm±y
())

559  
åue
;

561 i‡(
	`is8Bô
())

562  
	`ch¨a˘îsAªAŒASCII
(
	`ch¨a˘îs8
(), 
m_im∂
->
	`Àngth
());

564  
	`ch¨a˘îsAªAŒASCII
(
	`ch¨a˘îs16
(), 
m_im∂
->
	`Àngth
());

565 
	}
}

567 
WTF_EXPORT_STRING_API
 
codePoötCom∑ª
(c⁄° 
Såög
&, const String&);

569 
ölöe
 
boﬁ
 
	$codePoötCom∑ªLessTh™
(c⁄° 
Såög
& 
a
, c⁄° Såög& 
b
)

571  
	`codePoötCom∑ª
(
a
.
	`im∂
(), 
b
.impl()) < 0;

572 
	}
}

574 
	gãm∂©e
<
ty≥«me
 
	gCh¨a˘îTy≥
>

575 
ölöe
 
≠≥ndNumbî
(
Ve˘‹
<
Ch¨a˘îTy≥
>& 
ve˘‹
, 
numbî
)

577 
	gnumbîLígth
 = 
numbî
 > 99 ? 3 : (number > 9 ? 2 : 1);

578 
size_t
 
	gve˘‹Size
 = 
ve˘‹
.
size
();

579 
	gve˘‹
.
grow
(
ve˘‹Size
 + 
numbîLígth
);

581 
	gnumbîLígth
) {

583 
ve˘‹
[
ve˘‹Size
 + 2] = 
numbî
 % 10 + '0';

584 
	gnumbî
 /= 10;

585 
	gFALLTHROUGH
;

588 
ve˘‹
[
ve˘‹Size
 + 1] = 
numbî
 % 10 + '0';

589 
	gnumbî
 /= 10;

590 
	gFALLTHROUGH
;

593 
ve˘‹
[
ve˘‹Size
] = 
numbî
 % 10 + '0';

597 
	gãm∂©e
<
boﬁ
 
isS≥cülCh¨a˘î
(
UCh¨
), 
ty≥«me
 
	gCh¨a˘îTy≥
>

598 
ölöe
 
boﬁ
 
	$isAŒS≥cülCh¨a˘îs
(c⁄° 
Ch¨a˘îTy≥
* 
ch¨a˘îs
, 
size_t
 
Àngth
)

600 
size_t
 
i
 = 0; i < 
Àngth
; ++i) {

601 i‡(!
	`isS≥cülCh¨a˘î
(
ch¨a˘îs
[
i
]))

602  
Ál£
;

604  
åue
;

605 
	}
}

607 
	gãm∂©e
<
boﬁ
 
isS≥cülCh¨a˘î
(
UCh¨
)>

608 
ölöe
 
boﬁ
 
	gSåög
::
	$isAŒS≥cülCh¨a˘îs
() const

610 
size_t
 
Àn
 = 
	`Àngth
();

612 i‡(!
Àn
)

613  
åue
;

615 i‡(
	`is8Bô
())

616  
WTF
::
isAŒS≥cülCh¨a˘îs
<
isS≥cülCh¨a˘î
, 
LCh¨
>(
	`ch¨a˘îs8
(), 
Àn
);

617  
WTF
::
isAŒS≥cülCh¨a˘îs
<
isS≥cülCh¨a˘î
, 
UCh¨
>(
	`ch¨a˘îs16
(), 
Àn
);

618 
	}
}

621 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gDeÁu…Hash
;

622 
	gãm∂©e
<> 
	gDeÁu…Hash
<
	gSåög
> {

623 
SåögHash
 
	tHash
;

626 
	gãm∂©e
 <> 
	gVe˘‹Tøôs
<
	gSåög
> : 
Sim∂eCœssVe˘‹Tøôs
 { };

628 ˛as†
	cASCIILôîÆ
 {

629 
	gpublic
:

630 
ex∂icô
 
ASCIILôîÆ
(c⁄° * 
ch¨a˘îs
Ë: 
m_ch¨a˘îs
(characters) { }

631 
›î©‹
 c⁄° *(Ë{  
m_ch¨a˘îs
; }

633 
	g¥iv©e
:

634 c⁄° * 
m_ch¨a˘îs
;

638 
WTF_EXPORT_STRING_API
 c⁄° 
	gSåög
& 
em±ySåög
();

642 
usög
 
	gWTF
::
CSåög
;

643 
usög
 
	gWTF
::
KìpTøûögZîos
;

644 
usög
 
	gWTF
::
Såög
;

645 
usög
 
	gWTF
::
em±ySåög
;

646 
usög
 
	gWTF
::
≠≥ndNumbî
;

647 
usög
 
	gWTF
::
ch¨a˘îsAªAŒASCII
;

648 
usög
 
	gWTF
::
ch¨a˘îsToI¡Såi˘
;

649 
usög
 
	gWTF
::
ch¨a˘îsToUI¡Såi˘
;

650 
usög
 
	gWTF
::
ch¨a˘îsToI¡64Såi˘
;

651 
usög
 
	gWTF
::
ch¨a˘îsToUI¡64Såi˘
;

652 
usög
 
	gWTF
::
ch¨a˘îsToI¡PåSåi˘
;

653 
usög
 
	gWTF
::
ch¨a˘îsToI¡
;

654 
usög
 
	gWTF
::
ch¨a˘îsToUI¡
;

655 
usög
 
	gWTF
::
ch¨a˘îsToI¡64
;

656 
usög
 
	gWTF
::
ch¨a˘îsToUI¡64
;

657 
usög
 
	gWTF
::
ch¨a˘îsToI¡På
;

658 
usög
 
	gWTF
::
ch¨a˘îsToDoubÀ
;

659 
usög
 
	gWTF
::
ch¨a˘îsToFlﬂt
;

660 
usög
 
	gWTF
::
equÆ
;

661 
usög
 
	gWTF
::
equÆIgn‹ögCa£
;

662 
usög
 
	gWTF
::
föd
;

663 
usög
 
	gWTF
::
isAŒS≥cülCh¨a˘îs
;

664 
usög
 
	gWTF
::
isS∑˚OrNewlöe
;

665 
usög
 
	gWTF
::
ªvî£Föd
;

666 
usög
 
	gWTF
::
ASCIILôîÆ
;

668 
	~<wtf/ãxt/AtomicSåög.h
>

	@text/cf/AtomicStringCF.cpp

26 
	~"c⁄fig.h
"

27 
	~<wtf/ãxt/AtomicSåög.h
>

29 #i‡
USE
(
CF
)

31 
	~<C‹eFound©i⁄/C‹eFound©i⁄.h
>

32 
	~<wtf/ãxt/CSåög.h
>

34 
«me•a˚
 
	gWTF
 {

36 
	gPassRefPå
<
	gSåögIm∂
> 
	gAtomicSåög
::
add
(
CFSåögRef
 
°rög
)

38 i‡(!
°rög
)

41 
CFIndex
 
	gÀngth
 = 
CFSåögGëLígth
(
°rög
);

43 i‡(c⁄° 
LCh¨
* 
	g±r
 = 
ªöãΩªt_ˇ°
<c⁄° LCh¨*>(
CFSåögGëCSåögPå
(
°rög
, 
kCFSåögEncodögISOL©ö1
)))

44  
add
(
±r
, 
Àngth
);

46 i‡(c⁄° 
UniCh¨
* 
	g±r
 = 
CFSåögGëCh¨a˘îsPå
(
°rög
))

47  
add
(
ªöãΩªt_ˇ°
<c⁄° 
UCh¨
*>(
±r
), 
Àngth
);

49 
	gVe˘‹
<
	gUniCh¨
, 1024> 
uch¨Buf„r
(
Àngth
);

50 
CFSåögGëCh¨a˘îs
(
°rög
, 
CFR™geMake
(0, 
Àngth
), 
uch¨Buf„r
.
d©a
());

51  
add
(
ªöãΩªt_ˇ°
<c⁄° 
UCh¨
*>(
uch¨Buf„r
.
d©a
()), 
Àngth
);

	@text/cf/StringCF.cpp

21 
	~"c⁄fig.h
"

22 
	~<wtf/ãxt/WTFSåög.h
>

24 #i‡
USE
(
CF
)

26 
	~<C‹eFound©i⁄/C‹eFound©i⁄.h
>

27 
	~<wtf/RëaöPå.h
>

29 
«me•a˚
 
	gWTF
 {

31 
	gSåög
::
Såög
(
CFSåögRef
 
°r
)

33 i‡(!
°r
)

36 
CFIndex
 
	gsize
 = 
CFSåögGëLígth
(
°r
);

37 i‡(
	gsize
 == 0)

38 
m_im∂
 = 
SåögIm∂
::
em±y
();

40 
	gVe˘‹
<
	gLCh¨
, 1024> 
lch¨Buf„r
(
size
);

41 
CFIndex
 
	gu£dBufLí
;

42 
CFIndex
 
	gc⁄vîãdsize
 = 
CFSåögGëByãs
(
°r
, 
CFR™geMake
(0, 
size
), 
kCFSåögEncodögISOL©ö1
, 0, 
Ál£
, 
lch¨Buf„r
.
d©a
(), size, &
u£dBufLí
);

43 i‡((
	gc⁄vîãdsize
 =
size
Ë&& (
u£dBufLí
 == size)) {

44 
m_im∂
 = 
SåögIm∂
::
¸óã
(
lch¨Buf„r
.
d©a
(), 
size
);

48 
	gVe˘‹
<
	gUCh¨
, 1024> 
buf„r
(
size
);

49 
CFSåögGëCh¨a˘îs
(
°r
, 
CFR™geMake
(0, 
size
), (
UniCh¨
*)
buf„r
.
d©a
());

50 
	gm_im∂
 = 
SåögIm∂
::
¸óã
(
buf„r
.
d©a
(), 
size
);

54 
	gRëaöPå
<
	gCFSåögRef
> 
	gSåög
::
¸óãCFSåög
() const

56 i‡(!
m_im∂
)

57  
CFSTR
("");

59  
	gm_im∂
->
¸óãCFSåög
();

	@text/cf/StringImplCF.cpp

21 
	~"c⁄fig.h
"

22 
	~<wtf/ãxt/SåögIm∂.h
>

24 #i‡
USE
(
CF
)

26 
	~<C‹eFound©i⁄/C‹eFound©i⁄.h
>

27 
	~<wtf/MaöThªad.h
>

28 
	~<wtf/PassRefPå.h
>

29 
	~<wtf/RëaöPå.h
>

30 
	~<wtf/Thªadög.h
>

32 #i‡
PLATFORM
(
MAC
)

33 
	~<objc/objc-auto.h
>

36 
ölöe
 
boﬁ
 
	$g¨bageCﬁÀ˘i⁄E«bÀd
()

38 #i‡
	`PLATFORM
(
MAC
)

39  
	`objc_cﬁÀ˘ögE«bÀd
();

41  
Ál£
;

43 
	}
}

45 
«me•a˚
 
	gWTF
 {

47 
«me•a˚
 
	gSåögWøµîCFAŒoˇt‹
 {

49 
SåögIm∂
* 
	gcuºítSåög
;

51 c⁄° * 
ªèö
(c⁄° * 
öfo
)

53  
	göfo
;

56 
NO_RETURN_DUE_TO_ASSERT


57 
ªÀa£
(const *)

59 
ASSERT_NOT_REACHED
();

62 
CFSåögRef
 
c›yDes¸ùti⁄
(const *)

64  
CFSTR
("WTF::String-basedállocator");

67 * 
Æloˇã
(
CFIndex
 
size
, 
CFO±i⁄Fœgs
, *)

69 
SåögIm∂
* 
	gundîlyögSåög
 = 0;

70 i‡(
isMaöThªad
()) {

71 
	gundîlyögSåög
 = 
cuºítSåög
;

72 i‡(
	gundîlyögSåög
) {

73 
	gcuºítSåög
 = 0;

74 
	gundîlyögSåög
->
ªf
();

77 
SåögIm∂
** 
	ghódî
 = 
°©ic_ˇ°
<SåögIm∂**>(
Á°MÆloc
((SåögIm∂*Ë+ 
size
));

78 *
	ghódî
 = 
undîlyögSåög
;

79  
	ghódî
 + 1;

82 * 
ªÆloˇã
(* 
poöãr
, 
CFIndex
 
√wSize
, 
CFO±i⁄Fœgs
, *)

84 
size_t
 
	g√wAŒoˇti⁄Size
 = (
SåögIm∂
*Ë+ 
√wSize
;

85 
SåögIm∂
** 
	ghódî
 = 
°©ic_ˇ°
<SåögIm∂**>(
poöãr
) - 1;

86 
ASSERT
(!*
hódî
);

87 
	ghódî
 = 
°©ic_ˇ°
<
SåögIm∂
**>(
Á°RóŒoc
(
hódî
, 
√wAŒoˇti⁄Size
));

88  
	ghódî
 + 1;

91 
dóŒoˇãOnMaöThªad
(* 
hódîPoöãr
)

93 
SåögIm∂
** 
	ghódî
 = 
°©ic_ˇ°
<SåögIm∂**>(
hódîPoöãr
);

94 
SåögIm∂
* 
	gundîlyögSåög
 = *
hódî
;

95 
ASSERT
(
undîlyögSåög
);

96 
	gundîlyögSåög
->
dîef
();

97 
Á°Fªe
(
hódî
);

100 
dóŒoˇã
(* 
poöãr
, *)

102 
SåögIm∂
** 
	ghódî
 = 
°©ic_ˇ°
<SåögIm∂**>(
poöãr
) - 1;

103 
SåögIm∂
* 
	gundîlyögSåög
 = *
hódî
;

104 i‡(!
	gundîlyögSåög
)

105 
Á°Fªe
(
hódî
);

107 i‡(!
isMaöThªad
())

108 
ˇŒOnMaöThªad
(
dóŒoˇãOnMaöThªad
, 
hódî
);

110 
	gundîlyögSåög
->
dîef
();

111 
Á°Fªe
(
hódî
);

116 
CFIndex
 
¥e„ºedSize
(CFIndex 
size
, 
CFO±i⁄Fœgs
, *)

123  
	gsize
;

126 
CFAŒoˇt‹Ref
 
¸óã
()

128 
ASSERT
(!
g¨bageCﬁÀ˘i⁄E«bÀd
());

129 
CFAŒoˇt‹C⁄ãxt
 
	gc⁄ãxt
 = { 0, 0, 
ªèö
, 
ªÀa£
, 
c›yDes¸ùti⁄
, 
Æloˇã
, 
ªÆloˇã
, 
dóŒoˇã
, 
¥e„ºedSize
 };

130  
CFAŒoˇt‹Cª©e
(0, &
c⁄ãxt
);

133 
CFAŒoˇt‹Ref
 
Æloˇt‹
()

135 
CFAŒoˇt‹Ref
 
	gÆloˇt‹
 = 
¸óã
();

136  
	gÆloˇt‹
;

141 
	gRëaöPå
<
	gCFSåögRef
> 
	gSåögIm∂
::
¸óãCFSåög
()

145 i‡(!
m_Àngth
 || !
isMaöThªad
(Ë|| 
g¨bageCﬁÀ˘i⁄E«bÀd
()) {

146 i‡(
is8Bô
())

147  
ad›tCF
(
CFSåögCª©eWôhByãs
(0, 
ªöãΩªt_ˇ°
<c⁄° 
UI¡8
*>(
ch¨a˘îs8
()), 
m_Àngth
, 
kCFSåögEncodögISOL©ö1
, 
Ál£
));

148  
ad›tCF
(
CFSåögCª©eWôhCh¨a˘îs
(0, 
ªöãΩªt_ˇ°
<c⁄° 
UniCh¨
*>(
ch¨a˘îs16
()), 
m_Àngth
));

150 
CFAŒoˇt‹Ref
 
	gÆloˇt‹
 = 
SåögWøµîCFAŒoˇt‹
::
Æloˇt‹
();

153 
ASSERT
(!
SåögWøµîCFAŒoˇt‹
::
cuºítSåög
);

154 
	gSåögWøµîCFAŒoˇt‹
::
cuºítSåög
 = 
this
;

156 
CFSåögRef
 
	g°rög
;

157 i‡(
is8Bô
())

158 
	g°rög
 = 
CFSåögCª©eWôhByãsNoC›y
(
Æloˇt‹
, 
ªöãΩªt_ˇ°
<c⁄° 
UI¡8
*>(
ch¨a˘îs8
()), 
m_Àngth
, 
kCFSåögEncodögISOL©ö1
, 
Ál£
, 
kCFAŒoˇt‹NuŒ
);

160 
	g°rög
 = 
CFSåögCª©eWôhCh¨a˘îsNoC›y
(
Æloˇt‹
, 
ªöãΩªt_ˇ°
<c⁄° 
UniCh¨
*>(
ch¨a˘îs16
()), 
m_Àngth
, 
kCFAŒoˇt‹NuŒ
);

162 
	gSåögWøµîCFAŒoˇt‹
::
cuºítSåög
 = 0;

164  
ad›tCF
(
°rög
);

	@text/cf/StringViewCF.cpp

26 
	~"c⁄fig.h
"

27 
	~<wtf/ãxt/SåögVõw.h
>

29 #i‡
USE
(
CF
)

31 
	~<C‹eFound©i⁄/C‹eFound©i⁄.h
>

32 
	~<wtf/RëaöPå.h
>

34 
«me•a˚
 
	gWTF
 {

36 
	gRëaöPå
<
	gCFSåögRef
> 
	gSåögVõw
::
¸óãCFSåögWôhoutC›yög
() const

38 i‡(
is8Bô
())

39  
ad›tCF
(
CFSåögCª©eWôhByãsNoC›y
(
kCFAŒoˇt‹DeÁu…
, 
ch¨a˘îs8
(), 
Àngth
(), 
kCFSåögEncodögISOL©ö1
, 
Ál£
, 
kCFAŒoˇt‹NuŒ
));

41  
ad›tCF
(
CFSåögCª©eWôhCh¨a˘îsNoC›y
(
kCFAŒoˇt‹DeÁu…
, 
ªöãΩªt_ˇ°
<c⁄° 
UniCh¨
*>(
ch¨a˘îs16
()), 
Àngth
(), 
kCFAŒoˇt‹NuŒ
));

	@threads/BinarySemaphore.cpp

26 
	~"c⁄fig.h
"

27 
	~"Bö¨ySem≠h‹e.h
"

29 #i‡!
PLATFORM
(
WIN
)

31 
«me•a˚
 
	gWTF
 {

33 
	gBö¨ySem≠h‹e
::
Bö¨ySem≠h‹e
()

34 : 
m_isSë
(
Ál£
)

38 
Bö¨ySem≠h‹e
::~BinarySemaphore()

42 
Bö¨ySem≠h‹e
::
sig«l
()

44 
MuãxLockî
 
lockî
(
m_muãx
);

46 
	gm_isSë
 = 
åue
;

47 
	gm_c⁄dôi⁄
.
sig«l
();

50 
boﬁ
 
	gBö¨ySem≠h‹e
::
waô
(
absﬁuãTime
)

52 
MuãxLockî
 
lockî
(
m_muãx
);

54 
boﬁ
 
	gtimedOut
 = 
Ál£
;

55 !
	gm_isSë
) {

56 
	gtimedOut
 = !
m_c⁄dôi⁄
.
timedWaô
(
m_muãx
, 
absﬁuãTime
);

57 i‡(
	gtimedOut
)

58  
	gÁl£
;

62 
	gm_isSë
 = 
Ál£
;

63  
	gåue
;

	@threads/BinarySemaphore.h

26 #i‚de‡
Bö¨ySem≠h‹e_h


27 
	#Bö¨ySem≠h‹e_h


	)

29 
	~<wtf/N⁄c›yabÀ.h
>

30 
	~<wtf/ThªadögPrimôives.h
>

32 
«me•a˚
 
	gWTF
 {

34 ˛as†
	cBö¨ySem≠h‹e
 {

35 
WTF_MAKE_NONCOPYABLE
(
Bö¨ySem≠h‹e
);

37 
	gpublic
:

38 
WTF_EXPORT_PRIVATE
 
Bö¨ySem≠h‹e
();

39 
	gWTF_EXPORT_PRIVATE
 ~
Bö¨ySem≠h‹e
();

41 
WTF_EXPORT_PRIVATE
 
sig«l
();

42 
WTF_EXPORT_PRIVATE
 
boﬁ
 
waô
(
absﬁuãTime
);

44 #i‡
OS
(
WINDOWS
)

45 
HANDLE
 
evít
(Ëc⁄° {  
	gm_evít
; }

48 
	g¥iv©e
:

49 #i‡
OS
(
WINDOWS
)

50 
HANDLE
 
m_evít
;

52 
boﬁ
 
	gm_isSë
;

54 
Muãx
 
	gm_muãx
;

55 
ThªadC⁄dôi⁄
 
	gm_c⁄dôi⁄
;

61 
usög
 
	gWTF
::
Bö¨ySem≠h‹e
;

	@threads/win/BinarySemaphoreWin.cpp

26 
	~"c⁄fig.h
"

27 
	~"Bö¨ySem≠h‹e.h
"

29 
«me•a˚
 
	gWTF
 {

31 
	gBö¨ySem≠h‹e
::
Bö¨ySem≠h‹e
()

32 : 
m_evít
(::
Cª©eEvítW
(0, 
FALSE
, FALSE, 0))

36 
	gBö¨ySem≠h‹e
::~
Bö¨ySem≠h‹e
()

38 ::
Clo£H™dÀ
(
m_evít
);

41 
	gBö¨ySem≠h‹e
::
sig«l
()

43 ::
SëEvít
(
m_evít
);

46 
boﬁ
 
	gBö¨ySem≠h‹e
::
waô
(
absﬁuãTime
)

48 
DWORD
 
öãrvÆ
 = 
absﬁuãTimeToWaôTimeoutI¡îvÆ
(
absﬁuãTime
);

49 i‡(!
	göãrvÆ
) {

52  
	gÁl£
;

55 
DWORD
 
	gªsu…
 = ::
WaôF‹SögÀObje˘
(
m_evít
, 
öãrvÆ
);

56 
	gªsu…
) {

57 
	gWAIT_OBJECT_0
:

59  
åue
;

61 
	gWAIT_TIMEOUT
:

63  
Ál£
;

65 
	gWAIT_FAILED
:

66 
ASSERT_WITH_MESSAGE
(
Ál£
, "::WaôF‹SögÀObje˘ faûed wôhÉº‹ %lu", ::
GëLa°Eº‹
());

67  
	gÁl£
;

70 
ASSERT_WITH_MESSAGE
(
Ál£
, "::WaôF‹SögÀObje˘Ñëu∫ed u√x≥˘edÑesu… %lu", 
ªsu…
);

71  
	gÁl£
;

	@unicode/CharacterNames.h

26 #i‚de‡
Ch¨a˘îNames_h


27 
	#Ch¨a˘îNames_h


	)

29 
	~<unicode/uty≥s.h
>

31 
«me•a˚
 
	gWTF
 {

32 
«me•a˚
 
	gUnicode
 {

39 c⁄° 
UCh¨
 
	gAµÀLogo
 = 0xF8FF;

40 c⁄° 
UCh¨32
 
	g´gónW‹dSï¨©‹Löe
 = 0x10100;

41 c⁄° 
UCh¨32
 
	g´gónW‹dSï¨©‹DŸ
 = 0x10101;

42 c⁄° 
UCh¨
 
	g≠o°r›he
 = 0x0027;

43 c⁄° 
UCh¨
 
	gbœckCú˛e
 = 0x25CF;

44 c⁄° 
UCh¨
 
	gbœckSqu¨e
 = 0x25A0;

45 c⁄° 
UCh¨
 
	gbœckUpPoötögTrüngÀ
 = 0x25B2;

46 c⁄° 
UCh¨
 
	gbuŒë
 = 0x2022;

47 c⁄° 
UCh¨
 
	gbuŒ£ye
 = 0x25CE;

48 c⁄° 
UCh¨
 
	gˇºügeRëu∫
 = 0x000D;

49 c⁄° 
UCh¨
 
	gëhi›icPªÁ˚Cﬁ⁄
 = 0x1366;

50 c⁄° 
UCh¨
 
	gëhi›icW‹d•a˚
 = 0x1361;

51 c⁄° 
UCh¨
 
	gfisheye
 = 0x25C9;

52 c⁄° 
UCh¨
 
	gquŸ©i⁄M¨k
 = 0x0022;

53 c⁄° 
UCh¨
 
	ghebªwPun˘u©i⁄Gîesh
 = 0x05F3;

54 c⁄° 
UCh¨
 
	ghebªwPun˘u©i⁄Gîshayim
 = 0x05F4;

55 c⁄° 
UCh¨
 
	gHúag™aLëãrSmÆlA
 = 0x3041;

56 c⁄° 
UCh¨
 
	gh‹iz⁄èlEŒùsis
 = 0x2026;

57 c⁄° 
UCh¨
 
	ghyphí
 = 0x2010;

58 c⁄° 
UCh¨
 
	ghyphíMöus
 = 0x002D;

59 c⁄° 
UCh¨
 
	gideogøphicComma
 = 0x3001;

60 c⁄° 
UCh¨
 
	gideogøphicFuŒSt›
 = 0x3002;

61 c⁄° 
UCh¨
 
	gideogøphicS∑˚
 = 0x3000;

62 c⁄° 
UCh¨
 
	gÀ·DoubÀQuŸ©i⁄M¨k
 = 0x201C;

63 c⁄° 
UCh¨
 
	gÀ·SögÀQuŸ©i⁄M¨k
 = 0x2018;

64 c⁄° 
UCh¨
 
	gÀ·ToRightEmbed
 = 0x202A;

65 c⁄° 
UCh¨
 
	gÀ·ToRightM¨k
 = 0x200E;

66 c⁄° 
UCh¨
 
	gÀ·ToRightOvîride
 = 0x202D;

67 c⁄° 
UCh¨
 
	gmöusSign
 = 0x2212;

68 c⁄° 
UCh¨
 
	g√wlöeCh¨a˘î
 = 0x000A;

69 c⁄° 
UCh¨
 
	gnoBªakS∑˚
 = 0x00A0;

70 c⁄° 
UCh¨
 
	gobje˘Rïœ˚mítCh¨a˘î
 = 0xFFFC;

71 c⁄° 
UCh¨
 
	gp›Dúe˘i⁄ÆF‹m©tög
 = 0x202C;

72 c⁄° 
UCh¨
 
	gª∂a˚mítCh¨a˘î
 = 0xFFFD;

73 c⁄° 
UCh¨
 
	grightDoubÀQuŸ©i⁄M¨k
 = 0x201D;

74 c⁄° 
UCh¨
 
	grightSögÀQuŸ©i⁄M¨k
 = 0x2019;

75 c⁄° 
UCh¨
 
	grightToLe·Embed
 = 0x202B;

76 c⁄° 
UCh¨
 
	grightToLe·M¨k
 = 0x200F;

77 c⁄° 
UCh¨
 
	grightToLe·Ovîride
 = 0x202E;

78 c⁄° 
UCh¨
 
	g£ßmeDŸ
 = 0xFE45;

79 c⁄° 
UCh¨
 
	gsmÆlLëãrSh¨pS
 = 0x00DF;

80 c⁄° 
UCh¨
 
	gso·Hyphí
 = 0x00AD;

81 c⁄° 
UCh¨
 
	g•a˚
 = 0x0020;

82 c⁄° 
UCh¨
 
	gtibë™M¨kI¡îsyŒabicTsheg
 = 0x0F0B;

83 c⁄° 
UCh¨
 
	gtibë™M¨kDñimôîTshegB°¨
 = 0x0F0C;

84 c⁄° 
UCh¨32
 
	gug¨ôicW‹dDividî
 = 0x1039F;

85 c⁄° 
UCh¨
 
	gwhôeBuŒë
 = 0x25E6;

86 c⁄° 
UCh¨
 
	gwhôeCú˛e
 = 0x25CB;

87 c⁄° 
UCh¨
 
	gwhôeSeßmeDŸ
 = 0xFE46;

88 c⁄° 
UCh¨
 
	gwhôeUpPoötögTrüngÀ
 = 0x25B3;

89 c⁄° 
UCh¨
 
	gyíSign
 = 0x00A5;

90 c⁄° 
UCh¨
 
	gzîoWidthJoöî
 = 0x200D;

91 c⁄° 
UCh¨
 
	gzîoWidthN⁄Joöî
 = 0x200C;

92 c⁄° 
UCh¨
 
	gzîoWidthS∑˚
 = 0x200B;

93 c⁄° 
UCh¨
 
	gzîoWidthNoBªakS∑˚
 = 0xFEFF;

98 
usög
 
	gWTF
::
Unicode
::
AµÀLogo
;

99 
usög
 
	gWTF
::
Unicode
::
´gónW‹dSï¨©‹Löe
;

100 
usög
 
	gWTF
::
Unicode
::
´gónW‹dSï¨©‹DŸ
;

101 
usög
 
	gWTF
::
Unicode
::
bœckCú˛e
;

102 
usög
 
	gWTF
::
Unicode
::
bœckSqu¨e
;

103 
usög
 
	gWTF
::
Unicode
::
bœckUpPoötögTrüngÀ
;

104 
usög
 
	gWTF
::
Unicode
::
buŒë
;

105 
usög
 
	gWTF
::
Unicode
::
buŒ£ye
;

106 
usög
 
	gWTF
::
Unicode
::
ˇºügeRëu∫
;

107 
usög
 
	gWTF
::
Unicode
::
ëhi›icPªÁ˚Cﬁ⁄
;

108 
usög
 
	gWTF
::
Unicode
::
ëhi›icW‹d•a˚
;

109 
usög
 
	gWTF
::
Unicode
::
fisheye
;

110 
usög
 
	gWTF
::
Unicode
::
hebªwPun˘u©i⁄Gîesh
;

111 
usög
 
	gWTF
::
Unicode
::
hebªwPun˘u©i⁄Gîshayim
;

112 
usög
 
	gWTF
::
Unicode
::
Húag™aLëãrSmÆlA
;

113 
usög
 
	gWTF
::
Unicode
::
h‹iz⁄èlEŒùsis
;

114 
usög
 
	gWTF
::
Unicode
::
hyphí
;

115 
usög
 
	gWTF
::
Unicode
::
hyphíMöus
;

116 
usög
 
	gWTF
::
Unicode
::
ideogøphicComma
;

117 
usög
 
	gWTF
::
Unicode
::
ideogøphicFuŒSt›
;

118 
usög
 
	gWTF
::
Unicode
::
ideogøphicS∑˚
;

119 
usög
 
	gWTF
::
Unicode
::
À·DoubÀQuŸ©i⁄M¨k
;

120 
usög
 
	gWTF
::
Unicode
::
À·SögÀQuŸ©i⁄M¨k
;

121 
usög
 
	gWTF
::
Unicode
::
À·ToRightEmbed
;

122 
usög
 
	gWTF
::
Unicode
::
À·ToRightM¨k
;

123 
usög
 
	gWTF
::
Unicode
::
À·ToRightOvîride
;

124 
usög
 
	gWTF
::
Unicode
::
möusSign
;

125 
usög
 
	gWTF
::
Unicode
::
√wlöeCh¨a˘î
;

126 
usög
 
	gWTF
::
Unicode
::
noBªakS∑˚
;

127 
usög
 
	gWTF
::
Unicode
::
obje˘Rïœ˚mítCh¨a˘î
;

128 
usög
 
	gWTF
::
Unicode
::
p›Dúe˘i⁄ÆF‹m©tög
;

129 
usög
 
	gWTF
::
Unicode
::
ª∂a˚mítCh¨a˘î
;

130 
usög
 
	gWTF
::
Unicode
::
rightDoubÀQuŸ©i⁄M¨k
;

131 
usög
 
	gWTF
::
Unicode
::
rightSögÀQuŸ©i⁄M¨k
;

132 
usög
 
	gWTF
::
Unicode
::
rightToLe·Embed
;

133 
usög
 
	gWTF
::
Unicode
::
rightToLe·M¨k
;

134 
usög
 
	gWTF
::
Unicode
::
rightToLe·Ovîride
;

135 
usög
 
	gWTF
::
Unicode
::
£ßmeDŸ
;

136 
usög
 
	gWTF
::
Unicode
::
so·Hyphí
;

137 
usög
 
	gWTF
::
Unicode
::
•a˚
;

138 
usög
 
	gWTF
::
Unicode
::
tibë™M¨kI¡îsyŒabicTsheg
;

139 
usög
 
	gWTF
::
Unicode
::
tibë™M¨kDñimôîTshegB°¨
;

140 
usög
 
	gWTF
::
Unicode
::
ug¨ôicW‹dDividî
;

141 
usög
 
	gWTF
::
Unicode
::
whôeBuŒë
;

142 
usög
 
	gWTF
::
Unicode
::
whôeCú˛e
;

143 
usög
 
	gWTF
::
Unicode
::
whôeSeßmeDŸ
;

144 
usög
 
	gWTF
::
Unicode
::
whôeUpPoötögTrüngÀ
;

145 
usög
 
	gWTF
::
Unicode
::
yíSign
;

146 
usög
 
	gWTF
::
Unicode
::
zîoWidthJoöî
;

147 
usög
 
	gWTF
::
Unicode
::
zîoWidthN⁄Joöî
;

148 
usög
 
	gWTF
::
Unicode
::
zîoWidthS∑˚
;

149 
usög
 
	gWTF
::
Unicode
::
zîoWidthNoBªakS∑˚
;

	@unicode/Collator.h

29 #i‚de‡
WTF_Cﬁœt‹_h


30 
	#WTF_Cﬁœt‹_h


	)

32 
	~<unicode/uc⁄fig.h
>

33 
	~<wtf/N⁄c›yabÀ.h
>

35 
	gUCﬁœt‹
;

37 
«me•a˚
 
	gWTF
 {

39 
˛ass
 
	gSåögVõw
;

41 #i‡
UCONFIG_NO_COLLATION


43 ˛as†
	cCﬁœt‹
 {

44 
	gpublic
:

45 
ex∂icô
 
Cﬁœt‹
(c⁄° * = 
nuŒ±r
, 
boﬁ
 = 
Ál£
) { }

47 
WTF_EXPORT_PRIVATE
 
cﬁœã
(
SåögVõw
, StringView);

48 
WTF_EXPORT_PRIVATE
 
cﬁœãUTF8
(const *, const *);

53 ˛as†
	cCﬁœt‹
 {

54 
WTF_MAKE_NONCOPYABLE
(
Cﬁœt‹
);

55 
	gpublic
:

58 
WTF_EXPORT_PRIVATE
 
ex∂icô
 
Cﬁœt‹
(c⁄° * 
loˇÀ
 = 
nuŒ±r
, 
boﬁ
 
shouldS‹tLowîˇ£Fú°
 = 
Ál£
);

59 
	gWTF_EXPORT_PRIVATE
 ~
Cﬁœt‹
();

61 
WTF_EXPORT_PRIVATE
 
cﬁœã
(
SåögVõw
, StringView) const;

62 
WTF_EXPORT_PRIVATE
 
cﬁœãUTF8
(const *, const *) const;

64 
	g¥iv©e
:

65 * 
m_loˇÀ
;

66 
boﬁ
 
	gm_shouldS‹tLowîˇ£Fú°
;

67 
UCﬁœt‹
* 
	gm_cﬁœt‹
;

74 
usög
 
	gWTF
::
Cﬁœt‹
;

	@unicode/CollatorDefault.cpp

29 
	~"c⁄fig.h
"

30 
	~"Cﬁœt‹.h
"

32 #i‡
UCONFIG_NO_COLLATION


34 
«me•a˚
 
	gWTF
 {

36 
	gCﬁœt‹
::
cﬁœã
(
SåögVõw
 
a
, SåögVõw 
b
) const

38 
	gcomm⁄Lígth
 = 
°d
::
mö
(
a
.
Àngth
(), 
b
.length());

39 
	gi
 = 0; i < 
	gcomm⁄Lígth
; ++i) {

40 i‡(
	ga
[
i
] < 
	gb
[i])

42 i‡(
	ga
[
i
] > 
	gb
[i])

46 i‡(
	ga
.
Àngth
(Ë< 
	gb
.length())

48 i‡(
	ga
.
Àngth
(Ë> 
	gb
.length())

54 
	gCﬁœt‹
::
cﬁœãUTF8
(c⁄° * 
a
, c⁄° * 
b
) const

56  
cﬁœã
(
Såög
::
‰omUTF8
(
a
), Såög::‰omUTF8(
b
));

	@unicode/UTF8.cpp

27 
	~"c⁄fig.h
"

28 
	~"UTF8.h
"

30 
	~"ASCIICTy≥.h
"

31 
	~<wtf/SåögHashî.h
>

32 
	~<wtf/unicode/Ch¨a˘îNames.h
>

34 
«me•a˚
 
	gWTF
 {

35 
«me•a˚
 
	gUnicode
 {

37 
ölöe
 
ölöeUTF8Sequí˚LígthN⁄ASCII
(
b0
)

39 i‡((
	gb0
 & 0xC0) != 0xC0)

41 i‡((
	gb0
 & 0xE0) == 0xC0)

43 i‡((
	gb0
 & 0xF0) == 0xE0)

45 i‡((
	gb0
 & 0xF8) == 0xF0)

50 
ölöe
 
ölöeUTF8Sequí˚Lígth
(
b0
)

52  
isASCII
(
b0
Ë? 1 : 
ölöeUTF8Sequí˚LígthN⁄ASCII
(b0);

55 
UTF8Sequí˚Lígth
(
b0
)

57  
isASCII
(
b0
Ë? 1 : 
ölöeUTF8Sequí˚LígthN⁄ASCII
(b0);

60 
decodeUTF8Sequí˚
(c⁄° * 
£quí˚
)

63 c⁄° 
	gb0
 = 
£quí˚
[0];

64 c⁄° 
	gÀngth
 = 
ölöeUTF8Sequí˚Lígth
(
b0
);

65 i‡(
	gÀngth
 == 0)

69 c⁄° 
	gb1
 = 
£quí˚
[1];

70 i‡(
	gÀngth
 == 1) {

71 i‡(
b1
)

73  
	gb0
;

77 i‡((
	gb1
 & 0xC0) != 0x80)

79 c⁄° 
	gb2
 = 
£quí˚
[2];

80 i‡(
	gÀngth
 == 2) {

81 i‡(
b2
)

83 c⁄° 
	gc
 = ((
b0
 & 0x1FË<< 6Ë| (
b1
 & 0x3F);

84 i‡(
	gc
 < 0x80)

86  
	gc
;

90 i‡((
	gb2
 & 0xC0) != 0x80)

92 c⁄° 
	gb3
 = 
£quí˚
[3];

93 i‡(
	gÀngth
 == 3) {

94 i‡(
b3
)

96 c⁄° 
	gc
 = ((
b0
 & 0xFË<< 12Ë| ((
b1
 & 0x3FË<< 6Ë| (
b2
 & 0x3F);

97 i‡(
	gc
 < 0x800)

100 i‡(
	gc
 >0xD800 && 
c
 <= 0xDFFF)

102  
	gc
;

106 i‡((
	gb3
 & 0xC0) != 0x80)

108 c⁄° 
	gb4
 = 
£quí˚
[4];

109 i‡(
	gÀngth
 == 4) {

110 i‡(
b4
)

112 c⁄° 
	gc
 = ((
b0
 & 0x7Ë<< 18Ë| ((
b1
 & 0x3FË<< 12Ë| ((
b2
 & 0x3FË<< 6Ë| (
b3
 & 0x3F);

113 i‡(
	gc
 < 0x10000 || c > 0x10FFFF)

115  
	gc
;

126 c⁄° 
	gfú°ByãM¨k
[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };

128 
C⁄vîsi⁄Resu…
 
c⁄vîtL©ö1ToUTF8
(

129 c⁄° 
LCh¨
** 
sour˚Sèπ
, c⁄° LCh¨* 
sour˚End
,

130 ** 
èrgëSèπ
, * 
èrgëEnd
)

132 
C⁄vîsi⁄Resu…
 
	gªsu…
 = 
c⁄vîsi⁄OK
;

133 c⁄° 
LCh¨
* 
	gsour˚
 = *
sour˚Sèπ
;

134 * 
	gèrgë
 = *
èrgëSèπ
;

135 
	gsour˚
 < 
	gsour˚End
) {

136 
UCh¨32
 
	gch
;

137 
	gbyãsToWrôe
 = 0;

138 c⁄° 
UCh¨32
 
	gbyãMask
 = 0xBF;

139 c⁄° 
UCh¨32
 
	gbyãM¨k
 = 0x80;

140 c⁄° 
LCh¨
* 
	gﬁdSour˚
 = 
sour˚
;

141 
	gch
 = 
°©ic_ˇ°
<>(*
sour˚
++);

144 i‡(
	gch
 < (
	gUCh¨32
)0x80)

145 
	gbyãsToWrôe
 = 1;

147 
	gbyãsToWrôe
 = 2;

149 
	gèrgë
 +
byãsToWrôe
;

150 i‡(
	gèrgë
 > 
	gèrgëEnd
) {

151 
	gsour˚
 = 
ﬁdSour˚
;

152 
	gèrgë
 -
byãsToWrôe
;

153 
	gªsu…
 = 
èrgëExhau°ed
;

156 
	gbyãsToWrôe
) {

158 *--
èrgë
 = ()((
ch
 | 
byãM¨k
Ë& 
byãMask
);

159 
	gch
 >>= 6;

160 
	gFALLTHROUGH
;

162 *--
èrgë
 = ()(
ch
 | 
fú°ByãM¨k
[
byãsToWrôe
]);

164 
	gèrgë
 +
byãsToWrôe
;

166 *
	gsour˚Sèπ
 = 
sour˚
;

167 *
	gèrgëSèπ
 = 
èrgë
;

168  
	gªsu…
;

171 
C⁄vîsi⁄Resu…
 
c⁄vîtUTF16ToUTF8
(

172 c⁄° 
UCh¨
** 
sour˚Sèπ
, c⁄° UCh¨* 
sour˚End
,

173 ** 
èrgëSèπ
, * 
èrgëEnd
, 
boﬁ
 
°ri˘
)

175 
C⁄vîsi⁄Resu…
 
	gªsu…
 = 
c⁄vîsi⁄OK
;

176 c⁄° 
UCh¨
* 
	gsour˚
 = *
sour˚Sèπ
;

177 * 
	gèrgë
 = *
èrgëSèπ
;

178 
	gsour˚
 < 
	gsour˚End
) {

179 
UCh¨32
 
	gch
;

180 
	gbyãsToWrôe
 = 0;

181 c⁄° 
UCh¨32
 
	gbyãMask
 = 0xBF;

182 c⁄° 
UCh¨32
 
	gbyãM¨k
 = 0x80;

183 c⁄° 
UCh¨
* 
	gﬁdSour˚
 = 
sour˚
;

184 
	gch
 = 
°©ic_ˇ°
<>(*
sour˚
++);

186 i‡(
	gch
 >0xD800 && 
ch
 <= 0xDBFF) {

188 i‡(
sour˚
 < 
sour˚End
) {

189 
UCh¨32
 
ch2
 = 
°©ic_ˇ°
<>(*
sour˚
);

191 i‡(
	gch2
 >0xDC00 && 
ch2
 <= 0xDFFF) {

192 
ch
 = ((ch - 0xD800Ë<< 10Ë+ (
ch2
 - 0xDC00) + 0x0010000;

193 ++
	gsour˚
;

194 } i‡(
	g°ri˘
) {

195 --
	gsour˚
;

196 
	gªsu…
 = 
sour˚IŒegÆ
;

200 --
	gsour˚
;

201 
	gªsu…
 = 
sour˚Exhau°ed
;

204 } i‡(
	g°ri˘
) {

206 i‡(
	gch
 >0xDC00 && 
ch
 <= 0xDFFF) {

207 --
sour˚
;

208 
	gªsu…
 = 
sour˚IŒegÆ
;

213 i‡(
	gch
 < (
	gUCh¨32
)0x80) {

214 
	gbyãsToWrôe
 = 1;

215 } i‡(
	gch
 < (
	gUCh¨32
)0x800) {

216 
	gbyãsToWrôe
 = 2;

217 } i‡(
	gch
 < (
	gUCh¨32
)0x10000) {

218 
	gbyãsToWrôe
 = 3;

219 } i‡(
	gch
 < (
	gUCh¨32
)0x110000) {

220 
	gbyãsToWrôe
 = 4;

222 
	gbyãsToWrôe
 = 3;

223 
	gch
 = 
ª∂a˚mítCh¨a˘î
;

226 
	gèrgë
 +
byãsToWrôe
;

227 i‡(
	gèrgë
 > 
	gèrgëEnd
) {

228 
	gsour˚
 = 
ﬁdSour˚
;

229 
	gèrgë
 -
byãsToWrôe
;

230 
	gªsu…
 = 
èrgëExhau°ed
;

233 
	gbyãsToWrôe
) {

234 4: *--
èrgë
 = ()((
ch
 | 
byãM¨k
Ë& 
byãMask
); 
	gch
 >>6; 
	gFALLTHROUGH
;

235 3: *--
èrgë
 = ()((
ch
 | 
byãM¨k
Ë& 
byãMask
); 
	gch
 >>6; 
	gFALLTHROUGH
;

236 2: *--
èrgë
 = ()((
ch
 | 
byãM¨k
Ë& 
byãMask
); 
	gch
 >>6; 
	gFALLTHROUGH
;

237 1: *--
èrgë
 = ()(
ch
 | 
fú°ByãM¨k
[
byãsToWrôe
]);

239 
	gèrgë
 +
byãsToWrôe
;

241 *
	gsour˚Sèπ
 = 
sour˚
;

242 *
	gèrgëSèπ
 = 
èrgë
;

243  
	gªsu…
;

249 
boﬁ
 
isLegÆUTF8
(c⁄° * 
sour˚
, 
Àngth
)

251 
	ga
;

252 c⁄° * 
	g§˝å
 = 
sour˚
 + 
Àngth
;

253 
	gÀngth
) {

254 :  
Ál£
;

256 4: i‡((
a
 = (*--
§˝å
)Ë< 0x80 ||á > 0xBFË 
Ál£
; 
	gFALLTHROUGH
;

257 3: i‡((
a
 = (*--
§˝å
)Ë< 0x80 ||á > 0xBFË 
Ál£
; 
	gFALLTHROUGH
;

258 2: i‡((
a
 = (*--
§˝å
)Ë> 0xBFË 
Ál£
;

260 *
	gsour˚
) {

262 0xE0: i‡(
a
 < 0xA0Ë 
Ál£
; ;

263 0xED: i‡(
a
 > 0x9FË 
Ál£
; ;

264 0xF0: i‡(
a
 < 0x90Ë 
Ál£
; ;

265 0xF4: i‡(
a
 > 0x8FË 
Ál£
; ;

266 : i‡(
a
 < 0x80Ë 
Ál£
;

268 
	gFALLTHROUGH
;

270 1: i‡(*
sour˚
 >0x80 && *sour˚ < 0xC2Ë 
Ál£
;

272 i‡(*
	gsour˚
 > 0xF4)

273  
	gÁl£
;

274  
	gåue
;

280 c⁄° 
UCh¨32
 
	goff£tsFromUTF8
[6] = { 0x00000000UL, 0x00003080UL, 0x000E2080UL, 0x03C82080UL, 
°©ic_ˇ°
<UChar32>(0xFA082080UL), static_cast<UChar32>(0x82082080UL) };

282 
ölöe
 
UCh¨32
 
ªadUTF8Sequí˚
(c⁄° *& 
£quí˚
, 
Àngth
)

284 
UCh¨32
 
	gch¨a˘î
 = 0;

287 
	gÀngth
) {

288 6: 
ch¨a˘î
 +
°©ic_ˇ°
<>(*
£quí˚
++); 
	gch¨a˘î
 <<6; 
	gFALLTHROUGH
;

289 5: 
ch¨a˘î
 +
°©ic_ˇ°
<>(*
£quí˚
++); 
	gch¨a˘î
 <<6; 
	gFALLTHROUGH
;

290 4: 
ch¨a˘î
 +
°©ic_ˇ°
<>(*
£quí˚
++); 
	gch¨a˘î
 <<6; 
	gFALLTHROUGH
;

291 3: 
ch¨a˘î
 +
°©ic_ˇ°
<>(*
£quí˚
++); 
	gch¨a˘î
 <<6; 
	gFALLTHROUGH
;

292 2: 
ch¨a˘î
 +
°©ic_ˇ°
<>(*
£quí˚
++); 
	gch¨a˘î
 <<6; 
	gFALLTHROUGH
;

293 1: 
ch¨a˘î
 +
°©ic_ˇ°
<>(*
£quí˚
++);

296  
	gch¨a˘î
 - 
	goff£tsFromUTF8
[
Àngth
 - 1];

299 
C⁄vîsi⁄Resu…
 
c⁄vîtUTF8ToUTF16
(

300 c⁄° ** 
sour˚Sèπ
, c⁄° * 
sour˚End
,

301 
UCh¨
** 
èrgëSèπ
, UCh¨* 
èrgëEnd
, 
boﬁ
* 
sour˚AŒASCII
, boﬁ 
°ri˘
)

303 
C⁄vîsi⁄Resu…
 
	gªsu…
 = 
c⁄vîsi⁄OK
;

304 c⁄° * 
	gsour˚
 = *
sour˚Sèπ
;

305 
UCh¨
* 
	gèrgë
 = *
èrgëSèπ
;

306 
UCh¨
 
	g‹AŒD©a
 = 0;

307 
	gsour˚
 < 
	gsour˚End
) {

308 
	gutf8Sequí˚Lígth
 = 
ölöeUTF8Sequí˚Lígth
(*
sour˚
);

309 i‡(
	gsour˚End
 - 
	gsour˚
 < 
	gutf8Sequí˚Lígth
) {

310 
	gªsu…
 = 
sour˚Exhau°ed
;

314 i‡(!
isLegÆUTF8
(
ªöãΩªt_ˇ°
<c⁄° *>(
sour˚
), 
utf8Sequí˚Lígth
)) {

315 
	gªsu…
 = 
sour˚IŒegÆ
;

319 
UCh¨32
 
	gch¨a˘î
 = 
ªadUTF8Sequí˚
(
sour˚
, 
utf8Sequí˚Lígth
);

321 i‡(
	gèrgë
 >
èrgëEnd
) {

322 
sour˚
 -
utf8Sequí˚Lígth
;

323 
	gªsu…
 = 
èrgëExhau°ed
;

327 i‡(
U_IS_BMP
(
ch¨a˘î
)) {

329 i‡(
U_IS_SURROGATE
(
ch¨a˘î
)) {

330 i‡(
	g°ri˘
) {

331 
	gsour˚
 -
utf8Sequí˚Lígth
;

332 
	gªsu…
 = 
sour˚IŒegÆ
;

335 *
	gèrgë
++ = 
ª∂a˚mítCh¨a˘î
;

336 
	g‹AŒD©a
 |
ª∂a˚mítCh¨a˘î
;

339 *
	gèrgë
++ = 
ch¨a˘î
;

340 
	g‹AŒD©a
 |
ch¨a˘î
;

342 } i‡(
U_IS_SUPPLEMENTARY
(
ch¨a˘î
)) {

344 i‡(
	gèrgë
 + 1 >
èrgëEnd
) {

345 
sour˚
 -
utf8Sequí˚Lígth
;

346 
	gªsu…
 = 
èrgëExhau°ed
;

349 *
	gèrgë
++ = 
U16_LEAD
(
ch¨a˘î
);

350 *
	gèrgë
++ = 
U16_TRAIL
(
ch¨a˘î
);

351 
	g‹AŒD©a
 = 0xffff;

353 i‡(
	g°ri˘
) {

354 
	gsour˚
 -
utf8Sequí˚Lígth
;

355 
	gªsu…
 = 
sour˚IŒegÆ
;

358 *
	gèrgë
++ = 
ª∂a˚mítCh¨a˘î
;

359 
	g‹AŒD©a
 |
ª∂a˚mítCh¨a˘î
;

363 *
	gsour˚Sèπ
 = 
sour˚
;

364 *
	gèrgëSèπ
 = 
èrgë
;

366 i‡(
	gsour˚AŒASCII
)

367 *
	gsour˚AŒASCII
 = !(
‹AŒD©a
 & ~0x7f);

369  
	gªsu…
;

372 
ˇlcuœãSåögHashAndLígthFromUTF8MaskögT›8Bôs
(c⁄° * 
d©a
, c⁄° * 
d©aEnd
, & 
d©aLígth
, & 
utf16Lígth
)

374 i‡(!
	gd©a
)

377 
SåögHashî
 
	g°rögHashî
;

378 
	gd©aLígth
 = 0;

379 
	gutf16Lígth
 = 0;

381 
	gd©a
 < 
	gd©aEnd
 || (!dataEnd && *data)) {

382 i‡(
isASCII
(*
d©a
)) {

383 
	g°rögHashî
.
addCh¨a˘î
(*
d©a
++);

384 
	gd©aLígth
++;

385 
	gutf16Lígth
++;

389 
	gutf8Sequí˚Lígth
 = 
ölöeUTF8Sequí˚LígthN⁄ASCII
(*
d©a
);

390 
	gd©aLígth
 +
utf8Sequí˚Lígth
;

392 i‡(!
	gd©aEnd
) {

393 
	gi
 = 1; i < 
	gutf8Sequí˚Lígth
; ++i) {

394 i‡(!
	gd©a
[
i
])

397 } i‡(
	gd©aEnd
 - 
	gd©a
 < 
	gutf8Sequí˚Lígth
)

400 i‡(!
isLegÆUTF8
(
ªöãΩªt_ˇ°
<c⁄° *>(
d©a
), 
utf8Sequí˚Lígth
))

403 
UCh¨32
 
	gch¨a˘î
 = 
ªadUTF8Sequí˚
(
d©a
, 
utf8Sequí˚Lígth
);

404 
ASSERT
(!
isASCII
(
ch¨a˘î
));

406 i‡(
U_IS_BMP
(
ch¨a˘î
)) {

408 i‡(
U_IS_SURROGATE
(
ch¨a˘î
))

410 
	g°rögHashî
.
addCh¨a˘î
(
°©ic_ˇ°
<
UCh¨
>(
ch¨a˘î
));

411 
	gutf16Lígth
++;

412 } i‡(
U_IS_SUPPLEMENTARY
(
ch¨a˘î
)) {

413 
	g°rögHashî
.
addCh¨a˘îs
(
°©ic_ˇ°
<
UCh¨
>(
U16_LEAD
(
ch¨a˘î
)),

414 
°©ic_ˇ°
<
UCh¨
>(
U16_TRAIL
(
ch¨a˘î
)));

415 
	gutf16Lígth
 += 2;

420  
	g°rögHashî
.
hashWôhT›8BôsMasked
();

423 
boﬁ
 
equÆUTF16WôhUTF8
(c⁄° 
UCh¨
* 
a
, c⁄° * 
b
, c⁄° * 
bEnd
)

425 
	gb
 < 
	gbEnd
) {

426 i‡(
isASCII
(*
a
Ë|| isASCII(*
b
)) {

427 i‡(*
	ga
++ !*
b
++)

428  
Ál£
;

432 
	gutf8Sequí˚Lígth
 = 
ölöeUTF8Sequí˚LígthN⁄ASCII
(*
b
);

434 i‡(
	gbEnd
 - 
	gb
 < 
	gutf8Sequí˚Lígth
)

435  
	gÁl£
;

437 i‡(!
isLegÆUTF8
(
ªöãΩªt_ˇ°
<c⁄° *>(
b
), 
utf8Sequí˚Lígth
))

438  
	gÁl£
;

440 
UCh¨32
 
	gch¨a˘î
 = 
ªadUTF8Sequí˚
(
b
, 
utf8Sequí˚Lígth
);

441 
ASSERT
(!
isASCII
(
ch¨a˘î
));

443 i‡(
U_IS_BMP
(
ch¨a˘î
)) {

445 i‡(
U_IS_SURROGATE
(
ch¨a˘î
))

446  
	gÁl£
;

447 i‡(*
	ga
++ !
ch¨a˘î
)

448  
Ál£
;

449 } i‡(
U_IS_SUPPLEMENTARY
(
ch¨a˘î
)) {

450 i‡(*
	ga
++ !
U16_LEAD
(
ch¨a˘î
))

451  
Ál£
;

452 i‡(*
	ga
++ !
U16_TRAIL
(
ch¨a˘î
))

453  
Ál£
;

455  
	gÁl£
;

458  
	gåue
;

461 
boﬁ
 
equÆL©ö1WôhUTF8
(c⁄° 
LCh¨
* 
a
, c⁄° * 
b
, c⁄° * 
bEnd
)

463 
	gb
 < 
	gbEnd
) {

464 i‡(
isASCII
(*
a
Ë|| isASCII(*
b
)) {

465 i‡(*
	ga
++ !*
b
++)

466  
Ál£
;

470 i‡(
	gb
 + 1 =
bEnd
)

471  
Ál£
;

473 i‡((
	gb
[0] & 0xE0Ë!0xC0 || (
b
[1] & 0xC0) != 0x80)

474  
Ál£
;

476 
LCh¨
 
	gch¨a˘î
 = ((
b
[0] & 0x1F) << 6) | (b[1] & 0x3F);

478 
	gb
 += 2;

480 i‡(*
	ga
++ !
ch¨a˘î
)

481  
Ál£
;

484  
	gåue
;

	@unicode/UTF8.h

26 #i‚de‡
WTF_UTF8_h


27 
	#WTF_UTF8_h


	)

29 
	~<unicode/uty≥s.h
>

30 
	~<wtf/ãxt/LCh¨.h
>

32 
«me•a˚
 
	gWTF
 {

33 
«me•a˚
 
	gUnicode
 {

38 
WTF_EXPORT_PRIVATE
 
UTF8Sequí˚Lígth
();

43 
WTF_EXPORT_PRIVATE
 
decodeUTF8Sequí˚
(const *);

46 
	gc⁄vîsi⁄OK
,

47 
	gsour˚Exhau°ed
,

48 
	gèrgëExhau°ed
,

49 
	gsour˚IŒegÆ


50 } 
	tC⁄vîsi⁄Resu…
;

66 
WTF_EXPORT_PRIVATE
 
C⁄vîsi⁄Resu…
 
c⁄vîtUTF8ToUTF16
(

67 c⁄° ** 
sour˚Sèπ
, c⁄° * 
sour˚End
,

68 
UCh¨
** 
èrgëSèπ
, UCh¨* 
èrgëEnd
, 
boﬁ
* 
isSour˚AŒASCII
 = 0, boﬁ 
°ri˘
 = 
åue
);

70 
WTF_EXPORT_PRIVATE
 
C⁄vîsi⁄Resu…
 
c⁄vîtL©ö1ToUTF8
(

71 c⁄° 
LCh¨
** 
sour˚Sèπ
, c⁄° LCh¨* 
sour˚End
,

72 ** 
èrgëSèπ
, * 
èrgëEnd
);

74 
WTF_EXPORT_PRIVATE
 
C⁄vîsi⁄Resu…
 
c⁄vîtUTF16ToUTF8
(

75 c⁄° 
UCh¨
** 
sour˚Sèπ
, c⁄° UCh¨* 
sour˚End
,

76 ** 
èrgëSèπ
, * 
èrgëEnd
, 
boﬁ
 
°ri˘
 = 
åue
);

78 
WTF_EXPORT_PRIVATE
 
ˇlcuœãSåögHashAndLígthFromUTF8MaskögT›8Bôs
(c⁄° * 
d©a
, c⁄° * 
d©aEnd
, & 
d©aLígth
, & 
utf16Lígth
);

81 
boﬁ
 
equÆUTF16WôhUTF8
(c⁄° 
UCh¨
* 
°rögInUTF16
, c⁄° * 
°rögInUTF8
, c⁄° * 
°rögInUTF8End
);

82 
boﬁ
 
equÆL©ö1WôhUTF8
(c⁄° 
LCh¨
* 
°rögInL©ö1
, c⁄° * 
°rögInUTF8
, c⁄° * 
°rögInUTF8End
);

	@unicode/icu/CollatorICU.cpp

29 
	~"c⁄fig.h
"

30 
	~<wtf/unicode/Cﬁœt‹.h
>

34 #i‡!
UCONFIG_NO_COLLATION


36 
	~<muãx
>

37 
	~<unicode/ucﬁ.h
>

38 
	~<wtf/NevîDe°royed.h
>

39 
	~<wtf/SåögExåas.h
>

40 
	~<wtf/ãxt/SåögVõw.h
>

42 #i‡
OS
(
DARWIN
Ë&& 
USE
(
CF
)

43 
	~<C‹eFound©i⁄/C‹eFound©i⁄.h
>

44 
	~<wtf/RëaöPå.h
>

47 
«me•a˚
 
	gWTF
 {

49 
UCﬁœt‹
* 
	gˇchedCﬁœt‹
;

50 * 
	gˇchedCﬁœt‹LoˇÀ
;

51 
boﬁ
 
	gˇchedCﬁœt‹ShouldS‹tLowîˇ£Fú°
;

53 
	g°d
::
muãx
& 
ˇchedCﬁœt‹Muãx
()

55 
°d
::
⁄˚_Êag
 
⁄˚Fœg
;

57 
	gLazyNevîDe°royed
<
	g°d
::
muãx
> mutex;

58 
	g°d
::
ˇŒ_⁄˚
(
⁄˚Fœg
, []{

59 
muãx
.
c⁄°ru˘
();

62  
	gmuãx
;

65 #i‡!(
OS
(
DARWIN
Ë&& 
USE
(
CF
))

67 
ölöe
 c⁄° * 
ªsﬁveDeÁu…LoˇÀ
(c⁄° * 
loˇÀ
)

69  
	gloˇÀ
;

74 
ölöe
 * 
c›ySh‹tASCIISåög
(
CFSåögRef
 
°rög
)

77 
	gbuf„r
[256];

78 i‡(!
	g°rög
 || !
CFSåögGëCSåög
(
°rög
, 
buf„r
, (buf„r), 
kCFSåögEncodögASCII
))

79  
°rdup
("");

80  
°rdup
(
buf„r
);

83 * 
c›yDeÁu…LoˇÀ
()

85 #i‡!
PLATFORM
(
IOS
)

86  
c›ySh‹tASCIISåög
(
°©ic_ˇ°
<
CFSåögRef
>(
CFLoˇÀGëVÆue
(
ad›tCF
(
CFLoˇÀC›yCuºít
()).
gë
(), 
kCFLoˇÀCﬁœt‹Idítifõr
)));

89  
c›ySh‹tASCIISåög
(
ad›tCF
(
°©ic_ˇ°
<
CFSåögRef
>(
CFPª„ªn˚sC›yVÆue
(
CFSTR
("AµÀCﬁœti⁄Ordî"), 
kCFPª„ªn˚sAnyAµliˇti⁄
, 
kCFPª„ªn˚sCuºítU£r
, 
kCFPª„ªn˚sAnyHo°
))).
gë
());

93 
ölöe
 c⁄° * 
ªsﬁveDeÁu…LoˇÀ
(c⁄° * 
loˇÀ
)

95 i‡(
	gloˇÀ
)

96  
	gloˇÀ
;

99 * 
	gdeÁu…LoˇÀ
;

100 
	g°d
::
⁄˚_Êag
 
öôülizeDeÁu…LoˇÀOn˚
;

101 
	g°d
::
ˇŒ_⁄˚
(
öôülizeDeÁu…LoˇÀOn˚
, []{

102 
deÁu…LoˇÀ
 = 
c›yDeÁu…LoˇÀ
();

104  
	gdeÁu…LoˇÀ
;

109 
ölöe
 
boﬁ
 
loˇÀsM©ch
(c⁄° * 
a
, c⁄° * 
b
)

112  
	ga
 =
b
 || (
a
 && b && !
°rcmp
(a, b));

115 
	gCﬁœt‹
::
Cﬁœt‹
(c⁄° * 
loˇÀ
, 
boﬁ
 
shouldS‹tLowîˇ£Fú°
)

117 
UEº‹Code
 
	g°©us
 = 
U_ZERO_ERROR
;

120 
	g°d
::
lock_gu¨d
<
°d
::
muãx
> 
lock
(
ˇchedCﬁœt‹Muãx
());

121 i‡(
	gˇchedCﬁœt‹
 && 
loˇÀsM©ch
(
ˇchedCﬁœt‹LoˇÀ
, 
loˇÀ
Ë&& 
	gˇchedCﬁœt‹ShouldS‹tLowîˇ£Fú°
 =
shouldS‹tLowîˇ£Fú°
) {

122 
m_cﬁœt‹
 = 
ˇchedCﬁœt‹
;

123 
	gm_loˇÀ
 = 
ˇchedCﬁœt‹LoˇÀ
;

124 
	gm_shouldS‹tLowîˇ£Fú°
 = 
shouldS‹tLowîˇ£Fú°
;

125 
	gˇchedCﬁœt‹
 = 
nuŒ±r
;

126 
	gˇchedCﬁœt‹LoˇÀ
 = 
nuŒ±r
;

131 
	gm_cﬁœt‹
 = 
ucﬁ_›í
(
ªsﬁveDeÁu…LoˇÀ
(
loˇÀ
), &
°©us
);

132 i‡(
U_FAILURE
(
°©us
)) {

133 
	g°©us
 = 
U_ZERO_ERROR
;

134 
	gm_cﬁœt‹
 = 
ucﬁ_›í
("", &
°©us
);

136 
ASSERT
(
U_SUCCESS
(
°©us
));

138 
ucﬁ_£tAâribuã
(
m_cﬁœt‹
, 
UCOL_CASE_FIRST
, 
shouldS‹tLowîˇ£Fú°
 ? 
UCOL_LOWER_FIRST
 : 
UCOL_UPPER_FIRST
, &
°©us
);

139 
ASSERT
(
U_SUCCESS
(
°©us
));

141 
ucﬁ_£tAâribuã
(
m_cﬁœt‹
, 
UCOL_NORMALIZATION_MODE
, 
UCOL_ON
, &
°©us
);

142 
ASSERT
(
U_SUCCESS
(
°©us
));

144 
	gm_loˇÀ
 = 
loˇÀ
 ? 
°rdup
÷oˇÀË: 
nuŒ±r
;

145 
	gm_shouldS‹tLowîˇ£Fú°
 = 
shouldS‹tLowîˇ£Fú°
;

148 
	gCﬁœt‹
::~
Cﬁœt‹
()

151 
°d
::
lock_gu¨d
<°d::
muãx
> 
lock
(
ˇchedCﬁœt‹Muãx
());

152 i‡(
	gˇchedCﬁœt‹
)

153 
ucﬁ_˛o£
(
ˇchedCﬁœt‹
);

154 
	gˇchedCﬁœt‹
 = 
m_cﬁœt‹
;

155 
	gˇchedCﬁœt‹LoˇÀ
 = 
m_loˇÀ
;

156 
	gˇchedCﬁœt‹ShouldS‹tLowîˇ£Fú°
 = 
m_shouldS‹tLowîˇ£Fú°
;

157 
	gm_cﬁœt‹
 = 
nuŒ±r
;

158 
	gm_loˇÀ
 = 
nuŒ±r
;

161 
‰ì
(
m_loˇÀ
);

164 
öt32_t
 
gëIndexL©ö1
(
UCh¨Iãøt‹
* 
ôî©‹
, 
UCh¨Iãøt‹Origö
 
‹igö
)

166 
	g‹igö
) {

167 
	gUITER_START
:

168  
ôî©‹
->
°¨t
;

169 
	gUITER_CURRENT
:

170  
ôî©‹
->
ödex
;

171 
	gUITER_LIMIT
:

172  
ôî©‹
->
limô
;

173 
	gUITER_ZERO
:

175 
	gUITER_LENGTH
:

176  
ôî©‹
->
Àngth
;

178 
ASSERT_NOT_REACHED
();

179  
	gU_SENTINEL
;

182 
öt32_t
 
moveL©ö1
(
UCh¨Iãøt‹
* 
ôî©‹
, i¡32_à
dñè
, 
UCh¨Iãøt‹Origö
 
‹igö
)

184  
	gôî©‹
->
	gödex
 = 
gëIndexL©ö1
(
ôî©‹
, 
‹igö
Ë+ 
	gdñè
;

187 
UBoﬁ
 
hasNextL©ö1
(
UCh¨Iãøt‹
* 
ôî©‹
)

189  
	gôî©‹
->
	gödex
 < iãøt‹->
	glimô
;

192 
UBoﬁ
 
hasPªviousL©ö1
(
UCh¨Iãøt‹
* 
ôî©‹
)

194  
	gôî©‹
->
	gödex
 > iãøt‹->
	g°¨t
;

197 
UCh¨32
 
cuºítL©ö1
(
UCh¨Iãøt‹
* 
ôî©‹
)

199 
ASSERT
(
ôî©‹
->
ödex
 >ôî©‹->
°¨t
);

200 i‡(
	gôî©‹
->
	gödex
 >
ôî©‹
->
limô
)

201  
U_SENTINEL
;

202  
	g°©ic_ˇ°
<c⁄° 
	gLCh¨
*>(
	gôî©‹
->
	gc⁄ãxt
)[
ôî©‹
->
ödex
];

205 
UCh¨32
 
√xtL©ö1
(
UCh¨Iãøt‹
* 
ôî©‹
)

207 
ASSERT
(
ôî©‹
->
ödex
 >ôî©‹->
°¨t
);

208 i‡(
	gôî©‹
->
	gödex
 >
ôî©‹
->
limô
)

209  
U_SENTINEL
;

210  
	g°©ic_ˇ°
<c⁄° 
	gLCh¨
*>(
	gôî©‹
->
	gc⁄ãxt
)[
ôî©‹
->
ödex
++];

213 
UCh¨32
 
¥eviousL©ö1
(
UCh¨Iãøt‹
* 
ôî©‹
)

215 i‡(
	gôî©‹
->
	gödex
 <
ôî©‹
->
°¨t
)

216  
U_SENTINEL
;

217  
	g°©ic_ˇ°
<c⁄° 
	gLCh¨
*>(
	gôî©‹
->
	gc⁄ãxt
)[--
ôî©‹
->
ödex
];

220 
uöt32_t
 
gëSèãL©ö1
(c⁄° 
UCh¨Iãøt‹
* 
ôî©‹
)

222  
	gôî©‹
->
	gödex
;

225 
£tSèãL©ö1
(
UCh¨Iãøt‹
* 
ôî©‹
, 
uöt32_t
 
°©e
, 
UEº‹Code
*)

227 
	gôî©‹
->
	gödex
 = 
°©e
;

230 
UCh¨Iãøt‹
 
¸óãL©ö1Iãøt‹
(c⁄° 
LCh¨
* 
ch¨a˘îs
, 
Àngth
)

232 
UCh¨Iãøt‹
 
	gôî©‹
;

233 
	gôî©‹
.
	gc⁄ãxt
 = 
ch¨a˘îs
;

234 
	gôî©‹
.
	gÀngth
 = 
Àngth
;

235 
	gôî©‹
.
	g°¨t
 = 0;

236 
	gôî©‹
.
	gödex
 = 0;

237 
	gôî©‹
.
	glimô
 = 
Àngth
;

238 
	gôî©‹
.
	gª£rvedFõld
 = 0;

239 
	gôî©‹
.
	ggëIndex
 = 
gëIndexL©ö1
;

240 
	gôî©‹
.
	gmove
 = 
moveL©ö1
;

241 
	gôî©‹
.
	ghasNext
 = 
hasNextL©ö1
;

242 
	gôî©‹
.
	ghasPªvious
 = 
hasPªviousL©ö1
;

243 
	gôî©‹
.
	gcuºít
 = 
cuºítL©ö1
;

244 
	gôî©‹
.
	g√xt
 = 
√xtL©ö1
;

245 
	gôî©‹
.
	g¥evious
 = 
¥eviousL©ö1
;

246 
	gôî©‹
.
	gª£rvedFn
 = 
nuŒ±r
;

247 
	gôî©‹
.
	ggëSèã
 = 
gëSèãL©ö1
;

248 
	gôî©‹
.
	g£tSèã
 = 
£tSèãL©ö1
;

249  
	gôî©‹
;

252 
UCh¨Iãøt‹
 
¸óãIãøt‹
(
SåögVõw
 
°rög
)

254 i‡(
	g°rög
.
is8Bô
())

255  
¸óãL©ö1Iãøt‹
(
°rög
.
ch¨a˘îs8
(), såög.
Àngth
());

256 
UCh¨Iãøt‹
 
	gôî©‹
;

257 
uôî_£tSåög
(&
ôî©‹
, 
°rög
.
ch¨a˘îs16
(), såög.
Àngth
());

258  
	gôî©‹
;

261 
	gCﬁœt‹
::
cﬁœã
(
SåögVõw
 
a
, SåögVõw 
b
) const

263 
UCh¨Iãøt‹
 
	gôî©‹A
 = 
¸óãIãøt‹
(
a
);

264 
UCh¨Iãøt‹
 
	gôî©‹B
 = 
¸óãIãøt‹
(
b
);

265 
UEº‹Code
 
	g°©us
 = 
U_ZERO_ERROR
;

266 
	gªsu…
 = 
ucﬁ_°rcﬁlIãr
(
m_cﬁœt‹
, &
ôî©‹A
, &
ôî©‹B
, &
°©us
);

267 
ASSERT
(
U_SUCCESS
(
°©us
));

268  
	gªsu…
;

271 
UCh¨Iãøt‹
 
¸óãIãøt‹UTF8
(c⁄° * 
°rög
)

273 
UCh¨Iãøt‹
 
	gôî©‹
;

274 
uôî_£tUTF8
(&
ôî©‹
, 
°rög
, 
°æí
(string));

275  
	gôî©‹
;

278 
	gCﬁœt‹
::
cﬁœãUTF8
(c⁄° * 
a
, c⁄° * 
b
) const

280 
UCh¨Iãøt‹
 
	gôî©‹A
 = 
¸óãIãøt‹UTF8
(
a
);

281 
UCh¨Iãøt‹
 
	gôî©‹B
 = 
¸óãIãøt‹UTF8
(
b
);

282 
UEº‹Code
 
	g°©us
 = 
U_ZERO_ERROR
;

283 
	gªsu…
 = 
ucﬁ_°rcﬁlIãr
(
m_cﬁœt‹
, &
ôî©‹A
, &
ôî©‹B
, &
°©us
);

284 
ASSERT
(
U_SUCCESS
(
°©us
));

285  
	gªsu…
;

	@win/GDIObject.h

26 #i‚de‡
GDIObje˘_h


27 
	#GDIObje˘_h


	)

29 
	~<Æg‹ôhm
>

30 
	~<c°ddef
>

31 
	~<mem‹y
>

32 
	~<wödows.h
>

33 
	~<wtf/As£πi⁄s.h
>

34 
	~<wtf/N⁄c›yabÀ.h
>

36 
«me•a˚
 
	gWTF
 {

38 
	gãm∂©e
<
ty≥«me
 
	gT
> 
dñëeObje˘
(
T
);

40 
	gãm∂©e
<
ty≥«me
 
	gT
> cœs†
	cGDIObje˘
 {

41 
WTF_MAKE_NONCOPYABLE
(
GDIObje˘
);

42 
	gpublic
:

43 
GDIObje˘
(Ë: 
m_obje˘
(0) { }

44 
GDIObje˘
(
°d
::
nuŒ±r_t
Ë: 
m_obje˘
(0) { }

45 ~
GDIObje˘
(Ë{ 
dñëeObje˘
<
T
>(
m_obje˘
); }

47 
T
 
gë
(Ëc⁄° {  
	gm_obje˘
; }

49 
˛ór
();

50 
T
 
Àak
(Ë
	gWARN_UNUSED_RETURN
;

52 
boﬁ
 
	g›î©‹
!(Ëc⁄° {  !
	gm_obje˘
; }

55 c⁄° * 
	tUn•ecifõdBoﬁTy≥
;

56 
›î©‹
 
Un•ecifõdBoﬁTy≥
(Ëc⁄° {  
	gm_obje˘
 ? 
	gªöãΩªt_ˇ°
<
	gUn•ecifõdBoﬁTy≥
>(&m_object) : 0; }

58 
	gGDIObje˘
<
	gT
>& 
	g›î©‹
=(
°d
::
nuŒ±r_t
Ë{ 
˛ór
();  *
	gthis
; }

60 
GDIObje˘
(GDIObject&&);

61 
	gãm∂©e
<
ty≥«me
 
	gU
> 
GDIObje˘
(GDIObje˘<
U
>&&);

63 
	gGDIObje˘
& 
	g›î©‹
=(
GDIObje˘
&&);

64 
	gãm∂©e
<
ty≥«me
 
	gU
> 
	gGDIObje˘
& 
	g›î©‹
=(
GDIObje˘
<
U
>&&);

66 
sw≠
(
GDIObje˘
& 
o
Ë{ 
	g°d
::sw≠(
m_obje˘
, o.m_object); }

68 
	g¥iv©e
:

69 
ãm∂©e
<
ty≥«me
 
U
> 
‰õnd
 
GDIObje˘
<U> 
ad›tGDIObje˘
(U);

70 
GDIObje˘
(
T
 
obje˘
Ë: 
m_obje˘
(object) { }

72 
GDIObje˘
<
T
>& 
›î©‹
=(T);

74 
T
 
	gm_obje˘
;

77 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gGDIObje˘
<T>::
	$˛ór
()

79 
T
 
obje˘
 = 
m_obje˘
;

80 
m_obje˘
 = 0;

81 
	`dñëeObje˘
(
obje˘
);

82 
	}
}

84 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
T
 
	gGDIObje˘
<T>::
	$Àak
()

86 
T
 
obje˘
 = 
m_obje˘
;

87 
m_obje˘
 = 0;

88  
obje˘
;

89 
	}
}

91 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gGDIObje˘
<T>::
GDIObje˘
(GDIObje˘<
T
>&& 
Ÿhî
)

92 : 
m_obje˘
(
Ÿhî
.
	$Àak
())

94 
	}
}

96 
ãm∂©e
<
ty≥«me
 
T
> 
ölöe
 
GDIObje˘
<T>& GDIObje˘<T>::
›î©‹
=(GDIObje˘<T>&& 
Ÿhî
)

98 autÿ
obje˘
 = 
WTF
::
move
(
Ÿhî
);

99 
sw≠
(
obje˘
);

100  *
	gthis
;

103 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gGDIObje˘
<T> 
	$ad›tGDIObje˘
(
T
 
obje˘
)

105  
GDIObje˘
<
T
>(
obje˘
);

106 
	}
}

108 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
sw≠
(
GDIObje˘
<
T
>& 
a
, GDIObje˘<T>& 
b
)

110 
	ga
.
sw≠
(
b
);

114 
	gãm∂©e
<
ty≥«me
 
	gT
> 
ölöe
 
	gdñëeObje˘
<T>(
T
 
	gobje˘
)

116 i‡(
	gobje˘
)

117 ::
DñëeObje˘
(
obje˘
);

120 
	gãm∂©e
<> 
ölöe
 
	gdñëeObje˘
<
	gHDC
>(
HDC
 
	ghdc
)

122 i‡(
	ghdc
)

123 ::
DñëeDC
(
hdc
);

128 
usög
 
	gWTF
::
GDIObje˘
;

129 
usög
 
	gWTF
::
ad›tGDIObje˘
;

	@win/MainThreadWin.cpp

30 
	~"c⁄fig.h
"

31 
	~"MaöThªad.h
"

33 
	~"As£πi⁄s.h
"

34 
	~"Thªadög.h
"

35 
	~"WödowsExåas.h
"

37 
«me•a˚
 
	gWTF
 {

39 
HWND
 
	gthªadögWödowH™dÀ
;

40 
UINT
 
	gthªadögFúedMesßge
;

41 c⁄° 
LPCWSTR
 
	gkThªadögWödowCœssName
 = 
L
"ThreadingWindowClass";

43 
LRESULT
 
CALLBACK
 
ThªadögWödowWndProc
(
HWND
 
hWnd
, 
UINT
 
mesßge
, 
WPARAM
 
wP¨am
, 
LPARAM
 
lP¨am
)

45 i‡(
	gmesßge
 =
thªadögFúedMesßge
)

46 
di•©chFun˘i⁄sFromMaöThªad
();

48  
DefWödowProc
(
hWnd
, 
mesßge
, 
wP¨am
, 
lP¨am
);

52 
öôülizeMaöThªadPœtf‹m
()

54 i‡(
	gthªadögWödowH™dÀ
)

57 
WNDCLASSW
 
	gw˚x
;

58 
mem£t
(&
w˚x
, 0, (
WNDCLASSW
));

59 
	gw˚x
.
	gÕ‚WndProc
 = 
ThªadögWödowWndProc
;

60 
	gw˚x
.
	gÕszCœssName
 = 
kThªadögWödowCœssName
;

61 
Regi°îCœssW
(&
w˚x
);

63 
	gthªadögWödowH™dÀ
 = 
Cª©eWödowW
(
kThªadögWödowCœssName
, 0, 0,

64 
CW_USEDEFAULT
, 0, CW_USEDEFAULT, 0, 
HWND_MESSAGE
, 0, 0, 0);

65 
	gthªadögFúedMesßge
 = 
Regi°îWödowMesßgeW
(
L
"com.apple.WebKit.MainThreadFired");

67 
öôülizeCuºítThªadI¡î«l
("Main Thread");

70 
scheduÀDi•©chFun˘i⁄sOnMaöThªad
()

72 
ASSERT
(
thªadögWödowH™dÀ
);

73 
Po°Mesßge
(
thªadögWödowH™dÀ
, 
thªadögFúedMesßge
, 0, 0);

	@win/RunLoopWin.cpp

26 
	~"c⁄fig.h
"

27 
	~"RunLo›.h
"

29 
	~<wtf/CuºítTime.h
>

30 
	~<wtf/WödowsExåas.h
>

32 
«me•a˚
 
	gWTF
 {

34 c⁄° 
UINT
 
	gPîf‹mW‹kMesßge
 = 
WM_USER
 + 1;

35 c⁄° 
LPWSTR
 
	gkRunLo›MesßgeWödowCœssName
 = 
L
"RunLoopMessageWindow";

37 
LRESULT
 
CALLBACK
 
	gRunLo›
::
RunLo›WndProc
(
HWND
 
hWnd
, 
UINT
 
mesßge
, 
WPARAM
 
wP¨am
, 
LPARAM
 
lP¨am
)

39 i‡(
RunLo›
* 
	grunLo›
 = 
°©ic_ˇ°
<RunLo›*>(
gëWödowPoöãr
(
hWnd
, 0)))

40  
	grunLo›
->
wndProc
(
hWnd
, 
mesßge
, 
wP¨am
, 
lP¨am
);

42 i‡(
	gmesßge
 =
WM_CREATE
) {

43 
LPCREATESTRUCT
 
¸óãSåu˘
 = 
ªöãΩªt_ˇ°
<LPCREATESTRUCT>(
lP¨am
);

46 
£tWödowPoöãr
(
hWnd
, 0, 
¸óãSåu˘
->
ÕCª©eP¨ams
);

50  ::
DefWödowProc
(
hWnd
, 
mesßge
, 
wP¨am
, 
lP¨am
);

53 
LRESULT
 
	gRunLo›
::
wndProc
(
HWND
 
hWnd
, 
UINT
 
mesßge
, 
WPARAM
 
wP¨am
, 
LPARAM
 
lP¨am
)

55 
	gmesßge
) {

56 
	gPîf‹mW‹kMesßge
:

57 
≥rf‹mW‹k
();

59 
	gWM_TIMER
:

60 
RunLo›
::
TimîBa£
::
timîFúed
(
this
, 
wP¨am
);

64  ::
DefWödowProc
(
hWnd
, 
mesßge
, 
wP¨am
, 
lP¨am
);

67 
	gRunLo›
::
run
()

69 
MSG
 
mesßge
;

70 
BOOL
 
	gªsu…
 = ::
GëMesßge
(&
mesßge
, 0, 0, 0)) {

71 i‡(
	gªsu…
 == -1)

73 ::
Tøn¶©eMesßge
(&
mesßge
);

74 ::
Di•©chMesßge
(&
mesßge
);

78 
	gRunLo›
::
°›
()

80 ::
Po°QuôMesßge
(0);

83 
boﬁ
 
	gRunLo›
::
ªgi°îRunLo›MesßgeWödowCœss
()

87 
WNDCLASS
 
wödowCœss
 = { 0 };

88 
	gwödowCœss
.
	gÕ‚WndProc
 = 
RunLo›
::
RunLo›WndProc
;

89 
	gwödowCœss
.
	gcbWndExåa
 = (
RunLo›
*);

90 
	gwödowCœss
.
	gÕszCœssName
 = 
kRunLo›MesßgeWödowCœssName
;

92  !!::
Regi°îCœss
(&
wödowCœss
);

95 
	gRunLo›
::
RunLo›
()

97 
ªgi°îRunLo›MesßgeWödowCœss
();

99 
	gm_runLo›MesßgeWödow
 = ::
Cª©eWödow
(
kRunLo›MesßgeWödowCœssName
, 0, 0,

100 
CW_USEDEFAULT
, 0, CW_USEDEFAULT, 0, 
HWND_MESSAGE
, 0, 0, 
this
);

101 
ASSERT
(::
IsWödow
(
m_runLo›MesßgeWödow
));

104 
	gRunLo›
::~
RunLo›
()

109 
RunLo›
::
wakeUp
()

113 ::
Po°Mesßge
(
m_runLo›MesßgeWödow
, 
Pîf‹mW‹kMesßge
, 
ªöãΩªt_ˇ°
<
WPARAM
>(
this
), 0);

118 
	gRunLo›
::
TimîBa£
::
timîFúed
(
RunLo›
* 
runLo›
, 
uöt64_t
 
ID
)

120 
	gTimîM≠
::
ôî©‹
 
ô
 = 
runLo›
->
m_a˘iveTimîs
.
föd
(
ID
);

121 i‡(
	gô
 =
runLo›
->
m_a˘iveTimîs
.
íd
()) {

126 
TimîBa£
* 
	gtimî
 = 
ô
->
vÆue
;

128 i‡(!
	gtimî
->
	gm_isRïótög
) {

129 
	grunLo›
->
	gm_a˘iveTimîs
.
ªmove
(
ô
);

130 ::
KûlTimî
(
runLo›
->
m_runLo›MesßgeWödow
, 
ID
);

133 
	gtimî
->
fúed
();

136 
uöt64_t
 
gíî©eTimîID
()

138 
uöt64_t
 
	guniqueTimîID
 = 1;

139  
	guniqueTimîID
++;

142 
	gRunLo›
::
TimîBa£
::TimîBa£(
RunLo›
& 
runLo›
)

143 : 
m_runLo›
(
runLo›
)

144 , 
m_ID
(
gíî©eTimîID
())

145 , 
m_isRïótög
(
Ál£
)

149 
	gRunLo›
::
TimîBa£
::~TimerBase()

151 
°›
();

154 
	gRunLo›
::
TimîBa£
::
°¨t
(
√xtFúeI¡îvÆ
, 
boﬁ
 
ª≥©
)

156 
	gm_isRïótög
 = 
ª≥©
;

157 
	gm_runLo›
.
	gm_a˘iveTimîs
.
£t
(
m_ID
, 
this
);

158 ::
SëTimî
(
m_runLo›
.
m_runLo›MesßgeWödow
, 
m_ID
, 
√xtFúeI¡îvÆ
 * 1000, 0);

161 
	gRunLo›
::
TimîBa£
::
°›
()

163 
TimîM≠
::
ôî©‹
 
ô
 = 
m_runLo›
.
m_a˘iveTimîs
.
föd
(
m_ID
);

164 i‡(
	gô
 =
m_runLo›
.
m_a˘iveTimîs
.
íd
())

167 
	gm_runLo›
.
	gm_a˘iveTimîs
.
ªmove
(
ô
);

168 ::
KûlTimî
(
m_runLo›
.
m_runLo›MesßgeWödow
, 
m_ID
);

171 
boﬁ
 
	gRunLo›
::
TimîBa£
::
isA˘ive
() const

173  
m_runLo›
.
m_a˘iveTimîs
.
c⁄èös
(
m_ID
);

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/execinfo.h

18 #i‚de‡
_EXECINFO_H


19 
	#_EXECINFO_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


27 
	$backåa˚
 (**
__¨øy
, 
__size
Ë
	`__n⁄nuŒ
 ((1));

32 **
	$backåa˚_symbﬁs
 (*c⁄° *
__¨øy
, 
__size
)

33 
__THROW
 
	`__n⁄nuŒ
 ((1));

38 
	$backåa˚_symbﬁs_fd
 (*c⁄° *
__¨øy
, 
__size
, 
__fd
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1));

41 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

167 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

169 #ifde‡
__USE_XOPEN


170 #ifde‡
__GNUC__


171 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

174 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

179 #ifde‡
__USE_BSD


186 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

189 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

192 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

195 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 #ifde‡
__USE_MISC


200 
	#NSIG
 
_NSIG


	)

203 #ifde‡
__USE_GNU


204 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

208 #ifde‡
__USE_BSD


209 
__sigh™dÀr_t
 
	tsig_t
;

212 #ifde‡
__USE_POSIX


215 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__USE_GNU


232 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

236 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

239 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

240 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

245 
	~<bôs/siga˘i⁄.h
>

248 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

249 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

256 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

259 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

260 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

263 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 #ifde‡
__USE_POSIX199309


278 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

279 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

286 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

288 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

289 
	`__n⁄nuŒ
 ((1));

293 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

294 
__THROW
;

299 #ifde‡
__USE_BSD


303 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

304 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

307 
	ssigvec


309 
__sigh™dÀr_t
 
sv_h™dÀr
;

310 
sv_mask
;

312 
sv_Êags
;

313 
	#sv_⁄°ack
 
sv_Êags


	)

317 
	#SV_ONSTACK
 (1 << 0)

	)

318 
	#SV_INTERRUPT
 (1 << 1)

	)

319 
	#SV_RESETHAND
 (1 << 2)

	)

327 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

328 
sigvec
 *
__ovec
Ë
__THROW
;

332 
	~<bôs/sigc⁄ãxt.h
>

335 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

340 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


341 
	#__√ed_size_t


	)

342 
	~<°ddef.h
>

347 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

349 
	~<bôs/sig°ack.h
>

350 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


352 
	~<sys/uc⁄ãxt.h
>

358 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

359 
__THROW
 
__©åibuã_dïªˇãd__
;

363 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

364 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

368 #ifde‡
__USE_XOPEN_EXTENDED


372 
	$sighﬁd
 (
__sig
Ë
__THROW
;

375 
	$sigªl£
 (
__sig
Ë
__THROW
;

378 
	$sigign‹e
 (
__sig
Ë
__THROW
;

381 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

384 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


387 
	~<bôs/±hªadty≥s.h
>

388 
	~<bôs/sigthªad.h
>

395 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

397 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

401 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

24 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


26 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

36 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

39 
	g__BEGIN_DECLS


41 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


43 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

44 
__THROW
 
__©åibuã_puª__
;

47 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

50 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

53 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


56 *
	`ödex
 (*
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

59 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

61 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


62 
__exã∫_Æways_ölöe
 *

63 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


65  
	`__buûtö_ödex
 (
__s
, 
__c
);

68 
__exã∫_Æways_ölöe
 const *

69 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


71  
	`__buûtö_ödex
 (
__s
, 
__c
);

74 
	}
}

76 *
	$ödex
 (c⁄° *
__s
, 
__c
)

77 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


84 *
	`rödex
 (*
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

87 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


90 
__exã∫_Æways_ölöe
 *

91 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


93  
	`__buûtö_rödex
 (
__s
, 
__c
);

96 
__exã∫_Æways_ölöe
 const *

97 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


99  
	`__buûtö_rödex
 (
__s
, 
__c
);

102 
	}
}

104 *
	$rödex
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


112 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
;

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
;

123 #ifdef 
__USE_XOPEN2K8


127 
	~<xloˇÀ.h
>

131 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

132 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

134 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

135 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

136 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

139 
__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_BSD


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

149 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 
	#__√ed_NULL


	)

23 
	~<°ddef.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<limôs.h
>

27 
	~<ídün.h
>

28 
	~<sig«l.h
>

31 
	~<bôs/∑øm.h
>

36 
	#NBBY
 
CHAR_BIT


	)

38 #i‡!
deföed
 
NGROUPS
 && deföed 
NGROUPS_MAX


39 
	#NGROUPS
 
NGROUPS_MAX


	)

41 #i‡!
deföed
 
MAXSYMLINKS
 && deföed 
SYMLOOP_MAX


42 
	#MAXSYMLINKS
 
SYMLOOP_MAX


	)

44 #i‡!
deföed
 
CANBSIZ
 && deföed 
MAX_CANON


45 
	#CANBSIZ
 
MAX_CANON


	)

47 #i‡!
deföed
 
MAXPATHLEN
 && deföed 
PATH_MAX


48 
	#MAXPATHLEN
 
PATH_MAX


	)

50 #i‡!
deföed
 
NOFILE
 && deföed 
OPEN_MAX


51 
	#NOFILE
 
OPEN_MAX


	)

53 #i‚de‡
NCARGS


54 #ifde‡
ARG_MAX


55 
	#NCARGS
 
ARG_MAX


	)

59 
	#NCARGS
 
INT_MAX


	)

65 #i‚de‡
NOGROUP


66 
	#NOGROUP
 65535

	)

68 #i‚de‡
NODEV


69 
	#NODEV
 ((
dev_t
Ë-1Ë

	)

74 #i‚de‡
DEV_BSIZE


75 
	#DEV_BSIZE
 512

	)

80 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

81 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

82 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

83 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

86 #i‚de‡
howm™y


87 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

89 #ifde‡
__GNUC__


90 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

91 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

92 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

94 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

96 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

99 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

100 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

	@/usr/include/sys/sysctl.h

18 #i‚def 
_SYS_SYSCTL_H


19 
	#_SYS_SYSCTL_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

25 #i‚de‡
_LINUX_KERNEL_H


26 
	#_LINUX_KERNEL_H
 1

	)

27 
	#__undef_LINUX_KERNEL_H


	)

29 #i‚de‡
_LINUX_TYPES_H


30 
	#_LINUX_TYPES_H
 1

	)

31 
	#__undef_LINUX_TYPES_H


	)

33 #i‚de‡
_LINUX_LIST_H


34 
	#_LINUX_LIST_H
 1

	)

35 
	#__undef_LINUX_LIST_H


	)

37 #i‚de‡
__LINUX_COMPILER_H


38 
	#__LINUX_COMPILER_H
 1

	)

39 
	#__u£r


	)

40 
	#__undef__LINUX_COMPILER_H


	)

43 
	~<löux/sys˘l.h
>

45 #ifde‡
__undef_LINUX_KERNEL_H


46 #unde‡
_LINUX_KERNEL_H


47 #unde‡
__undef_LINUX_KERNEL_H


49 #ifde‡
__undef_LINUX_TYPES_H


50 #unde‡
_LINUX_TYPES_H


51 #unde‡
__undef_LINUX_TYPES_H


53 #ifde‡
__undef_LINUX_LIST_H


54 #unde‡
_LINUX_LIST_H


55 #unde‡
__undef_LINUX_LIST_H


57 #ifde‡
__undef__LINUX_COMPILER_H


58 #unde‡
__LINUX_COMPILER_H


59 #unde‡
__u£r


60 #unde‡
__undef__LINUX_COMPILER_H


63 
	~<bôs/sys˘l.h
>

65 
__BEGIN_DECLS


68 
	$sys˘l
 (*
__«me
, 
__∆í
, *
__ﬁdvÆ
,

69 
size_t
 *
__ﬁdÀ≈
, *
__√wvÆ
, size_à
__√wÀn
Ë
__THROW
;

71 
__END_DECLS


	@/usr/include/sys/time.h

18 #i‚de‡
_SYS_TIME_H


19 
	#_SYS_TIME_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_time_t


	)

25 
	~<time.h
>

26 
	#__√ed_timevÆ


	)

27 
	~<bôs/time.h
>

29 
	~<sys/£À˘.h
>

31 #i‚de‡
__su£c⁄ds_t_deföed


32 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

33 
	#__su£c⁄ds_t_deföed


	)

37 
	g__BEGIN_DECLS


39 #ifde‡
__USE_GNU


41 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

42 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

43 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

44 }

	)

45 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

46 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

47 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

48 }

	)

52 #ifde‡
__USE_BSD


55 
	stimez⁄e


57 
	mtz_möuãswe°
;

58 
	mtz_d°time
;

61 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

63 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

71 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

72 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

74 #ifde‡
__USE_BSD


77 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

78 c⁄° 
timez⁄e
 *
__tz
)

79 
__THROW
;

85 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

86 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

91 
	e__ôimî_which


94 
ITIMER_REAL
 = 0,

95 
	#ITIMER_REAL
 
ITIMER_REAL


	)

97 
ITIMER_VIRTUAL
 = 1,

98 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

101 
ITIMER_PROF
 = 2

102 
	#ITIMER_PROF
 
ITIMER_PROF


	)

107 
	sôimîvÆ


110 
timevÆ
 
ô_öãrvÆ
;

112 
timevÆ
 
ô_vÆue
;

115 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


118 
__ôimî_which
 
	t__ôimî_which_t
;

120 
	t__ôimî_which_t
;

125 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

126 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

131 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

132 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

133 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

138 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

139 
__THROW
 
	`__n⁄nuŒ
 ((1));

141 #ifde‡
__USE_BSD


143 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

144 
__THROW
 
	`__n⁄nuŒ
 ((1));

147 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

150 #ifde‡
__USE_GNU


154 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

155 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

159 #ifde‡
__USE_BSD


162 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

163 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

164 
	#timîcmp
(
a
, 
b
, 
CMP
) \

165 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

166 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

167 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

168 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

170 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

171 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

172 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

174 ++(
ªsu…
)->
tv_£c
; \

175 (
ªsu…
)->
tv_u£c
 -= 1000000; \

177 
	}
} 0)

	)

178 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

180 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

181 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

182 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

183 --(
ªsu…
)->
tv_£c
; \

184 (
ªsu…
)->
tv_u£c
 += 1000000; \

186 } 0)

	)

189 
	g__END_DECLS


	@/usr/include/sys/timeb.h

18 #i‚de‡
_SYS_TIMEB_H


19 
	#_SYS_TIMEB_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_time_t


	)

24 
	~<time.h
>

27 
__BEGIN_DECLS


31 
	stimeb


33 
time_t
 
	mtime
;

34 
	mmûlôm
;

35 
	mtimez⁄e
;

36 
	md°Êag
;

41 
·ime
 (
timeb
 *
__timebuf
);

43 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/utsname.h

22 #i‚def 
_SYS_UTSNAME_H


23 
	#_SYS_UTSNAME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ut¢ame.h
>

31 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


32 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

34 #i‚de‡
_UTSNAME_NODENAME_LENGTH


35 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

37 #i‚de‡
_UTSNAME_RELEASE_LENGTH


38 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

40 #i‚de‡
_UTSNAME_VERSION_LENGTH


41 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

43 #i‚de‡
_UTSNAME_MACHINE_LENGTH


44 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

48 
	sut¢ame


51 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

54 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

57 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

59 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

62 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

64 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

66 #ifde‡
__USE_GNU


67 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

69 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

74 #ifde‡
__USE_SVID


76 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

81 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/zlib.h

31 #i‚de‡
ZLIB_H


32 
	#ZLIB_H


	)

34 
	~"zc⁄f.h
"

36 #ifde‡
__˝lu•lus


40 
	#ZLIB_VERSION
 "1.2.8"

	)

41 
	#ZLIB_VERNUM
 0x1280

	)

42 
	#ZLIB_VER_MAJOR
 1

	)

43 
	#ZLIB_VER_MINOR
 2

	)

44 
	#ZLIB_VER_REVISION
 8

	)

45 
	#ZLIB_VER_SUBREVISION
 0

	)

80 
voidpf
 (*
	tÆloc_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, 
	tuI¡
 
	tôems
, uI¡ 
	tsize
));

81 (*
‰ì_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, voidp‡
	taddªss
));

83 
öã∫Æ_°©e
;

85 
	sz_°ªam_s
 {

86 
z_c⁄°
 
Byãf
 *
√xt_ö
;

87 
uI¡
 
avaû_ö
;

88 
uL⁄g
 
tŸÆ_ö
;

90 
Byãf
 *
√xt_out
;

91 
uI¡
 
avaû_out
;

92 
uL⁄g
 
tŸÆ_out
;

94 
z_c⁄°
 *
msg
;

95 
öã∫Æ_°©e
 
FAR
 *
°©e
;

97 
Æloc_func
 
zÆloc
;

98 
‰ì_func
 
z‰ì
;

99 
voidpf
 
›aque
;

101 
d©a_ty≥
;

102 
uL⁄g
 
adÀr
;

103 
uL⁄g
 
ª£rved
;

104 } 
	tz_°ªam
;

106 
z_°ªam
 
	tFAR
 *
	tz_°ªamp
;

112 
	sgz_hódî_s
 {

113 
ãxt
;

114 
uL⁄g
 
time
;

115 
xÊags
;

116 
os
;

117 
Byãf
 *
exåa
;

118 
uI¡
 
exåa_Àn
;

119 
uI¡
 
exåa_max
;

120 
Byãf
 *
«me
;

121 
uI¡
 
«me_max
;

122 
Byãf
 *
commít
;

123 
uI¡
 
comm_max
;

124 
h¸c
;

125 
d⁄e
;

127 } 
	tgz_hódî
;

129 
gz_hódî
 
	tFAR
 *
	tgz_hódîp
;

164 
	#Z_NO_FLUSH
 0

	)

165 
	#Z_PARTIAL_FLUSH
 1

	)

166 
	#Z_SYNC_FLUSH
 2

	)

167 
	#Z_FULL_FLUSH
 3

	)

168 
	#Z_FINISH
 4

	)

169 
	#Z_BLOCK
 5

	)

170 
	#Z_TREES
 6

	)

173 
	#Z_OK
 0

	)

174 
	#Z_STREAM_END
 1

	)

175 
	#Z_NEED_DICT
 2

	)

176 
	#Z_ERRNO
 (-1)

	)

177 
	#Z_STREAM_ERROR
 (-2)

	)

178 
	#Z_DATA_ERROR
 (-3)

	)

179 
	#Z_MEM_ERROR
 (-4)

	)

180 
	#Z_BUF_ERROR
 (-5)

	)

181 
	#Z_VERSION_ERROR
 (-6)

	)

186 
	#Z_NO_COMPRESSION
 0

	)

187 
	#Z_BEST_SPEED
 1

	)

188 
	#Z_BEST_COMPRESSION
 9

	)

189 
	#Z_DEFAULT_COMPRESSION
 (-1)

	)

192 
	#Z_FILTERED
 1

	)

193 
	#Z_HUFFMAN_ONLY
 2

	)

194 
	#Z_RLE
 3

	)

195 
	#Z_FIXED
 4

	)

196 
	#Z_DEFAULT_STRATEGY
 0

	)

199 
	#Z_BINARY
 0

	)

200 
	#Z_TEXT
 1

	)

201 
	#Z_ASCII
 
Z_TEXT


	)

202 
	#Z_UNKNOWN
 2

	)

205 
	#Z_DEFLATED
 8

	)

208 
	#Z_NULL
 0

	)

210 
	#zlib_vîsi⁄
 
	`zlibVîsi⁄
()

	)

216 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zlibVîsi⁄
 
OF
(());

246 
ZEXTERN
 
ZEXPORT
 
deÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

353 
ZEXTERN
 
ZEXPORT
 
deÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

392 
ZEXTERN
 
ZEXPORT
 
öÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

508 
ZEXTERN
 
ZEXPORT
 
öÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

587 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

588 c⁄° 
Byãf
 *
di˘i⁄¨y
,

589 
uI¡
 
di˘Lígth
));

631 
ZEXTERN
 
ZEXPORT
 
deÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

632 
z_°ªamp
 
sour˚
));

649 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

660 
ZEXTERN
 
ZEXPORT
 
deÊ©eP¨ams
 
OF
((
z_°ªamp
 
°rm
,

661 
Àvñ
,

662 
°øãgy
));

681 
ZEXTERN
 
ZEXPORT
 
deÊ©eTu√
 
OF
((
z_°ªamp
 
°rm
,

682 
good_Àngth
,

683 
max_œzy
,

684 
ni˚_Àngth
,

685 
max_chaö
));

698 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
deÊ©eBound
 
OF
((
z_°ªamp
 
°rm
,

699 
uL⁄g
 
sour˚Lí
));

713 
ZEXTERN
 
ZEXPORT
 
deÊ©ePídög
 
OF
((
z_°ªamp
 
°rm
,

714 *
≥ndög
,

715 *
bôs
));

728 
ZEXTERN
 
ZEXPORT
 
deÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

729 
bôs
,

730 
vÆue
));

745 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëHódî
 
OF
((
z_°ªamp
 
°rm
,

746 
gz_hódîp
 
hód
));

819 
ZEXTERN
 
ZEXPORT
 
öÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

820 c⁄° 
Byãf
 *
di˘i⁄¨y
,

821 
uI¡
 
di˘Lígth
));

842 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

843 
Byãf
 *
di˘i⁄¨y
,

844 
uI¡
 *
di˘Lígth
));

857 
ZEXTERN
 
ZEXPORT
 
öÊ©eSync
 
OF
((
z_°ªamp
 
°rm
));

876 
ZEXTERN
 
ZEXPORT
 
öÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

877 
z_°ªamp
 
sour˚
));

892 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

902 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t2
 
OF
((
z_°ªamp
 
°rm
,

903 
wödowBôs
));

914 
ZEXTERN
 
ZEXPORT
 
öÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

915 
bôs
,

916 
vÆue
));

935 
ZEXTERN
 
ZEXPORT
 
öÊ©eM¨k
 
OF
((
z_°ªamp
 
°rm
));

963 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëHódî
 
OF
((
z_°ªamp
 
°rm
,

964 
gz_hódîp
 
hód
));

1025 (*
ö_func
Ë
	tOF
((
	tFAR
 *,

1026 
	tz_c⁄°
 
	tFAR
 * FAR *));

1027 (*
out_func
Ë
	tOF
((
	tFAR
 *, FAR *, ));

1029 
ZEXTERN
 
ZEXPORT
 
öÊ©eBack
 
OF
((
z_°ªamp
 
°rm
,

1030 
ö_func
 
ö
, 
FAR
 *
ö_desc
,

1031 
out_func
 
out
, 
FAR
 *
out_desc
));

1099 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackEnd
 
OF
((
z_°ªamp
 
°rm
));

1107 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
zlibCompûeFœgs
 
OF
(());

1148 #i‚de‡
Z_SOLO


1160 
ZEXTERN
 
ZEXPORT
 
com¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1161 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1174 
ZEXTERN
 
ZEXPORT
 
com¥ess2
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1175 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
,

1176 
Àvñ
));

1190 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
com¥essBound
 
OF
((uL⁄g 
sour˚Lí
));

1197 
ZEXTERN
 
ZEXPORT
 
uncom¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1198 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1224 
gzFûe_s
 *
	tgzFûe
;

1264 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gzd›í
 
OF
((
fd
, c⁄° *
mode
));

1287 
ZEXTERN
 
ZEXPORT
 
gzbuf„r
 
OF
((
gzFûe
 
fûe
, 
size
));

1304 
ZEXTERN
 
ZEXPORT
 
gz£ç¨ams
 
OF
((
gzFûe
 
fûe
, 
Àvñ
, 
°øãgy
));

1313 
ZEXTERN
 
ZEXPORT
 
gzªad
 
OF
((
gzFûe
 
fûe
, 
voidp
 
buf
, 
Àn
));

1341 
ZEXTERN
 
ZEXPORT
 
gzwrôe
 
OF
((
gzFûe
 
fûe
,

1342 
voidpc
 
buf
, 
Àn
));

1349 
ZEXTERN
 
ZEXPORTVA
 
gz¥ötf
 
Z_ARG
((
gzFûe
 
fûe
, c⁄° *
f‹m©
, ...));

1364 
ZEXTERN
 
ZEXPORT
 
gzputs
 
OF
((
gzFûe
 
fûe
, c⁄° *
s
));

1372 
ZEXTERN
 * 
ZEXPORT
 
gzgës
 
OF
((
gzFûe
 
fûe
, *
buf
, 
Àn
));

1385 
ZEXTERN
 
ZEXPORT
 
gzputc
 
OF
((
gzFûe
 
fûe
, 
c
));

1391 
ZEXTERN
 
ZEXPORT
 
gzgëc
 
OF
((
gzFûe
 
fûe
));

1400 
ZEXTERN
 
ZEXPORT
 
gzungëc
 
OF
((
c
, 
gzFûe
 
fûe
));

1412 
ZEXTERN
 
ZEXPORT
 
gzÊush
 
OF
((
gzFûe
 
fûe
, 
Êush
));

1447 
ZEXTERN
 
ZEXPORT
 
gzªwöd
 
OF
((
gzFûe
 
fûe
));

1475 
ZEXTERN
 
ZEXPORT
 
gzeof
 
OF
((
gzFûe
 
fûe
));

1490 
ZEXTERN
 
ZEXPORT
 
gzdúe˘
 
OF
((
gzFûe
 
fûe
));

1511 
ZEXTERN
 
ZEXPORT
 
gz˛o£
 
OF
((
gzFûe
 
fûe
));

1524 
ZEXTERN
 
ZEXPORT
 
gz˛o£_r
 
OF
((
gzFûe
 
fûe
));

1525 
ZEXTERN
 
ZEXPORT
 
gz˛o£_w
 
OF
((
gzFûe
 
fûe
));

1536 
ZEXTERN
 c⁄° * 
ZEXPORT
 
gzîr‹
 
OF
((
gzFûe
 
fûe
, *
î∫um
));

1552 
ZEXTERN
 
ZEXPORT
 
gz˛óªº
 
OF
((
gzFûe
 
fûe
));

1569 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1600 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32
 
OF
((uL⁄g 
¸c
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1633 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
,

1634 c⁄° *
vîsi⁄
, 
°ªam_size
));

1635 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
,

1636 c⁄° *
vîsi⁄
, 
°ªam_size
));

1637 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
, 
mëhod
,

1638 
wödowBôs
, 
memLevñ
,

1639 
°øãgy
, c⁄° *
vîsi⁄
,

1640 
°ªam_size
));

1641 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1642 c⁄° *
vîsi⁄
, 
°ªam_size
));

1643 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackInô_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1644 
FAR
 *
wödow
,

1645 c⁄° *
vîsi⁄
,

1646 
°ªam_size
));

1647 
	#deÊ©eInô
(
°rm
, 
Àvñ
) \

1648 
	`deÊ©eInô_
((
°rm
), (
Àvñ
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1649 
	#öÊ©eInô
(
°rm
) \

1650 
	`öÊ©eInô_
((
°rm
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1651 
	#deÊ©eInô2
(
°rm
, 
Àvñ
, 
mëhod
, 
wödowBôs
, 
memLevñ
, 
°øãgy
) \

1652 
	`deÊ©eInô2_
((
°rm
),(
Àvñ
),(
mëhod
),(
wödowBôs
),(
memLevñ
),\

1653 (
°øãgy
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1654 
	#öÊ©eInô2
(
°rm
, 
wödowBôs
) \

1655 
	`öÊ©eInô2_
((
°rm
), (
wödowBôs
), 
ZLIB_VERSION
, \

1656 ()(
z_°ªam
))

	)

1657 
	#öÊ©eBackInô
(
°rm
, 
wödowBôs
, 
wödow
) \

1658 
	`öÊ©eBackInô_
((
°rm
), (
wödowBôs
), (
wödow
), \

1659 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1661 #i‚de‡
Z_SOLO


1670 
	sgzFûe_s
 {

1671 
have
;

1672 *
√xt
;

1673 
z_off64_t
 
pos
;

1675 
ZEXTERN
 
ZEXPORT
 
gzgëc_
 
OF
((
gzFûe
 
fûe
));

1676 #ifde‡
Z_PREFIX_SET


1677 #unde‡
z_gzgëc


1678 
	#z_gzgëc
(
g
) \

1679 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: 
	`gzgëc
(g))

	)

1681 
	#gzgëc
(
g
) \

1682 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: 
	`gzgëc
(g))

	)

1691 #ifde‡
Z_LARGE64


1692 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1693 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off64_t, ));

1694 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1695 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1696 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1697 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1700 #i‡!
deföed
(
ZLIB_INTERNAL
Ë&& deföed(
Z_WANT64
)

1701 #ifde‡
Z_PREFIX_SET


1702 
	#z_gz›í
 
z_gz›í64


	)

1703 
	#z_gz£ek
 
z_gz£ek64


	)

1704 
	#z_gzãŒ
 
z_gzãŒ64


	)

1705 
	#z_gzoff£t
 
z_gzoff£t64


	)

1706 
	#z_adÀr32_comböe
 
z_adÀr32_comböe64


	)

1707 
	#z_¸c32_comböe
 
z_¸c32_comböe64


	)

1709 
	#gz›í
 
gz›í64


	)

1710 
	#gz£ek
 
gz£ek64


	)

1711 
	#gzãŒ
 
gzãŒ64


	)

1712 
	#gzoff£t
 
gzoff£t64


	)

1713 
	#adÀr32_comböe
 
adÀr32_comböe64


	)

1714 
	#¸c32_comböe
 
¸c32_comböe64


	)

1716 #i‚de‡
Z_LARGE64


1717 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1718 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off_t, ));

1719 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1720 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1721 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1722 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1725 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í
 
OF
((const *, const *));

1726 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek
 
OF
((
gzFûe
, z_off_t, ));

1727 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ
 
OF
((
gzFûe
));

1728 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t
 
OF
((
gzFûe
));

1729 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1730 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1735 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1736 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1741 #i‡!
deföed
(
ZUTIL_H
Ë&& !deföed(
NO_DUMMY_DECL
)

1742 
	söã∫Æ_°©e
 {
dummy
;};

1746 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zEº‹
 
OF
(());

1747 
ZEXTERN
 
ZEXPORT
 
öÊ©eSyncPoöt
 
OF
((
z_°ªamp
));

1748 
ZEXTERN
 c⁄° 
z_¸c_t
 
FAR
 * 
ZEXPORT
 
gë_¸c_èbÀ
 
OF
(());

1749 
ZEXTERN
 
ZEXPORT
 
öÊ©eUndîmöe
 
OF
((
z_°ªamp
, ));

1750 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1751 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1752 #i‡
deföed
(
_WIN32
Ë&& !deföed(
Z_SOLO
)

1753 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í_w
 
OF
((c⁄° 
wch¨_t
 *
∑th
,

1754 c⁄° *
mode
));

1756 #i‡
deföed
(
STDC
Ë|| deföed(
Z_HAVE_STDARG_H
)

1757 #i‚de‡
Z_SOLO


1758 
ZEXTERN
 
ZEXPORTVA
 
gzv¥ötf
 
Z_ARG
((
gzFûe
 
fûe
,

1759 c⁄° *
f‹m©
,

1760 
va_li°
 
va
));

1764 #ifde‡
__˝lu•lus


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dlfcn.h

19 #i‚de‡
_DLFCN_H


24 
	#RTLD_LAZY
 0x00001

	)

25 
	#RTLD_NOW
 0x00002

	)

26 
	#RTLD_BINDING_MASK
 0x3

	)

27 
	#RTLD_NOLOAD
 0x00004

	)

28 
	#RTLD_DEEPBIND
 0x00008

	)

33 
	#RTLD_GLOBAL
 0x00100

	)

38 
	#RTLD_LOCAL
 0

	)

41 
	#RTLD_NODELETE
 0x01000

	)

43 #ifde‡
__USE_GNU


54 
	#DL_CALL_FCT
(
f˘p
, 
¨gs
) \

55 (
	`_dl_mcou¡_wøµî_check
 ((*Ë(
f˘p
)), (*(f˘p)Ë
¨gs
)

	)

57 
__BEGIN_DECLS


60 
	$_dl_mcou¡_wøµî_check
 (*
__£lÂc
Ë
__THROW
;

62 
__END_DECLS


	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/huge_val.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VAL
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

35 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

39 
	~<ídün.h
>

41 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

50 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

51 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VALF
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7f800000UL }).
__d
)

	)

39 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

48 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

49 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

20 #i‚de‡
_MATH_H


24 #i‡
__GNUC_PREREQ
(3,3)

25 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

26 #ñi‡
__GNUC_PREREQ
(2,96)

27 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

30 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

32 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

33 #ifde‡
__GNUC__


34 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

35 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

37 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

38 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

26 #ifde‡
__MATH_DECLARE_LDOUBLE


27 #ifde‡
__NO_LONG_DOUBLE_MATH


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

30 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

34 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


36 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

37 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

38 #ifde‡
__MATH_DECLARE_LDOUBLE


39 #ifde‡
__NO_LONG_DOUBLE_MATH


40 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

42 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

48 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

49 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 #ifde‡
__NO_LONG_DOUBLE_MATH


52 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

54 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

59 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

60 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

61 #ifde‡
__MATH_DECLARE_LDOUBLE


62 #ifde‡
__NO_LONG_DOUBLE_MATH


63 
__REDIRECT_NTH
 (
©™2l
, (, ),

64 
__©™2_föôe
);

66 
__REDIRECT_NTH
 (
©™2l
, (, ),

67 
__©™2l_föôe
);

71 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


73 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

74 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

75 #ifde‡
__MATH_DECLARE_LDOUBLE


76 #ifde‡
__NO_LONG_DOUBLE_MATH


77 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

79 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

85 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

86 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

87 #ifde‡
__MATH_DECLARE_LDOUBLE


88 #ifde‡
__NO_LONG_DOUBLE_MATH


89 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

91 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

96 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

97 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

102 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

106 #ifde‡
__USE_GNU


108 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

109 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

110 #ifde‡
__MATH_DECLARE_LDOUBLE


111 #ifde‡
__NO_LONG_DOUBLE_MATH


112 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

114 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

119 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

120 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

121 #ifde‡
__MATH_DECLARE_LDOUBLE


122 #ifde‡
__NO_LONG_DOUBLE_MATH


123 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

125 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

130 #ifde‡
__USE_ISOC99


132 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

133 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

134 #ifde‡
__MATH_DECLARE_LDOUBLE


135 #ifde‡
__NO_LONG_DOUBLE_MATH


136 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

138 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

144 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

145 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 #ifde‡
__NO_LONG_DOUBLE_MATH


148 
__REDIRECT_NTH
 (
fmodl
, (, ),

149 
__fmod_föôe
);

151 
__REDIRECT_NTH
 (
fmodl
, (, ),

152 
__fmodl_föôe
);

156 #ifde‡
__USE_ISOC99


158 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

159 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 #ifde‡
__NO_LONG_DOUBLE_MATH


162 
__REDIRECT_NTH
 (
hypŸl
, (, ),

163 
__hypŸ_föôe
);

165 
__REDIRECT_NTH
 (
hypŸl
, (, ),

166 
__hypŸl_föôe
);

171 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


173 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

174 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

175 #ifde‡
__MATH_DECLARE_LDOUBLE


176 #ifde‡
__NO_LONG_DOUBLE_MATH


177 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

179 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

184 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

185 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

186 #ifde‡
__MATH_DECLARE_LDOUBLE


187 #ifde‡
__NO_LONG_DOUBLE_MATH


188 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

190 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

195 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

196 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

197 #ifde‡
__MATH_DECLARE_LDOUBLE


198 #ifde‡
__NO_LONG_DOUBLE_MATH


199 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

201 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

206 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

207 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

208 #ifde‡
__MATH_DECLARE_LDOUBLE


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

212 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

217 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

218 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

219 #ifde‡
__MATH_DECLARE_LDOUBLE


220 #ifde‡
__NO_LONG_DOUBLE_MATH


221 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

223 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

228 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

229 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

230 #ifde‡
__MATH_DECLARE_LDOUBLE


231 #ifde‡
__NO_LONG_DOUBLE_MATH


232 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

234 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

239 #ifde‡
__USE_MISC


241 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

242 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

243 #ifde‡
__MATH_DECLARE_LDOUBLE


244 #ifde‡
__NO_LONG_DOUBLE_MATH


245 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

246 
__lgamma_r_föôe
);

248 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

249 
__lgammÆ_r_föôe
);

254 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


256 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

258 #ifde‡
__USE_ISOC99


259 
__loˇl_signgam
 = 0;

260  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

262  
	`lgamma_r
 (
__d
, &
signgam
);

264 
	}
}

265 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

267 #ifde‡
__USE_ISOC99


268 
__loˇl_signgam
 = 0;

269  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

271  
	`lgammaf_r
 (
__d
, &
signgam
);

273 
	}
}

274 #ifde‡
__MATH_DECLARE_LDOUBLE


275 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

277 #ifde‡
__USE_ISOC99


278 
__loˇl_signgam
 = 0;

279  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

281  
	`lgammÆ_r
 (
__d
, &
signgam
);

283 
	}
}

287 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


289 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

291 #ifde‡
__USE_ISOC99


292 
__loˇl_signgam
 = 0;

293  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

295  
	`lgamma_r
 (
__d
, &
signgam
);

297 
	}
}

298 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

300 #ifde‡
__USE_ISOC99


301 
__loˇl_signgam
 = 0;

302  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

304  
	`lgammaf_r
 (
__d
, &
signgam
);

306 
	}
}

307 #ifde‡
__MATH_DECLARE_LDOUBLE


308 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

310 #ifde‡
__USE_ISOC99


311 
__loˇl_signgam
 = 0;

312  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

314  
	`lgammÆ_r
 (
__d
, &
signgam
);

316 
	}
}

321 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

322 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

323 #ifde‡
__MATH_DECLARE_LDOUBLE


324 #ifde‡
__NO_LONG_DOUBLE_MATH


325 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

327 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

332 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

333 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

334 #ifde‡
__MATH_DECLARE_LDOUBLE


335 #ifde‡
__NO_LONG_DOUBLE_MATH


336 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

338 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

342 #ifde‡
__USE_ISOC99


344 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

345 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

346 #ifde‡
__MATH_DECLARE_LDOUBLE


347 #ifde‡
__NO_LONG_DOUBLE_MATH


348 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

350 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

356 
__REDIRECT_NTH
 (
ldexp
, (, ), 
sˇlbn
);

357 
__REDIRECT_NTH
 (
ldexpf
, (, ), 
sˇlbnf
);

358 #ifde‡
__MATH_DECLARE_LDOUBLE


359 
__REDIRECT_NTH
 (
ldex∂
, (, ), 
sˇlb∆
);

363 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

364 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

365 #ifde‡
__MATH_DECLARE_LDOUBLE


366 #ifde‡
__NO_LONG_DOUBLE_MATH


367 
__REDIRECT_NTH
 (
powl
, (, ),

368 
__pow_föôe
);

370 
__REDIRECT_NTH
 (
powl
, (, ),

371 
__powl_föôe
);

376 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

377 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

378 #ifde‡
__MATH_DECLARE_LDOUBLE


379 #ifde‡
__NO_LONG_DOUBLE_MATH


380 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

381 
__ªmaödî_föôe
);

383 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

384 
__ªmaödîl_föôe
);

388 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


390 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

391 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

392 #ifde‡
__MATH_DECLARE_LDOUBLE


393 #ifde‡
__NO_LONG_DOUBLE_MATH


394 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

395 
__sˇlb_föôe
);

397 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

398 
__sˇlbl_föôe
);

404 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

405 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

406 #ifde‡
__MATH_DECLARE_LDOUBLE


407 #ifde‡
__NO_LONG_DOUBLE_MATH


408 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

410 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

415 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

416 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

417 #ifde‡
__MATH_DECLARE_LDOUBLE


418 #ifde‡
__NO_LONG_DOUBLE_MATH


419 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

421 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

425 #ifde‡
__USE_ISOC99


427 
__gamma_r_föôe
 (, *);

428 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

430 
__loˇl_signgam
 = 0;

431 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

432  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

433 
	}
}

434 
__gammaf_r_föôe
 (, *);

435 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

437 
__loˇl_signgam
 = 0;

438 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

439  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

440 
	}
}

441 #ifde‡
__MATH_DECLARE_LDOUBLE


442 
__gammÆ_r_föôe
 (, *);

443 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

445 
__loˇl_signgam
 = 0;

446 #ifde‡
__NO_LONG_DOUBLE_MATH


447 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

449 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

451  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

452 
	}
}

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

116 
	g_MdoubÀ_END_NAMESPACE


118 #ifde‡
__USE_GNU


120 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

125 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

131 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

134 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

135 
	g__END_NAMESPACE_C99


138 #ifde‡
__USE_ISOC99


139 
__BEGIN_NAMESPACE_C99


141 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

144 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

145 
	g__END_NAMESPACE_C99


151 
_MdoubÀ_BEGIN_NAMESPACE


153 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

156 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

157 
	g_MdoubÀ_END_NAMESPACE


159 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


160 
__BEGIN_NAMESPACE_C99


162 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

163 
	g__END_NAMESPACE_C99


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

170 
	g__END_NAMESPACE_C99


176 
_MdoubÀ_BEGIN_NAMESPACE


178 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

181 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

184 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

187 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

192 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

195 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
	g_MdoubÀ_END_NAMESPACE


198 #ifde‡
__USE_MISC


201 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

204 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

207 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

211 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


215 
__BEGIN_NAMESPACE_C99


217 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

218 
	g__END_NAMESPACE_C99


221 #ifde‡
__USE_ISOC99


222 
__BEGIN_NAMESPACE_C99


224 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

225 
	g__END_NAMESPACE_C99


230 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

237 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

238 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

240 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

241 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

246 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


247 
__BEGIN_NAMESPACE_C99


249 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

250 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

252 
	g__END_NAMESPACE_C99


255 #ifde‡
__USE_ISOC99


256 
__BEGIN_NAMESPACE_C99


258 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

259 
	g__END_NAMESPACE_C99


262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


264 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

267 #ifde‡
__USE_MISC


271 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


276 
__BEGIN_NAMESPACE_C99


279 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

282 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

283 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


284 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

288 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

290 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


292 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

296 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

299 #ifde‡
__USE_ISOC99


301 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

305 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

309 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

313 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

318 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

325 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

326 
__exãnsi⁄__


327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__exãnsi⁄__


333 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

337 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

340 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

343 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

347 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

348 
__©åibuã__
 ((
__c⁄°__
));

351 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

352 
__©åibuã__
 ((
__c⁄°__
));

356 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

359 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


360 
	g__END_NAMESPACE_C99


363 #ifde‡
__USE_GNU


365 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

366 
__©åibuã__
 ((
__c⁄°__
));

369 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


371 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #i‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #i‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #i‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__exãnsi⁄__


202 
__MATH_INLINE
 

203 
__NTH
 (
	$Œrötf
 (
__x
))

205 
__ªs
;

210 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

211  
__ªs
;

212 
	}
}

213 
__exãnsi⁄__


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Œröt
 (
__x
))

217 
__ªs
;

222 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

223  
__ªs
;

224 
	}
}

227 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

228 && 
deföed
 
__SSE2_MATH__


230 
__MATH_INLINE
 

231 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

233 #ifde‡
__AVX__


234 
__ªs
;

235 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

236  
__ªs
;

238 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

239  
__x
;

241 
	}
}

242 
__MATH_INLINE
 

243 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

245 #ifde‡
__AVX__


246 
__ªs
;

247 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

248  
__ªs
;

250 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

251  
__x
;

253 
	}
}

256 
__MATH_INLINE
 

257 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

259 #ifde‡
__AVX__


260 
__ªs
;

261 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

262  
__ªs
;

264 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

265  
__x
;

267 
	}
}

268 
__MATH_INLINE
 

269 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

271 #ifde‡
__AVX__


272 
__ªs
;

273 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

274  
__ªs
;

276 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

277  
__x
;

279 
	}
}

282 
	g__END_NAMESPACE_C99


285 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


286 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


287 
__BEGIN_NAMESPACE_C99


290 
__MATH_INLINE
 

291 
__NTH
 (
	$röt
 (
__x
))

293 
__ªs
;

298 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

299  
__ªs
;

300 
	}
}

301 
__MATH_INLINE
 

302 
__NTH
 (
	$rötf
 (
__x
))

304 
__ªs
;

309 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

310  
__ªs
;

311 
	}
}

313 #ifde‡
__USE_ISOC99


315 
__MATH_INLINE
 

316 
__NTH
 (
	$√¨byöt
 (
__x
))

318 
__ªs
;

323 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

324  
__ªs
;

325 
	}
}

326 
__MATH_INLINE
 

327 
__NTH
 (
	$√¨byötf
 (
__x
))

329 
__ªs
;

334 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

335  
__ªs
;

336 
	}
}

339 
	g__END_NAMESPACE_C99


342 
__BEGIN_NAMESPACE_STD


344 
__MATH_INLINE
 

345 
__NTH
 (
	$˚û
 (
__x
))

347 
__ªs
;

348 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

349  
__ªs
;

350 
	}
}

351 
__END_NAMESPACE_STD


353 
__BEGIN_NAMESPACE_C99


354 
__MATH_INLINE
 

355 
__NTH
 (
	$˚ûf
 (
__x
))

357 
__ªs
;

358 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

359  
__ªs
;

360 
	}
}

361 
__END_NAMESPACE_C99


363 
__BEGIN_NAMESPACE_STD


365 
__MATH_INLINE
 

366 
__NTH
 (
	$Êo‹
 (
__x
))

368 
__ªs
;

369 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

370  
__ªs
;

371 
	}
}

372 
__END_NAMESPACE_STD


374 
__BEGIN_NAMESPACE_C99


375 
__MATH_INLINE
 

376 
__NTH
 (
	$Êo‹f
 (
__x
))

378 
__ªs
;

379 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

380  
__ªs
;

381 
	}
}

382 
	g__END_NAMESPACE_C99


387 #i‚de‡
__SSE2_MATH__


388 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

389 && 
deföed
 
	g__OPTIMIZE__
)

393 #unde‡
m©h_îrh™dlög


402 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


403 
	#__ölöe_m©h›
(
func
, 
›
) \

404 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

405 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

406 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

407 
	#__ölöe_m©h›NP
(
func
, 
›
) \

408 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

409 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

410 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

412 
	#__ölöe_m©h›
(
func
, 
›
) \

413 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

414 
	#__ölöe_m©h›NP
(
func
, 
›
) \

415 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

418 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

419 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

420 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

421 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

424 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


425 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

426 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

427 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

428 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

429 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

430 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

431 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

432 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

434 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

435 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

436 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

437 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

440 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

441 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

442 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

444 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

445 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

447 
Êﬂt_ty≥
 
__ªsu…
; \

448 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

449  
__ªsu…
; \

450 }

	)

453 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


454 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

455 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

456 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

457 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

458 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

459 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

460 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

461 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

462 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

463 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

464 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

465 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

466 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

468 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

469 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

470 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

471 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

472 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

473 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

474 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

476 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

477 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

479 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

480 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

481 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

482 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

483 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

484 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

485 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

486 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

487 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

488 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

489 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

490 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

493 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

494 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

495 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

497 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

498 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

500 
code
; \

501 }

	)

504 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

505 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

506 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

508 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

509 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

511 
code
; \

512 }

	)

514 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

515 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

516 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

518 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

519 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

520 
Êﬂt_ty≥
 
¨g3
)) \

522 
code
; \

523 }

	)

527 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


531 #ifde‡
__FAST_MATH__


532 #ifde‡
__USE_GNU


533 
	#__söcos_code
 \

534 
__co§
; \

535 
__sör
; \

536 
__swtmp
; \

537 
__asm
 
__vﬁ©ûe__
 \

552 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

553 *
__söx
 = 
__sör
; \

554 *
__cosx
 = 
__co§


	)

556 
__MATH_INLINE
 

557 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

559 
__söcos_code
;

560 
	}
}

562 
__MATH_INLINE
 

563 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

565 
__söcos_code
;

566 
	}
}

568 
__MATH_INLINE
 

569 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

571 
__söcos_code
;

572 
	}
}

579 #i‡
__GNUC_PREREQ
 (3, 5)

580 
	#__expm1_code
 \

581 
__ãmp
; \

582 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

583  
__ãmp
 ? __ãm∞: 
__x


	)

585 
	#__expm1_code
 \

586 
__vÆue
; \

587 
__exp⁄ít
; \

588 
__ãmp
; \

589 
__asm
 
__vﬁ©ûe__
 \

598 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

599 
__asm
 
__vﬁ©ûe__
 \

601 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

602 
__ãmp
 -= 1.0; \

603 
__ãmp
 +
__vÆue
; \

604  
__ãmp
 ? __ãm∞: 
__x


	)

606 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

608 #i‡
	`__GNUC_PREREQ
 (3, 4)

609 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

611 
	#__exp_code
 \

612 
__vÆue
; \

613 
__exp⁄ít
; \

614 
__asm
 
__vﬁ©ûe__
 \

622 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

623 
__vÆue
 += 1.0; \

624 
__asm
 
__vﬁ©ûe__
 \

626 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

627  
__vÆue


	)

628 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

629 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

633 #i‡!
	`__GNUC_PREREQ
 (3, 5)

634 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

635 
__vÆue
; \

636 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

637 
__asm
 
__vﬁ©ûe__
 \

639 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

640  
__vÆue
)

645 #i‡
	`__GNUC_PREREQ
 (3, 4)

646 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

647  
	$__buûtö_©™2l
 (
__y
, 
__x
))

649 
	#__©™2_code
 \

650 
__vÆue
; \

651 
__asm
 
__vﬁ©ûe__
 \

653 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

654  
__vÆue


	)

655 #ifde‡
__FAST_MATH__


656 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

658 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

662 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

663 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

664 
__vÆue
; \

665 
__asm
 
__vﬁ©ûe__
 \

670 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

671  
__vÆue
)

675 #ifde‡
__FAST_MATH__


676 #i‡!
	`__GNUC_PREREQ
 (3,3)

677 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

678 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

679 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

681 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

685 #i‡
	`__GNUC_PREREQ
 (2, 8)

686 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

687 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


688 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

689 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

691 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

693 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

694 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

697 #ifde‡
__FAST_MATH__


698 #i‡!
	`__GNUC_PREREQ
 (3, 4)

700 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

702 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

704 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

707 #i‡!
	`__GNUC_PREREQ
 (3, 5)

708 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

710 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

711 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

714 #i‡!
	`__GNUC_PREREQ
 (3, 4)

715 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

719 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

720 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

721 { 
__xld
: 
__x
 
	}
}; \

722 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

723 
	g__n
.
	g__xi
[1] = 0x80000000; \

724 
	g__n
.
	g__xi
[0] = 0; \

725  
	g__n
.
	g__xld
)

728 #ifde‡
__FAST_MATH__


730 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

731 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

732  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

734 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

735 
__ex
 = 
	`__ex∂
 (
__x
); \

736  0.5 * (
__ex
 + 1.0 / __ex))

738 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

739 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

740  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

743 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

744 
__vÆue
; \

745 
__ign‹e
; \

746 
__cw
; \

747 
__cwtmp
; \

748 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

756 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

757 "=m" (
__cw
) \

758 : "0" (
__x
)); \

759  
__vÆue
)

761 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

762 
__vÆue
; \

763 
__ign‹e
; \

764 
__cw
; \

765 
__cwtmp
; \

766 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

774 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

775 "=m" (
__cw
) \

776 : "0" (
__x
)); \

777  
__vÆue
)

779 #ifde‡
__FAST_MATH__


780 
	#__ldexp_code
 \

781 
__vÆue
; \

782 
__asm
 
__vﬁ©ûe__
 \

784 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

785  
__vÆue


	)

787 
__MATH_INLINE
 

788 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

790 
__ldexp_code
;

791 
	}
}

796 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


798 #ifde‡
__FAST_MATH__


799 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

803 
	#__M_SQRT2
 1.41421356237309504880L

	)

805 #i‡!
	`__GNUC_PREREQ
 (3, 5)

806 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

807 
__vÆue
; \

808 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

809 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

811 
__asm
 
__vﬁ©ûe__
 \

815 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

816  
__vÆue
)

821 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

822 
__y
 = 
	`__Áb¶
 (
__x
); \

823  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

824 * 
	$__sgn1l
 (
__x
)))

826 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

827  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

829 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

830 
__y
 = 
	`__Áb¶
 (
__x
); \

831  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

834 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

835  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

837 #i‡!
	`__GNUC_PREREQ
 (3, 5)

838 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

839 
__vÆue
; \

840 
__junk
; \

841 
__asm
 
__vﬁ©ûe__
 \

843 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

844  
__vÆue
)

850 #ifde‡
__USE_ISOC99


851 #ifde‡
__FAST_MATH__


853 #i‡!
	`__GNUC_PREREQ
 (3, 5)

854 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

857 
__MATH_INLINE
 

858 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

860 
__ldexp_code
;

861 
	}
}

863 
__MATH_INLINE
 

864 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

866 
__ldexp_code
;

867 
	}
}

869 
__ölöe_m©h›NP
 (
röt
, "frndint")

872 
	#__Ãöt_code
 \

873 
__Ãöåes
; \

874 
__asm__
 
__vﬁ©ûe__
 \

876 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

877  
__Ãöåes


	)

878 
__MATH_INLINE
 

879 
__NTH
 (
	$Ãötf
 (
__x
))

881 
__Ãöt_code
;

882 
	}
}

883 
__MATH_INLINE
 

884 
__NTH
 (
	$Ãöt
 (
__x
))

886 
__Ãöt_code
;

887 
	}
}

888 
__MATH_INLINE
 

889 
__NTH
 (
	$Ãöé
 (
__x
))

891 
__Ãöt_code
;

892 
	}
}

893 #unde‡
__Ãöt_code


895 
	#__Œröt_code
 \

896 
__Œröåes
; \

897 
__asm__
 
__vﬁ©ûe__
 \

899 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

900  
__Œröåes


	)

901 
__exãnsi⁄__


902 
__MATH_INLINE
 

903 
__NTH
 (
	$Œrötf
 (
__x
))

905 
__Œröt_code
;

906 
	}
}

907 
__exãnsi⁄__


908 
__MATH_INLINE
 

909 
__NTH
 (
	$Œröt
 (
__x
))

911 
__Œröt_code
;

912 
	}
}

913 
__exãnsi⁄__


914 
__MATH_INLINE
 

915 
__NTH
 (
	$Œröé
 (
__x
))

917 
__Œröt_code
;

918 
	}
}

919 #unde‡
__Œröt_code


924 #ifde‡
__USE_MISC


926 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

927 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

928 
__vÆue
; \

929 
__˛obbîed
; \

930 
__asm
 
__vﬁ©ûe__
 \

935 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

936  
__vÆue
)

941 
__MATH_INLINE
 

942 
__NTH
 (
	$__föôe
 (
__x
))

944  (
__exãnsi⁄__


945 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

947 
	}
}

952 #unde‡
__©™2_code


953 #ifde‡
__FAST_MATH__


954 #unde‡
__expm1_code


955 #unde‡
__exp_code


956 #unde‡
__söcos_code


963 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


964 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

965 
__ölöe_m©hcode2
 (
__õì754_©™2
, 
__y
, 
__x
,

966 
__vÆue
;

967 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

968 : "Ò" (
__vÆue
)

969 : "0" (
__x
), "u" (
__y
) : "st(1)");

970  
__vÆue
;)

	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


27 #ifde‡
__USE_MISC


28 
	#MAP_32BIT
 0x40

	)

32 #ifde‡
__USE_MISC


33 
	#MAP_GROWSDOWN
 0x00100

	)

34 
	#MAP_DENYWRITE
 0x00800

	)

35 
	#MAP_EXECUTABLE
 0x01000

	)

36 
	#MAP_LOCKED
 0x02000

	)

37 
	#MAP_NORESERVE
 0x04000

	)

38 
	#MAP_POPULATE
 0x08000

	)

39 
	#MAP_NONBLOCK
 0x10000

	)

40 
	#MAP_STACK
 0x20000

	)

41 
	#MAP_HUGETLB
 0x40000

	)

45 
	~<bôs/mm™-löux.h
>

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__q«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__q«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__q«n_uni⁄


49 
__©åibuã__
 ((
__unu£d__
)Ë{ 
__q«n_byãs
 };

50 
	#NAN
 (
__q«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/param.h

19 #i‚de‡
_SYS_PARAM_H


23 #i‚de‡
ARG_MAX


24 
	#__undef_ARG_MAX


	)

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #ifde‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


36 
	#MAXSYMLINKS
 20

	)

41 
	#NOFILE
 256

	)

42 
	#NCARGS
 131072

	)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

108 
	#__PTHREAD_MUTEX_HAVE_ELISION
 1

	)

110 
	m__nu£rs
;

111 
__exãnsi⁄__
 union

115 
	m__e•ös
;

116 
	m__ñisi⁄
;

117 
	#__•ös
 
d
.
__e•ös


	)

118 
	#__ñisi⁄
 
d
.
__ñisi⁄


	)

119 
	#__PTHREAD_MUTEX_HAVE_ELISION
 2

	)

120 } 
	md
;

121 
__±hªad_¶i°_t
 
	m__li°
;

124 } 
	m__d©a
;

125 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

126 
	m__Æign
;

127 } 
	t±hªad_muãx_t
;

131 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

132 
	m__Æign
;

133 } 
	t±hªad_muãx©å_t
;

142 
	m__lock
;

143 
	m__fuãx
;

144 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

145 
__exãnsi⁄__
 
	m__wakeup_£q
;

146 
__exãnsi⁄__
 
	m__wokí_£q
;

147 *
	m__muãx
;

148 
	m__nwaôîs
;

149 
	m__brﬂdˇ°_£q
;

150 } 
	m__d©a
;

151 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

152 
__exãnsi⁄__
 
	m__Æign
;

153 } 
	t±hªad_c⁄d_t
;

157 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

158 
	m__Æign
;

159 } 
	t±hªad_c⁄d©å_t
;

163 
	t±hªad_key_t
;

167 
	t±hªad_⁄˚_t
;

170 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


175 #ifde‡
__x86_64__


178 
	m__lock
;

179 
	m__ƒ_ªadîs
;

180 
	m__ªadîs_wakeup
;

181 
	m__wrôî_wakeup
;

182 
	m__ƒ_ªadîs_queued
;

183 
	m__ƒ_wrôîs_queued
;

184 
	m__wrôî
;

185 
	m__sh¨ed
;

186 
	m__∑d1
;

187 
	m__∑d2
;

190 
	m__Êags
;

191 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

192 } 
	m__d©a
;

196 
	m__lock
;

197 
	m__ƒ_ªadîs
;

198 
	m__ªadîs_wakeup
;

199 
	m__wrôî_wakeup
;

200 
	m__ƒ_ªadîs_queued
;

201 
	m__ƒ_wrôîs_queued
;

204 
	m__Êags
;

205 
	m__sh¨ed
;

206 
	m__∑d1
;

207 
	m__∑d2
;

208 
	m__wrôî
;

209 } 
	m__d©a
;

211 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

212 
	m__Æign
;

213 } 
	t±hªad_rwlock_t
;

217 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

218 
	m__Æign
;

219 } 
	t±hªad_rwlock©å_t
;

223 #ifde‡
__USE_XOPEN2K


225 vﬁ©ûê
	t±hªad_•ölock_t
;

232 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

233 
	m__Æign
;

234 } 
	t±hªad_b¨rõr_t
;

238 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

239 
	m__Æign
;

240 } 
	t±hªad_b¨rõøâr_t
;

244 #i‚de‡
__x86_64__


246 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sched.h

20 #i‚de‡
__√ed_sched∑øm


22 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

38 #ifde‡
__USE_GNU


40 
	#CSIGNAL
 0x000000f‡

	)

41 
	#CLONE_VM
 0x00000100

	)

42 
	#CLONE_FS
 0x00000200

	)

43 
	#CLONE_FILES
 0x00000400

	)

44 
	#CLONE_SIGHAND
 0x00000800

	)

45 
	#CLONE_PTRACE
 0x00002000

	)

46 
	#CLONE_VFORK
 0x00004000

	)

48 
	#CLONE_PARENT
 0x00008000

	)

50 
	#CLONE_THREAD
 0x00010000

	)

51 
	#CLONE_NEWNS
 0x00020000

	)

52 
	#CLONE_SYSVSEM
 0x00040000

	)

53 
	#CLONE_SETTLS
 0x00080000

	)

54 
	#CLONE_PARENT_SETTID
 0x00100000

	)

56 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

58 
	#CLONE_DETACHED
 0x00400000

	)

59 
	#CLONE_UNTRACED
 0x00800000

	)

61 
	#CLONE_CHILD_SETTID
 0x01000000

	)

63 
	#CLONE_NEWUTS
 0x04000000

	)

64 
	#CLONE_NEWIPC
 0x08000000

	)

65 
	#CLONE_NEWUSER
 0x10000000

	)

66 
	#CLONE_NEWPID
 0x20000000

	)

67 
	#CLONE_NEWNET
 0x40000000

	)

68 
	#CLONE_IO
 0x80000000

	)

72 
	ssched_∑øm


74 
	m__sched_¥i‹ôy
;

77 
	g__BEGIN_DECLS


79 #ifde‡
__USE_GNU


81 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

82 
__Êags
, *
__¨g
, ...Ë
__THROW
;

85 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

88 
	$sched_gë˝u
 (Ë
__THROW
;

91 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

95 
__END_DECLS


99 #i‡!
deföed
 
__deföed_sched∑øm
 \

100 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

101 
	#__deföed_sched∑øm
 1

	)

103 
	s__sched_∑øm


105 
__sched_¥i‹ôy
;

107 #unde‡
__√ed_sched∑øm


111 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


112 
	#__˝u_£t_t_deföed


	)

114 
	#__CPU_SETSIZE
 1024

	)

115 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

118 
	t__˝u_mask
;

121 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

122 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

127 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

128 } 
	t˝u_£t_t
;

131 #i‡
	`__GNUC_PREREQ
 (2, 91)

132 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

133 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

135 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

137 
size_t
 
__i
; \

138 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

139 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

140 
__i
 = 0; __ò< 
__imax
; ++__i) \

141 
__bôs
[
__i
] = 0; \

142 
	}
} 0)

	)

144 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 / 8 < (
£tsize
) \

148 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

149 |
	`__CPUMASK
 (
__˝u
)) \

150 : 0; }))

	)

151 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

152 (
__exãnsi⁄__
 \

153 ({ 
size_t
 
__˝u
 = (
˝u
); \

154 
__˝u
 / 8 < (
£tsize
) \

155 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

156 &~
	`__CPUMASK
 (
__˝u
)) \

157 : 0; }))

	)

158 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

159 (
__exãnsi⁄__
 \

160 ({ 
size_t
 
__˝u
 = (
˝u
); \

161 
__˝u
 / 8 < (
£tsize
) \

162 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

163 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

164 : 0; }))

	)

166 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

167 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

169 #i‡
__GNUC_PREREQ
 (2, 91)

170 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

171 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

173 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

174 (
__exãnsi⁄__
 \

175 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

176 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

177 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

178 
size_t
 
__i
; \

179 
__i
 = 0; __ò< 
__imax
; ++__i) \

180 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

182 
__i
 =
__imax
; }))

	)

185 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

186 (
__exãnsi⁄__
 \

187 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

188 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

189 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

190 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

191 
size_t
 
__i
; \

192 
__i
 = 0; __ò< 
__imax
; ++__i) \

193 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

194 
__de°
; }))

	)

196 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

197 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

198 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

199 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

201 
__BEGIN_DECLS


203 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

204 
__THROW
;

205 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

206 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

208 
__END_DECLS


	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/sigaction.h

19 #i‚de‡
_SIGNAL_H


24 
	ssiga˘i⁄


27 #ifde‡
__USE_POSIX199309


31 
__sigh™dÀr_t
 
	mß_h™dÀr
;

33 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

35 
	m__siga˘i⁄_h™dÀr
;

36 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

37 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

39 
__sigh™dÀr_t
 
	mß_h™dÀr
;

43 
__sig£t_t
 
	mß_mask
;

46 
	mß_Êags
;

49 (*
	mß_ª°‹î
) ();

53 
	#SA_NOCLDSTOP
 1

	)

54 
	#SA_NOCLDWAIT
 2

	)

55 
	#SA_SIGINFO
 4

	)

57 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


58 
	#SA_ONSTACK
 0x08000000

	)

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


61 
	#SA_RESTART
 0x10000000

	)

62 
	#SA_NODEFER
 0x40000000

	)

64 
	#SA_RESETHAND
 0x80000000

	)

66 #ifde‡
__USE_MISC


67 
	#SA_INTERRUPT
 0x20000000

	)

70 
	#SA_NOMASK
 
SA_NODEFER


	)

71 
	#SA_ONESHOT
 
SA_RESETHAND


	)

72 
	#SA_STACK
 
SA_ONSTACK


	)

76 
	#SIG_BLOCK
 0

	)

77 
	#SIG_UNBLOCK
 1

	)

78 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

26 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

27 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

29 
	s_Âx_sw_byãs


31 
__uöt32_t
 
	mmagic1
;

32 
__uöt32_t
 
	mexãnded_size
;

33 
__uöt64_t
 
	mx°©e_bv
;

34 
__uöt32_t
 
	mx°©e_size
;

35 
__uöt32_t
 
	m∑ddög
[7];

38 
	s_Âªg


40 
	msignifiˇnd
[4];

41 
	mexp⁄ít
;

44 
	s_Âxªg


46 
	msignifiˇnd
[4];

47 
	mexp⁄ít
;

48 
	m∑ddög
[3];

51 
	s_xmmªg


53 
__uöt32_t
 
	mñemít
[4];

58 #i‚de‡
__x86_64__


60 
	s_Â°©e


63 
__uöt32_t
 
	mcw
;

64 
__uöt32_t
 
	msw
;

65 
__uöt32_t
 
	mèg
;

66 
__uöt32_t
 
	mùoff
;

67 
__uöt32_t
 
	mcs£l
;

68 
__uöt32_t
 
	md©aoff
;

69 
__uöt32_t
 
	md©a£l
;

70 
_Âªg
 
	m_°
[8];

71 
	m°©us
;

72 
	mmagic
;

75 
__uöt32_t
 
	m_fx§_ív
[6];

76 
__uöt32_t
 
	mmxc§
;

77 
__uöt32_t
 
	mª£rved
;

78 
_Âxªg
 
	m_fx§_°
[8];

79 
_xmmªg
 
	m_xmm
[8];

80 
__uöt32_t
 
	m∑ddög
[56];

83 #i‚de‡
sigc⁄ãxt_°ru˘


88 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

91 
	#X86_FXSR_MAGIC
 0x0000

	)

93 
	ssigc⁄ãxt


95 
	mgs
, 
	m__gsh
;

96 
	mfs
, 
	m__fsh
;

97 
	mes
, 
	m__esh
;

98 
	mds
, 
	m__dsh
;

99 
	medi
;

100 
	mesi
;

101 
	mebp
;

102 
	me•
;

103 
	mebx
;

104 
	medx
;

105 
	mecx
;

106 
	móx
;

107 
	må≠no
;

108 
	mîr
;

109 
	meù
;

110 
	mcs
, 
	m__csh
;

111 
	meÊags
;

112 
	me•_©_sig«l
;

113 
	mss
, 
	m__ssh
;

114 
_Â°©e
 * 
	mÂ°©e
;

115 
	mﬁdmask
;

116 
	m¸2
;

121 
	s_Â°©e


124 
__uöt16_t
 
	mcwd
;

125 
__uöt16_t
 
	mswd
;

126 
__uöt16_t
 
	m·w
;

127 
__uöt16_t
 
	mf›
;

128 
__uöt64_t
 
	mrù
;

129 
__uöt64_t
 
	mrdp
;

130 
__uöt32_t
 
	mmxc§
;

131 
__uöt32_t
 
	mmx¸_mask
;

132 
_Âxªg
 
	m_°
[8];

133 
_xmmªg
 
	m_xmm
[16];

134 
__uöt32_t
 
	m∑ddög
[24];

137 
	ssigc⁄ãxt


139 
__uöt64_t
 
	mr8
;

140 
__uöt64_t
 
	mr9
;

141 
__uöt64_t
 
	mr10
;

142 
__uöt64_t
 
	mr11
;

143 
__uöt64_t
 
	mr12
;

144 
__uöt64_t
 
	mr13
;

145 
__uöt64_t
 
	mr14
;

146 
__uöt64_t
 
	mr15
;

147 
__uöt64_t
 
	mrdi
;

148 
__uöt64_t
 
	mrsi
;

149 
__uöt64_t
 
	mrbp
;

150 
__uöt64_t
 
	mrbx
;

151 
__uöt64_t
 
	mrdx
;

152 
__uöt64_t
 
	møx
;

153 
__uöt64_t
 
	mrcx
;

154 
__uöt64_t
 
	mr•
;

155 
__uöt64_t
 
	mrù
;

156 
__uöt64_t
 
	meÊags
;

157 
	mcs
;

158 
	mgs
;

159 
	mfs
;

160 
	m__∑d0
;

161 
__uöt64_t
 
	mîr
;

162 
__uöt64_t
 
	må≠no
;

163 
__uöt64_t
 
	mﬁdmask
;

164 
__uöt64_t
 
	m¸2
;

165 
__exãnsi⁄__
 union

167 
_Â°©e
 * 
	mÂ°©e
;

168 
__uöt64_t
 
	m__Â°©e_w‹d
;

170 
__uöt64_t
 
	m__ª£rved1
 [8];

175 
	s_xßve_hdr


177 
__uöt64_t
 
	mx°©e_bv
;

178 
__uöt64_t
 
	mª£rved1
[2];

179 
__uöt64_t
 
	mª£rved2
[5];

182 
	s_ymmh_°©e


184 
__uöt32_t
 
	mymmh_•a˚
[64];

187 
	s_x°©e


189 
_Â°©e
 
	mÂ°©e
;

190 
_xßve_hdr
 
	mx°©e_hdr
;

191 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/siginfo.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

20 && !
deföed
 
	g__√ed_sigevít_t


24 
	~<bôs/w‹dsize.h
>

26 #i‡(!
deföed
 
__have_sigvÆ_t
 \

27 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

28 || 
deföed
 
	g__√ed_sigevít_t
))

29 
	#__have_sigvÆ_t
 1

	)

32 
	usigvÆ


34 
	msivÆ_öt
;

35 *
	msivÆ_±r
;

36 } 
	tsigvÆ_t
;

39 #i‡(!
deföed
 
__have_sigöfo_t
 \

40 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

41 
	#__have_sigöfo_t
 1

	)

43 
	#__SI_MAX_SIZE
 128

	)

44 #i‡
__WORDSIZE
 == 64

45 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

47 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

50 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

55 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

56 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

58 
__˛ock_t
 
	t__sigchld_˛ock_t
;

59 
	#__SI_ALIGNMENT


	)

64 
si_signo
;

65 
si_î∫o
;

67 
si_code
;

71 
_∑d
[
__SI_PAD_SIZE
];

76 
__pid_t
 
si_pid
;

77 
__uid_t
 
si_uid
;

78 } 
_kûl
;

83 
si_tid
;

84 
si_ovîrun
;

85 
sigvÆ_t
 
si_sigvÆ
;

86 } 
_timî
;

91 
__pid_t
 
si_pid
;

92 
__uid_t
 
si_uid
;

93 
sigvÆ_t
 
si_sigvÆ
;

94 } 
_π
;

99 
__pid_t
 
si_pid
;

100 
__uid_t
 
si_uid
;

101 
si_°©us
;

102 
__sigchld_˛ock_t
 
si_utime
;

103 
__sigchld_˛ock_t
 
si_°ime
;

104 } 
_sigchld
;

109 *
si_addr
;

110 
si_addr_lsb
;

111 } 
_sigÁu…
;

116 
si_b™d
;

117 
si_fd
;

118 } 
_sigpﬁl
;

123 *
_ˇŒ_addr
;

124 
_sysˇŒ
;

125 
_¨ch
;

126 } 
_sigsys
;

127 } 
_sifõlds
;

128 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

132 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

133 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

134 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

135 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

136 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

137 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

138 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

139 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

140 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

141 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

142 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

143 
	#si_addr_lsb
 
_sifõlds
.
_sigÁu…
.
si_addr_lsb


	)

144 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

145 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

146 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

147 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

148 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

155 
SI_ASYNCNL
 = -60,

156 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

157 
SI_TKILL
 = -6,

158 
	#SI_TKILL
 
SI_TKILL


	)

159 
SI_SIGIO
,

160 
	#SI_SIGIO
 
SI_SIGIO


	)

161 
SI_ASYNCIO
,

162 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

163 
SI_MESGQ
,

164 
	#SI_MESGQ
 
SI_MESGQ


	)

165 
SI_TIMER
,

166 
	#SI_TIMER
 
SI_TIMER


	)

167 
SI_QUEUE
,

168 
	#SI_QUEUE
 
SI_QUEUE


	)

169 
SI_USER
,

170 
	#SI_USER
 
SI_USER


	)

171 
SI_KERNEL
 = 0x80

172 
	#SI_KERNEL
 
SI_KERNEL


	)

179 
ILL_ILLOPC
 = 1,

180 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

181 
ILL_ILLOPN
,

182 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

183 
ILL_ILLADR
,

184 
	#ILL_ILLADR
 
ILL_ILLADR


	)

185 
ILL_ILLTRP
,

186 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

187 
ILL_PRVOPC
,

188 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

189 
ILL_PRVREG
,

190 
	#ILL_PRVREG
 
ILL_PRVREG


	)

191 
ILL_COPROC
,

192 
	#ILL_COPROC
 
ILL_COPROC


	)

193 
ILL_BADSTK


194 
	#ILL_BADSTK
 
ILL_BADSTK


	)

200 
FPE_INTDIV
 = 1,

201 
	#FPE_INTDIV
 
FPE_INTDIV


	)

202 
FPE_INTOVF
,

203 
	#FPE_INTOVF
 
FPE_INTOVF


	)

204 
FPE_FLTDIV
,

205 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

206 
FPE_FLTOVF
,

207 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

208 
FPE_FLTUND
,

209 
	#FPE_FLTUND
 
FPE_FLTUND


	)

210 
FPE_FLTRES
,

211 
	#FPE_FLTRES
 
FPE_FLTRES


	)

212 
FPE_FLTINV
,

213 
	#FPE_FLTINV
 
FPE_FLTINV


	)

214 
FPE_FLTSUB


215 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

221 
SEGV_MAPERR
 = 1,

222 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

223 
SEGV_ACCERR


224 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

230 
BUS_ADRALN
 = 1,

231 
	#BUS_ADRALN
 
BUS_ADRALN


	)

232 
BUS_ADRERR
,

233 
	#BUS_ADRERR
 
BUS_ADRERR


	)

234 
BUS_OBJERR
,

235 
	#BUS_OBJERR
 
BUS_OBJERR


	)

236 
BUS_MCEERR_AR
,

237 
	#BUS_MCEERR_AR
 
BUS_MCEERR_AR


	)

238 
BUS_MCEERR_AO


239 
	#BUS_MCEERR_AO
 
BUS_MCEERR_AO


	)

245 
TRAP_BRKPT
 = 1,

246 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

247 
TRAP_TRACE


248 
	#TRAP_TRACE
 
TRAP_TRACE


	)

254 
CLD_EXITED
 = 1,

255 
	#CLD_EXITED
 
CLD_EXITED


	)

256 
CLD_KILLED
,

257 
	#CLD_KILLED
 
CLD_KILLED


	)

258 
CLD_DUMPED
,

259 
	#CLD_DUMPED
 
CLD_DUMPED


	)

260 
CLD_TRAPPED
,

261 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

262 
CLD_STOPPED
,

263 
	#CLD_STOPPED
 
CLD_STOPPED


	)

264 
CLD_CONTINUED


265 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

271 
POLL_IN
 = 1,

272 
	#POLL_IN
 
POLL_IN


	)

273 
POLL_OUT
,

274 
	#POLL_OUT
 
POLL_OUT


	)

275 
POLL_MSG
,

276 
	#POLL_MSG
 
POLL_MSG


	)

277 
POLL_ERR
,

278 
	#POLL_ERR
 
POLL_ERR


	)

279 
POLL_PRI
,

280 
	#POLL_PRI
 
POLL_PRI


	)

281 
POLL_HUP


282 
	#POLL_HUP
 
POLL_HUP


	)

285 #unde‡
__√ed_sigöfo_t


289 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

290 && !
deföed
 
__have_sigevít_t


291 
	#__have_sigevít_t
 1

	)

294 
	#__SIGEV_MAX_SIZE
 64

	)

295 #i‡
__WORDSIZE
 == 64

296 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

298 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

302 #i‚de‡
__have_±hªad_©å_t


303 
±hªad_©å_t
 
	t±hªad_©å_t
;

304 
	#__have_±hªad_©å_t
 1

	)

307 
	ssigevít


309 
sigvÆ_t
 
sigev_vÆue
;

310 
sigev_signo
;

311 
sigev_nŸify
;

315 
_∑d
[
__SIGEV_PAD_SIZE
];

319 
__pid_t
 
_tid
;

323 (*
_fun˘i⁄
Ë(
sigvÆ_t
);

324 
±hªad_©å_t
 *
_©åibuã
;

325 } 
_sigev_thªad
;

326 } 
_sigev_un
;

327 } 
	tsigevít_t
;

330 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

331 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

336 
SIGEV_SIGNAL
 = 0,

337 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

338 
SIGEV_NONE
,

339 
	#SIGEV_NONE
 
SIGEV_NONE


	)

340 
SIGEV_THREAD
,

341 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

343 
SIGEV_THREAD_ID
 = 4

344 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

19 #ifdef 
_SIGNAL_H


22 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

23 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

24 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

26 #ifde‡
__USE_UNIX98


27 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

32 
	#SIGHUP
 1

	)

33 
	#SIGINT
 2

	)

34 
	#SIGQUIT
 3

	)

35 
	#SIGILL
 4

	)

36 
	#SIGTRAP
 5

	)

37 
	#SIGABRT
 6

	)

38 
	#SIGIOT
 6

	)

39 
	#SIGBUS
 7

	)

40 
	#SIGFPE
 8

	)

41 
	#SIGKILL
 9

	)

42 
	#SIGUSR1
 10

	)

43 
	#SIGSEGV
 11

	)

44 
	#SIGUSR2
 12

	)

45 
	#SIGPIPE
 13

	)

46 
	#SIGALRM
 14

	)

47 
	#SIGTERM
 15

	)

48 
	#SIGSTKFLT
 16

	)

49 
	#SIGCLD
 
SIGCHLD


	)

50 
	#SIGCHLD
 17

	)

51 
	#SIGCONT
 18

	)

52 
	#SIGSTOP
 19

	)

53 
	#SIGTSTP
 20

	)

54 
	#SIGTTIN
 21

	)

55 
	#SIGTTOU
 22

	)

56 
	#SIGURG
 23

	)

57 
	#SIGXCPU
 24

	)

58 
	#SIGXFSZ
 25

	)

59 
	#SIGVTALRM
 26

	)

60 
	#SIGPROF
 27

	)

61 
	#SIGWINCH
 28

	)

62 
	#SIGPOLL
 
SIGIO


	)

63 
	#SIGIO
 29

	)

64 
	#SIGPWR
 30

	)

65 
	#SIGSYS
 31

	)

66 
	#SIGUNUSED
 31

	)

68 
	#_NSIG
 65

	)

71 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

72 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

76 
	#__SIGRTMIN
 32

	)

77 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

19 #i‚de‡
_SIGNAL_H


25 
	ssig°ack


27 *
	mss_•
;

28 
	mss_⁄°ack
;

35 
	mSS_ONSTACK
 = 1,

36 
	#SS_ONSTACK
 
SS_ONSTACK


	)

37 
	mSS_DISABLE


38 
	#SS_DISABLE
 
SS_DISABLE


	)

42 
	#MINSIGSTKSZ
 2048

	)

45 
	#SIGSTKSZ
 8192

	)

49 
	ssigÆt°ack


51 *
	mss_•
;

52 
	mss_Êags
;

53 
size_t
 
	mss_size
;

54 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


30 
	$±hªad_sigmask
 (
__how
,

31 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

32 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

35 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

37 #ifde‡
__USE_GNU


39 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

40 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__glibc_ª£rved4
;

110 
	m__glibc_ª£rved5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_ARCH_u«lig√d
 1

	)

28 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

29 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

30 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

31 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

32 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

33 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

34 || 
deföed
 
	g__amdÁm10__
)

38 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

39 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

41 #i‚de‡
__STRING_INLINE


42 #i‚de‡
__exã∫_ölöe


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

51 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

52 | ((c⁄° *Ë(
§c
))[
idx
])

	)

53 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

54 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

55 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

56 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

57 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

62 
	#mem˝y
(
de°
, 
§c
, 
n
) \

63 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

64 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

65 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

66 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

67 ((
n
) == 0 \

68 ? (
de°
) \

69 : (((
n
) % 4 == 0) \

70 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

71 : (((
n
) % 2 == 0) \

72 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

73 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

75 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

76 
size_t
 
__n
);

78 
__STRING_INLINE
 *

79 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

81 
__d0
, 
__d1
;

82 *
__tmp
 = 
__de°
;

83 
__asm__
 
__vﬁ©ûe__


91 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

92 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

94  
__de°
;

95 
	}
}

97 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

98 
size_t
 
__n
);

100 
__STRING_INLINE
 *

101 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

103 
__d0
, 
__d1
;

104 *
__tmp
 = 
__de°
;

105 
__asm__
 
__vﬁ©ûe__


118 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

119 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

121  
__de°
;

122 
	}
}

124 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

126 
__STRING_INLINE
 *

127 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

129 
__d0
, 
__d1
, 
__d2
;

130 *
__tmp
 = 
__de°
;

131 
__asm__
 
__vﬁ©ûe__


142 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

143 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

144 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

145 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

147  
__de°
;

148 
	}
}

150 
	#_HAVE_STRING_ARCH_memmove
 1

	)

151 #i‚de‡
_FORCE_INLINES


154 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

156 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

157 
	`__asm__
 ("memmove");

159 
__STRING_INLINE
 *

160 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

162 
__d0
, 
__d1
, 
__d2
;

163 *
__tmp
 = 
__de°
;

164 i‡(
__de°
 < 
__§c
)

165 
__asm__
 
__vﬁ©ûe__


168 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

169 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

170 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

171 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

173 
__asm__
 
__vﬁ©ûe__


177 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

178 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

179 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

180 "2" (
__n
 - 1 + (*Ë
__tmp
),

181 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

182  
__de°
;

183 
	}
}

187 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

188 #i‚de‡
_FORCE_INLINES


189 #i‚de‡
__PIC__


191 
__STRING_INLINE
 

192 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

194 
__d0
, 
__d1
, 
__d2
;

195 
__ªs
;

196 
__asm__
 
__vﬁ©ûe__


204 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

205 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

206 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

207 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

209  
__ªs
;

210 
	}
}

215 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

216 
	#_USE_STRING_ARCH_mem£t
 1

	)

217 
	#mem£t
(
s
, 
c
, 
n
) \

218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

219 ? ((
n
) == 1 \

220 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

221 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

222 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

223 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

224 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

225 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

226 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

227 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

228 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

230 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

231 *((*Ë
__s
Ë(Ë(
c
); \

232 
__s
; })

	)

234 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

235 ({ *
__s
 = (
s
); \

237 
__ui
; \

238 
__usi
; \

239 
__uc
; \

240 } *
__u
 = 
__s
; \

241 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

247 i‡((
n
) == 3 || (n) >= 5) \

248 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

251 
n
) \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__ui
 = 
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

260 
__u
->
__ui
 = 
__c
; \

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

263 
__u
->
__usi
 = (Ë
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

265 
__u
->
__uc
 = (Ë
__c
; \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__ui
 = 
__c
; \

273 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

275 
__u
->
__ui
 = 
__c
; \

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

278 
__u
->
__usi
 = (Ë
__c
; \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__ui
 = 
__c
; \

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

291 
__u
->
__uc
 = (Ë
__c
; \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__ui
 = 
__c
; \

302 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

304 
__u
->
__ui
 = 
__c
; \

309 
__s
; })

	)

311 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

312 (((
n
) % 4 == 0) \

313 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

314 
n
) \

315 : (((
n
) % 2 == 0) \

316 ? 
	`__mem£t_c˙_by2
 (
s
, \

317 ((Ë((Ë(
c
))) * 0x01010101,\

318 
n
) \

319 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

321 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

322 
size_t
 
__n
);

324 
__STRING_INLINE
 *

325 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

327 *
__tmp
 = 
__s
;

328 
__d0
;

329 #ifde‡
__i686__


330 
__asm__
 
__vﬁ©ûe__


333 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338 
__asm__
 
__vﬁ©ûe__


344 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

345 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

346 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

349  
__s
;

350 
	}
}

352 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

353 
size_t
 
__n
);

355 
__STRING_INLINE
 *

356 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

358 
__d0
, 
__d1
;

359 *
__tmp
 = 
__s
;

360 #ifde‡
__i686__


361 
__asm__
 
__vﬁ©ûe__


365 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370 
__asm__
 
__vﬁ©ûe__


376 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

377 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

378 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

381  
__s
;

382 
	}
}

384 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

385 (((
n
) % 4 == 0) \

386 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

387 : (((
n
) % 2 == 0) \

388 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

389 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

391 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

393 
__STRING_INLINE
 *

394 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

396 *
__tmp
 = 
__s
;

397 
__d0
;

398 
__asm__
 
__vﬁ©ûe__


408 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

409 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

410 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

412  
__s
;

413 
	}
}

415 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

417 
__STRING_INLINE
 *

418 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

420 
__d0
, 
__d1
;

421 *
__tmp
 = 
__s
;

422 
__asm__
 
__vﬁ©ûe__


433 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

434 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

435 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

437  
__s
;

438 
	}
}

442 
	#_HAVE_STRING_ARCH_memchr
 1

	)

443 #i‚de‡
_FORCE_INLINES


444 
__STRING_INLINE
 *

445 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

447 
__d0
;

448 #ifde‡
__i686__


449 
__d1
;

451 *
__ªs
;

452 i‡(
__n
 == 0)

453  
NULL
;

454 #ifde‡
__i686__


455 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464 
__asm__
 
__vﬁ©ûe__


470 : "=D" (
__ªs
), "=&c" (
__d0
)

471 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

472 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

475  
__ªs
 - 1;

476 
	}
}

479 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

480 #i‚de‡
_FORCE_INLINES


481 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

483 
__STRING_INLINE
 *

484 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

486 
__d0
;

487 #ifde‡
__i686__


488 
__d1
;

490 *
__ªs
;

491 i‡(
__n
 == 0)

492  
NULL
;

493 #ifde‡
__i686__


494 
__asm__
 
__vﬁ©ûe__


500 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

501 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

502 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

505 
__asm__
 
__vﬁ©ûe__


512 : "=D" (
__ªs
), "=&c" (
__d0
)

513 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

514 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

517  
__ªs
;

518 
	}
}

519 #ifde‡
__USE_GNU


520 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

525 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

526 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

528 #i‚de‡
_FORCE_INLINES


529 
__STRING_INLINE
 *

530 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

532 
__d0
;

533 *
__ªs
;

534 
__asm__
 
__vﬁ©ûe__


537 : "=D" (
__ªs
), "=&c" (
__d0
)

538 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

539 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

541  
__ªs
 - 1;

542 
	}
}

543 #ifde‡
__USE_GNU


544 
__STRING_INLINE
 *

545 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

547  
	`__øwmemchr
 (
__s
, 
__c
);

548 
	}
}

554 
	#_HAVE_STRING_ARCH_°æí
 1

	)

555 
	#°æí
(
°r
) \

556 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

557 ? 
	`__buûtö_°æí
 (
°r
) \

558 : 
	`__°æí_g
 (
°r
)))

	)

559 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

561 
__STRING_INLINE
 
size_t


562 
	$__°æí_g
 (c⁄° *
__°r
)

564 
__dummy
;

565 c⁄° *
__tmp
 = 
__°r
;

566 
__asm__
 
__vﬁ©ûe__


572 : "Ù" (
__tmp
), "=&q" (
__dummy
)

573 : "0" (
__°r
),

574 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

576  
__tmp
 - 
__°r
 - 1;

577 
	}
}

581 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

582 
	#°r˝y
(
de°
, 
§c
) \

583 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

584 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

585 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

586 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

587 (c⁄° *Ë(
§c
), \

588 
	`°æí
 (
§c
) + 1)) \

589 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

591 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

592 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

594 
__ui
; \

595 
__usi
; \

596 
__uc
; \

597 
__c
; \

598 } *
__u
 = (*Ë
__de°
; \

599 
§˛í
) \

602 
__u
->
__uc
 = '\0'; \

605 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

608 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

609 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

610 
__u
->
__uc
 = '\0'; \

613 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

617 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

618 
__u
->
__uc
 = '\0'; \

621 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

622 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

623 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

629 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

630 
__u
->
__uc
 = '\0'; \

633 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

635 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

638 (*Ë
__de°
; }))

	)

640 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

642 
__STRING_INLINE
 *

643 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

645 *
__tmp
 = 
__de°
;

646 
__dummy
;

647 
__asm__
 
__vﬁ©ûe__


656 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

657 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

658 : "0" (
__§c
), "1" (
__tmp
),

659 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

661  
__de°
;

662 
	}
}

665 #ifde‡
__USE_GNU


666 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

668 
	#__°p˝y
(
de°
, 
§c
) \

669 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

670 ? (
	`°æí
 (
§c
) + 1 <= 8 \

671 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

672 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

673 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

674 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

675 ((
§˛í
) % 4 == 0 \

676 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

677 : ((
§˛í
) % 2 == 0 \

678 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

679 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

682 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

684 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

685 (
	`__exãnsi⁄__
 ({ union { \

686 
__ui
; \

687 
__usi
; \

688 
__uc
; \

689 
__c
; \

690 } *
__u
 = (*Ë(
de°
); \

691 
§˛í
) \

694 
__u
->
__uc
 = '\0'; \

697 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

698 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

701 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

702 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

703 
__u
->
__uc
 = '\0'; \

706 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__uc
 = '\0'; \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

721 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

722 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

723 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

724 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

725 
__u
->
__uc
 = '\0'; \

728 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

729 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

730 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

731 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

734 (*Ë
__u
; }))

	)

736 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

737 
size_t
 
__§˛í
);

739 
__STRING_INLINE
 *

740 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

742 *
__tmp
 = 
__de°
;

743 
__d0
, 
__d1
;

744 
__asm__
 
__vﬁ©ûe__


752 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

753 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

755  
__tmp
;

756 
	}
}

758 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

759 
size_t
 
__§˛í
);

761 
__STRING_INLINE
 *

762 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

764 *
__tmp
 = 
__de°
;

765 
__d0
, 
__d1
;

766 
__asm__
 
__vﬁ©ûe__


779 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

780 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

781 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

782 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

784  
__tmp
 + 2;

785 
	}
}

787 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

788 
size_t
 
__§˛í
);

790 
__STRING_INLINE
 *

791 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

793 
__d0
, 
__d1
;

794 *
__tmp
 = 
__de°
;

795 
__asm__
 
__vﬁ©ûe__


806 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

807 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

808 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

809 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

811  
__tmp
;

812 
	}
}

814 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

816 
__STRING_INLINE
 *

817 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

819 *
__tmp
 = 
__de°
;

820 
__dummy
;

821 
__asm__
 
__vﬁ©ûe__


830 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

831 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

832 : "0" (
__§c
), "1" (
__tmp
),

833 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

835  
__tmp
 - 1;

836 
	}
}

841 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

842 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

843 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

844 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

845 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

846 (c⁄° *Ë(
§c
), 
n
) \

847 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

848 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

849 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

850 (((
§˛í
) % 4 == 0) \

851 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

852 : (((
§˛í
) % 2 == 0) \

853 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

854 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

856 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

857 
size_t
 
__§˛í
, size_à
__n
);

859 
__STRING_INLINE
 *

860 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

862 *
__tmp
 = 
__de°
;

863 
__dummy1
, 
__dummy2
;

864 
__asm__
 
__vﬁ©ûe__


872 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

873 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

874 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

875 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

877 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

878  
__de°
;

879 
	}
}

881 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

882 
size_t
 
__§˛í
, size_à
__n
);

884 
__STRING_INLINE
 *

885 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

887 *
__tmp
 = 
__de°
;

888 
__dummy1
, 
__dummy2
;

889 
__asm__
 
__vﬁ©ûe__


902 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

903 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

904 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

905 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

907 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

908  
__de°
;

909 
	}
}

911 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

912 
size_t
 
__§˛í
, size_à
__n
);

914 
__STRING_INLINE
 *

915 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

917 
__d0
, 
__d1
;

918 *
__tmp
 = 
__de°
;

919 
__asm__
 
__vﬁ©ûe__


930 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

931 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

932 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

933 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

935 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

936  
__de°
;

937 
	}
}

939 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

940 
size_t
 
__n
);

942 
__STRING_INLINE
 *

943 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

945 *
__tmp
 = 
__de°
;

946 
__dummy
;

947 i‡(
__n
 > 0)

948 
__asm__
 
__vﬁ©ûe__


964 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

965 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

968  
__de°
;

969 
	}
}

973 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

974 
	#°rˇt
(
de°
, 
§c
) \

975 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

976 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

977 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

979 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

980 
size_t
 
__§˛í
);

982 
__STRING_INLINE
 *

983 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

985 #ifde‡
__i686__


986 
__d0
;

987 *
__tmp
;

988 
__asm__
 
__vﬁ©ûe__


990 : "=D" (
__tmp
), "=&c" (
__d0
),

991 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

992 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

993 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

995 --
__tmp
;

997 *
__tmp
 = 
__de°
 - 1;

998 
__asm__
 
__vﬁ©ûe__


1003 : "Ù" (
__tmp
),

1004 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1005 : "0" (
__tmp
),

1006 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1009 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1010  
__de°
;

1011 
	}
}

1013 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1015 
__STRING_INLINE
 *

1016 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1018 *
__tmp
 = 
__de°
 - 1;

1019 
__dummy
;

1020 
__asm__
 
__vﬁ©ûe__


1032 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1033 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1034 : "1" (
__tmp
), "2" (
__§c
),

1035 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1037  
__de°
;

1038 
	}
}

1042 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1043 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1044 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1045 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1046 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1047 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1048 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1049 (c⁄° *Ë(
§c
), \

1050 (
n
)Ë0, 
__de°
)) \

1051 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1053 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1054 
size_t
 
__n
);

1056 
__STRING_INLINE
 *

1057 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1059 *
__tmp
 = 
__de°
;

1060 
__dummy
;

1061 #ifde‡
__i686__


1062 
__asm__
 
__vﬁ©ûe__


1076 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1077 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1080 --
__tmp
;

1081 
__asm__
 
__vﬁ©ûe__


1098 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1099 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1102  
__de°
;

1103 
	}
}

1107 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1108 
	#°rcmp
(
s1
, 
s2
) \

1109 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1110 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1111 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1112 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1113 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1114 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1115 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1116 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1118 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1119 (c⁄° *Ë(
s2
), \

1120 
	`°æí
 (
s1
)) \

1121 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1122 (c⁄° *Ë(
s2
), \

1123 
	`°æí
 (
s1
))) \

1124 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1125 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1126 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1127 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1128 (c⁄° *Ë(
s2
), \

1129 
	`°æí
 (
s2
)) \

1130 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s2
))) \

1133 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1135 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1136 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1137 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1139 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1140 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1142 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1143 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1144 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1147 
__ªsu…
; }))

	)

1149 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1150 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1151 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1152 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1155 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1157 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1158 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1159 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1162 
__ªsu…
; }))

	)

1164 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1165 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1166 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1167 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1170 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1172 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1173 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1174 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1177 
__ªsu…
; }))

	)

1179 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1181 
__STRING_INLINE
 

1182 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1184 
__ªs
;

1185 
__asm__
 
__vﬁ©ûe__


1201 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1202 : "1" (
__s1
), "2" (
__s2
),

1203 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1204 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1206  
__ªs
;

1207 
	}
}

1211 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1212 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1213 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1214 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1215 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1216 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1217 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1219 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1220 
size_t
 
__n
);

1222 
__STRING_INLINE
 

1223 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1225 
__ªs
;

1226 
__asm__
 
__vﬁ©ûe__


1245 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1246 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1247 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1248 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1250  
__ªs
;

1251 
	}
}

1255 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1256 
	#_USE_STRING_ARCH_°rchr
 1

	)

1257 
	#°rchr
(
s
, 
c
) \

1258 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1259 ? ((
c
) == '\0' \

1260 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1261 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1262 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1264 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1266 
__STRING_INLINE
 *

1267 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1269 
__d0
;

1270 *
__ªs
;

1271 
__asm__
 
__vﬁ©ûe__


1281 : "Ù" (
__ªs
), "=&a" (
__d0
)

1282 : "0" (
__s
), "1" (
__c
),

1283 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1285  
__ªs
;

1286 
	}
}

1288 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1290 
__STRING_INLINE
 *

1291 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1293 
__d0
;

1294 *
__ªs
;

1295 
__asm__
 
__vﬁ©ûe__


1306 : "Ù" (
__ªs
), "=&a" (
__d0
)

1307 : "0" (
__s
), "1" (
__c
),

1308 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1310  
__ªs
;

1311 
	}
}

1315 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1316 
	#__°rch∫ul
(
s
, 
c
) \

1317 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1318 ? ((
c
) == '\0' \

1319 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1320 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1321 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1323 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1325 
__STRING_INLINE
 *

1326 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1328 
__d0
;

1329 *
__ªs
;

1330 
__asm__
 
__vﬁ©ûe__


1340 : "Ù" (
__ªs
), "=&a" (
__d0
)

1341 : "0" (
__s
), "1" (
__c
),

1342 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1344  
__ªs
;

1345 
	}
}

1347 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1349 
__STRING_INLINE
 *

1350 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1352 
__d0
;

1353 *
__ªs
;

1354 
__asm__
 
__vﬁ©ûe__


1365 : "Ù" (
__ªs
), "=&a" (
__d0
)

1366 : "0" (
__s
), "1" (
__c
),

1367 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1369  
__ªs
;

1370 
	}
}

1371 #ifde‡
__USE_GNU


1372 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1376 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1378 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1379 
	#ödex
(
s
, 
c
) \

1380 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1381 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1382 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1387 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1388 
	#°ºchr
(
s
, 
c
) \

1389 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1390 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1391 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1393 #ifde‡
__i686__


1394 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1396 
__STRING_INLINE
 *

1397 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1399 
__d0
, 
__d1
;

1400 *
__ªs
;

1401 
__asm__
 
__vﬁ©ûe__


1409 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1410 : "0" (1), "1" (
__s
), "2" (
__c
),

1411 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1413  
__ªs
 - 1;

1414 
	}
}

1416 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1418 
__STRING_INLINE
 *

1419 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1421 
__d0
, 
__d1
;

1422 *
__ªs
;

1423 
__asm__
 
__vﬁ©ûe__


1432 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1433 : "0" (1), "1" (
__s
), "2" (
__c
),

1434 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1436  
__ªs
 - 1;

1437 
	}
}

1439 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1441 
__STRING_INLINE
 *

1442 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1444 
__d0
, 
__d1
;

1445 *
__ªs
;

1446 
__asm__
 
__vﬁ©ûe__


1456 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1457 : "0" (0), "1" (
__s
), "2" (
__c
),

1458 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1460  
__ªs
;

1461 
	}
}

1463 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1465 
__STRING_INLINE
 *

1466 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1468 
__d0
, 
__d1
;

1469 *
__ªs
;

1470 
__asm__
 
__vﬁ©ûe__


1481 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1482 : "0" (0), "1" (
__s
), "2" (
__c
),

1483 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1485  
__ªs
;

1486 
	}
}

1490 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1492 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1493 
	#rödex
(
s
, 
c
) \

1494 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1495 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1496 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1502 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1503 
	#°rc•n
(
s
, 
ªje˘
) \

1504 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1505 ? ((
ªje˘
)[0] == '\0' \

1506 ? 
	`°æí
 (
s
) \

1507 : ((
ªje˘
)[1] == '\0' \

1508 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1509 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1510 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1512 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1514 #i‚de‡
_FORCE_INLINES


1515 
__STRING_INLINE
 
size_t


1516 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1518 
__d0
;

1519 *
__ªs
;

1520 
__asm__
 
__vﬁ©ûe__


1529 : "Ù" (
__ªs
), "=&a" (
__d0
)

1530 : "0" (
__s
), "1" (
__ªje˘
),

1531 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1533  (
__ªs
 - 1Ë- 
__s
;

1534 
	}
}

1537 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1538 
size_t
 
__ªje˘_Àn
);

1540 
__STRING_INLINE
 
size_t


1541 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1543 
__d0
, 
__d1
, 
__d2
;

1544 c⁄° *
__ªs
;

1545 
__asm__
 
__vﬁ©ûe__


1556 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1557 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1559  (
__ªs
 - 1Ë- 
__s
;

1560 
	}
}

1562 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1563 #ifde‡
__PIC__


1565 
__STRING_INLINE
 
size_t


1566 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1568 
__d0
, 
__d1
, 
__d2
;

1569 c⁄° *
__ªs
;

1570 
__asm__
 
__vﬁ©ûe__


1587 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1588 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1590  (
__ªs
 - 1Ë- 
__s
;

1591 
	}
}

1593 
__STRING_INLINE
 
size_t


1594 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1596 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1597 c⁄° *
__ªs
;

1598 
__asm__
 
__vﬁ©ûe__


1612 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1613 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1616  (
__ªs
 - 1Ë- 
__s
;

1617 
	}
}

1623 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1624 
	#°r•n
(
s
, 
ac˚±
) \

1625 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1626 ? ((
ac˚±
)[0] == '\0' \

1627 ? ((Ë(
s
), 0) \

1628 : ((
ac˚±
)[1] == '\0' \

1629 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1630 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1631 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1633 #i‚de‡
_FORCE_INLINES


1634 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1636 
__STRING_INLINE
 
size_t


1637 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1639 
__d0
;

1640 *
__ªs
;

1642 
__asm__
 
__vﬁ©ûe__


1648 : "Ù" (
__ªs
), "=&q" (
__d0
)

1649 : "0" (
__s
), "1" (
__ac˚±
),

1650 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1652  (
__ªs
 - 1Ë- 
__s
;

1653 
	}
}

1656 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1657 
size_t
 
__ac˚±_Àn
);

1659 
__STRING_INLINE
 
size_t


1660 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1662 
__d0
, 
__d1
, 
__d2
;

1663 c⁄° *
__ªs
;

1664 
__asm__
 
__vﬁ©ûe__


1675 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1676 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1679 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1680 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1682  (
__ªs
 - 1Ë- 
__s
;

1683 
	}
}

1685 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1686 #ifde‡
__PIC__


1688 
__STRING_INLINE
 
size_t


1689 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1691 
__d0
, 
__d1
, 
__d2
;

1692 c⁄° *
__ªs
;

1693 
__asm__
 
__vﬁ©ûe__


1709 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1710 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1712  (
__ªs
 - 1Ë- 
__s
;

1713 
	}
}

1715 
__STRING_INLINE
 
size_t


1716 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1718 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1719 c⁄° *
__ªs
;

1720 
__asm__
 
__vﬁ©ûe__


1734 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1735 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1737  (
__ªs
 - 1Ë- 
__s
;

1738 
	}
}

1743 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1744 
	#°Ωbrk
(
s
, 
ac˚±
) \

1745 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1746 ? ((
ac˚±
)[0] == '\0' \

1747 ? ((Ë(
s
), (*) 0) \

1748 : ((
ac˚±
)[1] == '\0' \

1749 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1750 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1751 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1753 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1754 
size_t
 
__ac˚±_Àn
);

1756 
__STRING_INLINE
 *

1757 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1759 
__d0
, 
__d1
, 
__d2
;

1760 *
__ªs
;

1761 
__asm__
 
__vﬁ©ûe__


1776 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1777 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1779  
__ªs
;

1780 
	}
}

1782 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1783 #ifde‡
__PIC__


1785 
__STRING_INLINE
 *

1786 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1788 
__d0
, 
__d1
, 
__d2
;

1789 *
__ªs
;

1790 
__asm__
 
__vﬁ©ûe__


1811 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1812 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1814  
__ªs
;

1815 
	}
}

1817 
__STRING_INLINE
 *

1818 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1820 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1821 *
__ªs
;

1822 
__asm__
 
__vﬁ©ûe__


1841 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1842 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1844  
__ªs
;

1845 
	}
}

1850 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1851 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1852 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1853 ? ((
√edÀ
)[0] == '\0' \

1854 ? (
hay°ack
) \

1855 : ((
√edÀ
)[1] == '\0' \

1856 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1857 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1858 
	`°æí
 (
√edÀ
)))) \

1859 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1863 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1864 c⁄° 
__√edÀ
[],

1865 
size_t
 
__√edÀ_Àn
);

1867 
__STRING_INLINE
 *

1868 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1869 
size_t
 
__√edÀ_Àn
)

1871 
__d0
, 
__d1
, 
__d2
;

1872 *
__ªs
;

1873 
__asm__
 
__vﬁ©ûe__


1886 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1887 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1889  
__ªs
;

1890 
	}
}

1892 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1893 c⁄° *
__√edÀ
);

1894 #ifde‡
__PIC__


1896 
__STRING_INLINE
 *

1897 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1899 
__d0
, 
__d1
, 
__d2
;

1900 *
__ªs
;

1901 
__asm__
 
__vﬁ©ûe__


1920 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1921 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1922 "d" (
__√edÀ
)

1924  
__ªs
;

1925 
	}
}

1927 
__STRING_INLINE
 *

1928 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1930 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1931 *
__ªs
;

1932 
__asm__
 
__vﬁ©ûe__


1949 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1950 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1951 "b" (
__√edÀ
)

1953  
__ªs
;

1954 
	}
}

1960 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1961 #ifde‡
__i686__


1962 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1963 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1964 ? 
	`__buûtö_ffs
 (
w‹d
) \

1965 : ({ 
__˙t
, 
__tmp
; \

1966 
__asm__
 
__vﬁ©ûe__
 \

1969 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1970 : "rm" (
w‹d
), "1" (-1)); \

1971 
__˙t
 + 1; }))

	)

1973 #i‚de‡
ff¶


1974 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1979 #i‚de‡
_FORCE_INLINES


1980 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
Ë(- 
	`__°rcmp_cg
 (s2, s1,Ü2))

	)

895 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


896 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

897 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

898 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

899 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

900 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

901 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

902 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

908 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


909 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


910 #i‡
__GNUC_PREREQ
 (3, 2)

911 
	#°rc•n
(
s
, 
ªje˘
) \

912 
__exãnsi⁄__
 \

913 ({ 
__r0
, 
__r1
, 
__r2
; \

914 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

915 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

916 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

917 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

918 ? 
	`°æí
 (
s
) \

919 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

920 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

921 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

922 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

923 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

924 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

925 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

926 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

928 
	#°rc•n
(
s
, 
ªje˘
) \

929 
__exãnsi⁄__
 \

930 ({ 
__r0
, 
__r1
, 
__r2
; \

931 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

932 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

933 ? 
	`°æí
 (
s
) \

934 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

935 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

936 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

937 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

938 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

939 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

940 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

941 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

945 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

946 
__STRING_INLINE
 
size_t


947 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

949 
size_t
 
__ªsu…
 = 0;

950 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

951 ++
__ªsu…
;

952  
__ªsu…
;

953 
	}
}

955 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

956 
__ªje˘2
);

957 
__STRING_INLINE
 
size_t


958 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

960 
size_t
 
__ªsu…
 = 0;

961 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


962 && 
__s
[
__ªsu…
] !
__ªje˘2
)

963 ++
__ªsu…
;

964  
__ªsu…
;

965 
	}
}

967 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

968 
__ªje˘2
, 
__ªje˘3
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

971 
__ªje˘3
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


975 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

976 ++
__ªsu…
;

977  
__ªsu…
;

978 
	}
}

984 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


985 #i‚de‡
_HAVE_STRING_ARCH_°r•n


986 #i‡
__GNUC_PREREQ
 (3, 2)

987 
	#°r•n
(
s
, 
ac˚±
) \

988 
__exãnsi⁄__
 \

989 ({ 
__a0
, 
__a1
, 
__a2
; \

990 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

991 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

992 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

993 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

994 ? ((Ë(
s
), (
size_t
) 0) \

995 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

996 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

997 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

998 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

999 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1000 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1001 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1002 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1004 
	#°r•n
(
s
, 
ac˚±
) \

1005 
__exãnsi⁄__
 \

1006 ({ 
__a0
, 
__a1
, 
__a2
; \

1007 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1008 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1009 ? ((Ë(
s
), (
size_t
) 0) \

1010 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1011 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1012 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1013 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1014 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1015 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1016 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1017 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1021 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1022 
__STRING_INLINE
 
size_t


1023 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1025 
size_t
 
__ªsu…
 = 0;

1027 
__s
[
__ªsu…
] =
__ac˚±
)

1028 ++
__ªsu…
;

1029  
__ªsu…
;

1030 
	}
}

1032 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1033 
__ac˚±2
);

1034 
__STRING_INLINE
 
size_t


1035 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 
size_t
 
__ªsu…
 = 0;

1039 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1040 ++
__ªsu…
;

1041  
__ªsu…
;

1042 
	}
}

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1052 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1053 ++
__ªsu…
;

1054  
__ªsu…
;

1055 
	}
}

1060 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1061 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1062 #i‡
__GNUC_PREREQ
 (3, 2)

1063 
	#°Ωbrk
(
s
, 
ac˚±
) \

1064 
__exãnsi⁄__
 \

1065 ({ 
__a0
, 
__a1
, 
__a2
; \

1066 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1067 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1068 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1069 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1070 ? ((Ë(
s
), (*Ë
NULL
) \

1071 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1072 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1073 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1074 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1075 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1076 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1077 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1078 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1080 
	#°Ωbrk
(
s
, 
ac˚±
) \

1081 
__exãnsi⁄__
 \

1082 ({ 
__a0
, 
__a1
, 
__a2
; \

1083 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1084 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1085 ? ((Ë(
s
), (*Ë
NULL
) \

1086 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1087 ? 
	`°rchr
 (
s
, 
__a0
) \

1088 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1089 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1090 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1091 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1092 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1093 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1097 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1098 
__ac˚±2
);

1099 
__STRING_INLINE
 *

1100 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1103 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1104 ++
__s
;

1105  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1106 
	}
}

1108 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1109 
__ac˚±2
, 
__ac˚±3
);

1110 
__STRING_INLINE
 *

1111 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1114 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1115 && *
__s
 !
__ac˚±3
)

1116 ++
__s
;

1117  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1118 
	}
}

1124 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1125 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1126 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1127 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1128 ? (*Ë(
size_t
Ë(
hay°ack
) \

1129 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1130 ? 
	`°rchr
 (
hay°ack
, \

1131 ((c⁄° *Ë(
√edÀ
))[0]) \

1132 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1133 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1137 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1138 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1139 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1140 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1141 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1142 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1143 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1144 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1147 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1148 
__STRING_INLINE
 *

1149 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1151 *
__ªsu…
;

1152 i‡(
__s
 =
NULL
)

1153 
__s
 = *
__√xç
;

1154 *
__s
 =
__£p
)

1155 ++
__s
;

1156 
__ªsu…
 = 
NULL
;

1157 i‡(*
__s
 != '\0')

1159 
__ªsu…
 = 
__s
++;

1160 *
__s
 != '\0')

1161 i‡(*
__s
++ =
__£p
)

1163 
__s
[-1] = '\0';

1167 *
__√xç
 = 
__s
;

1168  
__ªsu…
;

1169 
	}
}

1170 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1171 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1176 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1177 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1179 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1180 
	#__°r£p
(
s
, 
ªje˘
) \

1181 
__exãnsi⁄__
 \

1182 ({ 
__r0
, 
__r1
, 
__r2
; \

1183 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1184 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1185 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1186 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1187 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1188 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1189 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1190 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1191 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1192 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1193 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1194 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1197 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1198 
__STRING_INLINE
 *

1199 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1201 *
__ªtvÆ
 = *
__s
;

1202 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1203 *(*
__s
)++ = '\0';

1204  
__ªtvÆ
;

1205 
	}
}

1207 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1208 
__STRING_INLINE
 *

1209 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1211 *
__ªtvÆ
 = *
__s
;

1212 i‡(
__ªtvÆ
 !
NULL
)

1214 *
__˝
 = 
__ªtvÆ
;

1217 i‡(*
__˝
 == '\0')

1219 
__˝
 = 
NULL
;

1222 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1224 *
__˝
++ = '\0';

1227 ++
__˝
;

1229 *
__s
 = 
__˝
;

1231  
__ªtvÆ
;

1232 
	}
}

1234 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1235 
__ªje˘3
);

1236 
__STRING_INLINE
 *

1237 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1239 *
__ªtvÆ
 = *
__s
;

1240 i‡(
__ªtvÆ
 !
NULL
)

1242 *
__˝
 = 
__ªtvÆ
;

1245 i‡(*
__˝
 == '\0')

1247 
__˝
 = 
NULL
;

1250 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1252 *
__˝
++ = '\0';

1255 ++
__˝
;

1257 *
__s
 = 
__˝
;

1259  
__ªtvÆ
;

1260 
	}
}

1261 #ifde‡
__USE_BSD


1262 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1269 #ifde‡
__USE_MISC


1271 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1272 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1273 
	~<°dlib.h
>

1276 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1278 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1279 
	#__°rdup
(
s
) \

1280 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1281 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1282 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1283 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1284 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1285 i‡(
__ªtvÆ
 !
NULL
) \

1286 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1287 
__ªtvÆ
; 
	}
})) \

1288 : 
	`__°rdup
 (
s
)))

	)

1290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1291 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1295 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1297 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1298 
__THROW
 
__©åibuã_mÆloc__
;

1299 
	#__°∫dup
(
s
, 
n
) \

1300 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1301 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1302 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1303 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1304 
size_t
 
__n
 = (
n
); \

1305 *
__ªtvÆ
; \

1306 i‡(
__n
 < 
__Àn
) \

1307 
__Àn
 = 
__n
 + 1; \

1308 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1309 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1313 
__Àn
 - 1); \

1315 
__ªtvÆ
; 
	}
})) \

1316 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1318 #ifde‡
__USE_GNU


1319 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1325 #i‚de‡
_FORCE_INLINES


1326 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

25 #i‚de‡
__˝lu•lus


29 #unde‡
mem˝y


30 #unde‡
memmove


31 #unde‡
mem£t


32 #unde‡
°rˇt


33 #unde‡
°r˝y


34 #unde‡
°∫ˇt


35 #unde‡
°∫˝y


36 #ifde‡
__USE_GNU


37 #unde‡
memp˝y


38 #unde‡
°p˝y


40 #ifde‡
__USE_BSD


41 #unde‡
bc›y


42 #unde‡
bzîo


47 
__f‹tify_fun˘i⁄
 *

48 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

54 
__f‹tify_fun˘i⁄
 *

55 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

57  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

58 
	}
}

60 #ifde‡
__USE_GNU


61 
__f‹tify_fun˘i⁄
 *

62 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

63 
size_t
 
__Àn
))

65  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

66 
	}
}

75 
__f‹tify_fun˘i⁄
 *

76 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

79 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

81 
	`__w¨n_mem£t_zîo_Àn
 ();

82  
__de°
;

84  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

85 
	}
}

87 #ifde‡
__USE_BSD


88 
__f‹tify_fun˘i⁄
 

89 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

91 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

104  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

105 
	}
}

107 #ifde‡
__USE_GNU


108 
__f‹tify_fun˘i⁄
 *

109 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

111  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

112 
	}
}

116 
__f‹tify_fun˘i⁄
 *

117 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

121 
	}
}

124 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

125 
size_t
 
__de°Àn
Ë
__THROW
;

126 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

127 
size_t
 
__n
), 
°≤˝y
);

129 
__f‹tify_fun˘i⁄
 *

130 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

132 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

134  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

135  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

136 
	}
}

139 
__f‹tify_fun˘i⁄
 *

140 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

143 
	}
}

146 
__f‹tify_fun˘i⁄
 *

147 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

148 
size_t
 
__Àn
))

150  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

151 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_BSD


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/sysctl.h

18 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/utsname.h

18 #i‚de‡
_SYS_UTSNAME_H


23 
	#_UTSNAME_LENGTH
 65

	)

28 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

40 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


41 #i‚de‡
__ENUM_IDTYPE_T


42 
	#__ENUM_IDTYPE_T
 1

	)

46 #unde‡
P_ALL


47 #unde‡
P_PID


48 #unde‡
P_PGID


52 
	mP_ALL
,

53 
	mP_PID
,

54 
	mP_PGID


55 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 
	#NL_NMAX
 
INT_MAX


	)

83 
	#NL_SETMAX
 
INT_MAX


	)

86 
	#NL_TEXTMAX
 
INT_MAX


	)

89 
	#NZERO
 20

	)

93 #ifde‡
INT_MAX


94 #i‡
INT_MAX
 == 32767

95 
	#WORD_BIT
 16

	)

97 #i‡
INT_MAX
 == 2147483647

98 
	#WORD_BIT
 32

	)

101 
	#WORD_BIT
 64

	)

104 #ñi‡
deföed
 
__INT_MAX__


105 #i‡
__INT_MAX__
 == 32767

106 
	#WORD_BIT
 16

	)

108 #i‡
__INT_MAX__
 == 2147483647

109 
	#WORD_BIT
 32

	)

112 
	#WORD_BIT
 64

	)

116 
	#WORD_BIT
 32

	)

120 #ifde‡
LONG_MAX


121 #i‡
LONG_MAX
 == 2147483647

122 
	#LONG_BIT
 32

	)

125 
	#LONG_BIT
 64

	)

127 #ñi‡
deföed
 
__LONG_MAX__


128 #i‡
__LONG_MAX__
 == 2147483647

129 
	#LONG_BIT
 32

	)

132 
	#LONG_BIT
 64

	)

135 
	~<bôs/w‹dsize.h
>

136 #i‡
__WORDSIZE
 == 64

137 
	#LONG_BIT
 64

	)

139 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/linux/sysctl.h

22 #i‚de‡
_LINUX_SYSCTL_H


23 
	#_LINUX_SYSCTL_H


	)

25 
	~<löux/kî√l.h
>

26 
	~<löux/ty≥s.h
>

29 
	gcom∂ëi⁄
;

31 
	#CTL_MAXNAME
 10

	)

36 
	s__sys˘l_¨gs
 {

37 *
	m«me
;

38 
	m∆í
;

39 *
	mﬁdvÆ
;

40 
size_t
 *
	mﬁdÀ≈
;

41 *
	m√wvÆ
;

42 
size_t
 
	m√wÀn
;

43 
	m__unu£d
[4];

52 
	mCTL_KERN
=1,

53 
	mCTL_VM
=2,

54 
	mCTL_NET
=3,

55 
	mCTL_PROC
=4,

56 
	mCTL_FS
=5,

57 
	mCTL_DEBUG
=6,

58 
	mCTL_DEV
=7,

59 
	mCTL_BUS
=8,

60 
	mCTL_ABI
=9,

61 
	mCTL_CPU
=10,

62 
	mCTL_ARLAN
=254,

63 
	mCTL_S390DBF
=5677,

64 
	mCTL_SUNRPC
=7249,

65 
	mCTL_PM
=9899,

66 
	mCTL_FRV
=9898,

72 
	mCTL_BUS_ISA
=1

78 
	mINOTIFY_MAX_USER_INSTANCES
=1,

79 
	mINOTIFY_MAX_USER_WATCHES
=2,

80 
	mINOTIFY_MAX_QUEUED_EVENTS
=3

86 
	mKERN_OSTYPE
=1,

87 
	mKERN_OSRELEASE
=2,

88 
	mKERN_OSREV
=3,

89 
	mKERN_VERSION
=4,

90 
	mKERN_SECUREMASK
=5,

91 
	mKERN_PROF
=6,

92 
	mKERN_NODENAME
=7,

93 
	mKERN_DOMAINNAME
=8,

95 
	mKERN_PANIC
=15,

96 
	mKERN_REALROOTDEV
=16,

98 
	mKERN_SPARC_REBOOT
=21,

99 
	mKERN_CTLALTDEL
=22,

100 
	mKERN_PRINTK
=23,

101 
	mKERN_NAMETRANS
=24,

102 
	mKERN_PPC_HTABRECLAIM
=25,

103 
	mKERN_PPC_ZEROPAGED
=26,

104 
	mKERN_PPC_POWERSAVE_NAP
=27,

105 
	mKERN_MODPROBE
=28,

106 
	mKERN_SG_BIG_BUFF
=29,

107 
	mKERN_ACCT
=30,

108 
	mKERN_PPC_L2CR
=31,

110 
	mKERN_RTSIGNR
=32,

111 
	mKERN_RTSIGMAX
=33,

113 
	mKERN_SHMMAX
=34,

114 
	mKERN_MSGMAX
=35,

115 
	mKERN_MSGMNB
=36,

116 
	mKERN_MSGPOOL
=37,

117 
	mKERN_SYSRQ
=38,

118 
	mKERN_MAX_THREADS
=39,

119 
	mKERN_RANDOM
=40,

120 
	mKERN_SHMALL
=41,

121 
	mKERN_MSGMNI
=42,

122 
	mKERN_SEM
=43,

123 
	mKERN_SPARC_STOP_A
=44,

124 
	mKERN_SHMMNI
=45,

125 
	mKERN_OVERFLOWUID
=46,

126 
	mKERN_OVERFLOWGID
=47,

127 
	mKERN_SHMPATH
=48,

128 
	mKERN_HOTPLUG
=49,

129 
	mKERN_IEEE_EMULATION_WARNINGS
=50,

130 
	mKERN_S390_USER_DEBUG_LOGGING
=51,

131 
	mKERN_CORE_USES_PID
=52,

132 
	mKERN_TAINTED
=53,

133 
	mKERN_CADPID
=54,

134 
	mKERN_PIDMAX
=55,

135 
	mKERN_CORE_PATTERN
=56,

136 
	mKERN_PANIC_ON_OOPS
=57,

137 
	mKERN_HPPA_PWRSW
=58,

138 
	mKERN_HPPA_UNALIGNED
=59,

139 
	mKERN_PRINTK_RATELIMIT
=60,

140 
	mKERN_PRINTK_RATELIMIT_BURST
=61,

141 
	mKERN_PTY
=62,

142 
	mKERN_NGROUPS_MAX
=63,

143 
	mKERN_SPARC_SCONS_PWROFF
=64,

144 
	mKERN_HZ_TIMER
=65,

145 
	mKERN_UNKNOWN_NMI_PANIC
=66,

146 
	mKERN_BOOTLOADER_TYPE
=67,

147 
	mKERN_RANDOMIZE
=68,

148 
	mKERN_SETUID_DUMPABLE
=69,

149 
	mKERN_SPIN_RETRY
=70,

150 
	mKERN_ACPI_VIDEO_FLAGS
=71,

151 
	mKERN_IA64_UNALIGNED
=72,

152 
	mKERN_COMPAT_LOG
=73,

153 
	mKERN_MAX_LOCK_DEPTH
=74,

154 
	mKERN_NMI_WATCHDOG
=75,

155 
	mKERN_PANIC_ON_NMI
=76,

163 
	mVM_UNUSED1
=1,

164 
	mVM_UNUSED2
=2,

165 
	mVM_UNUSED3
=3,

166 
	mVM_UNUSED4
=4,

167 
	mVM_OVERCOMMIT_MEMORY
=5,

168 
	mVM_UNUSED5
=6,

169 
	mVM_UNUSED7
=7,

170 
	mVM_UNUSED8
=8,

171 
	mVM_UNUSED9
=9,

172 
	mVM_PAGE_CLUSTER
=10,

173 
	mVM_DIRTY_BACKGROUND
=11,

174 
	mVM_DIRTY_RATIO
=12,

175 
	mVM_DIRTY_WB_CS
=13,

176 
	mVM_DIRTY_EXPIRE_CS
=14,

177 
	mVM_NR_PDFLUSH_THREADS
=15,

178 
	mVM_OVERCOMMIT_RATIO
=16,

179 
	mVM_PAGEBUF
=17,

180 
	mVM_HUGETLB_PAGES
=18,

181 
	mVM_SWAPPINESS
=19,

182 
	mVM_LOWMEM_RESERVE_RATIO
=20,

183 
	mVM_MIN_FREE_KBYTES
=21,

184 
	mVM_MAX_MAP_COUNT
=22,

185 
	mVM_LAPTOP_MODE
=23,

186 
	mVM_BLOCK_DUMP
=24,

187 
	mVM_HUGETLB_GROUP
=25,

188 
	mVM_VFS_CACHE_PRESSURE
=26,

189 
	mVM_LEGACY_VA_LAYOUT
=27,

190 
	mVM_SWAP_TOKEN_TIMEOUT
=28,

191 
	mVM_DROP_PAGECACHE
=29,

192 
	mVM_PERCPU_PAGELIST_FRACTION
=30,

193 
	mVM_ZONE_RECLAIM_MODE
=31,

194 
	mVM_MIN_UNMAPPED
=32,

195 
	mVM_PANIC_ON_OOM
=33,

196 
	mVM_VDSO_ENABLED
=34,

197 
	mVM_MIN_SLAB
=35,

204 
	mNET_CORE
=1,

205 
	mNET_ETHER
=2,

206 
	mNET_802
=3,

207 
	mNET_UNIX
=4,

208 
	mNET_IPV4
=5,

209 
	mNET_IPX
=6,

210 
	mNET_ATALK
=7,

211 
	mNET_NETROM
=8,

212 
	mNET_AX25
=9,

213 
	mNET_BRIDGE
=10,

214 
	mNET_ROSE
=11,

215 
	mNET_IPV6
=12,

216 
	mNET_X25
=13,

217 
	mNET_TR
=14,

218 
	mNET_DECNET
=15,

219 
	mNET_ECONET
=16,

220 
	mNET_SCTP
=17,

221 
	mNET_LLC
=18,

222 
	mNET_NETFILTER
=19,

223 
	mNET_DCCP
=20,

224 
	mNET_IRDA
=412,

230 
	mRANDOM_POOLSIZE
=1,

231 
	mRANDOM_ENTROPY_COUNT
=2,

232 
	mRANDOM_READ_THRESH
=3,

233 
	mRANDOM_WRITE_THRESH
=4,

234 
	mRANDOM_BOOT_ID
=5,

235 
	mRANDOM_UUID
=6

241 
	mPTY_MAX
=1,

242 
	mPTY_NR
=2

248 
	mBUS_ISA_MEM_BASE
=1,

249 
	mBUS_ISA_PORT_BASE
=2,

250 
	mBUS_ISA_PORT_SHIFT
=3

256 
	mNET_CORE_WMEM_MAX
=1,

257 
	mNET_CORE_RMEM_MAX
=2,

258 
	mNET_CORE_WMEM_DEFAULT
=3,

259 
	mNET_CORE_RMEM_DEFAULT
=4,

261 
	mNET_CORE_MAX_BACKLOG
=6,

262 
	mNET_CORE_FASTROUTE
=7,

263 
	mNET_CORE_MSG_COST
=8,

264 
	mNET_CORE_MSG_BURST
=9,

265 
	mNET_CORE_OPTMEM_MAX
=10,

266 
	mNET_CORE_HOT_LIST_LENGTH
=11,

267 
	mNET_CORE_DIVERT_VERSION
=12,

268 
	mNET_CORE_NO_CONG_THRESH
=13,

269 
	mNET_CORE_NO_CONG
=14,

270 
	mNET_CORE_LO_CONG
=15,

271 
	mNET_CORE_MOD_CONG
=16,

272 
	mNET_CORE_DEV_WEIGHT
=17,

273 
	mNET_CORE_SOMAXCONN
=18,

274 
	mNET_CORE_BUDGET
=19,

275 
	mNET_CORE_AEVENT_ETIME
=20,

276 
	mNET_CORE_AEVENT_RSEQTH
=21,

277 
	mNET_CORE_WARNINGS
=22,

288 
	mNET_UNIX_DESTROY_DELAY
=1,

289 
	mNET_UNIX_DELETE_DELAY
=2,

290 
	mNET_UNIX_MAX_DGRAM_QLEN
=3,

296 
	mNET_NF_CONNTRACK_MAX
=1,

297 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_SYN_SENT
=2,

298 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_SYN_RECV
=3,

299 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_ESTABLISHED
=4,

300 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_FIN_WAIT
=5,

301 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_CLOSE_WAIT
=6,

302 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_LAST_ACK
=7,

303 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_TIME_WAIT
=8,

304 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_CLOSE
=9,

305 
	mNET_NF_CONNTRACK_UDP_TIMEOUT
=10,

306 
	mNET_NF_CONNTRACK_UDP_TIMEOUT_STREAM
=11,

307 
	mNET_NF_CONNTRACK_ICMP_TIMEOUT
=12,

308 
	mNET_NF_CONNTRACK_GENERIC_TIMEOUT
=13,

309 
	mNET_NF_CONNTRACK_BUCKETS
=14,

310 
	mNET_NF_CONNTRACK_LOG_INVALID
=15,

311 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_MAX_RETRANS
=16,

312 
	mNET_NF_CONNTRACK_TCP_LOOSE
=17,

313 
	mNET_NF_CONNTRACK_TCP_BE_LIBERAL
=18,

314 
	mNET_NF_CONNTRACK_TCP_MAX_RETRANS
=19,

315 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_CLOSED
=20,

316 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_WAIT
=21,

317 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_ECHOED
=22,

318 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_ESTABLISHED
=23,

319 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_SENT
=24,

320 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_RECD
=25,

321 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_ACK_SENT
=26,

322 
	mNET_NF_CONNTRACK_COUNT
=27,

323 
	mNET_NF_CONNTRACK_ICMPV6_TIMEOUT
=28,

324 
	mNET_NF_CONNTRACK_FRAG6_TIMEOUT
=29,

325 
	mNET_NF_CONNTRACK_FRAG6_LOW_THRESH
=30,

326 
	mNET_NF_CONNTRACK_FRAG6_HIGH_THRESH
=31,

327 
	mNET_NF_CONNTRACK_CHECKSUM
=32,

334 
	mNET_IPV4_FORWARD
=8,

335 
	mNET_IPV4_DYNADDR
=9,

337 
	mNET_IPV4_CONF
=16,

338 
	mNET_IPV4_NEIGH
=17,

339 
	mNET_IPV4_ROUTE
=18,

340 
	mNET_IPV4_FIB_HASH
=19,

341 
	mNET_IPV4_NETFILTER
=20,

343 
	mNET_IPV4_TCP_TIMESTAMPS
=33,

344 
	mNET_IPV4_TCP_WINDOW_SCALING
=34,

345 
	mNET_IPV4_TCP_SACK
=35,

346 
	mNET_IPV4_TCP_RETRANS_COLLAPSE
=36,

347 
	mNET_IPV4_DEFAULT_TTL
=37,

348 
	mNET_IPV4_AUTOCONFIG
=38,

349 
	mNET_IPV4_NO_PMTU_DISC
=39,

350 
	mNET_IPV4_TCP_SYN_RETRIES
=40,

351 
	mNET_IPV4_IPFRAG_HIGH_THRESH
=41,

352 
	mNET_IPV4_IPFRAG_LOW_THRESH
=42,

353 
	mNET_IPV4_IPFRAG_TIME
=43,

354 
	mNET_IPV4_TCP_MAX_KA_PROBES
=44,

355 
	mNET_IPV4_TCP_KEEPALIVE_TIME
=45,

356 
	mNET_IPV4_TCP_KEEPALIVE_PROBES
=46,

357 
	mNET_IPV4_TCP_RETRIES1
=47,

358 
	mNET_IPV4_TCP_RETRIES2
=48,

359 
	mNET_IPV4_TCP_FIN_TIMEOUT
=49,

360 
	mNET_IPV4_IP_MASQ_DEBUG
=50,

361 
	mNET_TCP_SYNCOOKIES
=51,

362 
	mNET_TCP_STDURG
=52,

363 
	mNET_TCP_RFC1337
=53,

364 
	mNET_TCP_SYN_TAILDROP
=54,

365 
	mNET_TCP_MAX_SYN_BACKLOG
=55,

366 
	mNET_IPV4_LOCAL_PORT_RANGE
=56,

367 
	mNET_IPV4_ICMP_ECHO_IGNORE_ALL
=57,

368 
	mNET_IPV4_ICMP_ECHO_IGNORE_BROADCASTS
=58,

369 
	mNET_IPV4_ICMP_SOURCEQUENCH_RATE
=59,

370 
	mNET_IPV4_ICMP_DESTUNREACH_RATE
=60,

371 
	mNET_IPV4_ICMP_TIMEEXCEED_RATE
=61,

372 
	mNET_IPV4_ICMP_PARAMPROB_RATE
=62,

373 
	mNET_IPV4_ICMP_ECHOREPLY_RATE
=63,

374 
	mNET_IPV4_ICMP_IGNORE_BOGUS_ERROR_RESPONSES
=64,

375 
	mNET_IPV4_IGMP_MAX_MEMBERSHIPS
=65,

376 
	mNET_TCP_TW_RECYCLE
=66,

377 
	mNET_IPV4_ALWAYS_DEFRAG
=67,

378 
	mNET_IPV4_TCP_KEEPALIVE_INTVL
=68,

379 
	mNET_IPV4_INET_PEER_THRESHOLD
=69,

380 
	mNET_IPV4_INET_PEER_MINTTL
=70,

381 
	mNET_IPV4_INET_PEER_MAXTTL
=71,

382 
	mNET_IPV4_INET_PEER_GC_MINTIME
=72,

383 
	mNET_IPV4_INET_PEER_GC_MAXTIME
=73,

384 
	mNET_TCP_ORPHAN_RETRIES
=74,

385 
	mNET_TCP_ABORT_ON_OVERFLOW
=75,

386 
	mNET_TCP_SYNACK_RETRIES
=76,

387 
	mNET_TCP_MAX_ORPHANS
=77,

388 
	mNET_TCP_MAX_TW_BUCKETS
=78,

389 
	mNET_TCP_FACK
=79,

390 
	mNET_TCP_REORDERING
=80,

391 
	mNET_TCP_ECN
=81,

392 
	mNET_TCP_DSACK
=82,

393 
	mNET_TCP_MEM
=83,

394 
	mNET_TCP_WMEM
=84,

395 
	mNET_TCP_RMEM
=85,

396 
	mNET_TCP_APP_WIN
=86,

397 
	mNET_TCP_ADV_WIN_SCALE
=87,

398 
	mNET_IPV4_NONLOCAL_BIND
=88,

399 
	mNET_IPV4_ICMP_RATELIMIT
=89,

400 
	mNET_IPV4_ICMP_RATEMASK
=90,

401 
	mNET_TCP_TW_REUSE
=91,

402 
	mNET_TCP_FRTO
=92,

403 
	mNET_TCP_LOW_LATENCY
=93,

404 
	mNET_IPV4_IPFRAG_SECRET_INTERVAL
=94,

405 
	mNET_IPV4_IGMP_MAX_MSF
=96,

406 
	mNET_TCP_NO_METRICS_SAVE
=97,

407 
	mNET_TCP_DEFAULT_WIN_SCALE
=105,

408 
	mNET_TCP_MODERATE_RCVBUF
=106,

409 
	mNET_TCP_TSO_WIN_DIVISOR
=107,

410 
	mNET_TCP_BIC_BETA
=108,

411 
	mNET_IPV4_ICMP_ERRORS_USE_INBOUND_IFADDR
=109,

412 
	mNET_TCP_CONG_CONTROL
=110,

413 
	mNET_TCP_ABC
=111,

414 
	mNET_IPV4_IPFRAG_MAX_DIST
=112,

415 
	mNET_TCP_MTU_PROBING
=113,

416 
	mNET_TCP_BASE_MSS
=114,

417 
	mNET_IPV4_TCP_WORKAROUND_SIGNED_WINDOWS
=115,

418 
	mNET_TCP_DMA_COPYBREAK
=116,

419 
	mNET_TCP_SLOW_START_AFTER_IDLE
=117,

420 
	mNET_CIPSOV4_CACHE_ENABLE
=118,

421 
	mNET_CIPSOV4_CACHE_BUCKET_SIZE
=119,

422 
	mNET_CIPSOV4_RBM_OPTFMT
=120,

423 
	mNET_CIPSOV4_RBM_STRICTVALID
=121,

424 
	mNET_TCP_AVAIL_CONG_CONTROL
=122,

425 
	mNET_TCP_ALLOWED_CONG_CONTROL
=123,

426 
	mNET_TCP_MAX_SSTHRESH
=124,

427 
	mNET_TCP_FRTO_RESPONSE
=125,

431 
	mNET_IPV4_ROUTE_FLUSH
=1,

432 
	mNET_IPV4_ROUTE_MIN_DELAY
=2,

433 
	mNET_IPV4_ROUTE_MAX_DELAY
=3,

434 
	mNET_IPV4_ROUTE_GC_THRESH
=4,

435 
	mNET_IPV4_ROUTE_MAX_SIZE
=5,

436 
	mNET_IPV4_ROUTE_GC_MIN_INTERVAL
=6,

437 
	mNET_IPV4_ROUTE_GC_TIMEOUT
=7,

438 
	mNET_IPV4_ROUTE_GC_INTERVAL
=8,

439 
	mNET_IPV4_ROUTE_REDIRECT_LOAD
=9,

440 
	mNET_IPV4_ROUTE_REDIRECT_NUMBER
=10,

441 
	mNET_IPV4_ROUTE_REDIRECT_SILENCE
=11,

442 
	mNET_IPV4_ROUTE_ERROR_COST
=12,

443 
	mNET_IPV4_ROUTE_ERROR_BURST
=13,

444 
	mNET_IPV4_ROUTE_GC_ELASTICITY
=14,

445 
	mNET_IPV4_ROUTE_MTU_EXPIRES
=15,

446 
	mNET_IPV4_ROUTE_MIN_PMTU
=16,

447 
	mNET_IPV4_ROUTE_MIN_ADVMSS
=17,

448 
	mNET_IPV4_ROUTE_SECRET_INTERVAL
=18,

449 
	mNET_IPV4_ROUTE_GC_MIN_INTERVAL_MS
=19,

454 
	mNET_PROTO_CONF_ALL
=-2,

455 
	mNET_PROTO_CONF_DEFAULT
=-3

462 
	mNET_IPV4_CONF_FORWARDING
=1,

463 
	mNET_IPV4_CONF_MC_FORWARDING
=2,

464 
	mNET_IPV4_CONF_PROXY_ARP
=3,

465 
	mNET_IPV4_CONF_ACCEPT_REDIRECTS
=4,

466 
	mNET_IPV4_CONF_SECURE_REDIRECTS
=5,

467 
	mNET_IPV4_CONF_SEND_REDIRECTS
=6,

468 
	mNET_IPV4_CONF_SHARED_MEDIA
=7,

469 
	mNET_IPV4_CONF_RP_FILTER
=8,

470 
	mNET_IPV4_CONF_ACCEPT_SOURCE_ROUTE
=9,

471 
	mNET_IPV4_CONF_BOOTP_RELAY
=10,

472 
	mNET_IPV4_CONF_LOG_MARTIANS
=11,

473 
	mNET_IPV4_CONF_TAG
=12,

474 
	mNET_IPV4_CONF_ARPFILTER
=13,

475 
	mNET_IPV4_CONF_MEDIUM_ID
=14,

476 
	mNET_IPV4_CONF_NOXFRM
=15,

477 
	mNET_IPV4_CONF_NOPOLICY
=16,

478 
	mNET_IPV4_CONF_FORCE_IGMP_VERSION
=17,

479 
	mNET_IPV4_CONF_ARP_ANNOUNCE
=18,

480 
	mNET_IPV4_CONF_ARP_IGNORE
=19,

481 
	mNET_IPV4_CONF_PROMOTE_SECONDARIES
=20,

482 
	mNET_IPV4_CONF_ARP_ACCEPT
=21,

483 
	mNET_IPV4_CONF_ARP_NOTIFY
=22,

489 
	mNET_IPV4_NF_CONNTRACK_MAX
=1,

490 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_SYN_SENT
=2,

491 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_SYN_RECV
=3,

492 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_ESTABLISHED
=4,

493 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_FIN_WAIT
=5,

494 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_CLOSE_WAIT
=6,

495 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_LAST_ACK
=7,

496 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_TIME_WAIT
=8,

497 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_CLOSE
=9,

498 
	mNET_IPV4_NF_CONNTRACK_UDP_TIMEOUT
=10,

499 
	mNET_IPV4_NF_CONNTRACK_UDP_TIMEOUT_STREAM
=11,

500 
	mNET_IPV4_NF_CONNTRACK_ICMP_TIMEOUT
=12,

501 
	mNET_IPV4_NF_CONNTRACK_GENERIC_TIMEOUT
=13,

502 
	mNET_IPV4_NF_CONNTRACK_BUCKETS
=14,

503 
	mNET_IPV4_NF_CONNTRACK_LOG_INVALID
=15,

504 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_MAX_RETRANS
=16,

505 
	mNET_IPV4_NF_CONNTRACK_TCP_LOOSE
=17,

506 
	mNET_IPV4_NF_CONNTRACK_TCP_BE_LIBERAL
=18,

507 
	mNET_IPV4_NF_CONNTRACK_TCP_MAX_RETRANS
=19,

508 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_CLOSED
=20,

509 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_WAIT
=21,

510 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_ECHOED
=22,

511 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_ESTABLISHED
=23,

512 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_SENT
=24,

513 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_RECD
=25,

514 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_ACK_SENT
=26,

515 
	mNET_IPV4_NF_CONNTRACK_COUNT
=27,

516 
	mNET_IPV4_NF_CONNTRACK_CHECKSUM
=28,

521 
	mNET_IPV6_CONF
=16,

522 
	mNET_IPV6_NEIGH
=17,

523 
	mNET_IPV6_ROUTE
=18,

524 
	mNET_IPV6_ICMP
=19,

525 
	mNET_IPV6_BINDV6ONLY
=20,

526 
	mNET_IPV6_IP6FRAG_HIGH_THRESH
=21,

527 
	mNET_IPV6_IP6FRAG_LOW_THRESH
=22,

528 
	mNET_IPV6_IP6FRAG_TIME
=23,

529 
	mNET_IPV6_IP6FRAG_SECRET_INTERVAL
=24,

530 
	mNET_IPV6_MLD_MAX_MSF
=25,

534 
	mNET_IPV6_ROUTE_FLUSH
=1,

535 
	mNET_IPV6_ROUTE_GC_THRESH
=2,

536 
	mNET_IPV6_ROUTE_MAX_SIZE
=3,

537 
	mNET_IPV6_ROUTE_GC_MIN_INTERVAL
=4,

538 
	mNET_IPV6_ROUTE_GC_TIMEOUT
=5,

539 
	mNET_IPV6_ROUTE_GC_INTERVAL
=6,

540 
	mNET_IPV6_ROUTE_GC_ELASTICITY
=7,

541 
	mNET_IPV6_ROUTE_MTU_EXPIRES
=8,

542 
	mNET_IPV6_ROUTE_MIN_ADVMSS
=9,

543 
	mNET_IPV6_ROUTE_GC_MIN_INTERVAL_MS
=10

547 
	mNET_IPV6_FORWARDING
=1,

548 
	mNET_IPV6_HOP_LIMIT
=2,

549 
	mNET_IPV6_MTU
=3,

550 
	mNET_IPV6_ACCEPT_RA
=4,

551 
	mNET_IPV6_ACCEPT_REDIRECTS
=5,

552 
	mNET_IPV6_AUTOCONF
=6,

553 
	mNET_IPV6_DAD_TRANSMITS
=7,

554 
	mNET_IPV6_RTR_SOLICITS
=8,

555 
	mNET_IPV6_RTR_SOLICIT_INTERVAL
=9,

556 
	mNET_IPV6_RTR_SOLICIT_DELAY
=10,

557 
	mNET_IPV6_USE_TEMPADDR
=11,

558 
	mNET_IPV6_TEMP_VALID_LFT
=12,

559 
	mNET_IPV6_TEMP_PREFERED_LFT
=13,

560 
	mNET_IPV6_REGEN_MAX_RETRY
=14,

561 
	mNET_IPV6_MAX_DESYNC_FACTOR
=15,

562 
	mNET_IPV6_MAX_ADDRESSES
=16,

563 
	mNET_IPV6_FORCE_MLD_VERSION
=17,

564 
	mNET_IPV6_ACCEPT_RA_DEFRTR
=18,

565 
	mNET_IPV6_ACCEPT_RA_PINFO
=19,

566 
	mNET_IPV6_ACCEPT_RA_RTR_PREF
=20,

567 
	mNET_IPV6_RTR_PROBE_INTERVAL
=21,

568 
	mNET_IPV6_ACCEPT_RA_RT_INFO_MAX_PLEN
=22,

569 
	mNET_IPV6_PROXY_NDP
=23,

570 
	mNET_IPV6_ACCEPT_SOURCE_ROUTE
=25,

571 
	m__NET_IPV6_MAX


576 
	mNET_IPV6_ICMP_RATELIMIT
=1

581 
	mNET_NEIGH_MCAST_SOLICIT
=1,

582 
	mNET_NEIGH_UCAST_SOLICIT
=2,

583 
	mNET_NEIGH_APP_SOLICIT
=3,

584 
	mNET_NEIGH_RETRANS_TIME
=4,

585 
	mNET_NEIGH_REACHABLE_TIME
=5,

586 
	mNET_NEIGH_DELAY_PROBE_TIME
=6,

587 
	mNET_NEIGH_GC_STALE_TIME
=7,

588 
	mNET_NEIGH_UNRES_QLEN
=8,

589 
	mNET_NEIGH_PROXY_QLEN
=9,

590 
	mNET_NEIGH_ANYCAST_DELAY
=10,

591 
	mNET_NEIGH_PROXY_DELAY
=11,

592 
	mNET_NEIGH_LOCKTIME
=12,

593 
	mNET_NEIGH_GC_INTERVAL
=13,

594 
	mNET_NEIGH_GC_THRESH1
=14,

595 
	mNET_NEIGH_GC_THRESH2
=15,

596 
	mNET_NEIGH_GC_THRESH3
=16,

597 
	mNET_NEIGH_RETRANS_TIME_MS
=17,

598 
	mNET_NEIGH_REACHABLE_TIME_MS
=18,

603 
	mNET_DCCP_DEFAULT
=1,

608 
	mNET_IPX_PPROP_BROADCASTING
=1,

609 
	mNET_IPX_FORWARDING
=2

614 
	mNET_LLC2
=1,

615 
	mNET_LLC_STATION
=2,

620 
	mNET_LLC2_TIMEOUT
=1,

625 
	mNET_LLC_STATION_ACK_TIMEOUT
=1,

630 
	mNET_LLC2_ACK_TIMEOUT
=1,

631 
	mNET_LLC2_P_TIMEOUT
=2,

632 
	mNET_LLC2_REJ_TIMEOUT
=3,

633 
	mNET_LLC2_BUSY_TIMEOUT
=4,

638 
	mNET_ATALK_AARP_EXPIRY_TIME
=1,

639 
	mNET_ATALK_AARP_TICK_TIME
=2,

640 
	mNET_ATALK_AARP_RETRANSMIT_LIMIT
=3,

641 
	mNET_ATALK_AARP_RESOLVE_TIME
=4

647 
	mNET_NETROM_DEFAULT_PATH_QUALITY
=1,

648 
	mNET_NETROM_OBSOLESCENCE_COUNT_INITIALISER
=2,

649 
	mNET_NETROM_NETWORK_TTL_INITIALISER
=3,

650 
	mNET_NETROM_TRANSPORT_TIMEOUT
=4,

651 
	mNET_NETROM_TRANSPORT_MAXIMUM_TRIES
=5,

652 
	mNET_NETROM_TRANSPORT_ACKNOWLEDGE_DELAY
=6,

653 
	mNET_NETROM_TRANSPORT_BUSY_DELAY
=7,

654 
	mNET_NETROM_TRANSPORT_REQUESTED_WINDOW_SIZE
=8,

655 
	mNET_NETROM_TRANSPORT_NO_ACTIVITY_TIMEOUT
=9,

656 
	mNET_NETROM_ROUTING_CONTROL
=10,

657 
	mNET_NETROM_LINK_FAILS_COUNT
=11,

658 
	mNET_NETROM_RESET
=12

663 
	mNET_AX25_IP_DEFAULT_MODE
=1,

664 
	mNET_AX25_DEFAULT_MODE
=2,

665 
	mNET_AX25_BACKOFF_TYPE
=3,

666 
	mNET_AX25_CONNECT_MODE
=4,

667 
	mNET_AX25_STANDARD_WINDOW
=5,

668 
	mNET_AX25_EXTENDED_WINDOW
=6,

669 
	mNET_AX25_T1_TIMEOUT
=7,

670 
	mNET_AX25_T2_TIMEOUT
=8,

671 
	mNET_AX25_T3_TIMEOUT
=9,

672 
	mNET_AX25_IDLE_TIMEOUT
=10,

673 
	mNET_AX25_N2
=11,

674 
	mNET_AX25_PACLEN
=12,

675 
	mNET_AX25_PROTOCOL
=13,

676 
	mNET_AX25_DAMA_SLAVE_TIMEOUT
=14

681 
	mNET_ROSE_RESTART_REQUEST_TIMEOUT
=1,

682 
	mNET_ROSE_CALL_REQUEST_TIMEOUT
=2,

683 
	mNET_ROSE_RESET_REQUEST_TIMEOUT
=3,

684 
	mNET_ROSE_CLEAR_REQUEST_TIMEOUT
=4,

685 
	mNET_ROSE_ACK_HOLD_BACK_TIMEOUT
=5,

686 
	mNET_ROSE_ROUTING_CONTROL
=6,

687 
	mNET_ROSE_LINK_FAIL_TIMEOUT
=7,

688 
	mNET_ROSE_MAX_VCS
=8,

689 
	mNET_ROSE_WINDOW_SIZE
=9,

690 
	mNET_ROSE_NO_ACTIVITY_TIMEOUT
=10

695 
	mNET_X25_RESTART_REQUEST_TIMEOUT
=1,

696 
	mNET_X25_CALL_REQUEST_TIMEOUT
=2,

697 
	mNET_X25_RESET_REQUEST_TIMEOUT
=3,

698 
	mNET_X25_CLEAR_REQUEST_TIMEOUT
=4,

699 
	mNET_X25_ACK_HOLD_BACK_TIMEOUT
=5,

700 
	mNET_X25_FORWARD
=6

706 
	mNET_TR_RIF_TIMEOUT
=1

711 
	mNET_DECNET_NODE_TYPE
 = 1,

712 
	mNET_DECNET_NODE_ADDRESS
 = 2,

713 
	mNET_DECNET_NODE_NAME
 = 3,

714 
	mNET_DECNET_DEFAULT_DEVICE
 = 4,

715 
	mNET_DECNET_TIME_WAIT
 = 5,

716 
	mNET_DECNET_DN_COUNT
 = 6,

717 
	mNET_DECNET_DI_COUNT
 = 7,

718 
	mNET_DECNET_DR_COUNT
 = 8,

719 
	mNET_DECNET_DST_GC_INTERVAL
 = 9,

720 
	mNET_DECNET_CONF
 = 10,

721 
	mNET_DECNET_NO_FC_MAX_CWND
 = 11,

722 
	mNET_DECNET_MEM
 = 12,

723 
	mNET_DECNET_RMEM
 = 13,

724 
	mNET_DECNET_WMEM
 = 14,

725 
	mNET_DECNET_DEBUG_LEVEL
 = 255

730 
	mNET_DECNET_CONF_LOOPBACK
 = -2,

731 
	mNET_DECNET_CONF_DDCMP
 = -3,

732 
	mNET_DECNET_CONF_PPP
 = -4,

733 
	mNET_DECNET_CONF_X25
 = -5,

734 
	mNET_DECNET_CONF_GRE
 = -6,

735 
	mNET_DECNET_CONF_ETHER
 = -7

742 
	mNET_DECNET_CONF_DEV_PRIORITY
 = 1,

743 
	mNET_DECNET_CONF_DEV_T1
 = 2,

744 
	mNET_DECNET_CONF_DEV_T2
 = 3,

745 
	mNET_DECNET_CONF_DEV_T3
 = 4,

746 
	mNET_DECNET_CONF_DEV_FORWARDING
 = 5,

747 
	mNET_DECNET_CONF_DEV_BLKSIZE
 = 6,

748 
	mNET_DECNET_CONF_DEV_STATE
 = 7

753 
	mNET_SCTP_RTO_INITIAL
 = 1,

754 
	mNET_SCTP_RTO_MIN
 = 2,

755 
	mNET_SCTP_RTO_MAX
 = 3,

756 
	mNET_SCTP_RTO_ALPHA
 = 4,

757 
	mNET_SCTP_RTO_BETA
 = 5,

758 
	mNET_SCTP_VALID_COOKIE_LIFE
 = 6,

759 
	mNET_SCTP_ASSOCIATION_MAX_RETRANS
 = 7,

760 
	mNET_SCTP_PATH_MAX_RETRANS
 = 8,

761 
	mNET_SCTP_MAX_INIT_RETRANSMITS
 = 9,

762 
	mNET_SCTP_HB_INTERVAL
 = 10,

763 
	mNET_SCTP_PRESERVE_ENABLE
 = 11,

764 
	mNET_SCTP_MAX_BURST
 = 12,

765 
	mNET_SCTP_ADDIP_ENABLE
 = 13,

766 
	mNET_SCTP_PRSCTP_ENABLE
 = 14,

767 
	mNET_SCTP_SNDBUF_POLICY
 = 15,

768 
	mNET_SCTP_SACK_TIMEOUT
 = 16,

769 
	mNET_SCTP_RCVBUF_POLICY
 = 17,

774 
	mNET_BRIDGE_NF_CALL_ARPTABLES
 = 1,

775 
	mNET_BRIDGE_NF_CALL_IPTABLES
 = 2,

776 
	mNET_BRIDGE_NF_CALL_IP6TABLES
 = 3,

777 
	mNET_BRIDGE_NF_FILTER_VLAN_TAGGED
 = 4,

778 
	mNET_BRIDGE_NF_FILTER_PPPOE_TAGGED
 = 5,

783 
	mNET_IRDA_DISCOVERY
=1,

784 
	mNET_IRDA_DEVNAME
=2,

785 
	mNET_IRDA_DEBUG
=3,

786 
	mNET_IRDA_FAST_POLL
=4,

787 
	mNET_IRDA_DISCOVERY_SLOTS
=5,

788 
	mNET_IRDA_DISCOVERY_TIMEOUT
=6,

789 
	mNET_IRDA_SLOT_TIMEOUT
=7,

790 
	mNET_IRDA_MAX_BAUD_RATE
=8,

791 
	mNET_IRDA_MIN_TX_TURN_TIME
=9,

792 
	mNET_IRDA_MAX_TX_DATA_SIZE
=10,

793 
	mNET_IRDA_MAX_TX_WINDOW
=11,

794 
	mNET_IRDA_MAX_NOREPLY_TIME
=12,

795 
	mNET_IRDA_WARN_NOREPLY_TIME
=13,

796 
	mNET_IRDA_LAP_KEEPALIVE_TIME
=14,

803 
	mFS_NRINODE
=1,

804 
	mFS_STATINODE
=2,

805 
	mFS_MAXINODE
=3,

806 
	mFS_NRDQUOT
=4,

807 
	mFS_MAXDQUOT
=5,

808 
	mFS_NRFILE
=6,

809 
	mFS_MAXFILE
=7,

810 
	mFS_DENTRY
=8,

811 
	mFS_NRSUPER
=9,

812 
	mFS_MAXSUPER
=10,

813 
	mFS_OVERFLOWUID
=11,

814 
	mFS_OVERFLOWGID
=12,

815 
	mFS_LEASES
=13,

816 
	mFS_DIR_NOTIFY
=14,

817 
	mFS_LEASE_TIME
=15,

818 
	mFS_DQSTATS
=16,

819 
	mFS_XFS
=17,

820 
	mFS_AIO_NR
=18,

821 
	mFS_AIO_MAX_NR
=19,

822 
	mFS_INOTIFY
=20,

823 
	mFS_OCFS2
=988,

828 
	mFS_DQ_LOOKUPS
 = 1,

829 
	mFS_DQ_DROPS
 = 2,

830 
	mFS_DQ_READS
 = 3,

831 
	mFS_DQ_WRITES
 = 4,

832 
	mFS_DQ_CACHE_HITS
 = 5,

833 
	mFS_DQ_ALLOCATED
 = 6,

834 
	mFS_DQ_FREE
 = 7,

835 
	mFS_DQ_SYNCS
 = 8,

836 
	mFS_DQ_WARNINGS
 = 9,

843 
	mDEV_CDROM
=1,

844 
	mDEV_HWMON
=2,

845 
	mDEV_PARPORT
=3,

846 
	mDEV_RAID
=4,

847 
	mDEV_MAC_HID
=5,

848 
	mDEV_SCSI
=6,

849 
	mDEV_IPMI
=7,

854 
	mDEV_CDROM_INFO
=1,

855 
	mDEV_CDROM_AUTOCLOSE
=2,

856 
	mDEV_CDROM_AUTOEJECT
=3,

857 
	mDEV_CDROM_DEBUG
=4,

858 
	mDEV_CDROM_LOCK
=5,

859 
	mDEV_CDROM_CHECK_MEDIA
=6

864 
	mDEV_PARPORT_DEFAULT
=-3

869 
	mDEV_RAID_SPEED_LIMIT_MIN
=1,

870 
	mDEV_RAID_SPEED_LIMIT_MAX
=2

875 
	mDEV_PARPORT_DEFAULT_TIMESLICE
=1,

876 
	mDEV_PARPORT_DEFAULT_SPINTIME
=2

881 
	mDEV_PARPORT_SPINTIME
=1,

882 
	mDEV_PARPORT_BASE_ADDR
=2,

883 
	mDEV_PARPORT_IRQ
=3,

884 
	mDEV_PARPORT_DMA
=4,

885 
	mDEV_PARPORT_MODES
=5,

886 
	mDEV_PARPORT_DEVICES
=6,

887 
	mDEV_PARPORT_AUTOPROBE
=16

892 
	mDEV_PARPORT_DEVICES_ACTIVE
=-3,

897 
	mDEV_PARPORT_DEVICE_TIMESLICE
=1,

902 
	mDEV_MAC_HID_KEYBOARD_SENDS_LINUX_KEYCODES
=1,

903 
	mDEV_MAC_HID_KEYBOARD_LOCK_KEYCODES
=2,

904 
	mDEV_MAC_HID_MOUSE_BUTTON_EMULATION
=3,

905 
	mDEV_MAC_HID_MOUSE_BUTTON2_KEYCODE
=4,

906 
	mDEV_MAC_HID_MOUSE_BUTTON3_KEYCODE
=5,

907 
	mDEV_MAC_HID_ADB_MOUSE_SENDS_KEYCODES
=6

912 
	mDEV_SCSI_LOGGING_LEVEL
=1,

917 
	mDEV_IPMI_POWEROFF_POWERCYCLE
=1,

923 
	mABI_DEFHANDLER_COFF
=1,

924 
	mABI_DEFHANDLER_ELF
=2,

925 
	mABI_DEFHANDLER_LCALL7
=3,

926 
	mABI_DEFHANDLER_LIBCSO
=4,

927 
	mABI_TRACE
=5,

928 
	mABI_FAKE_UTSNAME
=6,

	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_RAW
 = 255,

89 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

90 
	mIPPROTO_MAX


96 #i‚de‡
__USE_KERNEL_IPV6_DEFS


99 
	mIPPROTO_HOPOPTS
 = 0,

100 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

101 
	mIPPROTO_ROUTING
 = 43,

102 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

103 
	mIPPROTO_FRAGMENT
 = 44,

104 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

105 
	mIPPROTO_ICMPV6
 = 58,

106 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

107 
	mIPPROTO_NONE
 = 59,

108 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

109 
	mIPPROTO_DSTOPTS
 = 60,

110 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

111 
	mIPPROTO_MH
 = 135

112 
	#IPPROTO_MH
 
IPPROTO_MH


	)

117 
uöt16_t
 
	tö_p‹t_t
;

122 
	mIPPORT_ECHO
 = 7,

123 
	mIPPORT_DISCARD
 = 9,

124 
	mIPPORT_SYSTAT
 = 11,

125 
	mIPPORT_DAYTIME
 = 13,

126 
	mIPPORT_NETSTAT
 = 15,

127 
	mIPPORT_FTP
 = 21,

128 
	mIPPORT_TELNET
 = 23,

129 
	mIPPORT_SMTP
 = 25,

130 
	mIPPORT_TIMESERVER
 = 37,

131 
	mIPPORT_NAMESERVER
 = 42,

132 
	mIPPORT_WHOIS
 = 43,

133 
	mIPPORT_MTP
 = 57,

135 
	mIPPORT_TFTP
 = 69,

136 
	mIPPORT_RJE
 = 77,

137 
	mIPPORT_FINGER
 = 79,

138 
	mIPPORT_TTYLINK
 = 87,

139 
	mIPPORT_SUPDUP
 = 95,

142 
	mIPPORT_EXECSERVER
 = 512,

143 
	mIPPORT_LOGINSERVER
 = 513,

144 
	mIPPORT_CMDSERVER
 = 514,

145 
	mIPPORT_EFSSERVER
 = 520,

148 
	mIPPORT_BIFFUDP
 = 512,

149 
	mIPPORT_WHOSERVER
 = 513,

150 
	mIPPORT_ROUTESERVER
 = 520,

153 
	mIPPORT_RESERVED
 = 1024,

156 
	mIPPORT_USERRESERVED
 = 5000

164 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

165 
	#IN_CLASSA_NET
 0xff000000

	)

166 
	#IN_CLASSA_NSHIFT
 24

	)

167 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

168 
	#IN_CLASSA_MAX
 128

	)

170 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

171 
	#IN_CLASSB_NET
 0xffff0000

	)

172 
	#IN_CLASSB_NSHIFT
 16

	)

173 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

174 
	#IN_CLASSB_MAX
 65536

	)

176 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

177 
	#IN_CLASSC_NET
 0xffffff00

	)

178 
	#IN_CLASSC_NSHIFT
 8

	)

179 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

181 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

182 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

184 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

185 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

188 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

190 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

192 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

195 
	#IN_LOOPBACKNET
 127

	)

197 #i‚de‡
INADDR_LOOPBACK


198 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

202 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

203 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

204 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

205 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

207 #i‚de‡
__USE_KERNEL_IPV6_DEFS


209 
	sö6_addr


213 
uöt8_t
 
	m__u6_addr8
[16];

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


215 
uöt16_t
 
	m__u6_addr16
[8];

216 
uöt32_t
 
	m__u6_addr32
[4];

218 } 
	m__ö6_u
;

219 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


221 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

222 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

227 c⁄° 
ö6_addr
 
ö6addr_™y
;

228 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

229 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

230 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

232 
	#INET_ADDRSTRLEN
 16

	)

233 
	#INET6_ADDRSTRLEN
 46

	)

237 
	ssockaddr_ö


239 
__SOCKADDR_COMMON
 (
sö_
);

240 
ö_p‹t_t
 
	msö_p‹t
;

241 
ö_addr
 
	msö_addr
;

244 
	msö_zîo
[ (
sockaddr
) -

245 
__SOCKADDR_COMMON_SIZE
 -

246  (
ö_p‹t_t
) -

247  (
ö_addr
)];

250 #i‚de‡
__USE_KERNEL_IPV6_DEFS


252 
	ssockaddr_ö6


254 
__SOCKADDR_COMMON
 (
sö6_
);

255 
ö_p‹t_t
 
	msö6_p‹t
;

256 
uöt32_t
 
	msö6_Êowöfo
;

257 
ö6_addr
 
	msö6_addr
;

258 
uöt32_t
 
	msö6_sc›e_id
;

262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


264 
	sù_mªq


267 
ö_addr
 
	mimr_mu…üddr
;

270 
ö_addr
 
	mimr_öãrÁ˚
;

273 
	sù_mªq_sour˚


276 
ö_addr
 
	mimr_mu…üddr
;

279 
ö_addr
 
	mimr_öãrÁ˚
;

282 
ö_addr
 
	mimr_sour˚addr
;

286 #i‚de‡
__USE_KERNEL_IPV6_DEFS


288 
	sùv6_mªq


291 
ö6_addr
 
	mùv6mr_mu…üddr
;

294 
	mùv6mr_öãrÁ˚
;

298 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


300 
	sgroup_ªq


303 
uöt32_t
 
	mgr_öãrÁ˚
;

306 
sockaddr_°‹age
 
	mgr_group
;

309 
	sgroup_sour˚_ªq


312 
uöt32_t
 
	mg§_öãrÁ˚
;

315 
sockaddr_°‹age
 
	mg§_group
;

318 
sockaddr_°‹age
 
	mg§_sour˚
;

323 
	sù_msfûãr


326 
ö_addr
 
	mimsf_mu…üddr
;

329 
ö_addr
 
	mimsf_öãrÁ˚
;

332 
uöt32_t
 
	mimsf_fmode
;

335 
uöt32_t
 
	mimsf_num§c
;

337 
ö_addr
 
	mimsf_¶i°
[1];

340 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

341 -  (
ö_addr
) \

342 + (
num§c
Ë*  (
ö_addr
))

	)

344 
	sgroup_fûãr


347 
uöt32_t
 
	mgf_öãrÁ˚
;

350 
sockaddr_°‹age
 
	mgf_group
;

353 
uöt32_t
 
	mgf_fmode
;

356 
uöt32_t
 
	mgf_num§c
;

358 
sockaddr_°‹age
 
	mgf_¶i°
[1];

361 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

362 -  (
sockaddr_°‹age
) \

363 + ((
num§c
) \

364 *  (
sockaddr_°‹age
)))

	)

374 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

375 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

376 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
	~<ídün.h
>

385 
	~<bôs/byãsw≠.h
>

387 #ifde‡
__OPTIMIZE__


391 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


394 
	#¡ohl
(
x
Ë(x)

	)

395 
	#¡ohs
(
x
Ë(x)

	)

396 
	#ht⁄l
(
x
Ë(x)

	)

397 
	#ht⁄s
(
x
Ë(x)

	)

399 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


400 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

401 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

402 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

408 #ifde‡
__GNUC__


409 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

410 (
__exãnsi⁄__
 \

411 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

412 
__a
->
s6_addr32
[0] == 0 \

413 && 
__a
->
s6_addr32
[1] == 0 \

414 && 
__a
->
s6_addr32
[2] == 0 \

415 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

417 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

418 (
__exãnsi⁄__
 \

419 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

420 
__a
->
s6_addr32
[0] == 0 \

421 && 
__a
->
s6_addr32
[1] == 0 \

422 && 
__a
->
s6_addr32
[2] == 0 \

423 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

425 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

430 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

431 (
__exãnsi⁄__
 \

432 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

433 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

435 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

436 (
__exãnsi⁄__
 \

437 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

438 
__a
->
s6_addr32
[0] == 0 \

439 && 
__a
->
s6_addr32
[1] == 0 \

440 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

442 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

443 (
__exãnsi⁄__
 \

444 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

445 
__a
->
s6_addr32
[0] == 0 \

446 && 
__a
->
s6_addr32
[1] == 0 \

447 && 
__a
->
s6_addr32
[2] == 0 \

448 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

450 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

451 (
__exãnsi⁄__
 \

452 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

453 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

454 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

455 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

456 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

457 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

459 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

460 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

461 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

462 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

465 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

466 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

467 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

468 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

471 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

472 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

473 =
	`ht⁄l
 (0x„800000))

	)

475 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

476 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

477 =
	`ht⁄l
 (0x„c00000))

	)

479 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

480 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

481 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

484 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

486 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

487 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

488 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

490 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

491 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

492 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

493 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

497 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

499 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


501 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

504 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

505 
__THROW
;

509 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

510 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

511 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

513 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

514 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

515 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

517 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

518 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

519 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

521 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

522 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

523 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

525 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

526 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

527 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

530 #ifde‡
__USE_GNU


531 
cmsghdr
;

534 
	sö6_pktöfo


536 
ö6_addr
 
ùi6_addr
;

537 
ùi6_ifödex
;

541 
	sù6_mtuöfo


543 
sockaddr_ö6
 
ù6m_addr
;

544 
uöt32_t
 
ù6m_mtu
;

549 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

552 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

553 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

554 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

555 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

557 
__mu…x
, 
__∂usy
)

558 
__THROW
 
__©åibuã_dïªˇãd__
;

559 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

560 
uöt8_t
 **
__çåp
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
, 
__ty≥
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

568 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

569 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

570 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

571 **
__d©abuÂ
Ë
__THROW
;

572 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

573 
__THROW
;

574 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

575 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

577 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

578 **
__d©abuÂ
Ë
__THROW
;

579 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

583 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

587 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

588 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

589 
__£gmíts
Ë
__THROW
;

590 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

591 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

592 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

593 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

594 
__THROW
;

600 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

601 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

602 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

603 
__THROW
;

606 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

607 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

608 
uöt32_t
 
__num§c
,

609 c⁄° 
ö_addr
 *
__¶i°
)

610 
__THROW
;

614 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

615 c⁄° 
sockaddr
 *
__group
,

616 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

617 
uöt32_t
 *
__num§c
,

618 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

621 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

622 c⁄° 
sockaddr
 *
__group
,

623 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

624 
uöt32_t
 
__num§c
,

625 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

628 
__END_DECLS


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sig«l.h
>

26 
	~<bôs/sigc⁄ãxt.h
>

28 #ifde‡
__x86_64__


31 
__exãnsi⁄__
 
	tgªg_t
;

34 
	#NGREG
 23

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_R8
 = 0,

44 
	#REG_R8
 
REG_R8


	)

45 
	mREG_R9
,

46 
	#REG_R9
 
REG_R9


	)

47 
	mREG_R10
,

48 
	#REG_R10
 
REG_R10


	)

49 
	mREG_R11
,

50 
	#REG_R11
 
REG_R11


	)

51 
	mREG_R12
,

52 
	#REG_R12
 
REG_R12


	)

53 
	mREG_R13
,

54 
	#REG_R13
 
REG_R13


	)

55 
	mREG_R14
,

56 
	#REG_R14
 
REG_R14


	)

57 
	mREG_R15
,

58 
	#REG_R15
 
REG_R15


	)

59 
	mREG_RDI
,

60 
	#REG_RDI
 
REG_RDI


	)

61 
	mREG_RSI
,

62 
	#REG_RSI
 
REG_RSI


	)

63 
	mREG_RBP
,

64 
	#REG_RBP
 
REG_RBP


	)

65 
	mREG_RBX
,

66 
	#REG_RBX
 
REG_RBX


	)

67 
	mREG_RDX
,

68 
	#REG_RDX
 
REG_RDX


	)

69 
	mREG_RAX
,

70 
	#REG_RAX
 
REG_RAX


	)

71 
	mREG_RCX
,

72 
	#REG_RCX
 
REG_RCX


	)

73 
	mREG_RSP
,

74 
	#REG_RSP
 
REG_RSP


	)

75 
	mREG_RIP
,

76 
	#REG_RIP
 
REG_RIP


	)

77 
	mREG_EFL
,

78 
	#REG_EFL
 
REG_EFL


	)

79 
	mREG_CSGSFS
,

80 
	#REG_CSGSFS
 
REG_CSGSFS


	)

81 
	mREG_ERR
,

82 
	#REG_ERR
 
REG_ERR


	)

83 
	mREG_TRAPNO
,

84 
	#REG_TRAPNO
 
REG_TRAPNO


	)

85 
	mREG_OLDMASK
,

86 
	#REG_OLDMASK
 
REG_OLDMASK


	)

87 
	mREG_CR2


88 
	#REG_CR2
 
REG_CR2


	)

92 
	s_libc_Âxªg


94 
	msignifiˇnd
[4];

95 
	mexp⁄ít
;

96 
	m∑ddög
[3];

99 
	s_libc_xmmªg


101 
__uöt32_t
 
	mñemít
[4];

104 
	s_libc_Â°©e


107 
__uöt16_t
 
	mcwd
;

108 
__uöt16_t
 
	mswd
;

109 
__uöt16_t
 
	m·w
;

110 
__uöt16_t
 
	mf›
;

111 
__uöt64_t
 
	mrù
;

112 
__uöt64_t
 
	mrdp
;

113 
__uöt32_t
 
	mmxc§
;

114 
__uöt32_t
 
	mmx¸_mask
;

115 
_libc_Âxªg
 
	m_°
[8];

116 
_libc_xmmªg
 
	m_xmm
[16];

117 
__uöt32_t
 
	m∑ddög
[24];

121 
_libc_Â°©e
 *
	tÂªg£t_t
;

126 
gªg£t_t
 
	mgªgs
;

128 
Âªg£t_t
 
	mÂªgs
;

129 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

130 } 
	tmc⁄ãxt_t
;

133 
	suc⁄ãxt


135 
	muc_Êags
;

136 
uc⁄ãxt
 *
	muc_lök
;

137 
°ack_t
 
	muc_°ack
;

138 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

139 
__sig£t_t
 
	muc_sigmask
;

140 
_libc_Â°©e
 
	m__Âªgs_mem
;

141 } 
	tuc⁄ãxt_t
;

146 
	tgªg_t
;

149 
	#NGREG
 19

	)

152 
gªg_t
 
	tgªg£t_t
[
NGREG
];

154 #ifde‡
__USE_GNU


158 
	mREG_GS
 = 0,

159 
	#REG_GS
 
REG_GS


	)

160 
	mREG_FS
,

161 
	#REG_FS
 
REG_FS


	)

162 
	mREG_ES
,

163 
	#REG_ES
 
REG_ES


	)

164 
	mREG_DS
,

165 
	#REG_DS
 
REG_DS


	)

166 
	mREG_EDI
,

167 
	#REG_EDI
 
REG_EDI


	)

168 
	mREG_ESI
,

169 
	#REG_ESI
 
REG_ESI


	)

170 
	mREG_EBP
,

171 
	#REG_EBP
 
REG_EBP


	)

172 
	mREG_ESP
,

173 
	#REG_ESP
 
REG_ESP


	)

174 
	mREG_EBX
,

175 
	#REG_EBX
 
REG_EBX


	)

176 
	mREG_EDX
,

177 
	#REG_EDX
 
REG_EDX


	)

178 
	mREG_ECX
,

179 
	#REG_ECX
 
REG_ECX


	)

180 
	mREG_EAX
,

181 
	#REG_EAX
 
REG_EAX


	)

182 
	mREG_TRAPNO
,

183 
	#REG_TRAPNO
 
REG_TRAPNO


	)

184 
	mREG_ERR
,

185 
	#REG_ERR
 
REG_ERR


	)

186 
	mREG_EIP
,

187 
	#REG_EIP
 
REG_EIP


	)

188 
	mREG_CS
,

189 
	#REG_CS
 
REG_CS


	)

190 
	mREG_EFL
,

191 
	#REG_EFL
 
REG_EFL


	)

192 
	mREG_UESP
,

193 
	#REG_UESP
 
REG_UESP


	)

194 
	mREG_SS


195 
	#REG_SS
 
REG_SS


	)

200 
	s_libc_Âªg


202 
	msignifiˇnd
[4];

203 
	mexp⁄ít
;

206 
	s_libc_Â°©e


208 
	mcw
;

209 
	msw
;

210 
	mèg
;

211 
	mùoff
;

212 
	mcs£l
;

213 
	md©aoff
;

214 
	md©a£l
;

215 
_libc_Âªg
 
	m_°
[8];

216 
	m°©us
;

220 
_libc_Â°©e
 *
	tÂªg£t_t
;

225 
gªg£t_t
 
	mgªgs
;

228 
Âªg£t_t
 
	mÂªgs
;

229 
	mﬁdmask
;

230 
	m¸2
;

231 } 
	tmc⁄ãxt_t
;

234 
	suc⁄ãxt


236 
	muc_Êags
;

237 
uc⁄ãxt
 *
	muc_lök
;

238 
°ack_t
 
	muc_°ack
;

239 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

240 
__sig£t_t
 
	muc_sigmask
;

241 
_libc_Â°©e
 
	m__Âªgs_mem
;

242 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/uio.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 020200000

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

124 #ifde‡
__USE_XOPEN2K8


125 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

126 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

127 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

130 #ifde‡
__USE_GNU


131 
	#O_DIRECT
 
__O_DIRECT


	)

132 
	#O_NOATIME
 
__O_NOATIME


	)

133 
	#O_PATH
 
__O_PATH


	)

134 
	#O_TMPFILE
 
__O_TMPFILE


	)

140 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


141 
	#O_DSYNC
 
__O_DSYNC


	)

142 #i‡
deföed
 
__O_RSYNC


143 
	#O_RSYNC
 
__O_RSYNC


	)

145 
	#O_RSYNC
 
O_SYNC


	)

150 
	#F_DUPFD
 0

	)

151 
	#F_GETFD
 1

	)

152 
	#F_SETFD
 2

	)

153 
	#F_GETFL
 3

	)

154 
	#F_SETFL
 4

	)

156 #i‚de‡
__F_SETOWN


157 
	#__F_SETOWN
 8

	)

158 
	#__F_GETOWN
 9

	)

161 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


162 
	#F_SETOWN
 
__F_SETOWN


	)

163 
	#F_GETOWN
 
__F_GETOWN


	)

166 #i‚de‡
__F_SETSIG


167 
	#__F_SETSIG
 10

	)

168 
	#__F_GETSIG
 11

	)

170 #i‚de‡
__F_SETOWN_EX


171 
	#__F_SETOWN_EX
 15

	)

172 
	#__F_GETOWN_EX
 16

	)

175 #ifde‡
__USE_GNU


176 
	#F_SETSIG
 
__F_SETSIG


	)

177 
	#F_GETSIG
 
__F_GETSIG


	)

178 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

179 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

182 #ifde‡
__USE_GNU


183 
	#F_SETLEASE
 1024

	)

184 
	#F_GETLEASE
 1025

	)

185 
	#F_NOTIFY
 1026

	)

186 
	#F_SETPIPE_SZ
 1031

	)

187 
	#F_GETPIPE_SZ
 1032

	)

189 #ifde‡
__USE_XOPEN2K8


190 
	#F_DUPFD_CLOEXEC
 1030

	)

195 
	#FD_CLOEXEC
 1

	)

197 #i‚de‡
F_RDLCK


199 
	#F_RDLCK
 0

	)

200 
	#F_WRLCK
 1

	)

201 
	#F_UNLCK
 2

	)

206 #i‚de‡
F_EXLCK


207 
	#F_EXLCK
 4

	)

208 
	#F_SHLCK
 8

	)

211 #ifde‡
__USE_BSD


213 
	#LOCK_SH
 1

	)

214 
	#LOCK_EX
 2

	)

215 
	#LOCK_NB
 4

	)

217 
	#LOCK_UN
 8

	)

220 #ifde‡
__USE_GNU


221 
	#LOCK_MAND
 32

	)

222 
	#LOCK_READ
 64

	)

223 
	#LOCK_WRITE
 128

	)

224 
	#LOCK_RW
 192

	)

227 #ifde‡
__USE_GNU


229 
	#DN_ACCESS
 0x00000001

	)

230 
	#DN_MODIFY
 0x00000002

	)

231 
	#DN_CREATE
 0x00000004

	)

232 
	#DN_DELETE
 0x00000008

	)

233 
	#DN_RENAME
 0x00000010

	)

234 
	#DN_ATTRIB
 0x00000020

	)

235 
	#DN_MULTISHOT
 0x80000000

	)

239 #ifde‡
__USE_GNU


241 
	e__pid_ty≥


243 
	mF_OWNER_TID
 = 0,

244 
	mF_OWNER_PID
,

245 
	mF_OWNER_PGRP
,

246 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


250 
	sf_ow√r_ex


252 
__pid_ty≥
 
	mty≥
;

253 
__pid_t
 
	mpid
;

259 #ifdef 
__USE_BSD


260 
	#FAPPEND
 
O_APPEND


	)

261 
	#FFSYNC
 
O_FSYNC


	)

262 
	#FASYNC
 
O_ASYNC


	)

263 
	#FNONBLOCK
 
O_NONBLOCK


	)

264 
	#FNDELAY
 
O_NDELAY


	)

267 #i‚de‡
__POSIX_FADV_DONTNEED


268 
	#__POSIX_FADV_DONTNEED
 4

	)

269 
	#__POSIX_FADV_NOREUSE
 5

	)

272 #ifde‡
__USE_XOPEN2K


273 
	#POSIX_FADV_NORMAL
 0

	)

274 
	#POSIX_FADV_RANDOM
 1

	)

275 
	#POSIX_FADV_SEQUENTIAL
 2

	)

276 
	#POSIX_FADV_WILLNEED
 3

	)

277 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

278 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

282 #ifde‡
__USE_GNU


284 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

287 
	#SYNC_FILE_RANGE_WRITE
 2

	)

290 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

295 
	#SPLICE_F_MOVE
 1

	)

296 
	#SPLICE_F_NONBLOCK
 2

	)

299 
	#SPLICE_F_MORE
 4

	)

300 
	#SPLICE_F_GIFT
 8

	)

304 
	#FALLOC_FL_KEEP_SIZE
 1

	)

307 
	#FALLOC_FL_PUNCH_HOLE
 2

	)

311 
	sfûe_h™dÀ


313 
	mh™dÀ_byãs
;

314 
	mh™dÀ_ty≥
;

316 
	mf_h™dÀ
[0];

320 
	#MAX_HANDLE_SZ
 128

	)

324 #ifde‡
__USE_ATFILE


325 
	#AT_FDCWD
 -100

	)

328 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

329 
	#AT_REMOVEDIR
 0x200

	)

331 
	#AT_SYMLINK_FOLLOW
 0x400

	)

332 #ifde‡
__USE_GNU


333 
	#AT_NO_AUTOMOUNT
 0x800

	)

335 
	#AT_EMPTY_PATH
 0x1000

	)

337 
	#AT_EACCESS
 0x200

	)

341 
	g__BEGIN_DECLS


343 #ifde‡
__USE_GNU


346 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

347 
__THROW
;

354 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

355 
__Êags
);

362 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

363 
size_t
 
__cou¡
, 
__Êags
);

369 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

370 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

371 
__Êags
);

377 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

378 
__Êags
);

384 #i‚de‡
__USE_FILE_OFFSET64


385 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

387 #ifde‡
__REDIRECT


388 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

389 
__off64_t
 
__Àn
),

390 
ÁŒoˇã64
);

392 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

397 
__off64_t
 
__Àn
);

402 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

403 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

404 
__Êags
Ë
__THROW
;

410 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

411 
__Êags
);

415 
__END_DECLS


	@/usr/include/bits/in.h

20 #i‚de‡
_NETINET_IN_H


29 #ifde‡
_UAPI_LINUX_IN6_H


33 
	#__USE_KERNEL_IPV6_DEFS


	)

39 
	#IP_OPTIONS
 4

	)

40 
	#IP_HDRINCL
 3

	)

41 
	#IP_TOS
 1

	)

42 
	#IP_TTL
 2

	)

43 
	#IP_RECVOPTS
 6

	)

45 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

46 
	#IP_RETOPTS
 7

	)

47 
	#IP_MULTICAST_IF
 32

	)

48 
	#IP_MULTICAST_TTL
 33

	)

49 
	#IP_MULTICAST_LOOP
 34

	)

50 
	#IP_ADD_MEMBERSHIP
 35

	)

51 
	#IP_DROP_MEMBERSHIP
 36

	)

52 
	#IP_UNBLOCK_SOURCE
 37

	)

53 
	#IP_BLOCK_SOURCE
 38

	)

54 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

55 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

56 
	#IP_MSFILTER
 41

	)

57 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


58 
	#MCAST_JOIN_GROUP
 42

	)

59 
	#MCAST_BLOCK_SOURCE
 43

	)

60 
	#MCAST_UNBLOCK_SOURCE
 44

	)

61 
	#MCAST_LEAVE_GROUP
 45

	)

62 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

63 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

64 
	#MCAST_MSFILTER
 48

	)

65 
	#IP_MULTICAST_ALL
 49

	)

66 
	#IP_UNICAST_IF
 50

	)

68 
	#MCAST_EXCLUDE
 0

	)

69 
	#MCAST_INCLUDE
 1

	)

72 
	#IP_ROUTER_ALERT
 5

	)

73 
	#IP_PKTINFO
 8

	)

74 
	#IP_PKTOPTIONS
 9

	)

75 
	#IP_PMTUDISC
 10

	)

76 
	#IP_MTU_DISCOVER
 10

	)

77 
	#IP_RECVERR
 11

	)

78 
	#IP_RECVTTL
 12

	)

79 
	#IP_RECVTOS
 13

	)

80 
	#IP_MTU
 14

	)

81 
	#IP_FREEBIND
 15

	)

82 
	#IP_IPSEC_POLICY
 16

	)

83 
	#IP_XFRM_POLICY
 17

	)

84 
	#IP_PASSSEC
 18

	)

85 
	#IP_TRANSPARENT
 19

	)

86 
	#IP_MULTICAST_ALL
 49

	)

89 
	#IP_ORIGDSTADDR
 20

	)

90 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

92 
	#IP_MINTTL
 21

	)

96 
	#IP_PMTUDISC_DONT
 0

	)

97 
	#IP_PMTUDISC_WANT
 1

	)

98 
	#IP_PMTUDISC_DO
 2

	)

99 
	#IP_PMTUDISC_PROBE
 3

	)

102 
	#SOL_IP
 0

	)

104 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

105 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

106 
	#IP_MAX_MEMBERSHIPS
 20

	)

108 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


112 
	sù_›ts


114 
ö_addr
 
	mù_d°
;

115 
	mù_›ts
[40];

119 
	sù_mªqn


121 
ö_addr
 
	mimr_mu…üddr
;

122 
ö_addr
 
	mimr_addªss
;

123 
	mimr_ifödex
;

127 
	sö_pktöfo


129 
	mùi_ifödex
;

130 
ö_addr
 
	mùi_•ec_d°
;

131 
ö_addr
 
	mùi_addr
;

138 
	#IPV6_ADDRFORM
 1

	)

139 
	#IPV6_2292PKTINFO
 2

	)

140 
	#IPV6_2292HOPOPTS
 3

	)

141 
	#IPV6_2292DSTOPTS
 4

	)

142 
	#IPV6_2292RTHDR
 5

	)

143 
	#IPV6_2292PKTOPTIONS
 6

	)

144 
	#IPV6_CHECKSUM
 7

	)

145 
	#IPV6_2292HOPLIMIT
 8

	)

147 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

149 
	#IPV6_NEXTHOP
 9

	)

150 
	#IPV6_AUTHHDR
 10

	)

151 
	#IPV6_UNICAST_HOPS
 16

	)

152 
	#IPV6_MULTICAST_IF
 17

	)

153 
	#IPV6_MULTICAST_HOPS
 18

	)

154 
	#IPV6_MULTICAST_LOOP
 19

	)

155 
	#IPV6_JOIN_GROUP
 20

	)

156 
	#IPV6_LEAVE_GROUP
 21

	)

157 
	#IPV6_ROUTER_ALERT
 22

	)

158 
	#IPV6_MTU_DISCOVER
 23

	)

159 
	#IPV6_MTU
 24

	)

160 
	#IPV6_RECVERR
 25

	)

161 
	#IPV6_V6ONLY
 26

	)

162 
	#IPV6_JOIN_ANYCAST
 27

	)

163 
	#IPV6_LEAVE_ANYCAST
 28

	)

164 
	#IPV6_IPSEC_POLICY
 34

	)

165 
	#IPV6_XFRM_POLICY
 35

	)

167 
	#IPV6_RECVPKTINFO
 49

	)

168 
	#IPV6_PKTINFO
 50

	)

169 
	#IPV6_RECVHOPLIMIT
 51

	)

170 
	#IPV6_HOPLIMIT
 52

	)

171 
	#IPV6_RECVHOPOPTS
 53

	)

172 
	#IPV6_HOPOPTS
 54

	)

173 
	#IPV6_RTHDRDSTOPTS
 55

	)

174 
	#IPV6_RECVRTHDR
 56

	)

175 
	#IPV6_RTHDR
 57

	)

176 
	#IPV6_RECVDSTOPTS
 58

	)

177 
	#IPV6_DSTOPTS
 59

	)

179 
	#IPV6_RECVTCLASS
 66

	)

180 
	#IPV6_TCLASS
 67

	)

183 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

184 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

185 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

186 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

189 
	#IPV6_PMTUDISC_DONT
 0

	)

190 
	#IPV6_PMTUDISC_WANT
 1

	)

191 
	#IPV6_PMTUDISC_DO
 2

	)

192 
	#IPV6_PMTUDISC_PROBE
 3

	)

195 
	#SOL_IPV6
 41

	)

196 
	#SOL_ICMPV6
 58

	)

199 
	#IPV6_RTHDR_LOOSE
 0

	)

200 
	#IPV6_RTHDR_STRICT
 1

	)

202 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/mman-linux.h

19 #i‚de‡
_SYS_MMAN_H


32 
	#PROT_READ
 0x1

	)

33 
	#PROT_WRITE
 0x2

	)

34 
	#PROT_EXEC
 0x4

	)

35 
	#PROT_NONE
 0x0

	)

36 
	#PROT_GROWSDOWN
 0x01000000

	)

38 
	#PROT_GROWSUP
 0x02000000

	)

42 
	#MAP_SHARED
 0x01

	)

43 
	#MAP_PRIVATE
 0x02

	)

44 #ifde‡
__USE_MISC


45 
	#MAP_TYPE
 0x0‡

	)

49 
	#MAP_FIXED
 0x10

	)

50 #ifde‡
__USE_MISC


51 
	#MAP_FILE
 0

	)

52 #ifde‡
__MAP_ANONYMOUS


53 
	#MAP_ANONYMOUS
 
__MAP_ANONYMOUS


	)

55 
	#MAP_ANONYMOUS
 0x20

	)

57 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

59 
	#MAP_HUGE_SHIFT
 26

	)

60 
	#MAP_HUGE_MASK
 0x3f

	)

64 
	#MS_ASYNC
 1

	)

65 
	#MS_SYNC
 4

	)

66 
	#MS_INVALIDATE
 2

	)

69 #ifde‡
__USE_GNU


70 
	#MREMAP_MAYMOVE
 1

	)

71 
	#MREMAP_FIXED
 2

	)

75 #ifde‡
__USE_BSD


76 
	#MADV_NORMAL
 0

	)

77 
	#MADV_RANDOM
 1

	)

78 
	#MADV_SEQUENTIAL
 2

	)

79 
	#MADV_WILLNEED
 3

	)

80 
	#MADV_DONTNEED
 4

	)

81 
	#MADV_REMOVE
 9

	)

82 
	#MADV_DONTFORK
 10

	)

83 
	#MADV_DOFORK
 11

	)

84 
	#MADV_MERGEABLE
 12

	)

85 
	#MADV_UNMERGEABLE
 13

	)

86 
	#MADV_HUGEPAGE
 14

	)

87 
	#MADV_NOHUGEPAGE
 15

	)

88 
	#MADV_DONTDUMP
 16

	)

90 
	#MADV_DODUMP
 17

	)

91 
	#MADV_HWPOISON
 100

	)

95 #ifde‡
__USE_XOPEN2K


96 
	#POSIX_MADV_NORMAL
 0

	)

97 
	#POSIX_MADV_RANDOM
 1

	)

98 
	#POSIX_MADV_SEQUENTIAL
 2

	)

99 
	#POSIX_MADV_WILLNEED
 3

	)

100 
	#POSIX_MADV_DONTNEED
 4

	)

104 #i‚de‡
MCL_CURRENT


105 
	#MCL_CURRENT
 1

	)

106 
	#MCL_FUTURE
 2

	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

23 
	~<lowÀvñlock.h
>

27 
	#_IO_lock_öex≥nsive
 1

	)

29 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

31 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

33 
	#_IO_lock_öô
(
_«me
) \

34 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

36 
	#_IO_lock_föi
(
_«me
) \

37 ((Ë0)

	)

39 
	#_IO_lock_lock
(
_«me
) \

41 *
__£lf
 = 
THREAD_SELF
; \

42 i‡((
_«me
).
ow√r
 !
__£lf
) \

44 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

45 (
_«me
).
ow√r
 = 
__£lf
; \

47 ++(
_«me
).
˙t
; \

48 } 0)

	)

50 
	#_IO_lock_åylock
(
_«me
) \

52 
__ªsu…
 = 0; \

53 *
__£lf
 = 
THREAD_SELF
; \

54 i‡((
_«me
).
ow√r
 !
__£lf
) \

56 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

58 (
_«me
).
ow√r
 = 
__£lf
; \

59 (
_«me
).
˙t
 = 1; \

62 
__ªsu…
 = 
EBUSY
; \

65 ++(
_«me
).
˙t
; \

66 
__ªsu…
; \

67 })

	)

69 
	#_IO_lock_u∆ock
(
_«me
) \

71 i‡(--(
_«me
).
˙t
 == 0) \

73 (
_«me
).
ow√r
 = 
NULL
; \

74 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

76 } 0)

	)

80 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

81 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

82 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

83 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

84 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

85 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

87 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


89 #ifde‡
__EXCEPTIONS


90 
	#_IO_acquúe_lock
(
_Â
) \

92 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

93 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

94 (
_Â
); \

95 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

96 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

98 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

99 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

100 (
_Â
); \

101 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

103 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

104 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

106 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 #ifde‡
__x86_64__


79 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

82 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

4 
	~<löux/sysöfo.h
>

9 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`ty≥of
(x))◊Ë- 1)

	)

10 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

136 #i‡
__GNUC_PREREQ
 (4,3)

137 
	#__w¨nde˛
(
«me
, 
msg
) \

138 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

139 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

140 
	#__îr‹de˛
(
«me
, 
msg
) \

141 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

143 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

144 
	#__w¨«âr
(
msg
)

	)

145 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

149 #i‡
__GNUC_PREREQ
 (2,97)

151 
	#__Êex¨r
 []

	)

153 #ifde‡
__GNUC__


154 
	#__Êex¨r
 [0]

	)

156 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

157 
	#__Êex¨r
 []

	)

160 
	#__Êex¨r
 [1]

	)

176 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

178 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

179 #ifde‡
__˝lu•lus


180 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

181 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

187 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

188 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

190 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

191 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

204 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

205 
	#__©åibuã__
(
xyz
Ë

	)

211 #i‡
__GNUC_PREREQ
 (2,96)

212 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

214 
	#__©åibuã_mÆloc__


	)

219 #i‡
__GNUC_PREREQ
 (4, 3)

220 
	#__©åibuã_Æloc_size__
(
∑øms
) \

221 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

223 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

229 #i‡
__GNUC_PREREQ
 (2,96)

230 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

232 
	#__©åibuã_puª__


	)

236 #i‡
__GNUC_PREREQ
 (2,5)

237 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

239 
	#__©åibuã_c⁄°__


	)

245 #i‡
__GNUC_PREREQ
 (3,1)

246 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

247 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

249 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

250 
	#__©åibuã_noölöe__


	)

254 #i‡
__GNUC_PREREQ
 (3,2)

255 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

257 
	#__©åibuã_dïªˇãd__


	)

266 #i‡
__GNUC_PREREQ
 (2,8)

267 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

269 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

276 #i‡
__GNUC_PREREQ
 (2,97)

277 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

278 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

280 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

285 #i‡
__GNUC_PREREQ
 (3,3)

286 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

288 
	#__n⁄nuŒ
(
∑øms
)

	)

293 #i‡
__GNUC_PREREQ
 (3,4)

294 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

295 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

296 #i‡
__USE_FORTIFY_LEVEL
 > 0

297 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

300 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

302 #i‚de‡
__wur


303 
	#__wur


	)

307 #i‡
__GNUC_PREREQ
 (3,2)

308 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

310 
	#__Æways_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

318 
	#__©åibuã_¨tificül__


	)

321 #ifde‡
__GNUC__


326 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__GNUC_GNU_INLINE__


327 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

328 
	#__exã∫_Æways_ölöe
 \

329 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

331 
	#__exã∫_ölöe
 
__ölöe


	)

332 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

335 
	#__exã∫_ölöe


	)

336 
	#__exã∫_Æways_ölöe


	)

341 #i‡
__GNUC_PREREQ
 (4,3)

342 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

343 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

350 #i‡!
__GNUC_PREREQ
 (2,8)

351 
	#__exãnsi⁄__


	)

355 #i‡!
__GNUC_PREREQ
 (2,92)

356 
	#__ª°ri˘


	)

362 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


363 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

365 #ifde‡
__GNUC__


366 
	#__ª°ri˘_¨r


	)

368 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

369 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

372 
	#__ª°ri˘_¨r


	)

377 #i‡
__GNUC__
 >= 3

378 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

379 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

381 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

382 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

385 
	~<bôs/w‹dsize.h
>

387 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


388 
	#__LDBL_COMPAT
 1

	)

389 #ifde‡
__REDIRECT


390 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

391 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

392 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

393 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

394 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

395 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

396 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

397 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

398 
	#__LDBL_REDIR_DECL
(
«me
) \

399 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

400 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

401 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

402 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

403 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

406 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


407 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

408 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

409 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

410 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

411 
	#__LDBL_REDIR_DECL
(
«me
)

	)

412 #ifde‡
__REDIRECT


413 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

414 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

415 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/socket.h

19 #i‚def 
_SYS_SOCKET_H


20 
	#_SYS_SOCKET_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


26 
	~<sys/uio.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

29 #ifde‡
__USE_GNU


31 
	~<bôs/sig£t.h
>

38 
	~<bôs/sockë.h
>

40 #ifde‡
__USE_BSD


43 
	sosockaddr


45 
	mß_Ámûy
;

46 
	mß_d©a
[14];

54 
	mSHUT_RD
 = 0,

55 
	#SHUT_RD
 
SHUT_RD


	)

56 
	mSHUT_WR
,

57 
	#SHUT_WR
 
SHUT_WR


	)

58 
	mSHUT_RDWR


59 
	#SHUT_RDWR
 
SHUT_RDWR


	)

68 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


69 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

70 
	#__CONST_SOCKADDR_ARG
 c⁄° 
sockaddr
 *

	)

74 
	#__SOCKADDR_ALLTYPES
 \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

89 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

90 uni⁄ { 
	m__SOCKADDR_ALLTYPES


91 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

92 #unde‡
__SOCKADDR_ONETYPE


93 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëc⁄° ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

94 uni⁄ { 
	m__SOCKADDR_ALLTYPES


95 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

96 #unde‡
__SOCKADDR_ONETYPE


99 #ifde‡
__USE_GNU


101 
	smmsghdr


103 
msghdr
 
	mmsg_hdr
;

104 
	mmsg_Àn
;

113 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

119 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

120 
__fds
[2]Ë
__THROW
;

123 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

124 
__THROW
;

127 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

128 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

137 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

141 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

142 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

149 
ssize_t
 
	`£nd
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
, 
__Êags
);

156 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

163 
ssize_t
 
	`£ndto
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

164 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

165 
sockÀn_t
 
__addr_Àn
);

174 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

175 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

176 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

184 
ssize_t
 
	`£ndmsg
 (
__fd
, c⁄° 
msghdr
 *
__mesßge
,

185 
__Êags
);

187 #ifde‡
__USE_GNU


193 
	`£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

194 
__vÀn
, 
__Êags
);

202 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

204 #ifde‡
__USE_GNU


210 
	`ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

211 
__vÀn
, 
__Êags
,

212 c⁄° 
time•ec
 *
__tmo
);

219 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

220 *
__ª°ri˘
 
__›tvÆ
,

221 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

226 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

227 c⁄° *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

233 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

243 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

244 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

246 #ifde‡
__USE_GNU


251 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

252 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

261 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

264 #ifde‡
__USE_XOPEN2K


266 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

270 #ifde‡
__USE_MISC


274 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

279 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


280 
	~<bôs/sockë2.h
>

283 
__END_DECLS


	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/libc-lock.h

19 #i‚de‡
_BITS_LIBC_LOCK_H


20 
	#_BITS_LIBC_LOCK_H
 1

	)

22 
	~<±hªad.h
>

23 
	#__√ed_NULL


	)

24 
	~<°ddef.h
>

27 #ifde‡
_LIBC


28 
	~<lowÀvñlock.h
>

29 
	~<és.h
>

30 
	~<±hªad-fun˘i⁄s.h
>

31 
	~<î∫o.h
>

32 
	~<gnu/›ti⁄-groups.h
>

36 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


37 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


38 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

40 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

43 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

53 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

54 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

59 #i‡
LLL_LOCK_INITIALIZER
 == 0

60 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

61 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

63 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

64 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

66 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

67 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

69 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

70 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

71 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

72 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

76 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

77 
	#__libc_lock_öô_ªcursive
(
NAME
) \

78 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

80 
	#__libc_lock_öô_ªcursive
(
NAME
) \

82 i‡(
__±hªad_muãx_öô
 !
NULL
) \

84 
±hªad_muãx©å_t
 
__©å
; \

85 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

86 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

87 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

88 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

90 } 0)

	)

94 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

95 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

97 
	#__libc_lock_föi_ªcursive
(
NAME
) \

98 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
).
muãx
), 0)

	)

102 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

103 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

107 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

108 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

110 #i‡
__OPTION_EGLIBC_BIG_MACROS


111 
	#__libc_lock_lock_ªcursive
(
NAME
) \

113 *
£lf
 = 
THREAD_SELF
; \

114 i‡((
NAME
).
ow√r
 !
£lf
) \

116 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

117 (
NAME
).
ow√r
 = 
£lf
; \

119 ++(
NAME
).
˙t
; \

120 } 0)

	)

122 
	#__libc_lock_lock_ªcursive
(
NAME
) \

123 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

126 
	#__libc_lock_lock_ªcursive
(
NAME
) \

127 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

131 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

132 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

136 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

137 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

139 #i‡
__OPTION_EGLIBC_BIG_MACROS


140 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

142 
ªsu…
 = 0; \

143 *
£lf
 = 
THREAD_SELF
; \

144 i‡((
NAME
).
ow√r
 !
£lf
) \

146 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

148 (
NAME
).
ow√r
 = 
£lf
; \

149 (
NAME
).
˙t
 = 1; \

152 
ªsu…
 = 
EBUSY
; \

155 ++(
NAME
).
˙t
; \

156 
ªsu…
; \

157 })

	)

159 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

160 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

163 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

164 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

168 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

169 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

173 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

174 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

176 #i‡
__OPTION_EGLIBC_BIG_MACROS


178 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

180 i‡(--(
NAME
).
˙t
 == 0) \

182 (
NAME
).
ow√r
 = 
NULL
; \

183 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

185 } 0)

	)

187 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

188 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

191 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

192 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

199 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

200 (*
routöe
Ë(*), *
¨g
);

201 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

202 
execuã
);

205 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

206 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

207 
_avaû
; \

208 i‡(
DOIT
) { \

209 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

210 i‡(
_avaû
) { \

211 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

212 
ARG
)); \

214 
_buf„r
.
__routöe
 = (
FCT
); \

215 
_buf„r
.
__¨g
 = (
ARG
); \

218 
_avaû
 = 0; \

219 }

	)

222 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

223 i‡(
_avaû
) { \

224 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

225 } i‡(
DOIT
) \

226 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

227 
	}

	)
}

232 #ifde‡
_LIBC


233 
	~"libc-lockP.h
"

	@/usr/include/bits/socket.h

19 #i‚de‡
__BITS_SOCKET_H


20 
	#__BITS_SOCKET_H


	)

22 #i‚de‡
_SYS_SOCKET_H


26 
	#__√ed_size_t


	)

27 
	~<°ddef.h
>

29 
	~<sys/ty≥s.h
>

32 #i‚de‡
__sockÀn_t_deföed


33 
__sockÀn_t
 
	tsockÀn_t
;

34 
	#__sockÀn_t_deföed


	)

38 
	~<bôs/sockë_ty≥.h
>

41 
	#PF_UNSPEC
 0

	)

42 
	#PF_LOCAL
 1

	)

43 
	#PF_UNIX
 
PF_LOCAL


	)

44 
	#PF_FILE
 
PF_LOCAL


	)

45 
	#PF_INET
 2

	)

46 
	#PF_AX25
 3

	)

47 
	#PF_IPX
 4

	)

48 
	#PF_APPLETALK
 5

	)

49 
	#PF_NETROM
 6

	)

50 
	#PF_BRIDGE
 7

	)

51 
	#PF_ATMPVC
 8

	)

52 
	#PF_X25
 9

	)

53 
	#PF_INET6
 10

	)

54 
	#PF_ROSE
 11

	)

55 
	#PF_DEC√t
 12

	)

56 
	#PF_NETBEUI
 13

	)

57 
	#PF_SECURITY
 14

	)

58 
	#PF_KEY
 15

	)

59 
	#PF_NETLINK
 16

	)

60 
	#PF_ROUTE
 
PF_NETLINK


	)

61 
	#PF_PACKET
 17

	)

62 
	#PF_ASH
 18

	)

63 
	#PF_ECONET
 19

	)

64 
	#PF_ATMSVC
 20

	)

65 
	#PF_RDS
 21

	)

66 
	#PF_SNA
 22

	)

67 
	#PF_IRDA
 23

	)

68 
	#PF_PPPOX
 24

	)

69 
	#PF_WANPIPE
 25

	)

70 
	#PF_LLC
 26

	)

71 
	#PF_CAN
 29

	)

72 
	#PF_TIPC
 30

	)

73 
	#PF_BLUETOOTH
 31

	)

74 
	#PF_IUCV
 32

	)

75 
	#PF_RXRPC
 33

	)

76 
	#PF_ISDN
 34

	)

77 
	#PF_PHONET
 35

	)

78 
	#PF_IEEE802154
 36

	)

79 
	#PF_CAIF
 37

	)

80 
	#PF_ALG
 38

	)

81 
	#PF_NFC
 39

	)

82 
	#PF_VSOCK
 40

	)

83 
	#PF_MAX
 41

	)

86 
	#AF_UNSPEC
 
PF_UNSPEC


	)

87 
	#AF_LOCAL
 
PF_LOCAL


	)

88 
	#AF_UNIX
 
PF_UNIX


	)

89 
	#AF_FILE
 
PF_FILE


	)

90 
	#AF_INET
 
PF_INET


	)

91 
	#AF_AX25
 
PF_AX25


	)

92 
	#AF_IPX
 
PF_IPX


	)

93 
	#AF_APPLETALK
 
PF_APPLETALK


	)

94 
	#AF_NETROM
 
PF_NETROM


	)

95 
	#AF_BRIDGE
 
PF_BRIDGE


	)

96 
	#AF_ATMPVC
 
PF_ATMPVC


	)

97 
	#AF_X25
 
PF_X25


	)

98 
	#AF_INET6
 
PF_INET6


	)

99 
	#AF_ROSE
 
PF_ROSE


	)

100 
	#AF_DEC√t
 
PF_DEC√t


	)

101 
	#AF_NETBEUI
 
PF_NETBEUI


	)

102 
	#AF_SECURITY
 
PF_SECURITY


	)

103 
	#AF_KEY
 
PF_KEY


	)

104 
	#AF_NETLINK
 
PF_NETLINK


	)

105 
	#AF_ROUTE
 
PF_ROUTE


	)

106 
	#AF_PACKET
 
PF_PACKET


	)

107 
	#AF_ASH
 
PF_ASH


	)

108 
	#AF_ECONET
 
PF_ECONET


	)

109 
	#AF_ATMSVC
 
PF_ATMSVC


	)

110 
	#AF_RDS
 
PF_RDS


	)

111 
	#AF_SNA
 
PF_SNA


	)

112 
	#AF_IRDA
 
PF_IRDA


	)

113 
	#AF_PPPOX
 
PF_PPPOX


	)

114 
	#AF_WANPIPE
 
PF_WANPIPE


	)

115 
	#AF_LLC
 
PF_LLC


	)

116 
	#AF_CAN
 
PF_CAN


	)

117 
	#AF_TIPC
 
PF_TIPC


	)

118 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

119 
	#AF_IUCV
 
PF_IUCV


	)

120 
	#AF_RXRPC
 
PF_RXRPC


	)

121 
	#AF_ISDN
 
PF_ISDN


	)

122 
	#AF_PHONET
 
PF_PHONET


	)

123 
	#AF_IEEE802154
 
PF_IEEE802154


	)

124 
	#AF_CAIF
 
PF_CAIF


	)

125 
	#AF_ALG
 
PF_ALG


	)

126 
	#AF_NFC
 
PF_NFC


	)

127 
	#AF_VSOCK
 
PF_VSOCK


	)

128 
	#AF_MAX
 
PF_MAX


	)

134 
	#SOL_RAW
 255

	)

135 
	#SOL_DECNET
 261

	)

136 
	#SOL_X25
 262

	)

137 
	#SOL_PACKET
 263

	)

138 
	#SOL_ATM
 264

	)

139 
	#SOL_AAL
 265

	)

140 
	#SOL_IRDA
 266

	)

143 
	#SOMAXCONN
 128

	)

146 
	~<bôs/sockaddr.h
>

149 
	ssockaddr


151 
__SOCKADDR_COMMON
 (
ß_
);

152 
	mß_d©a
[14];

158 
	#__ss_Æig¡y≥
 

	)

159 
	#_SS_SIZE
 128

	)

160 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

162 
	ssockaddr_°‹age


164 
__SOCKADDR_COMMON
 (
ss_
);

165 
__ss_Æig¡y≥
 
	m__ss_Æign
;

166 
	m__ss_∑ddög
[
_SS_PADSIZE
];

173 
	mMSG_OOB
 = 0x01,

174 
	#MSG_OOB
 
MSG_OOB


	)

175 
	mMSG_PEEK
 = 0x02,

176 
	#MSG_PEEK
 
MSG_PEEK


	)

177 
	mMSG_DONTROUTE
 = 0x04,

178 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

179 #ifde‡
__USE_GNU


181 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

182 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

184 
	mMSG_CTRUNC
 = 0x08,

185 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

186 
	mMSG_PROXY
 = 0x10,

187 
	#MSG_PROXY
 
MSG_PROXY


	)

188 
	mMSG_TRUNC
 = 0x20,

189 
	#MSG_TRUNC
 
MSG_TRUNC


	)

190 
	mMSG_DONTWAIT
 = 0x40,

191 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

192 
	mMSG_EOR
 = 0x80,

193 
	#MSG_EOR
 
MSG_EOR


	)

194 
	mMSG_WAITALL
 = 0x100,

195 
	#MSG_WAITALL
 
MSG_WAITALL


	)

196 
	mMSG_FIN
 = 0x200,

197 
	#MSG_FIN
 
MSG_FIN


	)

198 
	mMSG_SYN
 = 0x400,

199 
	#MSG_SYN
 
MSG_SYN


	)

200 
	mMSG_CONFIRM
 = 0x800,

201 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

202 
	mMSG_RST
 = 0x1000,

203 
	#MSG_RST
 
MSG_RST


	)

204 
	mMSG_ERRQUEUE
 = 0x2000,

205 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

206 
	mMSG_NOSIGNAL
 = 0x4000,

207 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

208 
	mMSG_MORE
 = 0x8000,

209 
	#MSG_MORE
 
MSG_MORE


	)

210 
	mMSG_WAITFORONE
 = 0x10000,

211 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

212 
	mMSG_FASTOPEN
 = 0x20000000,

213 
	#MSG_FASTOPEN
 
MSG_FASTOPEN


	)

215 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

218 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

224 
	smsghdr


226 *
	mmsg_«me
;

227 
sockÀn_t
 
	mmsg_«mñí
;

229 
iovec
 *
	mmsg_iov
;

230 
size_t
 
	mmsg_iovÀn
;

232 *
	mmsg_c⁄åﬁ
;

233 
size_t
 
	mmsg_c⁄åﬁÀn
;

238 
	mmsg_Êags
;

242 
	scmsghdr


244 
size_t
 
	mcmsg_Àn
;

249 
	mcmsg_Àvñ
;

250 
	mcmsg_ty≥
;

251 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

252 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

257 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

258 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

260 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

262 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

263 
	#CMSG_FIRSTHDR
(
mhdr
) \

264 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

265 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

266 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

267 & (
size_t
Ë~( (size_tË- 1))

	)

268 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

269 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

270 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

272 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

273 
cmsghdr
 *
__cmsg
Ë
__THROW
;

274 #ifde‡
__USE_EXTERN_INLINES


275 #i‚de‡
_EXTERN_INLINE


276 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

278 
_EXTERN_INLINE
 
cmsghdr
 *

279 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

281 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

283  (
cmsghdr
 *) 0;

285 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

286 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

287 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


288 + 
__mhdr
->
msg_c⁄åﬁÀn
)

289 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

290 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

292  (
cmsghdr
 *) 0;

293  
__cmsg
;

294 
	}
}

301 
	mSCM_RIGHTS
 = 0x01

302 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

303 #ifde‡
__USE_GNU


304 , 
	mSCM_CREDENTIALS
 = 0x02

305 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

309 #ifde‡
__USE_GNU


311 
	su¸ed


313 
pid_t
 
	mpid
;

314 
uid_t
 
	muid
;

315 
gid_t
 
	mgid
;

320 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


321 #i‚de‡
FIOGETOWN


322 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

324 #i‚de‡
FIOSETOWN


325 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

327 #i‚de‡
SIOCATMARK


328 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

330 #i‚de‡
SIOCGPGRP


331 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

333 #i‚de‡
SIOCGSTAMP


334 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

336 #i‚de‡
SIOCGSTAMPNS


337 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

339 #i‚de‡
SIOCSPGRP


340 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

345 
	~<asm/sockë.h
>

347 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


348 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


349 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


350 #unde‡
FIOGETOWN


352 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


353 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


354 #unde‡
FIOSETOWN


356 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


357 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


358 #unde‡
SIOCATMARK


360 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


361 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


362 #unde‡
SIOCGPGRP


364 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


365 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


366 #unde‡
SIOCGSTAMP


368 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


369 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


370 #unde‡
SIOCGSTAMPNS


372 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


373 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


374 #unde‡
SIOCSPGRP


379 
	slögî


381 
	ml_⁄off
;

382 
	ml_lögî
;

	@/usr/include/bits/socket2.h

19 #i‚de‡
_SYS_SOCKET_H


23 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

24 
__Êags
);

25 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

26 
__Êags
), 
ªcv
);

27 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

29 
__Êags
), 
__ªcv_chk
)

30 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

33 
__f‹tify_fun˘i⁄
 
ssize_t


34 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

39  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

41 i‡(
__n
 > 
	`__bos0
 (
__buf
))

42  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

44  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

45 
	}
}

47 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

48 
size_t
 
__buÊí
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
,

50 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

51 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

52 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

53 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

54 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

55 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

56 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

57 
size_t
 
__buÊí
, 
__Êags
,

58 
__SOCKADDR_ARG
 
__addr
,

59 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

60 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

63 
__f‹tify_fun˘i⁄
 
ssize_t


64 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

65 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

67 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

70  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

71 
__addr
, 
__addr_Àn
);

72 i‡(
__n
 > 
	`__bos0
 (
__buf
))

73  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

74 
__addr
, 
__addr_Àn
);

76  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

77 
	}
}

	@/usr/include/bits/uio.h

18 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_UIO_H


23 
	#_BITS_UIO_H
 1

	)

25 
	~<sys/ty≥s.h
>

39 
	#UIO_MAXIOV
 1024

	)

43 
	siovec


45 *
	miov_ba£
;

46 
size_t
 
	miov_Àn
;

52 #ifde‡
__USE_GNU


53 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


54 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

56 
__BEGIN_DECLS


59 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

60 
__liov˙t
,

61 c⁄° 
iovec
 *
__rvec
,

62 
__riov˙t
,

63 
__Êags
)

64 
__THROW
;

67 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

68 
__liov˙t
,

69 c⁄° 
iovec
 *
__rvec
,

70 
__riov˙t
,

71 
__Êags
)

72 
__THROW
;

74 
__END_DECLS


	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_¸óã_moduÀ


	)

13 
	#__°ub_Áâach


	)

14 
	#__°ub_fchÊags


	)

15 
	#__°ub_fdëach


	)

16 
	#__°ub_gë_kî√l_syms


	)

17 
	#__°ub_gëmsg


	)

18 
	#__°ub_gây


	)

19 
	#__°ub_lchmod


	)

20 
	#__°ub_nfs£rv˘l


	)

21 
	#__°ub_putmsg


	)

22 
	#__°ub_quîy_moduÀ


	)

23 
	#__°ub_ªvoke


	)

24 
	#__°ub_£éogö


	)

25 
	#__°ub_sigªtu∫


	)

26 
	#__°ub_s°k


	)

27 
	#__°ub_°ty


	)

28 
	#__°ub_u£lib


	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/linux/sysinfo.h

1 #i‚de‡
_LINUX_SYSINFO_H


2 
	#_LINUX_SYSINFO_H


	)

4 
	~<löux/ty≥s.h
>

6 
	#SI_LOAD_SHIFT
 16

	)

7 
	ssysöfo
 {

8 
__kî√l_l⁄g_t
 
	mu±ime
;

9 
__kî√l_ul⁄g_t
 
	mlﬂds
[3];

10 
__kî√l_ul⁄g_t
 
	mtŸÆøm
;

11 
__kî√l_ul⁄g_t
 
	m‰ìøm
;

12 
__kî√l_ul⁄g_t
 
	msh¨edøm
;

13 
__kî√l_ul⁄g_t
 
	mbuf„ºam
;

14 
__kî√l_ul⁄g_t
 
	mtŸÆsw≠
;

15 
__kî√l_ul⁄g_t
 
	m‰ìsw≠
;

16 
__u16
 
	m¥ocs
;

17 
__u16
 
	m∑d
;

18 
__kî√l_ul⁄g_t
 
	mtŸÆhigh
;

19 
__kî√l_ul⁄g_t
 
	m‰ìhigh
;

20 
__u32
 
	mmem_unô
;

21 
	m_f
[20-2*(
__kî√l_ul⁄g_t
)-(
__u32
)];

	@/usr/include/sys/uio.h

18 #i‚de‡
_SYS_UIO_H


19 
	#_SYS_UIO_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

25 
	g__BEGIN_DECLS


28 
	~<bôs/uio.h
>

39 
ssize_t
 
	$ªadv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

40 
__wur
;

50 
ssize_t
 
	$wrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

51 
__wur
;

54 #ifde‡
__USE_BSD


55 #i‚de‡
__USE_FILE_OFFSET64


65 
ssize_t
 
	$¥ódv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

66 
__off_t
 
__off£t
Ë
__wur
;

77 
ssize_t
 
	$pwrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

78 
__off_t
 
__off£t
Ë
__wur
;

80 #ifde‡
__REDIRECT


81 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

82 
__cou¡
, 
__off64_t
 
__off£t
),

83 
¥ódv64
Ë
__wur
;

84 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

85 
__cou¡
, 
__off64_t
 
__off£t
),

86 
pwrôev64
Ë
__wur
;

88 
	#¥ódv
 
¥ódv64


	)

89 
	#pwrôev
 
pwrôev64


	)

93 #ifde‡
__USE_LARGEFILE64


103 
ssize_t
 
	$¥ódv64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

104 
__off64_t
 
__off£t
Ë
__wur
;

115 
ssize_t
 
	$pwrôev64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

116 
__off64_t
 
__off£t
Ë
__wur
;

120 
__END_DECLS


	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/bits/sockaddr.h

23 #i‚de‡
_BITS_SOCKADDR_H


24 
	#_BITS_SOCKADDR_H
 1

	)

28 
	tß_Ámûy_t
;

34 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

35 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

37 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/socket_type.h

19 #i‚de‡
_SYS_SOCKET_H


24 
	e__sockë_ty≥


26 
	mSOCK_STREAM
 = 1,

28 
	#SOCK_STREAM
 
SOCK_STREAM


	)

29 
	mSOCK_DGRAM
 = 2,

31 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

32 
	mSOCK_RAW
 = 3,

33 
	#SOCK_RAW
 
SOCK_RAW


	)

34 
	mSOCK_RDM
 = 4,

35 
	#SOCK_RDM
 
SOCK_RDM


	)

36 
	mSOCK_SEQPACKET
 = 5,

38 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

39 
	mSOCK_DCCP
 = 6,

40 
	#SOCK_DCCP
 
SOCK_DCCP


	)

41 
	mSOCK_PACKET
 = 10,

44 
	#SOCK_PACKET
 
SOCK_PACKET


	)

49 
	mSOCK_CLOEXEC
 = 02000000,

51 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

52 
	mSOCK_NONBLOCK
 = 00004000

54 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LOCALES
 1

	)

34 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

35 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

36 
	#__OPTION_EGLIBC_NIS
 1

	)

37 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

38 
	#__OPTION_EGLIBC_RCMD
 1

	)

39 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

40 
	#__OPTION_EGLIBC_SPAWN
 1

	)

41 
	#__OPTION_EGLIBC_STREAMS
 1

	)

42 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

43 
	#__OPTION_EGLIBC_UTMP
 1

	)

44 
	#__OPTION_EGLIBC_UTMPX
 1

	)

45 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

46 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

47 
	#__OPTION_POSIX_REGEXP
 1

	)

48 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

49 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/linux/stddef.h

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
410
8329
ASCIICType.h
AVLTree.h
Assertions.cpp
Assertions.h
Atomics.cpp
Atomics.h
AutodrainedPool.h
Bag.h
BagToHashMap.h
BitVector.cpp
BitVector.h
Bitmap.h
BlockStack.h
BloomFilter.h
BoundsCheckedPointer.h
BumpPointerAllocator.h
ByteOrder.h
ByteSpinLock.h
CheckedArithmetic.h
CheckedBoolean.h
CommaPrinter.h
CompilationThread.cpp
CompilationThread.h
Compiler.h
Compression.cpp
Compression.h
CryptographicUtilities.cpp
CryptographicUtilities.h
CryptographicallyRandomNumber.cpp
CryptographicallyRandomNumber.h
CurrentTime.cpp
CurrentTime.h
DataLog.cpp
DataLog.h
DateMath.cpp
DateMath.h
DecimalNumber.cpp
DecimalNumber.h
DeferrableRefCounted.h
Deque.h
DisallowCType.h
DoublyLinkedList.h
ExportMacros.h
FastBitVector.cpp
FastBitVector.h
FastMalloc.cpp
FastMalloc.h
FeatureDefines.h
FilePrintStream.cpp
FilePrintStream.h
FlipBytes.h
Forward.h
FunctionDispatcher.cpp
FunctionDispatcher.h
Functional.h
GetPtr.h
GregorianDateTime.cpp
GregorianDateTime.h
HashCountedSet.h
HashFunctions.h
HashIterators.h
HashMap.h
HashMethod.h
HashSet.h
HashTable.cpp
HashTable.h
HashTraits.h
HexNumber.h
InlineASM.h
Insertion.h
IteratorAdaptors.h
IteratorRange.h
ListDump.h
ListHashSet.h
Locker.h
MD5.cpp
MD5.h
MainThread.cpp
MainThread.h
MallocPtr.h
MathExtras.h
MediaTime.cpp
MediaTime.h
MessageQueue.h
MetaAllocator.cpp
MetaAllocator.h
MetaAllocatorHandle.h
NeverDestroyed.h
NoLock.h
Noncopyable.h
NumberOfCores.cpp
NumberOfCores.h
OSAllocator.h
OSAllocatorPosix.cpp
OSAllocatorWin.cpp
OSRandomSource.cpp
OSRandomSource.h
ObjcRuntimeExtras.h
Optional.h
OwnPtr.h
OwnPtrCommon.h
PackedIntVector.h
PageAllocation.h
PageAllocationAligned.cpp
PageAllocationAligned.h
PageBlock.cpp
PageBlock.h
PageReservation.h
ParallelJobs.h
ParallelJobsGeneric.cpp
ParallelJobsGeneric.h
ParallelJobsLibdispatch.h
ParallelJobsOpenMP.h
PassOwnPtr.h
PassRef.h
PassRefPtr.h
Platform.h
PossiblyNull.h
PrintStream.cpp
PrintStream.h
ProcessID.h
RAMSize.cpp
RAMSize.h
RandomNumber.cpp
RandomNumber.h
RandomNumberSeed.h
RawPointer.h
RedBlackTree.h
Ref.h
RefCounted.h
RefCountedArray.h
RefCountedLeakCounter.cpp
RefCountedLeakCounter.h
RefPtr.h
RefPtrHashMap.h
RetainPtr.h
RunLoop.cpp
RunLoop.h
RunLoopTimer.h
RunLoopTimerCF.cpp
SHA1.cpp
SHA1.h
SaturatedArithmetic.h
SchedulePair.h
SchedulePairCF.cpp
SegmentedVector.h
SentinelLinkedList.h
SimpleStats.h
SinglyLinkedList.h
SixCharacterHash.cpp
SixCharacterHash.h
SizeLimits.cpp
Spectrum.h
StackBounds.cpp
StackBounds.h
StackStats.cpp
StackStats.h
StaticConstructors.h
StdLibExtras.h
StreamBuffer.h
StringExtras.h
StringHashDumpContext.h
StringHasher.h
StringPrintStream.cpp
StringPrintStream.h
TCPackedCache.h
TCPageMap.h
TCSpinLock.h
TCSystemAlloc.cpp
TCSystemAlloc.h
TemporaryChange.h
ThreadFunctionInvocation.h
ThreadIdentifierDataPthreads.cpp
ThreadIdentifierDataPthreads.h
ThreadSafeRefCounted.h
ThreadSpecific.h
ThreadSpecificWin.cpp
Threading.cpp
Threading.h
ThreadingPrimitives.h
ThreadingPthreads.cpp
ThreadingWin.cpp
TriState.h
UniStdExtras.h
UnionFind.h
VMTags.h
ValueCheck.h
Vector.h
VectorTraits.h
WTFThreadData.cpp
WTFThreadData.h
WeakPtr.h
WindowsExtras.h
cf/RunLoopCF.cpp
cf/TypeCasts.h
dtoa.cpp
dtoa.h
dtoa/bignum-dtoa.cc
dtoa/bignum-dtoa.h
dtoa/bignum.cc
dtoa/bignum.h
dtoa/cached-powers.cc
dtoa/cached-powers.h
dtoa/diy-fp.cc
dtoa/diy-fp.h
dtoa/double-conversion.cc
dtoa/double-conversion.h
dtoa/double.h
dtoa/fast-dtoa.cc
dtoa/fast-dtoa.h
dtoa/fixed-dtoa.cc
dtoa/fixed-dtoa.h
dtoa/strtod.cc
dtoa/strtod.h
dtoa/utils.h
efl/EflTypedefs.h
efl/MainThreadEfl.cpp
efl/RunLoopEfl.cpp
efl/UniquePtrEfl.h
gobject/GMainLoopSource.cpp
gobject/GMainLoopSource.h
gobject/GMutexLocker.h
gobject/GRefPtr.cpp
gobject/GRefPtr.h
gobject/GTypedefs.h
gobject/GUniquePtr.h
gobject/GlibUtilities.cpp
gobject/GlibUtilities.h
gtk/MainThreadGtk.cpp
gtk/RunLoopGtk.cpp
ios/WebCoreThread.cpp
ios/WebCoreThread.h
mbmalloc.cpp
text/ASCIIFastPath.h
text/AtomicString.cpp
text/AtomicString.h
text/AtomicStringHash.h
text/AtomicStringImpl.h
text/AtomicStringTable.cpp
text/AtomicStringTable.h
text/Base64.cpp
text/Base64.h
text/CString.cpp
text/CString.h
text/ConversionMode.h
text/IntegerToStringConversion.h
text/LChar.h
text/StringBuffer.h
text/StringBuilder.cpp
text/StringBuilder.h
text/StringConcatenate.h
text/StringHash.h
text/StringImpl.cpp
text/StringImpl.h
text/StringOperators.h
text/StringStatics.cpp
text/StringView.h
text/TextPosition.h
text/WTFString.cpp
text/WTFString.h
text/cf/AtomicStringCF.cpp
text/cf/StringCF.cpp
text/cf/StringImplCF.cpp
text/cf/StringViewCF.cpp
threads/BinarySemaphore.cpp
threads/BinarySemaphore.h
threads/win/BinarySemaphoreWin.cpp
unicode/CharacterNames.h
unicode/Collator.h
unicode/CollatorDefault.cpp
unicode/UTF8.cpp
unicode/UTF8.h
unicode/icu/CollatorICU.cpp
win/GDIObject.h
win/MainThreadWin.cpp
win/RunLoopWin.cpp
/usr/include/arpa/inet.h
/usr/include/ctype.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/execinfo.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/pthread.h
/usr/include/sched.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/mman.h
/usr/include/sys/param.h
/usr/include/sys/sysctl.h
/usr/include/sys/time.h
/usr/include/sys/timeb.h
/usr/include/sys/types.h
/usr/include/sys/utsname.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/zlib.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/dlfcn.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/math-finite.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/nan.h
/usr/include/bits/param.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sched.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/sysctl.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/sysctl.h
/usr/include/netinet/in.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/in.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/mman-linux.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/kernel.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/linux/types.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/socket.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/libc-lock.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/uio.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/posix_types.h
/usr/include/linux/sysinfo.h
/usr/include/sys/uio.h
/usr/include/wchar.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket_type.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/linux/stddef.h
/usr/include/wctype.h
